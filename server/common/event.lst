GAS LISTING x64lin/../common/event.s 			page 1


 GNU assembler version 2.38 (x86_64-linux-gnu)
	 using BFD version (GNU Binutils for Ubuntu) 2.38.
 options passed	: -I -I -I -I -I --gdwarf-5 --64 -aghl=x64lin/../common/event.lst 
 input file    	: x64lin/../common/event.s
 output file   	: x64lin/../common/event.o
 target        	: x86_64-pc-linux-gnu
 time stamp    	: 2024-09-14T17:10:21.000-0400

GAS LISTING x64lin/../common/event.s 			page 2


   1              		.file	"event.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.file 0 "/home/cthomas/cpp/cppn/server" "../common/event.cpp"
   5              		.section	.rodata.str1.8,"aMS",@progbits,1
   6              		.align 8
   7              	.LC0:
   8 0000 63616E6E 		.string	"cannot create std::deque larger than max_size()"
   8      6F742063 
   8      72656174 
   8      65207374 
   8      643A3A64 
   9              		.section	.text.unlikely,"ax",@progbits
  10              	.LCOLDB1:
  11              		.text
  12              	.LHOTB1:
  13              		.p2align 4
  14              		.section	.text.unlikely
  15              	.Ltext_cold0:
  16              		.text
  17              		.globl	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE
  18              		.type	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE, @function
  19              	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE:
  20              	.LVL0:
  21              	.LFB5359:
  22              		.file 1 "../common/event.cpp"
   1:../common/event.cpp **** #include "event.h"
   2:../common/event.cpp **** 
   3:../common/event.cpp **** 
   4:../common/event.cpp **** void pushEvent(SharedResources &sharedResources, std::unique_ptr<BaseEvent>(event))
   5:../common/event.cpp **** {
  23              		.loc 1 5 1 view -0
  24              		.cfi_startproc
  25              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  26              		.cfi_lsda 0x1b,.LLSDA5359
  27              		.loc 1 5 1 is_stmt 0 view .LVU1
  28 0000 F30F1EFA 		endbr64
   6:../common/event.cpp ****     std::lock_guard<std::mutex> lock(sharedResources.queueMutex);
  29              		.loc 1 6 5 is_stmt 1 view .LVU2
  30              	.LVL1:
  31              	.LBB553:
  32              	.LBI553:
  33              		.file 2 "/usr/include/c++/11/bits/std_mutex.h"
   1:/usr/include/c++/11/bits/std_mutex.h **** // std::mutex implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/std_mutex.h **** 
   3:/usr/include/c++/11/bits/std_mutex.h **** // Copyright (C) 2003-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/std_mutex.h **** //
   5:/usr/include/c++/11/bits/std_mutex.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/std_mutex.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/std_mutex.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/std_mutex.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/std_mutex.h **** // any later version.
  10:/usr/include/c++/11/bits/std_mutex.h **** 
  11:/usr/include/c++/11/bits/std_mutex.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/std_mutex.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/std_mutex.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/std_mutex.h **** // GNU General Public License for more details.
GAS LISTING x64lin/../common/event.s 			page 3


  15:/usr/include/c++/11/bits/std_mutex.h **** 
  16:/usr/include/c++/11/bits/std_mutex.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/std_mutex.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/std_mutex.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/std_mutex.h **** 
  20:/usr/include/c++/11/bits/std_mutex.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/std_mutex.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/std_mutex.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/std_mutex.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/std_mutex.h **** 
  25:/usr/include/c++/11/bits/std_mutex.h **** /** @file bits/std_mutex.h
  26:/usr/include/c++/11/bits/std_mutex.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/std_mutex.h ****  *  Do not attempt to use it directly. @headername{mutex}
  28:/usr/include/c++/11/bits/std_mutex.h ****  */
  29:/usr/include/c++/11/bits/std_mutex.h **** 
  30:/usr/include/c++/11/bits/std_mutex.h **** #ifndef _GLIBCXX_MUTEX_H
  31:/usr/include/c++/11/bits/std_mutex.h **** #define _GLIBCXX_MUTEX_H 1
  32:/usr/include/c++/11/bits/std_mutex.h **** 
  33:/usr/include/c++/11/bits/std_mutex.h **** #pragma GCC system_header
  34:/usr/include/c++/11/bits/std_mutex.h **** 
  35:/usr/include/c++/11/bits/std_mutex.h **** #if __cplusplus < 201103L
  36:/usr/include/c++/11/bits/std_mutex.h **** # include <bits/c++0x_warning.h>
  37:/usr/include/c++/11/bits/std_mutex.h **** #else
  38:/usr/include/c++/11/bits/std_mutex.h **** 
  39:/usr/include/c++/11/bits/std_mutex.h **** #include <system_error>
  40:/usr/include/c++/11/bits/std_mutex.h **** #include <bits/functexcept.h>
  41:/usr/include/c++/11/bits/std_mutex.h **** #include <bits/gthr.h>
  42:/usr/include/c++/11/bits/std_mutex.h **** 
  43:/usr/include/c++/11/bits/std_mutex.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/include/c++/11/bits/std_mutex.h **** {
  45:/usr/include/c++/11/bits/std_mutex.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/include/c++/11/bits/std_mutex.h **** 
  47:/usr/include/c++/11/bits/std_mutex.h ****   /**
  48:/usr/include/c++/11/bits/std_mutex.h ****    * @defgroup mutexes Mutexes
  49:/usr/include/c++/11/bits/std_mutex.h ****    * @ingroup concurrency
  50:/usr/include/c++/11/bits/std_mutex.h ****    *
  51:/usr/include/c++/11/bits/std_mutex.h ****    * Classes for mutex support.
  52:/usr/include/c++/11/bits/std_mutex.h ****    * @{
  53:/usr/include/c++/11/bits/std_mutex.h ****    */
  54:/usr/include/c++/11/bits/std_mutex.h **** 
  55:/usr/include/c++/11/bits/std_mutex.h **** #ifdef _GLIBCXX_HAS_GTHREADS
  56:/usr/include/c++/11/bits/std_mutex.h ****   // Common base class for std::mutex and std::timed_mutex
  57:/usr/include/c++/11/bits/std_mutex.h ****   class __mutex_base
  58:/usr/include/c++/11/bits/std_mutex.h ****   {
  59:/usr/include/c++/11/bits/std_mutex.h ****   protected:
  60:/usr/include/c++/11/bits/std_mutex.h ****     typedef __gthread_mutex_t			__native_type;
  61:/usr/include/c++/11/bits/std_mutex.h **** 
  62:/usr/include/c++/11/bits/std_mutex.h **** #ifdef __GTHREAD_MUTEX_INIT
  63:/usr/include/c++/11/bits/std_mutex.h ****     __native_type  _M_mutex = __GTHREAD_MUTEX_INIT;
  64:/usr/include/c++/11/bits/std_mutex.h **** 
  65:/usr/include/c++/11/bits/std_mutex.h ****     constexpr __mutex_base() noexcept = default;
  66:/usr/include/c++/11/bits/std_mutex.h **** #else
  67:/usr/include/c++/11/bits/std_mutex.h ****     __native_type  _M_mutex;
  68:/usr/include/c++/11/bits/std_mutex.h **** 
  69:/usr/include/c++/11/bits/std_mutex.h ****     __mutex_base() noexcept
  70:/usr/include/c++/11/bits/std_mutex.h ****     {
  71:/usr/include/c++/11/bits/std_mutex.h ****       // XXX EAGAIN, ENOMEM, EPERM, EBUSY(may), EINVAL(may)
GAS LISTING x64lin/../common/event.s 			page 4


  72:/usr/include/c++/11/bits/std_mutex.h ****       __GTHREAD_MUTEX_INIT_FUNCTION(&_M_mutex);
  73:/usr/include/c++/11/bits/std_mutex.h ****     }
  74:/usr/include/c++/11/bits/std_mutex.h **** 
  75:/usr/include/c++/11/bits/std_mutex.h ****     ~__mutex_base() noexcept { __gthread_mutex_destroy(&_M_mutex); }
  76:/usr/include/c++/11/bits/std_mutex.h **** #endif
  77:/usr/include/c++/11/bits/std_mutex.h **** 
  78:/usr/include/c++/11/bits/std_mutex.h ****     __mutex_base(const __mutex_base&) = delete;
  79:/usr/include/c++/11/bits/std_mutex.h ****     __mutex_base& operator=(const __mutex_base&) = delete;
  80:/usr/include/c++/11/bits/std_mutex.h ****   };
  81:/usr/include/c++/11/bits/std_mutex.h **** 
  82:/usr/include/c++/11/bits/std_mutex.h ****   /// The standard mutex type.
  83:/usr/include/c++/11/bits/std_mutex.h ****   class mutex : private __mutex_base
  84:/usr/include/c++/11/bits/std_mutex.h ****   {
  85:/usr/include/c++/11/bits/std_mutex.h ****   public:
  86:/usr/include/c++/11/bits/std_mutex.h ****     typedef __native_type* 			native_handle_type;
  87:/usr/include/c++/11/bits/std_mutex.h **** 
  88:/usr/include/c++/11/bits/std_mutex.h **** #ifdef __GTHREAD_MUTEX_INIT
  89:/usr/include/c++/11/bits/std_mutex.h ****     constexpr
  90:/usr/include/c++/11/bits/std_mutex.h **** #endif
  91:/usr/include/c++/11/bits/std_mutex.h ****     mutex() noexcept = default;
  92:/usr/include/c++/11/bits/std_mutex.h ****     ~mutex() = default;
  93:/usr/include/c++/11/bits/std_mutex.h **** 
  94:/usr/include/c++/11/bits/std_mutex.h ****     mutex(const mutex&) = delete;
  95:/usr/include/c++/11/bits/std_mutex.h ****     mutex& operator=(const mutex&) = delete;
  96:/usr/include/c++/11/bits/std_mutex.h **** 
  97:/usr/include/c++/11/bits/std_mutex.h ****     void
  98:/usr/include/c++/11/bits/std_mutex.h ****     lock()
  99:/usr/include/c++/11/bits/std_mutex.h ****     {
 100:/usr/include/c++/11/bits/std_mutex.h ****       int __e = __gthread_mutex_lock(&_M_mutex);
 101:/usr/include/c++/11/bits/std_mutex.h **** 
 102:/usr/include/c++/11/bits/std_mutex.h ****       // EINVAL, EAGAIN, EBUSY, EINVAL, EDEADLK(may)
 103:/usr/include/c++/11/bits/std_mutex.h ****       if (__e)
 104:/usr/include/c++/11/bits/std_mutex.h **** 	__throw_system_error(__e);
 105:/usr/include/c++/11/bits/std_mutex.h ****     }
 106:/usr/include/c++/11/bits/std_mutex.h **** 
 107:/usr/include/c++/11/bits/std_mutex.h ****     bool
 108:/usr/include/c++/11/bits/std_mutex.h ****     try_lock() noexcept
 109:/usr/include/c++/11/bits/std_mutex.h ****     {
 110:/usr/include/c++/11/bits/std_mutex.h ****       // XXX EINVAL, EAGAIN, EBUSY
 111:/usr/include/c++/11/bits/std_mutex.h ****       return !__gthread_mutex_trylock(&_M_mutex);
 112:/usr/include/c++/11/bits/std_mutex.h ****     }
 113:/usr/include/c++/11/bits/std_mutex.h **** 
 114:/usr/include/c++/11/bits/std_mutex.h ****     void
 115:/usr/include/c++/11/bits/std_mutex.h ****     unlock()
 116:/usr/include/c++/11/bits/std_mutex.h ****     {
 117:/usr/include/c++/11/bits/std_mutex.h ****       // XXX EINVAL, EAGAIN, EPERM
 118:/usr/include/c++/11/bits/std_mutex.h ****       __gthread_mutex_unlock(&_M_mutex);
 119:/usr/include/c++/11/bits/std_mutex.h ****     }
 120:/usr/include/c++/11/bits/std_mutex.h **** 
 121:/usr/include/c++/11/bits/std_mutex.h ****     native_handle_type
 122:/usr/include/c++/11/bits/std_mutex.h ****     native_handle() noexcept
 123:/usr/include/c++/11/bits/std_mutex.h ****     { return &_M_mutex; }
 124:/usr/include/c++/11/bits/std_mutex.h ****   };
 125:/usr/include/c++/11/bits/std_mutex.h **** 
 126:/usr/include/c++/11/bits/std_mutex.h ****   // Implementation details for std::condition_variable
 127:/usr/include/c++/11/bits/std_mutex.h ****   class __condvar
 128:/usr/include/c++/11/bits/std_mutex.h ****   {
GAS LISTING x64lin/../common/event.s 			page 5


 129:/usr/include/c++/11/bits/std_mutex.h ****     using timespec = __gthread_time_t;
 130:/usr/include/c++/11/bits/std_mutex.h **** 
 131:/usr/include/c++/11/bits/std_mutex.h ****   public:
 132:/usr/include/c++/11/bits/std_mutex.h ****     __condvar() noexcept
 133:/usr/include/c++/11/bits/std_mutex.h ****     {
 134:/usr/include/c++/11/bits/std_mutex.h **** #ifndef __GTHREAD_COND_INIT
 135:/usr/include/c++/11/bits/std_mutex.h ****       __GTHREAD_COND_INIT_FUNCTION(&_M_cond);
 136:/usr/include/c++/11/bits/std_mutex.h **** #endif
 137:/usr/include/c++/11/bits/std_mutex.h ****     }
 138:/usr/include/c++/11/bits/std_mutex.h **** 
 139:/usr/include/c++/11/bits/std_mutex.h ****     ~__condvar()
 140:/usr/include/c++/11/bits/std_mutex.h ****     {
 141:/usr/include/c++/11/bits/std_mutex.h ****       int __e __attribute__((__unused__)) = __gthread_cond_destroy(&_M_cond);
 142:/usr/include/c++/11/bits/std_mutex.h ****       __glibcxx_assert(__e != EBUSY); // threads are still blocked
 143:/usr/include/c++/11/bits/std_mutex.h ****     }
 144:/usr/include/c++/11/bits/std_mutex.h **** 
 145:/usr/include/c++/11/bits/std_mutex.h ****     __condvar(const __condvar&) = delete;
 146:/usr/include/c++/11/bits/std_mutex.h ****     __condvar& operator=(const __condvar&) = delete;
 147:/usr/include/c++/11/bits/std_mutex.h **** 
 148:/usr/include/c++/11/bits/std_mutex.h ****     __gthread_cond_t* native_handle() noexcept { return &_M_cond; }
 149:/usr/include/c++/11/bits/std_mutex.h **** 
 150:/usr/include/c++/11/bits/std_mutex.h ****     // Expects: Calling thread has locked __m.
 151:/usr/include/c++/11/bits/std_mutex.h ****     void
 152:/usr/include/c++/11/bits/std_mutex.h ****     wait(mutex& __m) noexcept
 153:/usr/include/c++/11/bits/std_mutex.h ****     {
 154:/usr/include/c++/11/bits/std_mutex.h ****       int __e __attribute__((__unused__))
 155:/usr/include/c++/11/bits/std_mutex.h **** 	= __gthread_cond_wait(&_M_cond, __m.native_handle());
 156:/usr/include/c++/11/bits/std_mutex.h ****       __glibcxx_assert(__e == 0);
 157:/usr/include/c++/11/bits/std_mutex.h ****     }
 158:/usr/include/c++/11/bits/std_mutex.h **** 
 159:/usr/include/c++/11/bits/std_mutex.h ****     void
 160:/usr/include/c++/11/bits/std_mutex.h ****     wait_until(mutex& __m, timespec& __abs_time) noexcept
 161:/usr/include/c++/11/bits/std_mutex.h ****     {
 162:/usr/include/c++/11/bits/std_mutex.h ****       __gthread_cond_timedwait(&_M_cond, __m.native_handle(), &__abs_time);
 163:/usr/include/c++/11/bits/std_mutex.h ****     }
 164:/usr/include/c++/11/bits/std_mutex.h **** 
 165:/usr/include/c++/11/bits/std_mutex.h **** #ifdef _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT
 166:/usr/include/c++/11/bits/std_mutex.h ****     void
 167:/usr/include/c++/11/bits/std_mutex.h ****     wait_until(mutex& __m, clockid_t __clock, timespec& __abs_time) noexcept
 168:/usr/include/c++/11/bits/std_mutex.h ****     {
 169:/usr/include/c++/11/bits/std_mutex.h ****       pthread_cond_clockwait(&_M_cond, __m.native_handle(), __clock,
 170:/usr/include/c++/11/bits/std_mutex.h **** 			     &__abs_time);
 171:/usr/include/c++/11/bits/std_mutex.h ****     }
 172:/usr/include/c++/11/bits/std_mutex.h **** #endif
 173:/usr/include/c++/11/bits/std_mutex.h **** 
 174:/usr/include/c++/11/bits/std_mutex.h ****     void
 175:/usr/include/c++/11/bits/std_mutex.h ****     notify_one() noexcept
 176:/usr/include/c++/11/bits/std_mutex.h ****     {
 177:/usr/include/c++/11/bits/std_mutex.h ****       int __e __attribute__((__unused__)) = __gthread_cond_signal(&_M_cond);
 178:/usr/include/c++/11/bits/std_mutex.h ****       __glibcxx_assert(__e == 0);
 179:/usr/include/c++/11/bits/std_mutex.h ****     }
 180:/usr/include/c++/11/bits/std_mutex.h **** 
 181:/usr/include/c++/11/bits/std_mutex.h ****     void
 182:/usr/include/c++/11/bits/std_mutex.h ****     notify_all() noexcept
 183:/usr/include/c++/11/bits/std_mutex.h ****     {
 184:/usr/include/c++/11/bits/std_mutex.h ****       int __e __attribute__((__unused__)) = __gthread_cond_broadcast(&_M_cond);
 185:/usr/include/c++/11/bits/std_mutex.h ****       __glibcxx_assert(__e == 0);
GAS LISTING x64lin/../common/event.s 			page 6


 186:/usr/include/c++/11/bits/std_mutex.h ****     }
 187:/usr/include/c++/11/bits/std_mutex.h **** 
 188:/usr/include/c++/11/bits/std_mutex.h ****   protected:
 189:/usr/include/c++/11/bits/std_mutex.h **** #ifdef __GTHREAD_COND_INIT
 190:/usr/include/c++/11/bits/std_mutex.h ****     __gthread_cond_t _M_cond = __GTHREAD_COND_INIT;
 191:/usr/include/c++/11/bits/std_mutex.h **** #else
 192:/usr/include/c++/11/bits/std_mutex.h ****     __gthread_cond_t _M_cond;
 193:/usr/include/c++/11/bits/std_mutex.h **** #endif
 194:/usr/include/c++/11/bits/std_mutex.h ****   };
 195:/usr/include/c++/11/bits/std_mutex.h **** 
 196:/usr/include/c++/11/bits/std_mutex.h **** #endif // _GLIBCXX_HAS_GTHREADS
 197:/usr/include/c++/11/bits/std_mutex.h **** 
 198:/usr/include/c++/11/bits/std_mutex.h ****   /// Do not acquire ownership of the mutex.
 199:/usr/include/c++/11/bits/std_mutex.h ****   struct defer_lock_t { explicit defer_lock_t() = default; };
 200:/usr/include/c++/11/bits/std_mutex.h **** 
 201:/usr/include/c++/11/bits/std_mutex.h ****   /// Try to acquire ownership of the mutex without blocking.
 202:/usr/include/c++/11/bits/std_mutex.h ****   struct try_to_lock_t { explicit try_to_lock_t() = default; };
 203:/usr/include/c++/11/bits/std_mutex.h **** 
 204:/usr/include/c++/11/bits/std_mutex.h ****   /// Assume the calling thread has already obtained mutex ownership
 205:/usr/include/c++/11/bits/std_mutex.h ****   /// and manage it.
 206:/usr/include/c++/11/bits/std_mutex.h ****   struct adopt_lock_t { explicit adopt_lock_t() = default; };
 207:/usr/include/c++/11/bits/std_mutex.h **** 
 208:/usr/include/c++/11/bits/std_mutex.h ****   /// Tag used to prevent a scoped lock from acquiring ownership of a mutex.
 209:/usr/include/c++/11/bits/std_mutex.h ****   _GLIBCXX17_INLINE constexpr defer_lock_t	defer_lock { };
 210:/usr/include/c++/11/bits/std_mutex.h **** 
 211:/usr/include/c++/11/bits/std_mutex.h ****   /// Tag used to prevent a scoped lock from blocking if a mutex is locked.
 212:/usr/include/c++/11/bits/std_mutex.h ****   _GLIBCXX17_INLINE constexpr try_to_lock_t	try_to_lock { };
 213:/usr/include/c++/11/bits/std_mutex.h **** 
 214:/usr/include/c++/11/bits/std_mutex.h ****   /// Tag used to make a scoped lock take ownership of a locked mutex.
 215:/usr/include/c++/11/bits/std_mutex.h ****   _GLIBCXX17_INLINE constexpr adopt_lock_t	adopt_lock { };
 216:/usr/include/c++/11/bits/std_mutex.h **** 
 217:/usr/include/c++/11/bits/std_mutex.h ****   /** @brief A simple scoped lock type.
 218:/usr/include/c++/11/bits/std_mutex.h ****    *
 219:/usr/include/c++/11/bits/std_mutex.h ****    * A lock_guard controls mutex ownership within a scope, releasing
 220:/usr/include/c++/11/bits/std_mutex.h ****    * ownership in the destructor.
 221:/usr/include/c++/11/bits/std_mutex.h ****    */
 222:/usr/include/c++/11/bits/std_mutex.h ****   template<typename _Mutex>
 223:/usr/include/c++/11/bits/std_mutex.h ****     class lock_guard
 224:/usr/include/c++/11/bits/std_mutex.h ****     {
 225:/usr/include/c++/11/bits/std_mutex.h ****     public:
 226:/usr/include/c++/11/bits/std_mutex.h ****       typedef _Mutex mutex_type;
 227:/usr/include/c++/11/bits/std_mutex.h **** 
 228:/usr/include/c++/11/bits/std_mutex.h ****       explicit lock_guard(mutex_type& __m) : _M_device(__m)
  34              		.loc 2 228 16 view .LVU3
  35              	.LBB554:
  36              	.LBI554:
  98:/usr/include/c++/11/bits/std_mutex.h ****     {
  37              		.loc 2 98 5 view .LVU4
  38              	.LBB555:
 100:/usr/include/c++/11/bits/std_mutex.h **** 
  39              		.loc 2 100 7 view .LVU5
  40              	.LBE555:
  41              	.LBE554:
  42              	.LBE553:
   5:../common/event.cpp ****     std::lock_guard<std::mutex> lock(sharedResources.queueMutex);
  43              		.loc 1 5 1 is_stmt 0 view .LVU6
  44 0004 4157     		pushq	%r15
GAS LISTING x64lin/../common/event.s 			page 7


  45              		.cfi_def_cfa_offset 16
  46              		.cfi_offset 15, -16
  47 0006 4156     		pushq	%r14
  48              		.cfi_def_cfa_offset 24
  49              		.cfi_offset 14, -24
  50 0008 4155     		pushq	%r13
  51              		.cfi_def_cfa_offset 32
  52              		.cfi_offset 13, -32
  53 000a 4154     		pushq	%r12
  54              		.cfi_def_cfa_offset 40
  55              		.cfi_offset 12, -40
  56              	.LBB570:
  57              	.LBB566:
  58              	.LBB562:
 100:/usr/include/c++/11/bits/std_mutex.h **** 
  59              		.loc 2 100 37 view .LVU7
  60 000c 4C8D6750 		leaq	80(%rdi), %r12
  61              	.LVL2:
  62              	.LBB556:
  63              	.LBI556:
  64              		.file 3 "/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h"
   1:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Threads compatibility routines for libgcc2 and libobjc.  */
   2:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Compile this one with gcc.  */
   3:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Copyright (C) 1997-2021 Free Software Foundation, Inc.
   4:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
   5:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** This file is part of GCC.
   6:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
   7:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** GCC is free software; you can redistribute it and/or modify it under
   8:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** the terms of the GNU General Public License as published by the Free
   9:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** Software Foundation; either version 3, or (at your option) any later
  10:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** version.
  11:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  12:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** GCC is distributed in the hope that it will be useful, but WITHOUT ANY
  13:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** WARRANTY; without even the implied warranty of MERCHANTABILITY or
  14:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  15:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** for more details.
  16:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  17:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 3.1, as published by the Free Software Foundation.
  20:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  21:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** You should have received a copy of the GNU General Public License and
  22:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** <http://www.gnu.org/licenses/>.  */
  25:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  26:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifndef _GLIBCXX_GCC_GTHR_POSIX_H
  27:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define _GLIBCXX_GCC_GTHR_POSIX_H
  28:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  29:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* POSIX threads specific definitions.
  30:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    Easy, since the interface is just one-to-one mapping.  */
  31:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  32:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREADS 1
  33:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREADS_CXX0X 1
  34:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  35:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #include <pthread.h>
  36:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
GAS LISTING x64lin/../common/event.s 			page 8


  37:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if ((defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)) \
  38:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****      || !defined(_GTHREAD_USE_MUTEX_TIMEDLOCK))
  39:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # include <unistd.h>
  40:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # if defined(_POSIX_TIMEOUTS) && _POSIX_TIMEOUTS >= 0
  41:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #  define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
  42:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # else
  43:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #  define _GTHREAD_USE_MUTEX_TIMEDLOCK 0
  44:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # endif
  45:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  46:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  47:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_t __gthread_t;
  48:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_key_t __gthread_key_t;
  49:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_once_t __gthread_once_t;
  50:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_mutex_t __gthread_mutex_t;
  51:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_mutex_t __gthread_recursive_mutex_t;
  52:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef pthread_cond_t __gthread_cond_t;
  53:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** typedef struct timespec __gthread_time_t;
  54:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  55:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* POSIX like conditional variables are supported.  Please look at comments
  56:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    in gthr.h for details. */
  57:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_HAS_COND	1
  58:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  59:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER
  60:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_MUTEX_INIT_FUNCTION __gthread_mutex_init_function
  61:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT
  62:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER)
  63:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER
  64:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #elif defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP)
  65:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
  66:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else
  67:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION __gthread_recursive_mutex_init_function
  68:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  69:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_COND_INIT PTHREAD_COND_INITIALIZER
  70:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __GTHREAD_TIME_INIT {0,0}
  71:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  72:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _GTHREAD_USE_MUTEX_INIT_FUNC
  73:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # undef __GTHREAD_MUTEX_INIT
  74:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  75:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _GTHREAD_USE_RECURSIVE_MUTEX_INIT_FUNC
  76:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # undef __GTHREAD_RECURSIVE_MUTEX_INIT
  77:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # undef __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION
  78:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION __gthread_recursive_mutex_init_function
  79:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  80:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _GTHREAD_USE_COND_INIT_FUNC
  81:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # undef __GTHREAD_COND_INIT
  82:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __GTHREAD_COND_INIT_FUNCTION __gthread_cond_init_function
  83:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  84:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  85:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if __GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK
  86:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # ifndef __gthrw_pragma
  87:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #  define __gthrw_pragma(pragma)
  88:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # endif
  89:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __gthrw2(name,name2,type) \
  90:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   static __typeof(type) name \
  91:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     __attribute__ ((__weakref__(#name2), __copy__ (type))); \
  92:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   __gthrw_pragma(weak type)
  93:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __gthrw_(name) __gthrw_ ## name
GAS LISTING x64lin/../common/event.s 			page 9


  94:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else
  95:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __gthrw2(name,name2,type)
  96:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define __gthrw_(name) name
  97:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
  98:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
  99:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Typically, __gthrw_foo is a weak reference to symbol foo.  */
 100:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #define __gthrw(name) __gthrw2(__gthrw_ ## name,name,name)
 101:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 102:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_once)
 103:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_getspecific)
 104:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_setspecific)
 105:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 106:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_create)
 107:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_join)
 108:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_equal)
 109:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_self)
 110:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_detach)
 111:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifndef __BIONIC__
 112:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cancel)
 113:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
 114:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(sched_yield)
 115:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 116:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_lock)
 117:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_trylock)
 118:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if _GTHREAD_USE_MUTEX_TIMEDLOCK
 119:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_timedlock)
 120:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
 121:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_unlock)
 122:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_init)
 123:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutex_destroy)
 124:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 125:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_init)
 126:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_broadcast)
 127:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_signal)
 128:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_wait)
 129:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_timedwait)
 130:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_cond_destroy)
 131:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 132:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_key_create)
 133:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_key_delete)
 134:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutexattr_init)
 135:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutexattr_settype)
 136:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_mutexattr_destroy)
 137:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 138:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 139:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)
 140:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Objective-C.  */
 141:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_exit)
 142:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_PRIORITY_SCHEDULING
 143:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
 144:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(sched_get_priority_max)
 145:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(sched_get_priority_min)
 146:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */
 147:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_PRIORITY_SCHEDULING */
 148:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_attr_destroy)
 149:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_attr_init)
 150:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_attr_setdetachstate)
GAS LISTING x64lin/../common/event.s 			page 10


 151:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
 152:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_getschedparam)
 153:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw(pthread_setschedparam)
 154:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */
 155:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _LIBOBJC || _LIBOBJC_WEAK */
 156:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 157:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if __GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK
 158:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 159:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* On Solaris 2.6 up to 9, the libc exposes a POSIX threads interface even if
 160:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    -pthreads is not specified.  The functions are dummies and most return an
 161:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    error value.  However pthread_once returns 0 without invoking the routine
 162:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    it is passed so we cannot pretend that the interface is active if -pthreads
 163:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    is not specified.  On Solaris 2.5.1, the interface is not exposed at all so
 164:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    we need to play the usual game with weak symbols.  On Solaris 10 and up, a
 165:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    working interface is always exposed.  On FreeBSD 6 and later, libc also
 166:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    exposes a dummy POSIX threads interface, similar to what Solaris 2.6 up
 167:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    to 9 does.  FreeBSD >= 700014 even provides a pthread_cancel stub in libc,
 168:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    which means the alternate __gthread_active_p below cannot be used there.  */
 169:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 170:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if defined(__FreeBSD__) || (defined(__sun) && defined(__svr4__))
 171:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 172:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static volatile int __gthread_active = -1;
 173:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 174:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static void
 175:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_trigger (void)
 176:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 177:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   __gthread_active = 1;
 178:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 179:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 180:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 181:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_active_p (void)
 182:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 183:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   static pthread_mutex_t __gthread_active_mutex = PTHREAD_MUTEX_INITIALIZER;
 184:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   static pthread_once_t __gthread_active_once = PTHREAD_ONCE_INIT;
 185:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 186:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   /* Avoid reading __gthread_active twice on the main code path.  */
 187:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   int __gthread_active_latest_value = __gthread_active;
 188:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 189:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   /* This test is not protected to avoid taking a lock on the main code
 190:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****      path so every update of __gthread_active in a threaded program must
 191:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****      be atomic with regard to the result of the test.  */
 192:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__builtin_expect (__gthread_active_latest_value < 0, 0))
 193:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 194:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_once))
 195:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 196:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  /* If this really is a threaded program, then we must ensure that
 197:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	     __gthread_active has been set to 1 before exiting this block.  */
 198:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  __gthrw_(pthread_mutex_lock) (&__gthread_active_mutex);
 199:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  __gthrw_(pthread_once) (&__gthread_active_once, __gthread_trigger);
 200:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  __gthrw_(pthread_mutex_unlock) (&__gthread_active_mutex);
 201:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 202:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 203:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       /* Make sure we'll never enter this block again.  */
 204:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthread_active < 0)
 205:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	__gthread_active = 0;
 206:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 207:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       __gthread_active_latest_value = __gthread_active;
GAS LISTING x64lin/../common/event.s 			page 11


 208:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 209:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 210:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthread_active_latest_value != 0;
 211:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 212:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 213:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else /* neither FreeBSD nor Solaris */
 214:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 215:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* For a program to be multi-threaded the only thing that it certainly must
 216:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    be using is pthread_create.  However, there may be other libraries that
 217:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    intercept pthread_create with their own definitions to wrap pthreads
 218:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    functionality for some purpose.  In those cases, pthread_create being
 219:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    defined might not necessarily mean that libpthread is actually linked
 220:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    in.
 221:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 222:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    For the GNU C library, we can use a known internal name.  This is always
 223:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    available in the ABI, but no other library would define it.  That is
 224:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    ideal, since any public pthread function might be intercepted just as
 225:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    pthread_create might be.  __pthread_key_create is an "internal"
 226:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    implementation symbol, but it is part of the public exported ABI.  Also,
 227:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    it's among the symbols that the static libpthread.a always links in
 228:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    whenever pthread_create is used, so there is no danger of a false
 229:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    negative result in any statically-linked, multi-threaded program.
 230:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 231:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    For others, we choose pthread_cancel as a function that seems unlikely
 232:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    to be redefined by an interceptor library.  The bionic (Android) C
 233:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    library does not provide pthread_cancel, so we do use pthread_create
 234:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    there (and interceptor libraries lose).  */
 235:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 236:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef __GLIBC__
 237:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthrw2(__gthrw_(__pthread_key_create),
 238:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	 __pthread_key_create,
 239:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	 pthread_key_create)
 240:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define GTHR_ACTIVE_PROXY	__gthrw_(__pthread_key_create)
 241:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #elif defined (__BIONIC__)
 242:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define GTHR_ACTIVE_PROXY	__gthrw_(pthread_create)
 243:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else
 244:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # define GTHR_ACTIVE_PROXY	__gthrw_(pthread_cancel)
 245:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
 246:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 247:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 248:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_active_p (void)
 249:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 250:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   static void *const __gthread_active_ptr
 251:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     = __extension__ (void *) &GTHR_ACTIVE_PROXY;
 252:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthread_active_ptr != 0;
 253:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 254:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 255:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* FreeBSD or Solaris */
 256:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 257:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else /* not __GXX_WEAK__ */
 258:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 259:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Similar to Solaris, HP-UX 11 for PA-RISC provides stubs for pthread
 260:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    calls in shared flavors of the HP-UX C library.  Most of the stubs
 261:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    have no functionality.  The details are described in the "libc cumulative
 262:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    patch" for each subversion of HP-UX 11.  There are two special interfaces
 263:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    provided for checking whether an application is linked to a shared pthread
 264:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    library or not.  However, these interfaces aren't available in early
GAS LISTING x64lin/../common/event.s 			page 12


 265:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    libpthread libraries.  We also need a test that works for archive
 266:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    libraries.  We can't use pthread_once as some libc versions call the
 267:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    init function.  We also can't use pthread_create or pthread_attr_init
 268:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    as these create a thread and thereby prevent changing the default stack
 269:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    size.  The function pthread_default_stacksize_np is available in both
 270:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    the archive and shared versions of libpthread.   It can be used to
 271:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    determine the default pthread stack size.  There is a stub in some
 272:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    shared libc versions which returns a zero size if pthreads are not
 273:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    active.  We provide an equivalent stub to handle cases where libc
 274:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****    doesn't provide one.  */
 275:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 276:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if defined(__hppa__) && defined(__hpux__)
 277:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 278:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static volatile int __gthread_active = -1;
 279:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 280:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 281:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_active_p (void)
 282:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 283:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   /* Avoid reading __gthread_active twice on the main code path.  */
 284:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   int __gthread_active_latest_value = __gthread_active;
 285:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   size_t __s;
 286:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 287:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__builtin_expect (__gthread_active_latest_value < 0, 0))
 288:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 289:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       pthread_default_stacksize_np (0, &__s);
 290:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       __gthread_active = __s ? 1 : 0;
 291:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       __gthread_active_latest_value = __gthread_active;
 292:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 293:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 294:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthread_active_latest_value != 0;
 295:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 296:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 297:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else /* not hppa-hpux */
 298:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 299:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 300:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_active_p (void)
 301:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 302:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 1;
 303:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 304:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 305:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* hppa-hpux */
 306:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 307:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* __GXX_WEAK__ */
 308:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 309:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _LIBOBJC
 310:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 311:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* This is the config.h file in libobjc/ */
 312:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #include <config.h>
 313:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 314:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef HAVE_SCHED_H
 315:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** # include <sched.h>
 316:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
 317:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 318:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Key structure for maintaining thread specific storage */
 319:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static pthread_key_t _objc_thread_storage;
 320:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static pthread_attr_t _objc_thread_attribs;
 321:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
GAS LISTING x64lin/../common/event.s 			page 13


 322:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Thread local storage for a single thread */
 323:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static void *thread_local_storage = NULL;
 324:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 325:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Backend initialization functions */
 326:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 327:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Initialize the threads subsystem.  */
 328:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 329:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_init_thread_system (void)
 330:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 331:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 332:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 333:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       /* Initialize the thread storage key.  */
 334:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_key_create) (&_objc_thread_storage, NULL) == 0)
 335:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 336:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  /* The normal default detach state for threads is
 337:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   * PTHREAD_CREATE_JOINABLE which causes threads to not die
 338:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   * when you think they should.  */
 339:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if (__gthrw_(pthread_attr_init) (&_objc_thread_attribs) == 0
 340:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	      && __gthrw_(pthread_attr_setdetachstate) (&_objc_thread_attribs,
 341:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 					      PTHREAD_CREATE_DETACHED) == 0)
 342:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    return 0;
 343:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 344:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 345:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 346:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return -1;
 347:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 348:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 349:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Close the threads subsystem.  */
 350:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 351:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_close_thread_system (void)
 352:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 353:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ()
 354:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       && __gthrw_(pthread_key_delete) (_objc_thread_storage) == 0
 355:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       && __gthrw_(pthread_attr_destroy) (&_objc_thread_attribs) == 0)
 356:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 357:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 358:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return -1;
 359:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 360:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 361:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Backend thread functions */
 362:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 363:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Create a new thread of execution.  */
 364:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline objc_thread_t
 365:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_detach (void (*func)(void *), void *arg)
 366:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 367:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   objc_thread_t thread_id;
 368:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   pthread_t new_thread_handle;
 369:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 370:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (!__gthread_active_p ())
 371:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return NULL;
 372:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 373:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (!(__gthrw_(pthread_create) (&new_thread_handle, &_objc_thread_attribs,
 374:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 				  (void *) func, arg)))
 375:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     thread_id = (objc_thread_t) new_thread_handle;
 376:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 377:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     thread_id = NULL;
 378:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
GAS LISTING x64lin/../common/event.s 			page 14


 379:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return thread_id;
 380:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 381:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 382:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Set the current thread's priority.  */
 383:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 384:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_set_priority (int priority)
 385:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 386:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (!__gthread_active_p ())
 387:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return -1;
 388:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 389:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 390:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_PRIORITY_SCHEDULING
 391:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
 392:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       pthread_t thread_id = __gthrw_(pthread_self) ();
 393:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       int policy;
 394:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       struct sched_param params;
 395:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       int priority_min, priority_max;
 396:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 397:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_getschedparam) (thread_id, &policy, &params) == 0)
 398:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 399:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if ((priority_max = __gthrw_(sched_get_priority_max) (policy)) == -1)
 400:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    return -1;
 401:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 402:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if ((priority_min = __gthrw_(sched_get_priority_min) (policy)) == -1)
 403:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    return -1;
 404:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 405:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if (priority > priority_max)
 406:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    priority = priority_max;
 407:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  else if (priority < priority_min)
 408:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    priority = priority_min;
 409:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  params.sched_priority = priority;
 410:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 411:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  /*
 412:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   * The solaris 7 and several other man pages incorrectly state that
 413:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   * this should be a pointer to policy but pthread.h is universally
 414:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   * at odds with this.
 415:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	   */
 416:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if (__gthrw_(pthread_setschedparam) (thread_id, policy, &params) == 0)
 417:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    return 0;
 418:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 419:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */
 420:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_PRIORITY_SCHEDULING */
 421:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       return -1;
 422:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 423:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 424:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 425:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Return the current thread's priority.  */
 426:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 427:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_get_priority (void)
 428:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 429:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_PRIORITY_SCHEDULING
 430:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #ifdef _POSIX_THREAD_PRIORITY_SCHEDULING
 431:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 432:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 433:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       int policy;
 434:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       struct sched_param params;
 435:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
GAS LISTING x64lin/../common/event.s 			page 15


 436:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_getschedparam) (__gthrw_(pthread_self) (), &policy, &params) == 0)
 437:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	return params.sched_priority;
 438:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       else
 439:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	return -1;
 440:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 441:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 442:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_THREAD_PRIORITY_SCHEDULING */
 443:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif /* _POSIX_PRIORITY_SCHEDULING */
 444:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return OBJC_THREAD_INTERACTIVE_PRIORITY;
 445:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 446:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 447:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Yield our process time to another thread.  */
 448:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline void
 449:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_yield (void)
 450:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 451:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 452:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     __gthrw_(sched_yield) ();
 453:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 454:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 455:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Terminate the current thread.  */
 456:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 457:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_exit (void)
 458:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 459:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 460:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     /* exit the thread */
 461:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     __gthrw_(pthread_exit) (&__objc_thread_exit_status);
 462:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 463:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   /* Failed if we reached here */
 464:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return -1;
 465:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 466:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 467:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Returns an integer value which uniquely describes a thread.  */
 468:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline objc_thread_t
 469:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_id (void)
 470:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 471:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 472:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return (objc_thread_t) __gthrw_(pthread_self) ();
 473:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 474:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return (objc_thread_t) 1;
 475:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 476:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 477:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Sets the thread's local storage pointer.  */
 478:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 479:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_set_data (void *value)
 480:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 481:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 482:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_setspecific) (_objc_thread_storage, value);
 483:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 484:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 485:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       thread_local_storage = value;
 486:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       return 0;
 487:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 488:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 489:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 490:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Returns the thread's local storage pointer.  */
 491:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline void *
 492:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_thread_get_data (void)
GAS LISTING x64lin/../common/event.s 			page 16


 493:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 494:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 495:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_getspecific) (_objc_thread_storage);
 496:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 497:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return thread_local_storage;
 498:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 499:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 500:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Backend mutex functions */
 501:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 502:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Allocate a mutex.  */
 503:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 504:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_mutex_allocate (objc_mutex_t mutex)
 505:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 506:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 507:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 508:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       mutex->backend = objc_malloc (sizeof (pthread_mutex_t));
 509:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 510:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_mutex_init) ((pthread_mutex_t *) mutex->backend, NULL))
 511:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 512:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  objc_free (mutex->backend);
 513:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  mutex->backend = NULL;
 514:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  return -1;
 515:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 516:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 517:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 518:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 519:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 520:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 521:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Deallocate a mutex.  */
 522:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 523:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_mutex_deallocate (objc_mutex_t mutex)
 524:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 525:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 526:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 527:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       int count;
 528:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 529:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       /*
 530:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****        * Posix Threads specifically require that the thread be unlocked
 531:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****        * for __gthrw_(pthread_mutex_destroy) to work.
 532:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****        */
 533:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 534:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       do
 535:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 536:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  count = __gthrw_(pthread_mutex_unlock) ((pthread_mutex_t *) mutex->backend);
 537:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  if (count < 0)
 538:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	    return -1;
 539:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 540:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       while (count);
 541:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 542:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_mutex_destroy) ((pthread_mutex_t *) mutex->backend))
 543:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	return -1;
 544:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 545:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       objc_free (mutex->backend);
 546:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       mutex->backend = NULL;
 547:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 548:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 549:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
GAS LISTING x64lin/../common/event.s 			page 17


 550:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 551:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Grab a lock on a mutex.  */
 552:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 553:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_mutex_lock (objc_mutex_t mutex)
 554:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 555:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ()
 556:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       && __gthrw_(pthread_mutex_lock) ((pthread_mutex_t *) mutex->backend) != 0)
 557:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 558:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       return -1;
 559:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 560:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 561:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 562:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 563:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 564:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Try to grab a lock on a mutex.  */
 565:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 566:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_mutex_trylock (objc_mutex_t mutex)
 567:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 568:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ()
 569:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       && __gthrw_(pthread_mutex_trylock) ((pthread_mutex_t *) mutex->backend) != 0)
 570:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 571:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       return -1;
 572:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 573:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 574:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 575:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 576:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 577:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Unlock the mutex */
 578:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 579:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_mutex_unlock (objc_mutex_t mutex)
 580:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 581:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ()
 582:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       && __gthrw_(pthread_mutex_unlock) ((pthread_mutex_t *) mutex->backend) != 0)
 583:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 584:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       return -1;
 585:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 586:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 587:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 588:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 589:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 590:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Backend condition mutex functions */
 591:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 592:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Allocate a condition.  */
 593:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 594:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_condition_allocate (objc_condition_t condition)
 595:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 596:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 597:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 598:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       condition->backend = objc_malloc (sizeof (pthread_cond_t));
 599:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 600:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_cond_init) ((pthread_cond_t *) condition->backend, NULL))
 601:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	{
 602:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  objc_free (condition->backend);
 603:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  condition->backend = NULL;
 604:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	  return -1;
 605:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	}
 606:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
GAS LISTING x64lin/../common/event.s 			page 18


 607:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 608:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 609:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 610:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 611:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Deallocate a condition.  */
 612:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 613:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_condition_deallocate (objc_condition_t condition)
 614:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 615:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 616:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     {
 617:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       if (__gthrw_(pthread_cond_destroy) ((pthread_cond_t *) condition->backend))
 618:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 	return -1;
 619:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 620:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       objc_free (condition->backend);
 621:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****       condition->backend = NULL;
 622:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     }
 623:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return 0;
 624:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 625:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 626:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Wait on the condition */
 627:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 628:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_condition_wait (objc_condition_t condition, objc_mutex_t mutex)
 629:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 630:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 631:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_cond_wait) ((pthread_cond_t *) condition->backend,
 632:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 			      (pthread_mutex_t *) mutex->backend);
 633:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 634:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 635:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 636:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 637:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Wake up all threads waiting on this condition.  */
 638:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 639:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_condition_broadcast (objc_condition_t condition)
 640:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 641:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 642:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_cond_broadcast) ((pthread_cond_t *) condition->backend);
 643:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 644:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 645:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 646:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 647:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** /* Wake up one thread waiting on this condition.  */
 648:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 649:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_objc_condition_signal (objc_condition_t condition)
 650:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 651:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 652:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_cond_signal) ((pthread_cond_t *) condition->backend);
 653:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 654:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 655:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 656:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 657:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #else /* _LIBOBJC */
 658:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 659:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 660:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_create (__gthread_t *__threadid, void *(*__func) (void*),
 661:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 		  void *__args)
 662:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 663:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_create) (__threadid, NULL, __func, __args);
GAS LISTING x64lin/../common/event.s 			page 19


 664:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 665:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 666:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 667:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_join (__gthread_t __threadid, void **__value_ptr)
 668:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 669:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_join) (__threadid, __value_ptr);
 670:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 671:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 672:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 673:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_detach (__gthread_t __threadid)
 674:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 675:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_detach) (__threadid);
 676:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 677:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 678:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 679:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_equal (__gthread_t __t1, __gthread_t __t2)
 680:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 681:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_equal) (__t1, __t2);
 682:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 683:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 684:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline __gthread_t
 685:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_self (void)
 686:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 687:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_self) ();
 688:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 689:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 690:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 691:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_yield (void)
 692:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 693:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(sched_yield) ();
 694:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 695:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 696:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 697:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_once (__gthread_once_t *__once, void (*__func) (void))
 698:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 699:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 700:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_once) (__once, __func);
 701:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 702:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return -1;
 703:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 704:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 705:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 706:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_key_create (__gthread_key_t *__key, void (*__dtor) (void *))
 707:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 708:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_key_create) (__key, __dtor);
 709:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 710:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 711:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 712:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_key_delete (__gthread_key_t __key)
 713:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 714:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_key_delete) (__key);
 715:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 716:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 717:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline void *
 718:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_getspecific (__gthread_key_t __key)
 719:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 720:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_getspecific) (__key);
GAS LISTING x64lin/../common/event.s 			page 20


 721:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 722:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 723:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 724:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_setspecific (__gthread_key_t __key, const void *__ptr)
 725:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 726:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   return __gthrw_(pthread_setspecific) (__key, __ptr);
 727:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 728:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 729:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline void
 730:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_init_function (__gthread_mutex_t *__mutex)
 731:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 732:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 733:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     __gthrw_(pthread_mutex_init) (__mutex, NULL);
 734:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 735:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 736:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 737:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_destroy (__gthread_mutex_t *__mutex)
 738:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 739:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 740:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_destroy) (__mutex);
 741:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 742:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 743:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 744:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 745:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 746:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_lock (__gthread_mutex_t *__mutex)
  65              		.loc 3 746 1 is_stmt 1 view .LVU8
  66              	.LBB557:
 747:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 748:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
  67              		.loc 3 748 3 view .LVU9
 749:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_lock) (__mutex);
  68              		.loc 3 749 5 view .LVU10
  69              	.LBE557:
  70              	.LBE556:
  71              	.LBE562:
  72              	.LBE566:
  73              	.LBE570:
   5:../common/event.cpp ****     std::lock_guard<std::mutex> lock(sharedResources.queueMutex);
  74              		.loc 1 5 1 is_stmt 0 view .LVU11
  75 0010 55       		pushq	%rbp
  76              		.cfi_def_cfa_offset 48
  77              		.cfi_offset 6, -48
  78 0011 4889F5   		movq	%rsi, %rbp
  79 0014 53       		pushq	%rbx
  80              		.cfi_def_cfa_offset 56
  81              		.cfi_offset 3, -56
  82 0015 4889FB   		movq	%rdi, %rbx
  83              	.LBB571:
  84              	.LBB567:
  85              	.LBB563:
  86              	.LBB560:
  87              	.LBB558:
  88              		.loc 3 749 31 view .LVU12
  89 0018 4C89E7   		movq	%r12, %rdi
  90              	.LVL3:
  91              		.loc 3 749 31 view .LVU13
GAS LISTING x64lin/../common/event.s 			page 21


  92              	.LBE558:
  93              	.LBE560:
  94              	.LBE563:
  95              	.LBE567:
  96              	.LBE571:
   5:../common/event.cpp ****     std::lock_guard<std::mutex> lock(sharedResources.queueMutex);
  97              		.loc 1 5 1 view .LVU14
  98 001b 4883EC18 		subq	$24, %rsp
  99              		.cfi_def_cfa_offset 80
 100              	.LBB572:
 101              	.LBB568:
 102              	.LBB564:
 103              	.LBB561:
 104              	.LBB559:
 105              		.loc 3 749 31 view .LVU15
 106 001f E8000000 		call	pthread_mutex_lock@PLT
 106      00
 107              	.LVL4:
 108              		.loc 3 749 31 view .LVU16
 109              	.LBE559:
 110              	.LBE561:
 103:/usr/include/c++/11/bits/std_mutex.h **** 	__throw_system_error(__e);
 111              		.loc 2 103 7 is_stmt 1 view .LVU17
 112 0024 85C0     		testl	%eax, %eax
 113 0026 0F853C02 		jne	.L17
 113      0000
 114              	.LVL5:
 103:/usr/include/c++/11/bits/std_mutex.h **** 	__throw_system_error(__e);
 115              		.loc 2 103 7 is_stmt 0 view .LVU18
 116              	.LBE564:
 117              	.LBE568:
 118              	.LBE572:
   7:../common/event.cpp ****     sharedResources.eventQueue.push(std::move(event));
 119              		.loc 1 7 5 is_stmt 1 view .LVU19
 120              	.LBB573:
 121              	.LBI573:
 122              		.file 4 "/usr/include/c++/11/bits/stl_queue.h"
   1:/usr/include/c++/11/bits/stl_queue.h **** // Queue implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_queue.h **** 
   3:/usr/include/c++/11/bits/stl_queue.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_queue.h **** //
   5:/usr/include/c++/11/bits/stl_queue.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_queue.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_queue.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_queue.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_queue.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_queue.h **** 
  11:/usr/include/c++/11/bits/stl_queue.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_queue.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_queue.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_queue.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_queue.h **** 
  16:/usr/include/c++/11/bits/stl_queue.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_queue.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_queue.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_queue.h **** 
  20:/usr/include/c++/11/bits/stl_queue.h **** // You should have received a copy of the GNU General Public License and
GAS LISTING x64lin/../common/event.s 			page 22


  21:/usr/include/c++/11/bits/stl_queue.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_queue.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_queue.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_queue.h **** 
  25:/usr/include/c++/11/bits/stl_queue.h **** /*
  26:/usr/include/c++/11/bits/stl_queue.h ****  *
  27:/usr/include/c++/11/bits/stl_queue.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_queue.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_queue.h ****  *
  30:/usr/include/c++/11/bits/stl_queue.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_queue.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_queue.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_queue.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_queue.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_queue.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_queue.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_queue.h ****  *
  38:/usr/include/c++/11/bits/stl_queue.h ****  *
  39:/usr/include/c++/11/bits/stl_queue.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_queue.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_queue.h ****  *
  42:/usr/include/c++/11/bits/stl_queue.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_queue.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_queue.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_queue.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_queue.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_queue.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_queue.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_queue.h ****  */
  50:/usr/include/c++/11/bits/stl_queue.h **** 
  51:/usr/include/c++/11/bits/stl_queue.h **** /** @file bits/stl_queue.h
  52:/usr/include/c++/11/bits/stl_queue.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_queue.h ****  *  Do not attempt to use it directly. @headername{queue}
  54:/usr/include/c++/11/bits/stl_queue.h ****  */
  55:/usr/include/c++/11/bits/stl_queue.h **** 
  56:/usr/include/c++/11/bits/stl_queue.h **** #ifndef _STL_QUEUE_H
  57:/usr/include/c++/11/bits/stl_queue.h **** #define _STL_QUEUE_H 1
  58:/usr/include/c++/11/bits/stl_queue.h **** 
  59:/usr/include/c++/11/bits/stl_queue.h **** #include <bits/concept_check.h>
  60:/usr/include/c++/11/bits/stl_queue.h **** #include <debug/debug.h>
  61:/usr/include/c++/11/bits/stl_queue.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/11/bits/stl_queue.h **** # include <bits/uses_allocator.h>
  63:/usr/include/c++/11/bits/stl_queue.h **** #endif
  64:/usr/include/c++/11/bits/stl_queue.h **** 
  65:/usr/include/c++/11/bits/stl_queue.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/11/bits/stl_queue.h **** {
  67:/usr/include/c++/11/bits/stl_queue.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/11/bits/stl_queue.h **** 
  69:/usr/include/c++/11/bits/stl_queue.h ****   /**
  70:/usr/include/c++/11/bits/stl_queue.h ****    *  @brief  A standard container giving FIFO behavior.
  71:/usr/include/c++/11/bits/stl_queue.h ****    *
  72:/usr/include/c++/11/bits/stl_queue.h ****    *  @ingroup sequences
  73:/usr/include/c++/11/bits/stl_queue.h ****    *
  74:/usr/include/c++/11/bits/stl_queue.h ****    *  @tparam _Tp  Type of element.
  75:/usr/include/c++/11/bits/stl_queue.h ****    *  @tparam _Sequence  Type of underlying sequence, defaults to deque<_Tp>.
  76:/usr/include/c++/11/bits/stl_queue.h ****    *
  77:/usr/include/c++/11/bits/stl_queue.h ****    *  Meets many of the requirements of a
GAS LISTING x64lin/../common/event.s 			page 23


  78:/usr/include/c++/11/bits/stl_queue.h ****    *  <a href="tables.html#65">container</a>,
  79:/usr/include/c++/11/bits/stl_queue.h ****    *  but does not define anything to do with iterators.  Very few of the
  80:/usr/include/c++/11/bits/stl_queue.h ****    *  other standard container interfaces are defined.
  81:/usr/include/c++/11/bits/stl_queue.h ****    *
  82:/usr/include/c++/11/bits/stl_queue.h ****    *  This is not a true container, but an @e adaptor.  It holds another
  83:/usr/include/c++/11/bits/stl_queue.h ****    *  container, and provides a wrapper interface to that container.  The
  84:/usr/include/c++/11/bits/stl_queue.h ****    *  wrapper is what enforces strict first-in-first-out %queue behavior.
  85:/usr/include/c++/11/bits/stl_queue.h ****    *
  86:/usr/include/c++/11/bits/stl_queue.h ****    *  The second template parameter defines the type of the underlying
  87:/usr/include/c++/11/bits/stl_queue.h ****    *  sequence/container.  It defaults to std::deque, but it can be any type
  88:/usr/include/c++/11/bits/stl_queue.h ****    *  that supports @c front, @c back, @c push_back, and @c pop_front,
  89:/usr/include/c++/11/bits/stl_queue.h ****    *  such as std::list or an appropriate user-defined type.
  90:/usr/include/c++/11/bits/stl_queue.h ****    *
  91:/usr/include/c++/11/bits/stl_queue.h ****    *  Members not found in @a normal containers are @c container_type,
  92:/usr/include/c++/11/bits/stl_queue.h ****    *  which is a typedef for the second Sequence parameter, and @c push and
  93:/usr/include/c++/11/bits/stl_queue.h ****    *  @c pop, which are standard %queue/FIFO operations.
  94:/usr/include/c++/11/bits/stl_queue.h ****   */
  95:/usr/include/c++/11/bits/stl_queue.h ****   template<typename _Tp, typename _Sequence = deque<_Tp> >
  96:/usr/include/c++/11/bits/stl_queue.h ****     class queue
  97:/usr/include/c++/11/bits/stl_queue.h ****     {
  98:/usr/include/c++/11/bits/stl_queue.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
  99:/usr/include/c++/11/bits/stl_queue.h ****       // concept requirements
 100:/usr/include/c++/11/bits/stl_queue.h ****       typedef typename _Sequence::value_type _Sequence_value_type;
 101:/usr/include/c++/11/bits/stl_queue.h **** # if __cplusplus < 201103L
 102:/usr/include/c++/11/bits/stl_queue.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 103:/usr/include/c++/11/bits/stl_queue.h **** # endif
 104:/usr/include/c++/11/bits/stl_queue.h ****       __glibcxx_class_requires(_Sequence, _FrontInsertionSequenceConcept)
 105:/usr/include/c++/11/bits/stl_queue.h ****       __glibcxx_class_requires(_Sequence, _BackInsertionSequenceConcept)
 106:/usr/include/c++/11/bits/stl_queue.h ****       __glibcxx_class_requires2(_Tp, _Sequence_value_type, _SameTypeConcept)
 107:/usr/include/c++/11/bits/stl_queue.h **** #endif
 108:/usr/include/c++/11/bits/stl_queue.h **** 
 109:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Tp1, typename _Seq1>
 110:/usr/include/c++/11/bits/stl_queue.h **** 	friend bool
 111:/usr/include/c++/11/bits/stl_queue.h **** 	operator==(const queue<_Tp1, _Seq1>&, const queue<_Tp1, _Seq1>&);
 112:/usr/include/c++/11/bits/stl_queue.h **** 
 113:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Tp1, typename _Seq1>
 114:/usr/include/c++/11/bits/stl_queue.h **** 	friend bool
 115:/usr/include/c++/11/bits/stl_queue.h **** 	operator<(const queue<_Tp1, _Seq1>&, const queue<_Tp1, _Seq1>&);
 116:/usr/include/c++/11/bits/stl_queue.h **** 
 117:/usr/include/c++/11/bits/stl_queue.h **** #if __cpp_lib_three_way_comparison
 118:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Tp1, three_way_comparable _Seq1>
 119:/usr/include/c++/11/bits/stl_queue.h **** 	friend compare_three_way_result_t<_Seq1>
 120:/usr/include/c++/11/bits/stl_queue.h **** 	operator<=>(const queue<_Tp1, _Seq1>&, const queue<_Tp1, _Seq1>&);
 121:/usr/include/c++/11/bits/stl_queue.h **** #endif
 122:/usr/include/c++/11/bits/stl_queue.h **** 
 123:/usr/include/c++/11/bits/stl_queue.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc>
 125:/usr/include/c++/11/bits/stl_queue.h **** 	using _Uses = typename
 126:/usr/include/c++/11/bits/stl_queue.h **** 	  enable_if<uses_allocator<_Sequence, _Alloc>::value>::type;
 127:/usr/include/c++/11/bits/stl_queue.h **** 
 128:/usr/include/c++/11/bits/stl_queue.h **** #if __cplusplus >= 201703L
 129:/usr/include/c++/11/bits/stl_queue.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/11/bits/stl_queue.h ****       // 2566. Requirements on the first template parameter of container
 131:/usr/include/c++/11/bits/stl_queue.h ****       // adaptors
 132:/usr/include/c++/11/bits/stl_queue.h ****       static_assert(is_same<_Tp, typename _Sequence::value_type>::value,
 133:/usr/include/c++/11/bits/stl_queue.h **** 	  "value_type must be the same as the underlying container");
 134:/usr/include/c++/11/bits/stl_queue.h **** #endif // C++17
GAS LISTING x64lin/../common/event.s 			page 24


 135:/usr/include/c++/11/bits/stl_queue.h **** #endif // C++11
 136:/usr/include/c++/11/bits/stl_queue.h **** 
 137:/usr/include/c++/11/bits/stl_queue.h ****     public:
 138:/usr/include/c++/11/bits/stl_queue.h ****       typedef typename	_Sequence::value_type		value_type;
 139:/usr/include/c++/11/bits/stl_queue.h ****       typedef typename	_Sequence::reference		reference;
 140:/usr/include/c++/11/bits/stl_queue.h ****       typedef typename	_Sequence::const_reference	const_reference;
 141:/usr/include/c++/11/bits/stl_queue.h ****       typedef typename	_Sequence::size_type		size_type;
 142:/usr/include/c++/11/bits/stl_queue.h ****       typedef		_Sequence			container_type;
 143:/usr/include/c++/11/bits/stl_queue.h **** 
 144:/usr/include/c++/11/bits/stl_queue.h ****     protected:
 145:/usr/include/c++/11/bits/stl_queue.h ****       /*  Maintainers wondering why this isn't uglified as per style
 146:/usr/include/c++/11/bits/stl_queue.h ****        *  guidelines should note that this name is specified in the standard,
 147:/usr/include/c++/11/bits/stl_queue.h ****        *  C++98 [23.2.3.1].
 148:/usr/include/c++/11/bits/stl_queue.h ****        *  (Why? Presumably for the same reason that it's protected instead
 149:/usr/include/c++/11/bits/stl_queue.h ****        *  of private: to allow derivation.  But none of the other
 150:/usr/include/c++/11/bits/stl_queue.h ****        *  containers allow for derivation.  Odd.)
 151:/usr/include/c++/11/bits/stl_queue.h ****        */
 152:/usr/include/c++/11/bits/stl_queue.h ****        ///  @c c is the underlying container.
 153:/usr/include/c++/11/bits/stl_queue.h ****       _Sequence c;
 154:/usr/include/c++/11/bits/stl_queue.h **** 
 155:/usr/include/c++/11/bits/stl_queue.h ****     public:
 156:/usr/include/c++/11/bits/stl_queue.h ****       /**
 157:/usr/include/c++/11/bits/stl_queue.h ****        *  @brief  Default constructor creates no elements.
 158:/usr/include/c++/11/bits/stl_queue.h ****        */
 159:/usr/include/c++/11/bits/stl_queue.h **** #if __cplusplus < 201103L
 160:/usr/include/c++/11/bits/stl_queue.h ****       explicit
 161:/usr/include/c++/11/bits/stl_queue.h ****       queue(const _Sequence& __c = _Sequence())
 162:/usr/include/c++/11/bits/stl_queue.h ****       : c(__c) { }
 163:/usr/include/c++/11/bits/stl_queue.h **** #else
 164:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Seq = _Sequence, typename _Requires = typename
 165:/usr/include/c++/11/bits/stl_queue.h **** 	       enable_if<is_default_constructible<_Seq>::value>::type>
 166:/usr/include/c++/11/bits/stl_queue.h **** 	queue()
 167:/usr/include/c++/11/bits/stl_queue.h **** 	: c() { }
 168:/usr/include/c++/11/bits/stl_queue.h **** 
 169:/usr/include/c++/11/bits/stl_queue.h ****       explicit
 170:/usr/include/c++/11/bits/stl_queue.h ****       queue(const _Sequence& __c)
 171:/usr/include/c++/11/bits/stl_queue.h ****       : c(__c) { }
 172:/usr/include/c++/11/bits/stl_queue.h **** 
 173:/usr/include/c++/11/bits/stl_queue.h ****       explicit
 174:/usr/include/c++/11/bits/stl_queue.h ****       queue(_Sequence&& __c)
 175:/usr/include/c++/11/bits/stl_queue.h ****       : c(std::move(__c)) { }
 176:/usr/include/c++/11/bits/stl_queue.h **** 
 177:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>
 178:/usr/include/c++/11/bits/stl_queue.h **** 	explicit
 179:/usr/include/c++/11/bits/stl_queue.h **** 	queue(const _Alloc& __a)
 180:/usr/include/c++/11/bits/stl_queue.h **** 	: c(__a) { }
 181:/usr/include/c++/11/bits/stl_queue.h **** 
 182:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>
 183:/usr/include/c++/11/bits/stl_queue.h **** 	queue(const _Sequence& __c, const _Alloc& __a)
 184:/usr/include/c++/11/bits/stl_queue.h **** 	: c(__c, __a) { }
 185:/usr/include/c++/11/bits/stl_queue.h **** 
 186:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>
 187:/usr/include/c++/11/bits/stl_queue.h **** 	queue(_Sequence&& __c, const _Alloc& __a)
 188:/usr/include/c++/11/bits/stl_queue.h **** 	: c(std::move(__c), __a) { }
 189:/usr/include/c++/11/bits/stl_queue.h **** 
 190:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>
 191:/usr/include/c++/11/bits/stl_queue.h **** 	queue(const queue& __q, const _Alloc& __a)
GAS LISTING x64lin/../common/event.s 			page 25


 192:/usr/include/c++/11/bits/stl_queue.h **** 	: c(__q.c, __a) { }
 193:/usr/include/c++/11/bits/stl_queue.h **** 
 194:/usr/include/c++/11/bits/stl_queue.h ****       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>
 195:/usr/include/c++/11/bits/stl_queue.h **** 	queue(queue&& __q, const _Alloc& __a)
 196:/usr/include/c++/11/bits/stl_queue.h **** 	: c(std::move(__q.c), __a) { }
 197:/usr/include/c++/11/bits/stl_queue.h **** #endif
 198:/usr/include/c++/11/bits/stl_queue.h **** 
 199:/usr/include/c++/11/bits/stl_queue.h ****       /**
 200:/usr/include/c++/11/bits/stl_queue.h ****        *  Returns true if the %queue is empty.
 201:/usr/include/c++/11/bits/stl_queue.h ****        */
 202:/usr/include/c++/11/bits/stl_queue.h ****       _GLIBCXX_NODISCARD bool
 203:/usr/include/c++/11/bits/stl_queue.h ****       empty() const
 204:/usr/include/c++/11/bits/stl_queue.h ****       { return c.empty(); }
 205:/usr/include/c++/11/bits/stl_queue.h **** 
 206:/usr/include/c++/11/bits/stl_queue.h ****       /**  Returns the number of elements in the %queue.  */
 207:/usr/include/c++/11/bits/stl_queue.h ****       size_type
 208:/usr/include/c++/11/bits/stl_queue.h ****       size() const
 209:/usr/include/c++/11/bits/stl_queue.h ****       { return c.size(); }
 210:/usr/include/c++/11/bits/stl_queue.h **** 
 211:/usr/include/c++/11/bits/stl_queue.h ****       /**
 212:/usr/include/c++/11/bits/stl_queue.h ****        *  Returns a read/write reference to the data at the first
 213:/usr/include/c++/11/bits/stl_queue.h ****        *  element of the %queue.
 214:/usr/include/c++/11/bits/stl_queue.h ****        */
 215:/usr/include/c++/11/bits/stl_queue.h ****       reference
 216:/usr/include/c++/11/bits/stl_queue.h ****       front()
 217:/usr/include/c++/11/bits/stl_queue.h ****       {
 218:/usr/include/c++/11/bits/stl_queue.h **** 	__glibcxx_requires_nonempty();
 219:/usr/include/c++/11/bits/stl_queue.h **** 	return c.front();
 220:/usr/include/c++/11/bits/stl_queue.h ****       }
 221:/usr/include/c++/11/bits/stl_queue.h **** 
 222:/usr/include/c++/11/bits/stl_queue.h ****       /**
 223:/usr/include/c++/11/bits/stl_queue.h ****        *  Returns a read-only (constant) reference to the data at the first
 224:/usr/include/c++/11/bits/stl_queue.h ****        *  element of the %queue.
 225:/usr/include/c++/11/bits/stl_queue.h ****        */
 226:/usr/include/c++/11/bits/stl_queue.h ****       const_reference
 227:/usr/include/c++/11/bits/stl_queue.h ****       front() const
 228:/usr/include/c++/11/bits/stl_queue.h ****       {
 229:/usr/include/c++/11/bits/stl_queue.h **** 	__glibcxx_requires_nonempty();
 230:/usr/include/c++/11/bits/stl_queue.h **** 	return c.front();
 231:/usr/include/c++/11/bits/stl_queue.h ****       }
 232:/usr/include/c++/11/bits/stl_queue.h **** 
 233:/usr/include/c++/11/bits/stl_queue.h ****       /**
 234:/usr/include/c++/11/bits/stl_queue.h ****        *  Returns a read/write reference to the data at the last
 235:/usr/include/c++/11/bits/stl_queue.h ****        *  element of the %queue.
 236:/usr/include/c++/11/bits/stl_queue.h ****        */
 237:/usr/include/c++/11/bits/stl_queue.h ****       reference
 238:/usr/include/c++/11/bits/stl_queue.h ****       back()
 239:/usr/include/c++/11/bits/stl_queue.h ****       {
 240:/usr/include/c++/11/bits/stl_queue.h **** 	__glibcxx_requires_nonempty();
 241:/usr/include/c++/11/bits/stl_queue.h **** 	return c.back();
 242:/usr/include/c++/11/bits/stl_queue.h ****       }
 243:/usr/include/c++/11/bits/stl_queue.h **** 
 244:/usr/include/c++/11/bits/stl_queue.h ****       /**
 245:/usr/include/c++/11/bits/stl_queue.h ****        *  Returns a read-only (constant) reference to the data at the last
 246:/usr/include/c++/11/bits/stl_queue.h ****        *  element of the %queue.
 247:/usr/include/c++/11/bits/stl_queue.h ****        */
 248:/usr/include/c++/11/bits/stl_queue.h ****       const_reference
GAS LISTING x64lin/../common/event.s 			page 26


 249:/usr/include/c++/11/bits/stl_queue.h ****       back() const
 250:/usr/include/c++/11/bits/stl_queue.h ****       {
 251:/usr/include/c++/11/bits/stl_queue.h **** 	__glibcxx_requires_nonempty();
 252:/usr/include/c++/11/bits/stl_queue.h **** 	return c.back();
 253:/usr/include/c++/11/bits/stl_queue.h ****       }
 254:/usr/include/c++/11/bits/stl_queue.h **** 
 255:/usr/include/c++/11/bits/stl_queue.h ****       /**
 256:/usr/include/c++/11/bits/stl_queue.h ****        *  @brief  Add data to the end of the %queue.
 257:/usr/include/c++/11/bits/stl_queue.h ****        *  @param  __x  Data to be added.
 258:/usr/include/c++/11/bits/stl_queue.h ****        *
 259:/usr/include/c++/11/bits/stl_queue.h ****        *  This is a typical %queue operation.  The function creates an
 260:/usr/include/c++/11/bits/stl_queue.h ****        *  element at the end of the %queue and assigns the given data
 261:/usr/include/c++/11/bits/stl_queue.h ****        *  to it.  The time complexity of the operation depends on the
 262:/usr/include/c++/11/bits/stl_queue.h ****        *  underlying sequence.
 263:/usr/include/c++/11/bits/stl_queue.h ****        */
 264:/usr/include/c++/11/bits/stl_queue.h ****       void
 265:/usr/include/c++/11/bits/stl_queue.h ****       push(const value_type& __x)
 266:/usr/include/c++/11/bits/stl_queue.h ****       { c.push_back(__x); }
 267:/usr/include/c++/11/bits/stl_queue.h **** 
 268:/usr/include/c++/11/bits/stl_queue.h **** #if __cplusplus >= 201103L
 269:/usr/include/c++/11/bits/stl_queue.h ****       void
 270:/usr/include/c++/11/bits/stl_queue.h ****       push(value_type&& __x)
 123              		.loc 4 270 7 view .LVU20
 124              	.LBB574:
 125              	.LBI574:
 126              		.file 5 "/usr/include/c++/11/bits/stl_deque.h"
   1:/usr/include/c++/11/bits/stl_deque.h **** // Deque implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_deque.h **** 
   3:/usr/include/c++/11/bits/stl_deque.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_deque.h **** //
   5:/usr/include/c++/11/bits/stl_deque.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_deque.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_deque.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_deque.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_deque.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_deque.h **** 
  11:/usr/include/c++/11/bits/stl_deque.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_deque.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_deque.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_deque.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_deque.h **** 
  16:/usr/include/c++/11/bits/stl_deque.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_deque.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_deque.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_deque.h **** 
  20:/usr/include/c++/11/bits/stl_deque.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_deque.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_deque.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_deque.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_deque.h **** 
  25:/usr/include/c++/11/bits/stl_deque.h **** /*
  26:/usr/include/c++/11/bits/stl_deque.h ****  *
  27:/usr/include/c++/11/bits/stl_deque.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_deque.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_deque.h ****  *
  30:/usr/include/c++/11/bits/stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
GAS LISTING x64lin/../common/event.s 			page 27


  32:/usr/include/c++/11/bits/stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_deque.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_deque.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_deque.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_deque.h ****  *
  38:/usr/include/c++/11/bits/stl_deque.h ****  *
  39:/usr/include/c++/11/bits/stl_deque.h ****  * Copyright (c) 1997
  40:/usr/include/c++/11/bits/stl_deque.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_deque.h ****  *
  42:/usr/include/c++/11/bits/stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_deque.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_deque.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_deque.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_deque.h ****  */
  50:/usr/include/c++/11/bits/stl_deque.h **** 
  51:/usr/include/c++/11/bits/stl_deque.h **** /** @file bits/stl_deque.h
  52:/usr/include/c++/11/bits/stl_deque.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_deque.h ****  *  Do not attempt to use it directly. @headername{deque}
  54:/usr/include/c++/11/bits/stl_deque.h ****  */
  55:/usr/include/c++/11/bits/stl_deque.h **** 
  56:/usr/include/c++/11/bits/stl_deque.h **** #ifndef _STL_DEQUE_H
  57:/usr/include/c++/11/bits/stl_deque.h **** #define _STL_DEQUE_H 1
  58:/usr/include/c++/11/bits/stl_deque.h **** 
  59:/usr/include/c++/11/bits/stl_deque.h **** #include <bits/concept_check.h>
  60:/usr/include/c++/11/bits/stl_deque.h **** #include <bits/stl_iterator_base_types.h>
  61:/usr/include/c++/11/bits/stl_deque.h **** #include <bits/stl_iterator_base_funcs.h>
  62:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/11/bits/stl_deque.h **** #include <initializer_list>
  64:/usr/include/c++/11/bits/stl_deque.h **** #include <bits/stl_uninitialized.h> // for __is_bitwise_relocatable
  65:/usr/include/c++/11/bits/stl_deque.h **** #endif
  66:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus > 201703L
  67:/usr/include/c++/11/bits/stl_deque.h **** # include <compare>
  68:/usr/include/c++/11/bits/stl_deque.h **** #endif
  69:/usr/include/c++/11/bits/stl_deque.h **** 
  70:/usr/include/c++/11/bits/stl_deque.h **** #include <debug/assertions.h>
  71:/usr/include/c++/11/bits/stl_deque.h **** 
  72:/usr/include/c++/11/bits/stl_deque.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/usr/include/c++/11/bits/stl_deque.h **** {
  74:/usr/include/c++/11/bits/stl_deque.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/usr/include/c++/11/bits/stl_deque.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  76:/usr/include/c++/11/bits/stl_deque.h **** 
  77:/usr/include/c++/11/bits/stl_deque.h ****   /**
  78:/usr/include/c++/11/bits/stl_deque.h ****    *  @brief This function controls the size of memory nodes.
  79:/usr/include/c++/11/bits/stl_deque.h ****    *  @param  __size  The size of an element.
  80:/usr/include/c++/11/bits/stl_deque.h ****    *  @return   The number (not byte size) of elements per node.
  81:/usr/include/c++/11/bits/stl_deque.h ****    *
  82:/usr/include/c++/11/bits/stl_deque.h ****    *  This function started off as a compiler kludge from SGI, but
  83:/usr/include/c++/11/bits/stl_deque.h ****    *  seems to be a useful wrapper around a repeated constant
  84:/usr/include/c++/11/bits/stl_deque.h ****    *  expression.  The @b 512 is tunable (and no other code needs to
  85:/usr/include/c++/11/bits/stl_deque.h ****    *  change), but no investigation has been done since inheriting the
  86:/usr/include/c++/11/bits/stl_deque.h ****    *  SGI code.  Touch _GLIBCXX_DEQUE_BUF_SIZE only if you know what
  87:/usr/include/c++/11/bits/stl_deque.h ****    *  you are doing, however: changing it breaks the binary
  88:/usr/include/c++/11/bits/stl_deque.h ****    *  compatibility!!
GAS LISTING x64lin/../common/event.s 			page 28


  89:/usr/include/c++/11/bits/stl_deque.h ****   */
  90:/usr/include/c++/11/bits/stl_deque.h **** 
  91:/usr/include/c++/11/bits/stl_deque.h **** #ifndef _GLIBCXX_DEQUE_BUF_SIZE
  92:/usr/include/c++/11/bits/stl_deque.h **** #define _GLIBCXX_DEQUE_BUF_SIZE 512
  93:/usr/include/c++/11/bits/stl_deque.h **** #endif
  94:/usr/include/c++/11/bits/stl_deque.h **** 
  95:/usr/include/c++/11/bits/stl_deque.h ****   _GLIBCXX_CONSTEXPR inline size_t
  96:/usr/include/c++/11/bits/stl_deque.h ****   __deque_buf_size(size_t __size)
  97:/usr/include/c++/11/bits/stl_deque.h ****   { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
  98:/usr/include/c++/11/bits/stl_deque.h **** 	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
  99:/usr/include/c++/11/bits/stl_deque.h **** 
 100:/usr/include/c++/11/bits/stl_deque.h **** 
 101:/usr/include/c++/11/bits/stl_deque.h ****   /**
 102:/usr/include/c++/11/bits/stl_deque.h ****    *  @brief A deque::iterator.
 103:/usr/include/c++/11/bits/stl_deque.h ****    *
 104:/usr/include/c++/11/bits/stl_deque.h ****    *  Quite a bit of intelligence here.  Much of the functionality of
 105:/usr/include/c++/11/bits/stl_deque.h ****    *  deque is actually passed off to this class.  A deque holds two
 106:/usr/include/c++/11/bits/stl_deque.h ****    *  of these internally, marking its valid range.  Access to
 107:/usr/include/c++/11/bits/stl_deque.h ****    *  elements is done as offsets of either of those two, relying on
 108:/usr/include/c++/11/bits/stl_deque.h ****    *  operator overloading in this class.
 109:/usr/include/c++/11/bits/stl_deque.h ****    *
 110:/usr/include/c++/11/bits/stl_deque.h ****    *  All the functions are op overloads except for _M_set_node.
 111:/usr/include/c++/11/bits/stl_deque.h ****   */
 112:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 113:/usr/include/c++/11/bits/stl_deque.h ****     struct _Deque_iterator
 114:/usr/include/c++/11/bits/stl_deque.h ****     {
 115:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
 116:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Tp*>		   iterator;
 117:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
 118:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Tp*					   _Elt_pointer;
 119:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Tp**					   _Map_pointer;
 120:/usr/include/c++/11/bits/stl_deque.h **** #else
 121:/usr/include/c++/11/bits/stl_deque.h ****     private:
 122:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _CvTp>
 123:/usr/include/c++/11/bits/stl_deque.h **** 	using __iter = _Deque_iterator<_Tp, _CvTp&, __ptr_rebind<_Ptr, _CvTp>>;
 124:/usr/include/c++/11/bits/stl_deque.h ****     public:
 125:/usr/include/c++/11/bits/stl_deque.h ****       typedef __iter<_Tp>				   iterator;
 126:/usr/include/c++/11/bits/stl_deque.h ****       typedef __iter<const _Tp>				   const_iterator;
 127:/usr/include/c++/11/bits/stl_deque.h ****       typedef __ptr_rebind<_Ptr, _Tp>			   _Elt_pointer;
 128:/usr/include/c++/11/bits/stl_deque.h ****       typedef __ptr_rebind<_Ptr, _Elt_pointer>		   _Map_pointer;
 129:/usr/include/c++/11/bits/stl_deque.h **** #endif
 130:/usr/include/c++/11/bits/stl_deque.h **** 
 131:/usr/include/c++/11/bits/stl_deque.h ****       static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 132:/usr/include/c++/11/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 133:/usr/include/c++/11/bits/stl_deque.h **** 
 134:/usr/include/c++/11/bits/stl_deque.h ****       typedef std::random_access_iterator_tag	iterator_category;
 135:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Tp				value_type;
 136:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Ptr				pointer;
 137:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Ref				reference;
 138:/usr/include/c++/11/bits/stl_deque.h ****       typedef size_t				size_type;
 139:/usr/include/c++/11/bits/stl_deque.h ****       typedef ptrdiff_t				difference_type;
 140:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_iterator			_Self;
 141:/usr/include/c++/11/bits/stl_deque.h **** 
 142:/usr/include/c++/11/bits/stl_deque.h ****       _Elt_pointer _M_cur;
 143:/usr/include/c++/11/bits/stl_deque.h ****       _Elt_pointer _M_first;
 144:/usr/include/c++/11/bits/stl_deque.h ****       _Elt_pointer _M_last;
 145:/usr/include/c++/11/bits/stl_deque.h ****       _Map_pointer _M_node;
GAS LISTING x64lin/../common/event.s 			page 29


 146:/usr/include/c++/11/bits/stl_deque.h **** 
 147:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_iterator(_Elt_pointer __x, _Map_pointer __y) _GLIBCXX_NOEXCEPT
 148:/usr/include/c++/11/bits/stl_deque.h ****       : _M_cur(__x), _M_first(*__y),
 149:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last(*__y + _S_buffer_size()), _M_node(__y) { }
 150:/usr/include/c++/11/bits/stl_deque.h **** 
 151:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_iterator() _GLIBCXX_NOEXCEPT
 152:/usr/include/c++/11/bits/stl_deque.h ****       : _M_cur(), _M_first(), _M_last(), _M_node() { }
 153:/usr/include/c++/11/bits/stl_deque.h **** 
 154:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
 155:/usr/include/c++/11/bits/stl_deque.h ****       // Conversion from iterator to const_iterator.
 156:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
 157:/usr/include/c++/11/bits/stl_deque.h ****       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 158:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last(__x._M_last), _M_node(__x._M_node) { }
 159:/usr/include/c++/11/bits/stl_deque.h **** #else
 160:/usr/include/c++/11/bits/stl_deque.h ****       // Conversion from iterator to const_iterator.
 161:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _Iter,
 162:/usr/include/c++/11/bits/stl_deque.h **** 	       typename = _Require<is_same<_Self, const_iterator>,
 163:/usr/include/c++/11/bits/stl_deque.h **** 				   is_same<_Iter, iterator>>>
 164:/usr/include/c++/11/bits/stl_deque.h ****        _Deque_iterator(const _Iter& __x) noexcept
 165:/usr/include/c++/11/bits/stl_deque.h ****        : _M_cur(__x._M_cur), _M_first(__x._M_first),
 166:/usr/include/c++/11/bits/stl_deque.h **** 	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 167:/usr/include/c++/11/bits/stl_deque.h **** 
 168:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_iterator(const _Deque_iterator& __x) noexcept
 169:/usr/include/c++/11/bits/stl_deque.h ****        : _M_cur(__x._M_cur), _M_first(__x._M_first),
 170:/usr/include/c++/11/bits/stl_deque.h **** 	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 171:/usr/include/c++/11/bits/stl_deque.h **** 
 172:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_iterator& operator=(const _Deque_iterator&) = default;
 173:/usr/include/c++/11/bits/stl_deque.h **** #endif
 174:/usr/include/c++/11/bits/stl_deque.h **** 
 175:/usr/include/c++/11/bits/stl_deque.h ****       iterator
 176:/usr/include/c++/11/bits/stl_deque.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 177:/usr/include/c++/11/bits/stl_deque.h ****       { return iterator(_M_cur, _M_node); }
 178:/usr/include/c++/11/bits/stl_deque.h **** 
 179:/usr/include/c++/11/bits/stl_deque.h ****       reference
 180:/usr/include/c++/11/bits/stl_deque.h ****       operator*() const _GLIBCXX_NOEXCEPT
 181:/usr/include/c++/11/bits/stl_deque.h ****       { return *_M_cur; }
 182:/usr/include/c++/11/bits/stl_deque.h **** 
 183:/usr/include/c++/11/bits/stl_deque.h ****       pointer
 184:/usr/include/c++/11/bits/stl_deque.h ****       operator->() const _GLIBCXX_NOEXCEPT
 185:/usr/include/c++/11/bits/stl_deque.h ****       { return _M_cur; }
 186:/usr/include/c++/11/bits/stl_deque.h **** 
 187:/usr/include/c++/11/bits/stl_deque.h ****       _Self&
 188:/usr/include/c++/11/bits/stl_deque.h ****       operator++() _GLIBCXX_NOEXCEPT
 189:/usr/include/c++/11/bits/stl_deque.h ****       {
 190:/usr/include/c++/11/bits/stl_deque.h **** 	++_M_cur;
 191:/usr/include/c++/11/bits/stl_deque.h **** 	if (_M_cur == _M_last)
 192:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 193:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_set_node(_M_node + 1);
 194:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_cur = _M_first;
 195:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 196:/usr/include/c++/11/bits/stl_deque.h **** 	return *this;
 197:/usr/include/c++/11/bits/stl_deque.h ****       }
 198:/usr/include/c++/11/bits/stl_deque.h **** 
 199:/usr/include/c++/11/bits/stl_deque.h ****       _Self
 200:/usr/include/c++/11/bits/stl_deque.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 201:/usr/include/c++/11/bits/stl_deque.h ****       {
 202:/usr/include/c++/11/bits/stl_deque.h **** 	_Self __tmp = *this;
GAS LISTING x64lin/../common/event.s 			page 30


 203:/usr/include/c++/11/bits/stl_deque.h **** 	++*this;
 204:/usr/include/c++/11/bits/stl_deque.h **** 	return __tmp;
 205:/usr/include/c++/11/bits/stl_deque.h ****       }
 206:/usr/include/c++/11/bits/stl_deque.h **** 
 207:/usr/include/c++/11/bits/stl_deque.h ****       _Self&
 208:/usr/include/c++/11/bits/stl_deque.h ****       operator--() _GLIBCXX_NOEXCEPT
 209:/usr/include/c++/11/bits/stl_deque.h ****       {
 210:/usr/include/c++/11/bits/stl_deque.h **** 	if (_M_cur == _M_first)
 211:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 212:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_set_node(_M_node - 1);
 213:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_cur = _M_last;
 214:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 215:/usr/include/c++/11/bits/stl_deque.h **** 	--_M_cur;
 216:/usr/include/c++/11/bits/stl_deque.h **** 	return *this;
 217:/usr/include/c++/11/bits/stl_deque.h ****       }
 218:/usr/include/c++/11/bits/stl_deque.h **** 
 219:/usr/include/c++/11/bits/stl_deque.h ****       _Self
 220:/usr/include/c++/11/bits/stl_deque.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 221:/usr/include/c++/11/bits/stl_deque.h ****       {
 222:/usr/include/c++/11/bits/stl_deque.h **** 	_Self __tmp = *this;
 223:/usr/include/c++/11/bits/stl_deque.h **** 	--*this;
 224:/usr/include/c++/11/bits/stl_deque.h **** 	return __tmp;
 225:/usr/include/c++/11/bits/stl_deque.h ****       }
 226:/usr/include/c++/11/bits/stl_deque.h **** 
 227:/usr/include/c++/11/bits/stl_deque.h ****       _Self&
 228:/usr/include/c++/11/bits/stl_deque.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 229:/usr/include/c++/11/bits/stl_deque.h ****       {
 230:/usr/include/c++/11/bits/stl_deque.h **** 	const difference_type __offset = __n + (_M_cur - _M_first);
 231:/usr/include/c++/11/bits/stl_deque.h **** 	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 232:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_cur += __n;
 233:/usr/include/c++/11/bits/stl_deque.h **** 	else
 234:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 235:/usr/include/c++/11/bits/stl_deque.h **** 	    const difference_type __node_offset =
 236:/usr/include/c++/11/bits/stl_deque.h **** 	      __offset > 0 ? __offset / difference_type(_S_buffer_size())
 237:/usr/include/c++/11/bits/stl_deque.h **** 			   : -difference_type((-__offset - 1)
 238:/usr/include/c++/11/bits/stl_deque.h **** 					      / _S_buffer_size()) - 1;
 239:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 240:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_cur = _M_first + (__offset - __node_offset
 241:/usr/include/c++/11/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 242:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 243:/usr/include/c++/11/bits/stl_deque.h **** 	return *this;
 244:/usr/include/c++/11/bits/stl_deque.h ****       }
 245:/usr/include/c++/11/bits/stl_deque.h **** 
 246:/usr/include/c++/11/bits/stl_deque.h ****       _Self&
 247:/usr/include/c++/11/bits/stl_deque.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 248:/usr/include/c++/11/bits/stl_deque.h ****       { return *this += -__n; }
 249:/usr/include/c++/11/bits/stl_deque.h **** 
 250:/usr/include/c++/11/bits/stl_deque.h ****       reference
 251:/usr/include/c++/11/bits/stl_deque.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 252:/usr/include/c++/11/bits/stl_deque.h ****       { return *(*this + __n); }
 253:/usr/include/c++/11/bits/stl_deque.h **** 
 254:/usr/include/c++/11/bits/stl_deque.h ****       /**
 255:/usr/include/c++/11/bits/stl_deque.h ****        *  Prepares to traverse new_node.  Sets everything except
 256:/usr/include/c++/11/bits/stl_deque.h ****        *  _M_cur, which should therefore be set by the caller
 257:/usr/include/c++/11/bits/stl_deque.h ****        *  immediately afterwards, based on _M_first and _M_last.
 258:/usr/include/c++/11/bits/stl_deque.h ****        */
 259:/usr/include/c++/11/bits/stl_deque.h ****       void
GAS LISTING x64lin/../common/event.s 			page 31


 260:/usr/include/c++/11/bits/stl_deque.h ****       _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
 261:/usr/include/c++/11/bits/stl_deque.h ****       {
 262:/usr/include/c++/11/bits/stl_deque.h **** 	_M_node = __new_node;
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_first = *__new_node;
 264:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 265:/usr/include/c++/11/bits/stl_deque.h ****       }
 266:/usr/include/c++/11/bits/stl_deque.h **** 
 267:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 268:/usr/include/c++/11/bits/stl_deque.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 269:/usr/include/c++/11/bits/stl_deque.h ****       { return __x._M_cur == __y._M_cur; }
 270:/usr/include/c++/11/bits/stl_deque.h **** 
 271:/usr/include/c++/11/bits/stl_deque.h ****       // Note: we also provide overloads whose operands are of the same type in
 272:/usr/include/c++/11/bits/stl_deque.h ****       // order to avoid ambiguous overload resolution when std::rel_ops
 273:/usr/include/c++/11/bits/stl_deque.h ****       // operators are in scope (for additional details, see libstdc++/3628)
 274:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 275:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 276:/usr/include/c++/11/bits/stl_deque.h **** 	operator==(const _Self& __x,
 277:/usr/include/c++/11/bits/stl_deque.h **** 		   const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 278:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 279:/usr/include/c++/11/bits/stl_deque.h **** 	{ return __x._M_cur == __y._M_cur; }
 280:/usr/include/c++/11/bits/stl_deque.h **** 
 281:/usr/include/c++/11/bits/stl_deque.h **** #if __cpp_lib_three_way_comparison
 282:/usr/include/c++/11/bits/stl_deque.h ****       friend strong_ordering
 283:/usr/include/c++/11/bits/stl_deque.h ****       operator<=>(const _Self& __x, const _Self& __y) noexcept
 284:/usr/include/c++/11/bits/stl_deque.h ****       {
 285:/usr/include/c++/11/bits/stl_deque.h **** 	if (const auto __cmp = __x._M_node <=> __y._M_node; __cmp != 0)
 286:/usr/include/c++/11/bits/stl_deque.h **** 	  return __cmp;
 287:/usr/include/c++/11/bits/stl_deque.h **** 	return __x._M_cur <=> __y._M_cur;
 288:/usr/include/c++/11/bits/stl_deque.h ****       }
 289:/usr/include/c++/11/bits/stl_deque.h **** #else
 290:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 291:/usr/include/c++/11/bits/stl_deque.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 292:/usr/include/c++/11/bits/stl_deque.h ****       { return !(__x == __y); }
 293:/usr/include/c++/11/bits/stl_deque.h **** 
 294:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 295:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 296:/usr/include/c++/11/bits/stl_deque.h **** 	operator!=(const _Self& __x,
 297:/usr/include/c++/11/bits/stl_deque.h **** 		   const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 298:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 299:/usr/include/c++/11/bits/stl_deque.h **** 	{ return !(__x == __y); }
 300:/usr/include/c++/11/bits/stl_deque.h **** 
 301:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 302:/usr/include/c++/11/bits/stl_deque.h ****       operator<(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 303:/usr/include/c++/11/bits/stl_deque.h ****       {
 304:/usr/include/c++/11/bits/stl_deque.h **** 	return (__x._M_node == __y._M_node)
 305:/usr/include/c++/11/bits/stl_deque.h **** 	  ? (__x._M_cur < __y._M_cur) : (__x._M_node < __y._M_node);
 306:/usr/include/c++/11/bits/stl_deque.h ****       }
 307:/usr/include/c++/11/bits/stl_deque.h **** 
 308:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 309:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 310:/usr/include/c++/11/bits/stl_deque.h **** 	operator<(const _Self& __x,
 311:/usr/include/c++/11/bits/stl_deque.h **** 		  const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 312:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 313:/usr/include/c++/11/bits/stl_deque.h **** 	{
 314:/usr/include/c++/11/bits/stl_deque.h **** 	  return (__x._M_node == __y._M_node)
 315:/usr/include/c++/11/bits/stl_deque.h **** 	    ? (__x._M_cur < __y._M_cur) : (__x._M_node < __y._M_node);
 316:/usr/include/c++/11/bits/stl_deque.h **** 	}
GAS LISTING x64lin/../common/event.s 			page 32


 317:/usr/include/c++/11/bits/stl_deque.h **** 
 318:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 319:/usr/include/c++/11/bits/stl_deque.h ****       operator>(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 320:/usr/include/c++/11/bits/stl_deque.h ****       { return __y < __x; }
 321:/usr/include/c++/11/bits/stl_deque.h **** 
 322:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 323:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 324:/usr/include/c++/11/bits/stl_deque.h **** 	operator>(const _Self& __x,
 325:/usr/include/c++/11/bits/stl_deque.h **** 		  const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 326:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 327:/usr/include/c++/11/bits/stl_deque.h **** 	{ return __y < __x; }
 328:/usr/include/c++/11/bits/stl_deque.h **** 
 329:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 330:/usr/include/c++/11/bits/stl_deque.h ****       operator<=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 331:/usr/include/c++/11/bits/stl_deque.h ****       { return !(__y < __x); }
 332:/usr/include/c++/11/bits/stl_deque.h **** 
 333:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 334:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 335:/usr/include/c++/11/bits/stl_deque.h **** 	operator<=(const _Self& __x,
 336:/usr/include/c++/11/bits/stl_deque.h **** 		   const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 337:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 338:/usr/include/c++/11/bits/stl_deque.h **** 	{ return !(__y < __x); }
 339:/usr/include/c++/11/bits/stl_deque.h **** 
 340:/usr/include/c++/11/bits/stl_deque.h ****       friend bool
 341:/usr/include/c++/11/bits/stl_deque.h ****       operator>=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 342:/usr/include/c++/11/bits/stl_deque.h ****       { return !(__x < __y); }
 343:/usr/include/c++/11/bits/stl_deque.h **** 
 344:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 345:/usr/include/c++/11/bits/stl_deque.h **** 	friend bool
 346:/usr/include/c++/11/bits/stl_deque.h **** 	operator>=(const _Self& __x,
 347:/usr/include/c++/11/bits/stl_deque.h **** 		   const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 348:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 349:/usr/include/c++/11/bits/stl_deque.h **** 	{ return !(__x < __y); }
 350:/usr/include/c++/11/bits/stl_deque.h **** #endif // three-way comparison
 351:/usr/include/c++/11/bits/stl_deque.h **** 
 352:/usr/include/c++/11/bits/stl_deque.h ****       friend difference_type
 353:/usr/include/c++/11/bits/stl_deque.h ****       operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 354:/usr/include/c++/11/bits/stl_deque.h ****       {
 355:/usr/include/c++/11/bits/stl_deque.h **** 	return difference_type(_S_buffer_size())
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  * (__x._M_node - __y._M_node - bool(__x._M_node))
 357:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 358:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__y._M_last - __y._M_cur);
 359:/usr/include/c++/11/bits/stl_deque.h ****       }
 360:/usr/include/c++/11/bits/stl_deque.h **** 
 361:/usr/include/c++/11/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 362:/usr/include/c++/11/bits/stl_deque.h ****       // According to the resolution of DR179 not only the various comparison
 363:/usr/include/c++/11/bits/stl_deque.h ****       // operators but also operator- must accept mixed iterator/const_iterator
 364:/usr/include/c++/11/bits/stl_deque.h ****       // parameters.
 365:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _RefR, typename _PtrR>
 366:/usr/include/c++/11/bits/stl_deque.h **** 	friend difference_type
 367:/usr/include/c++/11/bits/stl_deque.h **** 	operator-(const _Self& __x,
 368:/usr/include/c++/11/bits/stl_deque.h **** 		  const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 369:/usr/include/c++/11/bits/stl_deque.h **** 	_GLIBCXX_NOEXCEPT
 370:/usr/include/c++/11/bits/stl_deque.h **** 	{
 371:/usr/include/c++/11/bits/stl_deque.h **** 	  return difference_type(_S_buffer_size())
 372:/usr/include/c++/11/bits/stl_deque.h **** 	    * (__x._M_node - __y._M_node - bool(__x._M_node))
 373:/usr/include/c++/11/bits/stl_deque.h **** 	    + (__x._M_cur - __x._M_first)
GAS LISTING x64lin/../common/event.s 			page 33


 374:/usr/include/c++/11/bits/stl_deque.h **** 	    + (__y._M_last - __y._M_cur);
 375:/usr/include/c++/11/bits/stl_deque.h **** 	}
 376:/usr/include/c++/11/bits/stl_deque.h **** 
 377:/usr/include/c++/11/bits/stl_deque.h ****       friend _Self
 378:/usr/include/c++/11/bits/stl_deque.h ****       operator+(const _Self& __x, difference_type __n) _GLIBCXX_NOEXCEPT
 379:/usr/include/c++/11/bits/stl_deque.h ****       {
 380:/usr/include/c++/11/bits/stl_deque.h **** 	_Self __tmp = __x;
 381:/usr/include/c++/11/bits/stl_deque.h **** 	__tmp += __n;
 382:/usr/include/c++/11/bits/stl_deque.h **** 	return __tmp;
 383:/usr/include/c++/11/bits/stl_deque.h ****       }
 384:/usr/include/c++/11/bits/stl_deque.h **** 
 385:/usr/include/c++/11/bits/stl_deque.h ****       friend _Self
 386:/usr/include/c++/11/bits/stl_deque.h ****       operator-(const _Self& __x, difference_type __n) _GLIBCXX_NOEXCEPT
 387:/usr/include/c++/11/bits/stl_deque.h ****       {
 388:/usr/include/c++/11/bits/stl_deque.h **** 	_Self __tmp = __x;
 389:/usr/include/c++/11/bits/stl_deque.h **** 	__tmp -= __n;
 390:/usr/include/c++/11/bits/stl_deque.h **** 	return __tmp;
 391:/usr/include/c++/11/bits/stl_deque.h ****       }
 392:/usr/include/c++/11/bits/stl_deque.h **** 
 393:/usr/include/c++/11/bits/stl_deque.h ****       friend _Self
 394:/usr/include/c++/11/bits/stl_deque.h ****       operator+(difference_type __n, const _Self& __x) _GLIBCXX_NOEXCEPT
 395:/usr/include/c++/11/bits/stl_deque.h ****       { return __x + __n; }
 396:/usr/include/c++/11/bits/stl_deque.h ****     };
 397:/usr/include/c++/11/bits/stl_deque.h **** 
 398:/usr/include/c++/11/bits/stl_deque.h ****   /**
 399:/usr/include/c++/11/bits/stl_deque.h ****    *  Deque base class.  This class provides the unified face for %deque's
 400:/usr/include/c++/11/bits/stl_deque.h ****    *  allocation.  This class's constructor and destructor allocate and
 401:/usr/include/c++/11/bits/stl_deque.h ****    *  deallocate (but do not initialize) storage.  This makes %exception
 402:/usr/include/c++/11/bits/stl_deque.h ****    *  safety easier.
 403:/usr/include/c++/11/bits/stl_deque.h ****    *
 404:/usr/include/c++/11/bits/stl_deque.h ****    *  Nothing in this class ever constructs or destroys an actual Tp element.
 405:/usr/include/c++/11/bits/stl_deque.h ****    *  (Deque handles that itself.)  Only/All memory management is performed
 406:/usr/include/c++/11/bits/stl_deque.h ****    *  here.
 407:/usr/include/c++/11/bits/stl_deque.h ****   */
 408:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 409:/usr/include/c++/11/bits/stl_deque.h ****     class _Deque_base
 410:/usr/include/c++/11/bits/stl_deque.h ****     {
 411:/usr/include/c++/11/bits/stl_deque.h ****     protected:
 412:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 413:/usr/include/c++/11/bits/stl_deque.h **** 	rebind<_Tp>::other _Tp_alloc_type;
 414:/usr/include/c++/11/bits/stl_deque.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	 _Alloc_traits;
 415:/usr/include/c++/11/bits/stl_deque.h **** 
 416:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
 417:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Tp*					_Ptr;
 418:/usr/include/c++/11/bits/stl_deque.h ****       typedef const _Tp*				_Ptr_const;
 419:/usr/include/c++/11/bits/stl_deque.h **** #else
 420:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::pointer		_Ptr;
 421:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_pointer	_Ptr_const;
 422:/usr/include/c++/11/bits/stl_deque.h **** #endif
 423:/usr/include/c++/11/bits/stl_deque.h **** 
 424:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::template rebind<_Ptr>::other
 425:/usr/include/c++/11/bits/stl_deque.h **** 	_Map_alloc_type;
 426:/usr/include/c++/11/bits/stl_deque.h ****       typedef __gnu_cxx::__alloc_traits<_Map_alloc_type> _Map_alloc_traits;
 427:/usr/include/c++/11/bits/stl_deque.h **** 
 428:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Alloc		  allocator_type;
 429:/usr/include/c++/11/bits/stl_deque.h **** 
 430:/usr/include/c++/11/bits/stl_deque.h ****       allocator_type
GAS LISTING x64lin/../common/event.s 			page 34


 431:/usr/include/c++/11/bits/stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 432:/usr/include/c++/11/bits/stl_deque.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 433:/usr/include/c++/11/bits/stl_deque.h **** 
 434:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Ptr>	  iterator;
 435:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, _Ptr_const>   const_iterator;
 436:/usr/include/c++/11/bits/stl_deque.h **** 
 437:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base()
 438:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl()
 439:/usr/include/c++/11/bits/stl_deque.h ****       { _M_initialize_map(0); }
 440:/usr/include/c++/11/bits/stl_deque.h **** 
 441:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(size_t __num_elements)
 442:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl()
 443:/usr/include/c++/11/bits/stl_deque.h ****       { _M_initialize_map(__num_elements); }
 444:/usr/include/c++/11/bits/stl_deque.h **** 
 445:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(const allocator_type& __a, size_t __num_elements)
 446:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl(__a)
 447:/usr/include/c++/11/bits/stl_deque.h ****       { _M_initialize_map(__num_elements); }
 448:/usr/include/c++/11/bits/stl_deque.h **** 
 449:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(const allocator_type& __a)
 450:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl(__a)
 451:/usr/include/c++/11/bits/stl_deque.h ****       { /* Caller must initialize map. */ }
 452:/usr/include/c++/11/bits/stl_deque.h **** 
 453:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 454:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x)
 455:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 456:/usr/include/c++/11/bits/stl_deque.h ****       {
 457:/usr/include/c++/11/bits/stl_deque.h **** 	_M_initialize_map(0);
 458:/usr/include/c++/11/bits/stl_deque.h **** 	if (__x._M_impl._M_map)
 459:/usr/include/c++/11/bits/stl_deque.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 460:/usr/include/c++/11/bits/stl_deque.h ****       }
 461:/usr/include/c++/11/bits/stl_deque.h **** 
 462:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x, const allocator_type& __a)
 463:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl(std::move(__x._M_impl), _Tp_alloc_type(__a))
 464:/usr/include/c++/11/bits/stl_deque.h ****       { __x._M_initialize_map(0); }
 465:/usr/include/c++/11/bits/stl_deque.h **** 
 466:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x, const allocator_type& __a, size_t __n)
 467:/usr/include/c++/11/bits/stl_deque.h ****       : _M_impl(__a)
 468:/usr/include/c++/11/bits/stl_deque.h ****       {
 469:/usr/include/c++/11/bits/stl_deque.h **** 	if (__x.get_allocator() == __a)
 470:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 471:/usr/include/c++/11/bits/stl_deque.h **** 	    if (__x._M_impl._M_map)
 472:/usr/include/c++/11/bits/stl_deque.h **** 	      {
 473:/usr/include/c++/11/bits/stl_deque.h **** 		_M_initialize_map(0);
 474:/usr/include/c++/11/bits/stl_deque.h **** 		this->_M_impl._M_swap_data(__x._M_impl);
 475:/usr/include/c++/11/bits/stl_deque.h **** 	      }
 476:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 477:/usr/include/c++/11/bits/stl_deque.h **** 	else
 478:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 479:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_initialize_map(__n);
 480:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 481:/usr/include/c++/11/bits/stl_deque.h ****       }
 482:/usr/include/c++/11/bits/stl_deque.h **** #endif
 483:/usr/include/c++/11/bits/stl_deque.h **** 
 484:/usr/include/c++/11/bits/stl_deque.h ****       ~_Deque_base() _GLIBCXX_NOEXCEPT;
 485:/usr/include/c++/11/bits/stl_deque.h **** 
 486:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename iterator::_Map_pointer _Map_pointer;
 487:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 35


 488:/usr/include/c++/11/bits/stl_deque.h ****       struct _Deque_impl_data
 489:/usr/include/c++/11/bits/stl_deque.h ****       {
 490:/usr/include/c++/11/bits/stl_deque.h **** 	_Map_pointer _M_map;
 491:/usr/include/c++/11/bits/stl_deque.h **** 	size_t _M_map_size;
 492:/usr/include/c++/11/bits/stl_deque.h **** 	iterator _M_start;
 493:/usr/include/c++/11/bits/stl_deque.h **** 	iterator _M_finish;
 494:/usr/include/c++/11/bits/stl_deque.h **** 
 495:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl_data() _GLIBCXX_NOEXCEPT
 496:/usr/include/c++/11/bits/stl_deque.h **** 	: _M_map(), _M_map_size(), _M_start(), _M_finish()
 497:/usr/include/c++/11/bits/stl_deque.h **** 	{ }
 498:/usr/include/c++/11/bits/stl_deque.h **** 
 499:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 500:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl_data(const _Deque_impl_data&) = default;
 501:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl_data&
 502:/usr/include/c++/11/bits/stl_deque.h **** 	operator=(const _Deque_impl_data&) = default;
 503:/usr/include/c++/11/bits/stl_deque.h **** 
 504:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl_data(_Deque_impl_data&& __x) noexcept
 505:/usr/include/c++/11/bits/stl_deque.h **** 	: _Deque_impl_data(__x)
 506:/usr/include/c++/11/bits/stl_deque.h **** 	{ __x = _Deque_impl_data(); }
 507:/usr/include/c++/11/bits/stl_deque.h **** #endif
 508:/usr/include/c++/11/bits/stl_deque.h **** 
 509:/usr/include/c++/11/bits/stl_deque.h **** 	void
 510:/usr/include/c++/11/bits/stl_deque.h **** 	_M_swap_data(_Deque_impl_data& __x) _GLIBCXX_NOEXCEPT
 511:/usr/include/c++/11/bits/stl_deque.h **** 	{
 512:/usr/include/c++/11/bits/stl_deque.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 513:/usr/include/c++/11/bits/stl_deque.h **** 	  // information used by TBAA.
 514:/usr/include/c++/11/bits/stl_deque.h **** 	  std::swap(*this, __x);
 515:/usr/include/c++/11/bits/stl_deque.h **** 	}
 516:/usr/include/c++/11/bits/stl_deque.h ****       };
 517:/usr/include/c++/11/bits/stl_deque.h **** 
 518:/usr/include/c++/11/bits/stl_deque.h ****       // This struct encapsulates the implementation of the std::deque
 519:/usr/include/c++/11/bits/stl_deque.h ****       // standard container and at the same time makes use of the EBO
 520:/usr/include/c++/11/bits/stl_deque.h ****       // for empty allocators.
 521:/usr/include/c++/11/bits/stl_deque.h ****       struct _Deque_impl
 522:/usr/include/c++/11/bits/stl_deque.h ****       : public _Tp_alloc_type, public _Deque_impl_data
 523:/usr/include/c++/11/bits/stl_deque.h ****       {
 524:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
 525:/usr/include/c++/11/bits/stl_deque.h **** 	  is_nothrow_default_constructible<_Tp_alloc_type>::value)
 526:/usr/include/c++/11/bits/stl_deque.h **** 	: _Tp_alloc_type()
 527:/usr/include/c++/11/bits/stl_deque.h **** 	{ }
 528:/usr/include/c++/11/bits/stl_deque.h **** 
 529:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 530:/usr/include/c++/11/bits/stl_deque.h **** 	: _Tp_alloc_type(__a)
 531:/usr/include/c++/11/bits/stl_deque.h **** 	{ }
 532:/usr/include/c++/11/bits/stl_deque.h **** 
 533:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 534:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl(_Deque_impl&&) = default;
 535:/usr/include/c++/11/bits/stl_deque.h **** 
 536:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl(_Tp_alloc_type&& __a) noexcept
 537:/usr/include/c++/11/bits/stl_deque.h **** 	: _Tp_alloc_type(std::move(__a))
 538:/usr/include/c++/11/bits/stl_deque.h **** 	{ }
 539:/usr/include/c++/11/bits/stl_deque.h **** 
 540:/usr/include/c++/11/bits/stl_deque.h **** 	_Deque_impl(_Deque_impl&& __d, _Tp_alloc_type&& __a)
 541:/usr/include/c++/11/bits/stl_deque.h **** 	: _Tp_alloc_type(std::move(__a)), _Deque_impl_data(std::move(__d))
 542:/usr/include/c++/11/bits/stl_deque.h **** 	{ }
 543:/usr/include/c++/11/bits/stl_deque.h **** #endif
 544:/usr/include/c++/11/bits/stl_deque.h ****       };
GAS LISTING x64lin/../common/event.s 			page 36


 545:/usr/include/c++/11/bits/stl_deque.h **** 
 546:/usr/include/c++/11/bits/stl_deque.h ****       _Tp_alloc_type&
 547:/usr/include/c++/11/bits/stl_deque.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl; }
 549:/usr/include/c++/11/bits/stl_deque.h **** 
 550:/usr/include/c++/11/bits/stl_deque.h ****       const _Tp_alloc_type&
 551:/usr/include/c++/11/bits/stl_deque.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 552:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl; }
 553:/usr/include/c++/11/bits/stl_deque.h **** 
 554:/usr/include/c++/11/bits/stl_deque.h ****       _Map_alloc_type
 555:/usr/include/c++/11/bits/stl_deque.h ****       _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 556:/usr/include/c++/11/bits/stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 557:/usr/include/c++/11/bits/stl_deque.h **** 
 558:/usr/include/c++/11/bits/stl_deque.h ****       _Ptr
 559:/usr/include/c++/11/bits/stl_deque.h ****       _M_allocate_node()
 560:/usr/include/c++/11/bits/stl_deque.h ****       {
 561:/usr/include/c++/11/bits/stl_deque.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
 562:/usr/include/c++/11/bits/stl_deque.h **** 	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
 563:/usr/include/c++/11/bits/stl_deque.h ****       }
 564:/usr/include/c++/11/bits/stl_deque.h **** 
 565:/usr/include/c++/11/bits/stl_deque.h ****       void
 566:/usr/include/c++/11/bits/stl_deque.h ****       _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
 567:/usr/include/c++/11/bits/stl_deque.h ****       {
 568:/usr/include/c++/11/bits/stl_deque.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
 569:/usr/include/c++/11/bits/stl_deque.h **** 	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
 570:/usr/include/c++/11/bits/stl_deque.h ****       }
 571:/usr/include/c++/11/bits/stl_deque.h **** 
 572:/usr/include/c++/11/bits/stl_deque.h ****       _Map_pointer
 573:/usr/include/c++/11/bits/stl_deque.h ****       _M_allocate_map(size_t __n)
 574:/usr/include/c++/11/bits/stl_deque.h ****       {
 575:/usr/include/c++/11/bits/stl_deque.h **** 	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 576:/usr/include/c++/11/bits/stl_deque.h **** 	return _Map_alloc_traits::allocate(__map_alloc, __n);
 577:/usr/include/c++/11/bits/stl_deque.h ****       }
 578:/usr/include/c++/11/bits/stl_deque.h **** 
 579:/usr/include/c++/11/bits/stl_deque.h ****       void
 580:/usr/include/c++/11/bits/stl_deque.h ****       _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
 581:/usr/include/c++/11/bits/stl_deque.h ****       {
 582:/usr/include/c++/11/bits/stl_deque.h **** 	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 583:/usr/include/c++/11/bits/stl_deque.h **** 	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
 584:/usr/include/c++/11/bits/stl_deque.h ****       }
 585:/usr/include/c++/11/bits/stl_deque.h **** 
 586:/usr/include/c++/11/bits/stl_deque.h ****       void _M_initialize_map(size_t);
 587:/usr/include/c++/11/bits/stl_deque.h ****       void _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish);
 588:/usr/include/c++/11/bits/stl_deque.h ****       void _M_destroy_nodes(_Map_pointer __nstart,
 589:/usr/include/c++/11/bits/stl_deque.h **** 			    _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT;
 590:/usr/include/c++/11/bits/stl_deque.h ****       enum { _S_initial_map_size = 8 };
 591:/usr/include/c++/11/bits/stl_deque.h **** 
 592:/usr/include/c++/11/bits/stl_deque.h ****       _Deque_impl _M_impl;
 593:/usr/include/c++/11/bits/stl_deque.h ****     };
 594:/usr/include/c++/11/bits/stl_deque.h **** 
 595:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 596:/usr/include/c++/11/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 597:/usr/include/c++/11/bits/stl_deque.h ****     ~_Deque_base() _GLIBCXX_NOEXCEPT
 598:/usr/include/c++/11/bits/stl_deque.h ****     {
 599:/usr/include/c++/11/bits/stl_deque.h ****       if (this->_M_impl._M_map)
 600:/usr/include/c++/11/bits/stl_deque.h **** 	{
 601:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
GAS LISTING x64lin/../common/event.s 			page 37


 602:/usr/include/c++/11/bits/stl_deque.h **** 			   this->_M_impl._M_finish._M_node + 1);
 603:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 604:/usr/include/c++/11/bits/stl_deque.h **** 	}
 605:/usr/include/c++/11/bits/stl_deque.h ****     }
 606:/usr/include/c++/11/bits/stl_deque.h **** 
 607:/usr/include/c++/11/bits/stl_deque.h ****   /**
 608:/usr/include/c++/11/bits/stl_deque.h ****    *  @brief Layout storage.
 609:/usr/include/c++/11/bits/stl_deque.h ****    *  @param  __num_elements  The count of T's for which to allocate space
 610:/usr/include/c++/11/bits/stl_deque.h ****    *                          at first.
 611:/usr/include/c++/11/bits/stl_deque.h ****    *  @return   Nothing.
 612:/usr/include/c++/11/bits/stl_deque.h ****    *
 613:/usr/include/c++/11/bits/stl_deque.h ****    *  The initial underlying memory layout is a bit complicated...
 614:/usr/include/c++/11/bits/stl_deque.h ****   */
 615:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 616:/usr/include/c++/11/bits/stl_deque.h ****     void
 617:/usr/include/c++/11/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 618:/usr/include/c++/11/bits/stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 619:/usr/include/c++/11/bits/stl_deque.h ****     {
 620:/usr/include/c++/11/bits/stl_deque.h ****       const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
 621:/usr/include/c++/11/bits/stl_deque.h **** 				  + 1);
 622:/usr/include/c++/11/bits/stl_deque.h **** 
 623:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 624:/usr/include/c++/11/bits/stl_deque.h **** 					   size_t(__num_nodes + 2));
 625:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 626:/usr/include/c++/11/bits/stl_deque.h **** 
 627:/usr/include/c++/11/bits/stl_deque.h ****       // For "small" maps (needing less than _M_map_size nodes), allocation
 628:/usr/include/c++/11/bits/stl_deque.h ****       // starts in the middle elements and grows outwards.  So nstart may be
 629:/usr/include/c++/11/bits/stl_deque.h ****       // the beginning of _M_map, but for small maps it may be as far in as
 630:/usr/include/c++/11/bits/stl_deque.h ****       // _M_map+3.
 631:/usr/include/c++/11/bits/stl_deque.h **** 
 632:/usr/include/c++/11/bits/stl_deque.h ****       _Map_pointer __nstart = (this->_M_impl._M_map
 633:/usr/include/c++/11/bits/stl_deque.h **** 			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 634:/usr/include/c++/11/bits/stl_deque.h ****       _Map_pointer __nfinish = __nstart + __num_nodes;
 635:/usr/include/c++/11/bits/stl_deque.h **** 
 636:/usr/include/c++/11/bits/stl_deque.h ****       __try
 637:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_create_nodes(__nstart, __nfinish); }
 638:/usr/include/c++/11/bits/stl_deque.h ****       __catch(...)
 639:/usr/include/c++/11/bits/stl_deque.h **** 	{
 640:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 641:/usr/include/c++/11/bits/stl_deque.h **** 	  this->_M_impl._M_map = _Map_pointer();
 642:/usr/include/c++/11/bits/stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 643:/usr/include/c++/11/bits/stl_deque.h **** 	  __throw_exception_again;
 644:/usr/include/c++/11/bits/stl_deque.h **** 	}
 645:/usr/include/c++/11/bits/stl_deque.h **** 
 646:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_start._M_set_node(__nstart);
 647:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 648:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 649:/usr/include/c++/11/bits/stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 650:/usr/include/c++/11/bits/stl_deque.h **** 					+ __num_elements
 651:/usr/include/c++/11/bits/stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 652:/usr/include/c++/11/bits/stl_deque.h ****     }
 653:/usr/include/c++/11/bits/stl_deque.h **** 
 654:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 655:/usr/include/c++/11/bits/stl_deque.h ****     void
 656:/usr/include/c++/11/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 657:/usr/include/c++/11/bits/stl_deque.h ****     _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish)
 658:/usr/include/c++/11/bits/stl_deque.h ****     {
GAS LISTING x64lin/../common/event.s 			page 38


 659:/usr/include/c++/11/bits/stl_deque.h ****       _Map_pointer __cur;
 660:/usr/include/c++/11/bits/stl_deque.h ****       __try
 661:/usr/include/c++/11/bits/stl_deque.h **** 	{
 662:/usr/include/c++/11/bits/stl_deque.h **** 	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 663:/usr/include/c++/11/bits/stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 664:/usr/include/c++/11/bits/stl_deque.h **** 	}
 665:/usr/include/c++/11/bits/stl_deque.h ****       __catch(...)
 666:/usr/include/c++/11/bits/stl_deque.h **** 	{
 667:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_destroy_nodes(__nstart, __cur);
 668:/usr/include/c++/11/bits/stl_deque.h **** 	  __throw_exception_again;
 669:/usr/include/c++/11/bits/stl_deque.h **** 	}
 670:/usr/include/c++/11/bits/stl_deque.h ****     }
 671:/usr/include/c++/11/bits/stl_deque.h **** 
 672:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 673:/usr/include/c++/11/bits/stl_deque.h ****     void
 674:/usr/include/c++/11/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 675:/usr/include/c++/11/bits/stl_deque.h ****     _M_destroy_nodes(_Map_pointer __nstart,
 676:/usr/include/c++/11/bits/stl_deque.h **** 		     _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT
 677:/usr/include/c++/11/bits/stl_deque.h ****     {
 678:/usr/include/c++/11/bits/stl_deque.h ****       for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 679:/usr/include/c++/11/bits/stl_deque.h **** 	_M_deallocate_node(*__n);
 680:/usr/include/c++/11/bits/stl_deque.h ****     }
 681:/usr/include/c++/11/bits/stl_deque.h **** 
 682:/usr/include/c++/11/bits/stl_deque.h ****   /**
 683:/usr/include/c++/11/bits/stl_deque.h ****    *  @brief  A standard container using fixed-size memory allocation and
 684:/usr/include/c++/11/bits/stl_deque.h ****    *  constant-time manipulation of elements at either end.
 685:/usr/include/c++/11/bits/stl_deque.h ****    *
 686:/usr/include/c++/11/bits/stl_deque.h ****    *  @ingroup sequences
 687:/usr/include/c++/11/bits/stl_deque.h ****    *
 688:/usr/include/c++/11/bits/stl_deque.h ****    *  @tparam _Tp  Type of element.
 689:/usr/include/c++/11/bits/stl_deque.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 690:/usr/include/c++/11/bits/stl_deque.h ****    *
 691:/usr/include/c++/11/bits/stl_deque.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 692:/usr/include/c++/11/bits/stl_deque.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 693:/usr/include/c++/11/bits/stl_deque.h ****    *  <a href="tables.html#67">sequence</a>, including the
 694:/usr/include/c++/11/bits/stl_deque.h ****    *  <a href="tables.html#68">optional sequence requirements</a>.
 695:/usr/include/c++/11/bits/stl_deque.h ****    *
 696:/usr/include/c++/11/bits/stl_deque.h ****    *  In previous HP/SGI versions of deque, there was an extra template
 697:/usr/include/c++/11/bits/stl_deque.h ****    *  parameter so users could control the node size.  This extension turned
 698:/usr/include/c++/11/bits/stl_deque.h ****    *  out to violate the C++ standard (it can be detected using template
 699:/usr/include/c++/11/bits/stl_deque.h ****    *  template parameters), and it was removed.
 700:/usr/include/c++/11/bits/stl_deque.h ****    *
 701:/usr/include/c++/11/bits/stl_deque.h ****    *  Here's how a deque<Tp> manages memory.  Each deque has 4 members:
 702:/usr/include/c++/11/bits/stl_deque.h ****    *
 703:/usr/include/c++/11/bits/stl_deque.h ****    *  - Tp**        _M_map
 704:/usr/include/c++/11/bits/stl_deque.h ****    *  - size_t      _M_map_size
 705:/usr/include/c++/11/bits/stl_deque.h ****    *  - iterator    _M_start, _M_finish
 706:/usr/include/c++/11/bits/stl_deque.h ****    *
 707:/usr/include/c++/11/bits/stl_deque.h ****    *  map_size is at least 8.  %map is an array of map_size
 708:/usr/include/c++/11/bits/stl_deque.h ****    *  pointers-to-@a nodes.  (The name %map has nothing to do with the
 709:/usr/include/c++/11/bits/stl_deque.h ****    *  std::map class, and @b nodes should not be confused with
 710:/usr/include/c++/11/bits/stl_deque.h ****    *  std::list's usage of @a node.)
 711:/usr/include/c++/11/bits/stl_deque.h ****    *
 712:/usr/include/c++/11/bits/stl_deque.h ****    *  A @a node has no specific type name as such, but it is referred
 713:/usr/include/c++/11/bits/stl_deque.h ****    *  to as @a node in this file.  It is a simple array-of-Tp.  If Tp
 714:/usr/include/c++/11/bits/stl_deque.h ****    *  is very large, there will be one Tp element per node (i.e., an
 715:/usr/include/c++/11/bits/stl_deque.h ****    *  @a array of one).  For non-huge Tp's, node size is inversely
GAS LISTING x64lin/../common/event.s 			page 39


 716:/usr/include/c++/11/bits/stl_deque.h ****    *  related to Tp size: the larger the Tp, the fewer Tp's will fit
 717:/usr/include/c++/11/bits/stl_deque.h ****    *  in a node.  The goal here is to keep the total size of a node
 718:/usr/include/c++/11/bits/stl_deque.h ****    *  relatively small and constant over different Tp's, to improve
 719:/usr/include/c++/11/bits/stl_deque.h ****    *  allocator efficiency.
 720:/usr/include/c++/11/bits/stl_deque.h ****    *
 721:/usr/include/c++/11/bits/stl_deque.h ****    *  Not every pointer in the %map array will point to a node.  If
 722:/usr/include/c++/11/bits/stl_deque.h ****    *  the initial number of elements in the deque is small, the
 723:/usr/include/c++/11/bits/stl_deque.h ****    *  /middle/ %map pointers will be valid, and the ones at the edges
 724:/usr/include/c++/11/bits/stl_deque.h ****    *  will be unused.  This same situation will arise as the %map
 725:/usr/include/c++/11/bits/stl_deque.h ****    *  grows: available %map pointers, if any, will be on the ends.  As
 726:/usr/include/c++/11/bits/stl_deque.h ****    *  new nodes are created, only a subset of the %map's pointers need
 727:/usr/include/c++/11/bits/stl_deque.h ****    *  to be copied @a outward.
 728:/usr/include/c++/11/bits/stl_deque.h ****    *
 729:/usr/include/c++/11/bits/stl_deque.h ****    *  Class invariants:
 730:/usr/include/c++/11/bits/stl_deque.h ****    * - For any nonsingular iterator i:
 731:/usr/include/c++/11/bits/stl_deque.h ****    *    - i.node points to a member of the %map array.  (Yes, you read that
 732:/usr/include/c++/11/bits/stl_deque.h ****    *      correctly:  i.node does not actually point to a node.)  The member of
 733:/usr/include/c++/11/bits/stl_deque.h ****    *      the %map array is what actually points to the node.
 734:/usr/include/c++/11/bits/stl_deque.h ****    *    - i.first == *(i.node)    (This points to the node (first Tp element).)
 735:/usr/include/c++/11/bits/stl_deque.h ****    *    - i.last  == i.first + node_size
 736:/usr/include/c++/11/bits/stl_deque.h ****    *    - i.cur is a pointer in the range [i.first, i.last).  NOTE:
 737:/usr/include/c++/11/bits/stl_deque.h ****    *      the implication of this is that i.cur is always a dereferenceable
 738:/usr/include/c++/11/bits/stl_deque.h ****    *      pointer, even if i is a past-the-end iterator.
 739:/usr/include/c++/11/bits/stl_deque.h ****    * - Start and Finish are always nonsingular iterators.  NOTE: this
 740:/usr/include/c++/11/bits/stl_deque.h ****    * means that an empty deque must have one node, a deque with <N
 741:/usr/include/c++/11/bits/stl_deque.h ****    * elements (where N is the node buffer size) must have one node, a
 742:/usr/include/c++/11/bits/stl_deque.h ****    * deque with N through (2N-1) elements must have two nodes, etc.
 743:/usr/include/c++/11/bits/stl_deque.h ****    * - For every node other than start.node and finish.node, every
 744:/usr/include/c++/11/bits/stl_deque.h ****    * element in the node is an initialized object.  If start.node ==
 745:/usr/include/c++/11/bits/stl_deque.h ****    * finish.node, then [start.cur, finish.cur) are initialized
 746:/usr/include/c++/11/bits/stl_deque.h ****    * objects, and the elements outside that range are uninitialized
 747:/usr/include/c++/11/bits/stl_deque.h ****    * storage.  Otherwise, [start.cur, start.last) and [finish.first,
 748:/usr/include/c++/11/bits/stl_deque.h ****    * finish.cur) are initialized objects, and [start.first, start.cur)
 749:/usr/include/c++/11/bits/stl_deque.h ****    * and [finish.cur, finish.last) are uninitialized storage.
 750:/usr/include/c++/11/bits/stl_deque.h ****    * - [%map, %map + map_size) is a valid, non-empty range.
 751:/usr/include/c++/11/bits/stl_deque.h ****    * - [start.node, finish.node] is a valid range contained within
 752:/usr/include/c++/11/bits/stl_deque.h ****    *   [%map, %map + map_size).
 753:/usr/include/c++/11/bits/stl_deque.h ****    * - A pointer in the range [%map, %map + map_size) points to an allocated
 754:/usr/include/c++/11/bits/stl_deque.h ****    *   node if and only if the pointer is in the range
 755:/usr/include/c++/11/bits/stl_deque.h ****    *   [start.node, finish.node].
 756:/usr/include/c++/11/bits/stl_deque.h ****    *
 757:/usr/include/c++/11/bits/stl_deque.h ****    *  Here's the magic:  nothing in deque is @b aware of the discontiguous
 758:/usr/include/c++/11/bits/stl_deque.h ****    *  storage!
 759:/usr/include/c++/11/bits/stl_deque.h ****    *
 760:/usr/include/c++/11/bits/stl_deque.h ****    *  The memory setup and layout occurs in the parent, _Base, and the iterator
 761:/usr/include/c++/11/bits/stl_deque.h ****    *  class is entirely responsible for @a leaping from one node to the next.
 762:/usr/include/c++/11/bits/stl_deque.h ****    *  All the implementation routines for deque itself work only through the
 763:/usr/include/c++/11/bits/stl_deque.h ****    *  start and finish iterators.  This keeps the routines simple and sane,
 764:/usr/include/c++/11/bits/stl_deque.h ****    *  and we can use other standard algorithms as well.
 765:/usr/include/c++/11/bits/stl_deque.h ****   */
 766:/usr/include/c++/11/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 767:/usr/include/c++/11/bits/stl_deque.h ****     class deque : protected _Deque_base<_Tp, _Alloc>
 768:/usr/include/c++/11/bits/stl_deque.h ****     {
 769:/usr/include/c++/11/bits/stl_deque.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 770:/usr/include/c++/11/bits/stl_deque.h ****       // concept requirements
 771:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc::value_type	_Alloc_value_type;
 772:/usr/include/c++/11/bits/stl_deque.h **** # if __cplusplus < 201103L
GAS LISTING x64lin/../common/event.s 			page 40


 773:/usr/include/c++/11/bits/stl_deque.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 774:/usr/include/c++/11/bits/stl_deque.h **** # endif
 775:/usr/include/c++/11/bits/stl_deque.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 776:/usr/include/c++/11/bits/stl_deque.h **** #endif
 777:/usr/include/c++/11/bits/stl_deque.h **** 
 778:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 779:/usr/include/c++/11/bits/stl_deque.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 780:/usr/include/c++/11/bits/stl_deque.h **** 	  "std::deque must have a non-const, non-volatile value_type");
 781:/usr/include/c++/11/bits/stl_deque.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 782:/usr/include/c++/11/bits/stl_deque.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 783:/usr/include/c++/11/bits/stl_deque.h **** 	  "std::deque must have the same value_type as its allocator");
 784:/usr/include/c++/11/bits/stl_deque.h **** # endif
 785:/usr/include/c++/11/bits/stl_deque.h **** #endif
 786:/usr/include/c++/11/bits/stl_deque.h **** 
 787:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Deque_base<_Tp, _Alloc>			_Base;
 788:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 789:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Base::_Alloc_traits		_Alloc_traits;
 790:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Base::_Map_pointer		_Map_pointer;
 791:/usr/include/c++/11/bits/stl_deque.h **** 
 792:/usr/include/c++/11/bits/stl_deque.h ****     public:
 793:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Tp					value_type;
 794:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::pointer		pointer;
 795:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 796:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::reference		reference;
 797:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 798:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Base::iterator			iterator;
 799:/usr/include/c++/11/bits/stl_deque.h ****       typedef typename _Base::const_iterator		const_iterator;
 800:/usr/include/c++/11/bits/stl_deque.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 801:/usr/include/c++/11/bits/stl_deque.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 802:/usr/include/c++/11/bits/stl_deque.h ****       typedef size_t					size_type;
 803:/usr/include/c++/11/bits/stl_deque.h ****       typedef ptrdiff_t					difference_type;
 804:/usr/include/c++/11/bits/stl_deque.h ****       typedef _Alloc					allocator_type;
 805:/usr/include/c++/11/bits/stl_deque.h **** 
 806:/usr/include/c++/11/bits/stl_deque.h ****     private:
 807:/usr/include/c++/11/bits/stl_deque.h ****       static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 808:/usr/include/c++/11/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 809:/usr/include/c++/11/bits/stl_deque.h **** 
 810:/usr/include/c++/11/bits/stl_deque.h ****       // Functions controlling memory layout, and nothing else.
 811:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_initialize_map;
 812:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_create_nodes;
 813:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_destroy_nodes;
 814:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_allocate_node;
 815:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_deallocate_node;
 816:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_allocate_map;
 817:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_deallocate_map;
 818:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_get_Tp_allocator;
 819:/usr/include/c++/11/bits/stl_deque.h **** 
 820:/usr/include/c++/11/bits/stl_deque.h ****       /**
 821:/usr/include/c++/11/bits/stl_deque.h ****        *  A total of four data members accumulated down the hierarchy.
 822:/usr/include/c++/11/bits/stl_deque.h ****        *  May be accessed via _M_impl.*
 823:/usr/include/c++/11/bits/stl_deque.h ****        */
 824:/usr/include/c++/11/bits/stl_deque.h ****       using _Base::_M_impl;
 825:/usr/include/c++/11/bits/stl_deque.h **** 
 826:/usr/include/c++/11/bits/stl_deque.h ****     public:
 827:/usr/include/c++/11/bits/stl_deque.h ****       // [23.2.1.1] construct/copy/destroy
 828:/usr/include/c++/11/bits/stl_deque.h ****       // (assign() and get_allocator() are also listed in this section)
 829:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 41


 830:/usr/include/c++/11/bits/stl_deque.h ****       /**
 831:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Creates a %deque with no elements.
 832:/usr/include/c++/11/bits/stl_deque.h ****        */
 833:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 834:/usr/include/c++/11/bits/stl_deque.h ****       deque() = default;
 835:/usr/include/c++/11/bits/stl_deque.h **** #else
 836:/usr/include/c++/11/bits/stl_deque.h ****       deque() { }
 837:/usr/include/c++/11/bits/stl_deque.h **** #endif
 838:/usr/include/c++/11/bits/stl_deque.h **** 
 839:/usr/include/c++/11/bits/stl_deque.h ****       /**
 840:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Creates a %deque with no elements.
 841:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator object.
 842:/usr/include/c++/11/bits/stl_deque.h ****        */
 843:/usr/include/c++/11/bits/stl_deque.h ****       explicit
 844:/usr/include/c++/11/bits/stl_deque.h ****       deque(const allocator_type& __a)
 845:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a, 0) { }
 846:/usr/include/c++/11/bits/stl_deque.h **** 
 847:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 848:/usr/include/c++/11/bits/stl_deque.h ****       /**
 849:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Creates a %deque with default constructed elements.
 850:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 851:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator.
 852:/usr/include/c++/11/bits/stl_deque.h ****        *
 853:/usr/include/c++/11/bits/stl_deque.h ****        *  This constructor fills the %deque with @a n default
 854:/usr/include/c++/11/bits/stl_deque.h ****        *  constructed elements.
 855:/usr/include/c++/11/bits/stl_deque.h ****        */
 856:/usr/include/c++/11/bits/stl_deque.h ****       explicit
 857:/usr/include/c++/11/bits/stl_deque.h ****       deque(size_type __n, const allocator_type& __a = allocator_type())
 858:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a, _S_check_init_len(__n, __a))
 859:/usr/include/c++/11/bits/stl_deque.h ****       { _M_default_initialize(); }
 860:/usr/include/c++/11/bits/stl_deque.h **** 
 861:/usr/include/c++/11/bits/stl_deque.h ****       /**
 862:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 863:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 864:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __value  An element to copy.
 865:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator.
 866:/usr/include/c++/11/bits/stl_deque.h ****        *
 867:/usr/include/c++/11/bits/stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 868:/usr/include/c++/11/bits/stl_deque.h ****        */
 869:/usr/include/c++/11/bits/stl_deque.h ****       deque(size_type __n, const value_type& __value,
 870:/usr/include/c++/11/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 871:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a, _S_check_init_len(__n, __a))
 872:/usr/include/c++/11/bits/stl_deque.h ****       { _M_fill_initialize(__value); }
 873:/usr/include/c++/11/bits/stl_deque.h **** #else
 874:/usr/include/c++/11/bits/stl_deque.h ****       /**
 875:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 876:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 877:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __value  An element to copy.
 878:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator.
 879:/usr/include/c++/11/bits/stl_deque.h ****        *
 880:/usr/include/c++/11/bits/stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 881:/usr/include/c++/11/bits/stl_deque.h ****        */
 882:/usr/include/c++/11/bits/stl_deque.h ****       explicit
 883:/usr/include/c++/11/bits/stl_deque.h ****       deque(size_type __n, const value_type& __value = value_type(),
 884:/usr/include/c++/11/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 885:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a, _S_check_init_len(__n, __a))
 886:/usr/include/c++/11/bits/stl_deque.h ****       { _M_fill_initialize(__value); }
GAS LISTING x64lin/../common/event.s 			page 42


 887:/usr/include/c++/11/bits/stl_deque.h **** #endif
 888:/usr/include/c++/11/bits/stl_deque.h **** 
 889:/usr/include/c++/11/bits/stl_deque.h ****       /**
 890:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  %Deque copy constructor.
 891:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 892:/usr/include/c++/11/bits/stl_deque.h ****        *
 893:/usr/include/c++/11/bits/stl_deque.h ****        *  The newly-created %deque uses a copy of the allocator object used
 894:/usr/include/c++/11/bits/stl_deque.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 895:/usr/include/c++/11/bits/stl_deque.h ****        */
 896:/usr/include/c++/11/bits/stl_deque.h ****       deque(const deque& __x)
 897:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()),
 898:/usr/include/c++/11/bits/stl_deque.h **** 	      __x.size())
 899:/usr/include/c++/11/bits/stl_deque.h ****       { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 900:/usr/include/c++/11/bits/stl_deque.h **** 				    this->_M_impl._M_start,
 901:/usr/include/c++/11/bits/stl_deque.h **** 				    _M_get_Tp_allocator()); }
 902:/usr/include/c++/11/bits/stl_deque.h **** 
 903:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 904:/usr/include/c++/11/bits/stl_deque.h ****       /**
 905:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  %Deque move constructor.
 906:/usr/include/c++/11/bits/stl_deque.h ****        *
 907:/usr/include/c++/11/bits/stl_deque.h ****        *  The newly-created %deque contains the exact contents of the
 908:/usr/include/c++/11/bits/stl_deque.h ****        *  moved instance.
 909:/usr/include/c++/11/bits/stl_deque.h ****        *  The contents of the moved instance are a valid, but unspecified
 910:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque.
 911:/usr/include/c++/11/bits/stl_deque.h ****        */
 912:/usr/include/c++/11/bits/stl_deque.h ****       deque(deque&&) = default;
 913:/usr/include/c++/11/bits/stl_deque.h **** 
 914:/usr/include/c++/11/bits/stl_deque.h ****       /// Copy constructor with alternative allocator
 915:/usr/include/c++/11/bits/stl_deque.h ****       deque(const deque& __x, const allocator_type& __a)
 916:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a, __x.size())
 917:/usr/include/c++/11/bits/stl_deque.h ****       { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 918:/usr/include/c++/11/bits/stl_deque.h **** 				    this->_M_impl._M_start,
 919:/usr/include/c++/11/bits/stl_deque.h **** 				    _M_get_Tp_allocator()); }
 920:/usr/include/c++/11/bits/stl_deque.h **** 
 921:/usr/include/c++/11/bits/stl_deque.h ****       /// Move constructor with alternative allocator
 922:/usr/include/c++/11/bits/stl_deque.h ****       deque(deque&& __x, const allocator_type& __a)
 923:/usr/include/c++/11/bits/stl_deque.h ****       : deque(std::move(__x), __a, typename _Alloc_traits::is_always_equal{})
 924:/usr/include/c++/11/bits/stl_deque.h ****       { }
 925:/usr/include/c++/11/bits/stl_deque.h **** 
 926:/usr/include/c++/11/bits/stl_deque.h ****     private:
 927:/usr/include/c++/11/bits/stl_deque.h ****       deque(deque&& __x, const allocator_type& __a, true_type)
 928:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(std::move(__x), __a)
 929:/usr/include/c++/11/bits/stl_deque.h ****       { }
 930:/usr/include/c++/11/bits/stl_deque.h **** 
 931:/usr/include/c++/11/bits/stl_deque.h ****       deque(deque&& __x, const allocator_type& __a, false_type)
 932:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(std::move(__x), __a, __x.size())
 933:/usr/include/c++/11/bits/stl_deque.h ****       {
 934:/usr/include/c++/11/bits/stl_deque.h **** 	if (__x.get_allocator() != __a && !__x.empty())
 935:/usr/include/c++/11/bits/stl_deque.h **** 	  {
 936:/usr/include/c++/11/bits/stl_deque.h **** 	    std::__uninitialized_move_a(__x.begin(), __x.end(),
 937:/usr/include/c++/11/bits/stl_deque.h **** 					this->_M_impl._M_start,
 938:/usr/include/c++/11/bits/stl_deque.h **** 					_M_get_Tp_allocator());
 939:/usr/include/c++/11/bits/stl_deque.h **** 	    __x.clear();
 940:/usr/include/c++/11/bits/stl_deque.h **** 	  }
 941:/usr/include/c++/11/bits/stl_deque.h ****       }
 942:/usr/include/c++/11/bits/stl_deque.h **** 
 943:/usr/include/c++/11/bits/stl_deque.h ****     public:
GAS LISTING x64lin/../common/event.s 			page 43


 944:/usr/include/c++/11/bits/stl_deque.h ****       /**
 945:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Builds a %deque from an initializer list.
 946:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
 947:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator object.
 948:/usr/include/c++/11/bits/stl_deque.h ****        *
 949:/usr/include/c++/11/bits/stl_deque.h ****        *  Create a %deque consisting of copies of the elements in the
 950:/usr/include/c++/11/bits/stl_deque.h ****        *  initializer_list @a __l.
 951:/usr/include/c++/11/bits/stl_deque.h ****        *
 952:/usr/include/c++/11/bits/stl_deque.h ****        *  This will call the element type's copy constructor N times
 953:/usr/include/c++/11/bits/stl_deque.h ****        *  (where N is __l.size()) and do no memory reallocation.
 954:/usr/include/c++/11/bits/stl_deque.h ****        */
 955:/usr/include/c++/11/bits/stl_deque.h ****       deque(initializer_list<value_type> __l,
 956:/usr/include/c++/11/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 957:/usr/include/c++/11/bits/stl_deque.h ****       : _Base(__a)
 958:/usr/include/c++/11/bits/stl_deque.h ****       {
 959:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 960:/usr/include/c++/11/bits/stl_deque.h **** 			    random_access_iterator_tag());
 961:/usr/include/c++/11/bits/stl_deque.h ****       }
 962:/usr/include/c++/11/bits/stl_deque.h **** #endif
 963:/usr/include/c++/11/bits/stl_deque.h **** 
 964:/usr/include/c++/11/bits/stl_deque.h ****       /**
 965:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Builds a %deque from a range.
 966:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  An input iterator.
 967:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last  An input iterator.
 968:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __a  An allocator object.
 969:/usr/include/c++/11/bits/stl_deque.h ****        *
 970:/usr/include/c++/11/bits/stl_deque.h ****        *  Create a %deque consisting of copies of the elements from [__first,
 971:/usr/include/c++/11/bits/stl_deque.h ****        *  __last).
 972:/usr/include/c++/11/bits/stl_deque.h ****        *
 973:/usr/include/c++/11/bits/stl_deque.h ****        *  If the iterators are forward, bidirectional, or random-access, then
 974:/usr/include/c++/11/bits/stl_deque.h ****        *  this will call the elements' copy constructor N times (where N is
 975:/usr/include/c++/11/bits/stl_deque.h ****        *  distance(__first,__last)) and do no memory reallocation.  But if only
 976:/usr/include/c++/11/bits/stl_deque.h ****        *  input iterators are used, then this will do at most 2N calls to the
 977:/usr/include/c++/11/bits/stl_deque.h ****        *  copy constructor, and logN memory reallocations.
 978:/usr/include/c++/11/bits/stl_deque.h ****        */
 979:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
 980:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator,
 981:/usr/include/c++/11/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 982:/usr/include/c++/11/bits/stl_deque.h **** 	deque(_InputIterator __first, _InputIterator __last,
 983:/usr/include/c++/11/bits/stl_deque.h **** 	      const allocator_type& __a = allocator_type())
 984:/usr/include/c++/11/bits/stl_deque.h **** 	: _Base(__a)
 985:/usr/include/c++/11/bits/stl_deque.h **** 	{
 986:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_range_initialize(__first, __last,
 987:/usr/include/c++/11/bits/stl_deque.h **** 			      std::__iterator_category(__first));
 988:/usr/include/c++/11/bits/stl_deque.h **** 	}
 989:/usr/include/c++/11/bits/stl_deque.h **** #else
 990:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
 991:/usr/include/c++/11/bits/stl_deque.h **** 	deque(_InputIterator __first, _InputIterator __last,
 992:/usr/include/c++/11/bits/stl_deque.h **** 	      const allocator_type& __a = allocator_type())
 993:/usr/include/c++/11/bits/stl_deque.h **** 	: _Base(__a)
 994:/usr/include/c++/11/bits/stl_deque.h **** 	{
 995:/usr/include/c++/11/bits/stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 996:/usr/include/c++/11/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 997:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 998:/usr/include/c++/11/bits/stl_deque.h **** 	}
 999:/usr/include/c++/11/bits/stl_deque.h **** #endif
1000:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 44


1001:/usr/include/c++/11/bits/stl_deque.h ****       /**
1002:/usr/include/c++/11/bits/stl_deque.h ****        *  The dtor only erases the elements, and note that if the elements
1003:/usr/include/c++/11/bits/stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
1004:/usr/include/c++/11/bits/stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
1005:/usr/include/c++/11/bits/stl_deque.h ****        */
1006:/usr/include/c++/11/bits/stl_deque.h ****       ~deque()
1007:/usr/include/c++/11/bits/stl_deque.h ****       { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
1008:/usr/include/c++/11/bits/stl_deque.h **** 
1009:/usr/include/c++/11/bits/stl_deque.h ****       /**
1010:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  %Deque assignment operator.
1011:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
1012:/usr/include/c++/11/bits/stl_deque.h ****        *
1013:/usr/include/c++/11/bits/stl_deque.h ****        *  All the elements of @a x are copied.
1014:/usr/include/c++/11/bits/stl_deque.h ****        *
1015:/usr/include/c++/11/bits/stl_deque.h ****        *  The newly-created %deque uses a copy of the allocator object used
1016:/usr/include/c++/11/bits/stl_deque.h ****        *  by @a __x (unless the allocator traits dictate a different object).
1017:/usr/include/c++/11/bits/stl_deque.h ****        */
1018:/usr/include/c++/11/bits/stl_deque.h ****       deque&
1019:/usr/include/c++/11/bits/stl_deque.h ****       operator=(const deque& __x);
1020:/usr/include/c++/11/bits/stl_deque.h **** 
1021:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1022:/usr/include/c++/11/bits/stl_deque.h ****       /**
1023:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  %Deque move assignment operator.
1024:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
1025:/usr/include/c++/11/bits/stl_deque.h ****        *
1026:/usr/include/c++/11/bits/stl_deque.h ****        *  The contents of @a __x are moved into this deque (without copying,
1027:/usr/include/c++/11/bits/stl_deque.h ****        *  if the allocators permit it).
1028:/usr/include/c++/11/bits/stl_deque.h ****        *  @a __x is a valid, but unspecified %deque.
1029:/usr/include/c++/11/bits/stl_deque.h ****        */
1030:/usr/include/c++/11/bits/stl_deque.h ****       deque&
1031:/usr/include/c++/11/bits/stl_deque.h ****       operator=(deque&& __x) noexcept(_Alloc_traits::_S_always_equal())
1032:/usr/include/c++/11/bits/stl_deque.h ****       {
1033:/usr/include/c++/11/bits/stl_deque.h **** 	using __always_equal = typename _Alloc_traits::is_always_equal;
1034:/usr/include/c++/11/bits/stl_deque.h **** 	_M_move_assign1(std::move(__x), __always_equal{});
1035:/usr/include/c++/11/bits/stl_deque.h **** 	return *this;
1036:/usr/include/c++/11/bits/stl_deque.h ****       }
1037:/usr/include/c++/11/bits/stl_deque.h **** 
1038:/usr/include/c++/11/bits/stl_deque.h ****       /**
1039:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
1040:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1041:/usr/include/c++/11/bits/stl_deque.h ****        *
1042:/usr/include/c++/11/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1043:/usr/include/c++/11/bits/stl_deque.h ****        *  initializer_list @a __l.
1044:/usr/include/c++/11/bits/stl_deque.h ****        *
1045:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1046:/usr/include/c++/11/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1047:/usr/include/c++/11/bits/stl_deque.h ****        *  assigned.
1048:/usr/include/c++/11/bits/stl_deque.h ****        */
1049:/usr/include/c++/11/bits/stl_deque.h ****       deque&
1050:/usr/include/c++/11/bits/stl_deque.h ****       operator=(initializer_list<value_type> __l)
1051:/usr/include/c++/11/bits/stl_deque.h ****       {
1052:/usr/include/c++/11/bits/stl_deque.h **** 	_M_assign_aux(__l.begin(), __l.end(),
1053:/usr/include/c++/11/bits/stl_deque.h **** 		      random_access_iterator_tag());
1054:/usr/include/c++/11/bits/stl_deque.h **** 	return *this;
1055:/usr/include/c++/11/bits/stl_deque.h ****       }
1056:/usr/include/c++/11/bits/stl_deque.h **** #endif
1057:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 45


1058:/usr/include/c++/11/bits/stl_deque.h ****       /**
1059:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Assigns a given value to a %deque.
1060:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  Number of elements to be assigned.
1061:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __val  Value to be assigned.
1062:/usr/include/c++/11/bits/stl_deque.h ****        *
1063:/usr/include/c++/11/bits/stl_deque.h ****        *  This function fills a %deque with @a n copies of the given
1064:/usr/include/c++/11/bits/stl_deque.h ****        *  value.  Note that the assignment completely changes the
1065:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque and that the resulting %deque's size is the same as
1066:/usr/include/c++/11/bits/stl_deque.h ****        *  the number of elements assigned.
1067:/usr/include/c++/11/bits/stl_deque.h ****        */
1068:/usr/include/c++/11/bits/stl_deque.h ****       void
1069:/usr/include/c++/11/bits/stl_deque.h ****       assign(size_type __n, const value_type& __val)
1070:/usr/include/c++/11/bits/stl_deque.h ****       { _M_fill_assign(__n, __val); }
1071:/usr/include/c++/11/bits/stl_deque.h **** 
1072:/usr/include/c++/11/bits/stl_deque.h ****       /**
1073:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Assigns a range to a %deque.
1074:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1075:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1076:/usr/include/c++/11/bits/stl_deque.h ****        *
1077:/usr/include/c++/11/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1078:/usr/include/c++/11/bits/stl_deque.h ****        *  range [__first,__last).
1079:/usr/include/c++/11/bits/stl_deque.h ****        *
1080:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1081:/usr/include/c++/11/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1082:/usr/include/c++/11/bits/stl_deque.h ****        *  assigned.
1083:/usr/include/c++/11/bits/stl_deque.h ****        */
1084:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1085:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator,
1086:/usr/include/c++/11/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1087:/usr/include/c++/11/bits/stl_deque.h **** 	void
1088:/usr/include/c++/11/bits/stl_deque.h **** 	assign(_InputIterator __first, _InputIterator __last)
1089:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1090:/usr/include/c++/11/bits/stl_deque.h **** #else
1091:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1092:/usr/include/c++/11/bits/stl_deque.h **** 	void
1093:/usr/include/c++/11/bits/stl_deque.h **** 	assign(_InputIterator __first, _InputIterator __last)
1094:/usr/include/c++/11/bits/stl_deque.h **** 	{
1095:/usr/include/c++/11/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1096:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
1097:/usr/include/c++/11/bits/stl_deque.h **** 	}
1098:/usr/include/c++/11/bits/stl_deque.h **** #endif
1099:/usr/include/c++/11/bits/stl_deque.h **** 
1100:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1101:/usr/include/c++/11/bits/stl_deque.h ****       /**
1102:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
1103:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1104:/usr/include/c++/11/bits/stl_deque.h ****        *
1105:/usr/include/c++/11/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1106:/usr/include/c++/11/bits/stl_deque.h ****        *  initializer_list @a __l.
1107:/usr/include/c++/11/bits/stl_deque.h ****        *
1108:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1109:/usr/include/c++/11/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1110:/usr/include/c++/11/bits/stl_deque.h ****        *  assigned.
1111:/usr/include/c++/11/bits/stl_deque.h ****        */
1112:/usr/include/c++/11/bits/stl_deque.h ****       void
1113:/usr/include/c++/11/bits/stl_deque.h ****       assign(initializer_list<value_type> __l)
1114:/usr/include/c++/11/bits/stl_deque.h ****       { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
GAS LISTING x64lin/../common/event.s 			page 46


1115:/usr/include/c++/11/bits/stl_deque.h **** #endif
1116:/usr/include/c++/11/bits/stl_deque.h **** 
1117:/usr/include/c++/11/bits/stl_deque.h ****       /// Get a copy of the memory allocation object.
1118:/usr/include/c++/11/bits/stl_deque.h ****       allocator_type
1119:/usr/include/c++/11/bits/stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1120:/usr/include/c++/11/bits/stl_deque.h ****       { return _Base::get_allocator(); }
1121:/usr/include/c++/11/bits/stl_deque.h **** 
1122:/usr/include/c++/11/bits/stl_deque.h ****       // iterators
1123:/usr/include/c++/11/bits/stl_deque.h ****       /**
1124:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write iterator that points to the first element in the
1125:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque.  Iteration is done in ordinary element order.
1126:/usr/include/c++/11/bits/stl_deque.h ****        */
1127:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1128:/usr/include/c++/11/bits/stl_deque.h ****       begin() _GLIBCXX_NOEXCEPT
1129:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1130:/usr/include/c++/11/bits/stl_deque.h **** 
1131:/usr/include/c++/11/bits/stl_deque.h ****       /**
1132:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1133:/usr/include/c++/11/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1134:/usr/include/c++/11/bits/stl_deque.h ****        */
1135:/usr/include/c++/11/bits/stl_deque.h ****       const_iterator
1136:/usr/include/c++/11/bits/stl_deque.h ****       begin() const _GLIBCXX_NOEXCEPT
1137:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1138:/usr/include/c++/11/bits/stl_deque.h **** 
1139:/usr/include/c++/11/bits/stl_deque.h ****       /**
1140:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write iterator that points one past the last
1141:/usr/include/c++/11/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary
1142:/usr/include/c++/11/bits/stl_deque.h ****        *  element order.
1143:/usr/include/c++/11/bits/stl_deque.h ****        */
1144:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1145:/usr/include/c++/11/bits/stl_deque.h ****       end() _GLIBCXX_NOEXCEPT
1146:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1147:/usr/include/c++/11/bits/stl_deque.h **** 
1148:/usr/include/c++/11/bits/stl_deque.h ****       /**
1149:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1150:/usr/include/c++/11/bits/stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1151:/usr/include/c++/11/bits/stl_deque.h ****        *  ordinary element order.
1152:/usr/include/c++/11/bits/stl_deque.h ****        */
1153:/usr/include/c++/11/bits/stl_deque.h ****       const_iterator
1154:/usr/include/c++/11/bits/stl_deque.h ****       end() const _GLIBCXX_NOEXCEPT
1155:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1156:/usr/include/c++/11/bits/stl_deque.h **** 
1157:/usr/include/c++/11/bits/stl_deque.h ****       /**
1158:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write reverse iterator that points to the
1159:/usr/include/c++/11/bits/stl_deque.h ****        *  last element in the %deque.  Iteration is done in reverse
1160:/usr/include/c++/11/bits/stl_deque.h ****        *  element order.
1161:/usr/include/c++/11/bits/stl_deque.h ****        */
1162:/usr/include/c++/11/bits/stl_deque.h ****       reverse_iterator
1163:/usr/include/c++/11/bits/stl_deque.h ****       rbegin() _GLIBCXX_NOEXCEPT
1164:/usr/include/c++/11/bits/stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_finish); }
1165:/usr/include/c++/11/bits/stl_deque.h **** 
1166:/usr/include/c++/11/bits/stl_deque.h ****       /**
1167:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1168:/usr/include/c++/11/bits/stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1169:/usr/include/c++/11/bits/stl_deque.h ****        *  reverse element order.
1170:/usr/include/c++/11/bits/stl_deque.h ****        */
1171:/usr/include/c++/11/bits/stl_deque.h ****       const_reverse_iterator
GAS LISTING x64lin/../common/event.s 			page 47


1172:/usr/include/c++/11/bits/stl_deque.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1173:/usr/include/c++/11/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1174:/usr/include/c++/11/bits/stl_deque.h **** 
1175:/usr/include/c++/11/bits/stl_deque.h ****       /**
1176:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write reverse iterator that points to one
1177:/usr/include/c++/11/bits/stl_deque.h ****        *  before the first element in the %deque.  Iteration is done
1178:/usr/include/c++/11/bits/stl_deque.h ****        *  in reverse element order.
1179:/usr/include/c++/11/bits/stl_deque.h ****        */
1180:/usr/include/c++/11/bits/stl_deque.h ****       reverse_iterator
1181:/usr/include/c++/11/bits/stl_deque.h ****       rend() _GLIBCXX_NOEXCEPT
1182:/usr/include/c++/11/bits/stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_start); }
1183:/usr/include/c++/11/bits/stl_deque.h **** 
1184:/usr/include/c++/11/bits/stl_deque.h ****       /**
1185:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1186:/usr/include/c++/11/bits/stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1187:/usr/include/c++/11/bits/stl_deque.h ****        *  done in reverse element order.
1188:/usr/include/c++/11/bits/stl_deque.h ****        */
1189:/usr/include/c++/11/bits/stl_deque.h ****       const_reverse_iterator
1190:/usr/include/c++/11/bits/stl_deque.h ****       rend() const _GLIBCXX_NOEXCEPT
1191:/usr/include/c++/11/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1192:/usr/include/c++/11/bits/stl_deque.h **** 
1193:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1194:/usr/include/c++/11/bits/stl_deque.h ****       /**
1195:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1196:/usr/include/c++/11/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1197:/usr/include/c++/11/bits/stl_deque.h ****        */
1198:/usr/include/c++/11/bits/stl_deque.h ****       const_iterator
1199:/usr/include/c++/11/bits/stl_deque.h ****       cbegin() const noexcept
1200:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1201:/usr/include/c++/11/bits/stl_deque.h **** 
1202:/usr/include/c++/11/bits/stl_deque.h ****       /**
1203:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1204:/usr/include/c++/11/bits/stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1205:/usr/include/c++/11/bits/stl_deque.h ****        *  ordinary element order.
1206:/usr/include/c++/11/bits/stl_deque.h ****        */
1207:/usr/include/c++/11/bits/stl_deque.h ****       const_iterator
1208:/usr/include/c++/11/bits/stl_deque.h ****       cend() const noexcept
1209:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1210:/usr/include/c++/11/bits/stl_deque.h **** 
1211:/usr/include/c++/11/bits/stl_deque.h ****       /**
1212:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1213:/usr/include/c++/11/bits/stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1214:/usr/include/c++/11/bits/stl_deque.h ****        *  reverse element order.
1215:/usr/include/c++/11/bits/stl_deque.h ****        */
1216:/usr/include/c++/11/bits/stl_deque.h ****       const_reverse_iterator
1217:/usr/include/c++/11/bits/stl_deque.h ****       crbegin() const noexcept
1218:/usr/include/c++/11/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1219:/usr/include/c++/11/bits/stl_deque.h **** 
1220:/usr/include/c++/11/bits/stl_deque.h ****       /**
1221:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1222:/usr/include/c++/11/bits/stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1223:/usr/include/c++/11/bits/stl_deque.h ****        *  done in reverse element order.
1224:/usr/include/c++/11/bits/stl_deque.h ****        */
1225:/usr/include/c++/11/bits/stl_deque.h ****       const_reverse_iterator
1226:/usr/include/c++/11/bits/stl_deque.h ****       crend() const noexcept
1227:/usr/include/c++/11/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1228:/usr/include/c++/11/bits/stl_deque.h **** #endif
GAS LISTING x64lin/../common/event.s 			page 48


1229:/usr/include/c++/11/bits/stl_deque.h **** 
1230:/usr/include/c++/11/bits/stl_deque.h ****       // [23.2.1.2] capacity
1231:/usr/include/c++/11/bits/stl_deque.h ****       /**  Returns the number of elements in the %deque.  */
1232:/usr/include/c++/11/bits/stl_deque.h ****       size_type
1233:/usr/include/c++/11/bits/stl_deque.h ****       size() const _GLIBCXX_NOEXCEPT
1234:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish - this->_M_impl._M_start; }
1235:/usr/include/c++/11/bits/stl_deque.h **** 
1236:/usr/include/c++/11/bits/stl_deque.h ****       /**  Returns the size() of the largest possible %deque.  */
1237:/usr/include/c++/11/bits/stl_deque.h ****       size_type
1238:/usr/include/c++/11/bits/stl_deque.h ****       max_size() const _GLIBCXX_NOEXCEPT
1239:/usr/include/c++/11/bits/stl_deque.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
1240:/usr/include/c++/11/bits/stl_deque.h **** 
1241:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1242:/usr/include/c++/11/bits/stl_deque.h ****       /**
1243:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1244:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1245:/usr/include/c++/11/bits/stl_deque.h ****        *
1246:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
1247:/usr/include/c++/11/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1248:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise
1249:/usr/include/c++/11/bits/stl_deque.h ****        *  default constructed elements are appended.
1250:/usr/include/c++/11/bits/stl_deque.h ****        */
1251:/usr/include/c++/11/bits/stl_deque.h ****       void
1252:/usr/include/c++/11/bits/stl_deque.h ****       resize(size_type __new_size)
1253:/usr/include/c++/11/bits/stl_deque.h ****       {
1254:/usr/include/c++/11/bits/stl_deque.h **** 	const size_type __len = size();
1255:/usr/include/c++/11/bits/stl_deque.h **** 	if (__new_size > __len)
1256:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_default_append(__new_size - __len);
1257:/usr/include/c++/11/bits/stl_deque.h **** 	else if (__new_size < __len)
1258:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1259:/usr/include/c++/11/bits/stl_deque.h **** 			  + difference_type(__new_size));
1260:/usr/include/c++/11/bits/stl_deque.h ****       }
1261:/usr/include/c++/11/bits/stl_deque.h **** 
1262:/usr/include/c++/11/bits/stl_deque.h ****       /**
1263:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1264:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1265:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1266:/usr/include/c++/11/bits/stl_deque.h ****        *
1267:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
1268:/usr/include/c++/11/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1269:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1270:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque is extended and new elements are populated with given
1271:/usr/include/c++/11/bits/stl_deque.h ****        *  data.
1272:/usr/include/c++/11/bits/stl_deque.h ****        */
1273:/usr/include/c++/11/bits/stl_deque.h ****       void
1274:/usr/include/c++/11/bits/stl_deque.h ****       resize(size_type __new_size, const value_type& __x)
1275:/usr/include/c++/11/bits/stl_deque.h **** #else
1276:/usr/include/c++/11/bits/stl_deque.h ****       /**
1277:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1278:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1279:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1280:/usr/include/c++/11/bits/stl_deque.h ****        *
1281:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
1282:/usr/include/c++/11/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1283:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1284:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque is extended and new elements are populated with given
1285:/usr/include/c++/11/bits/stl_deque.h ****        *  data.
GAS LISTING x64lin/../common/event.s 			page 49


1286:/usr/include/c++/11/bits/stl_deque.h ****        */
1287:/usr/include/c++/11/bits/stl_deque.h ****       void
1288:/usr/include/c++/11/bits/stl_deque.h ****       resize(size_type __new_size, value_type __x = value_type())
1289:/usr/include/c++/11/bits/stl_deque.h **** #endif
1290:/usr/include/c++/11/bits/stl_deque.h ****       {
1291:/usr/include/c++/11/bits/stl_deque.h **** 	const size_type __len = size();
1292:/usr/include/c++/11/bits/stl_deque.h **** 	if (__new_size > __len)
1293:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_fill_insert(this->_M_impl._M_finish, __new_size - __len, __x);
1294:/usr/include/c++/11/bits/stl_deque.h **** 	else if (__new_size < __len)
1295:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1296:/usr/include/c++/11/bits/stl_deque.h **** 			  + difference_type(__new_size));
1297:/usr/include/c++/11/bits/stl_deque.h ****       }
1298:/usr/include/c++/11/bits/stl_deque.h **** 
1299:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1300:/usr/include/c++/11/bits/stl_deque.h ****       /**  A non-binding request to reduce memory use.  */
1301:/usr/include/c++/11/bits/stl_deque.h ****       void
1302:/usr/include/c++/11/bits/stl_deque.h ****       shrink_to_fit() noexcept
1303:/usr/include/c++/11/bits/stl_deque.h ****       { _M_shrink_to_fit(); }
1304:/usr/include/c++/11/bits/stl_deque.h **** #endif
1305:/usr/include/c++/11/bits/stl_deque.h **** 
1306:/usr/include/c++/11/bits/stl_deque.h ****       /**
1307:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns true if the %deque is empty.  (Thus begin() would
1308:/usr/include/c++/11/bits/stl_deque.h ****        *  equal end().)
1309:/usr/include/c++/11/bits/stl_deque.h ****        */
1310:/usr/include/c++/11/bits/stl_deque.h ****       _GLIBCXX_NODISCARD bool
1311:/usr/include/c++/11/bits/stl_deque.h ****       empty() const _GLIBCXX_NOEXCEPT
1312:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish == this->_M_impl._M_start; }
1313:/usr/include/c++/11/bits/stl_deque.h **** 
1314:/usr/include/c++/11/bits/stl_deque.h ****       // element access
1315:/usr/include/c++/11/bits/stl_deque.h ****       /**
1316:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1317:/usr/include/c++/11/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1318:/usr/include/c++/11/bits/stl_deque.h ****        *  accessed.
1319:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  Read/write reference to data.
1320:/usr/include/c++/11/bits/stl_deque.h ****        *
1321:/usr/include/c++/11/bits/stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1322:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that data access with this operator is unchecked and
1323:/usr/include/c++/11/bits/stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1324:/usr/include/c++/11/bits/stl_deque.h ****        *  see at().)
1325:/usr/include/c++/11/bits/stl_deque.h ****        */
1326:/usr/include/c++/11/bits/stl_deque.h ****       reference
1327:/usr/include/c++/11/bits/stl_deque.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1328:/usr/include/c++/11/bits/stl_deque.h ****       {
1329:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_subscript(__n);
1330:/usr/include/c++/11/bits/stl_deque.h **** 	return this->_M_impl._M_start[difference_type(__n)];
1331:/usr/include/c++/11/bits/stl_deque.h ****       }
1332:/usr/include/c++/11/bits/stl_deque.h **** 
1333:/usr/include/c++/11/bits/stl_deque.h ****       /**
1334:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1335:/usr/include/c++/11/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1336:/usr/include/c++/11/bits/stl_deque.h ****        *  accessed.
1337:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1338:/usr/include/c++/11/bits/stl_deque.h ****        *
1339:/usr/include/c++/11/bits/stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1340:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that data access with this operator is unchecked and
1341:/usr/include/c++/11/bits/stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1342:/usr/include/c++/11/bits/stl_deque.h ****        *  see at().)
GAS LISTING x64lin/../common/event.s 			page 50


1343:/usr/include/c++/11/bits/stl_deque.h ****        */
1344:/usr/include/c++/11/bits/stl_deque.h ****       const_reference
1345:/usr/include/c++/11/bits/stl_deque.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1346:/usr/include/c++/11/bits/stl_deque.h ****       {
1347:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_subscript(__n);
1348:/usr/include/c++/11/bits/stl_deque.h **** 	return this->_M_impl._M_start[difference_type(__n)];
1349:/usr/include/c++/11/bits/stl_deque.h ****       }
1350:/usr/include/c++/11/bits/stl_deque.h **** 
1351:/usr/include/c++/11/bits/stl_deque.h ****     protected:
1352:/usr/include/c++/11/bits/stl_deque.h ****       /// Safety check used only from at().
1353:/usr/include/c++/11/bits/stl_deque.h ****       void
1354:/usr/include/c++/11/bits/stl_deque.h ****       _M_range_check(size_type __n) const
1355:/usr/include/c++/11/bits/stl_deque.h ****       {
1356:/usr/include/c++/11/bits/stl_deque.h **** 	if (__n >= this->size())
1357:/usr/include/c++/11/bits/stl_deque.h **** 	  __throw_out_of_range_fmt(__N("deque::_M_range_check: __n "
1358:/usr/include/c++/11/bits/stl_deque.h **** 				       "(which is %zu)>= this->size() "
1359:/usr/include/c++/11/bits/stl_deque.h **** 				       "(which is %zu)"),
1360:/usr/include/c++/11/bits/stl_deque.h **** 				   __n, this->size());
1361:/usr/include/c++/11/bits/stl_deque.h ****       }
1362:/usr/include/c++/11/bits/stl_deque.h **** 
1363:/usr/include/c++/11/bits/stl_deque.h ****     public:
1364:/usr/include/c++/11/bits/stl_deque.h ****       /**
1365:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
1366:/usr/include/c++/11/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1367:/usr/include/c++/11/bits/stl_deque.h ****        *  accessed.
1368:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  Read/write reference to data.
1369:/usr/include/c++/11/bits/stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1370:/usr/include/c++/11/bits/stl_deque.h ****        *
1371:/usr/include/c++/11/bits/stl_deque.h ****        *  This function provides for safer data access.  The parameter
1372:/usr/include/c++/11/bits/stl_deque.h ****        *  is first checked that it is in the range of the deque.  The
1373:/usr/include/c++/11/bits/stl_deque.h ****        *  function throws out_of_range if the check fails.
1374:/usr/include/c++/11/bits/stl_deque.h ****        */
1375:/usr/include/c++/11/bits/stl_deque.h ****       reference
1376:/usr/include/c++/11/bits/stl_deque.h ****       at(size_type __n)
1377:/usr/include/c++/11/bits/stl_deque.h ****       {
1378:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_check(__n);
1379:/usr/include/c++/11/bits/stl_deque.h **** 	return (*this)[__n];
1380:/usr/include/c++/11/bits/stl_deque.h ****       }
1381:/usr/include/c++/11/bits/stl_deque.h **** 
1382:/usr/include/c++/11/bits/stl_deque.h ****       /**
1383:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
1384:/usr/include/c++/11/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1385:/usr/include/c++/11/bits/stl_deque.h ****        *  accessed.
1386:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1387:/usr/include/c++/11/bits/stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1388:/usr/include/c++/11/bits/stl_deque.h ****        *
1389:/usr/include/c++/11/bits/stl_deque.h ****        *  This function provides for safer data access.  The parameter is first
1390:/usr/include/c++/11/bits/stl_deque.h ****        *  checked that it is in the range of the deque.  The function throws
1391:/usr/include/c++/11/bits/stl_deque.h ****        *  out_of_range if the check fails.
1392:/usr/include/c++/11/bits/stl_deque.h ****        */
1393:/usr/include/c++/11/bits/stl_deque.h ****       const_reference
1394:/usr/include/c++/11/bits/stl_deque.h ****       at(size_type __n) const
1395:/usr/include/c++/11/bits/stl_deque.h ****       {
1396:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_check(__n);
1397:/usr/include/c++/11/bits/stl_deque.h **** 	return (*this)[__n];
1398:/usr/include/c++/11/bits/stl_deque.h ****       }
1399:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 51


1400:/usr/include/c++/11/bits/stl_deque.h ****       /**
1401:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write reference to the data at the first
1402:/usr/include/c++/11/bits/stl_deque.h ****        *  element of the %deque.
1403:/usr/include/c++/11/bits/stl_deque.h ****        */
1404:/usr/include/c++/11/bits/stl_deque.h ****       reference
1405:/usr/include/c++/11/bits/stl_deque.h ****       front() _GLIBCXX_NOEXCEPT
1406:/usr/include/c++/11/bits/stl_deque.h ****       {
1407:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1408:/usr/include/c++/11/bits/stl_deque.h **** 	return *begin();
1409:/usr/include/c++/11/bits/stl_deque.h ****       }
1410:/usr/include/c++/11/bits/stl_deque.h **** 
1411:/usr/include/c++/11/bits/stl_deque.h ****       /**
1412:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the first
1413:/usr/include/c++/11/bits/stl_deque.h ****        *  element of the %deque.
1414:/usr/include/c++/11/bits/stl_deque.h ****        */
1415:/usr/include/c++/11/bits/stl_deque.h ****       const_reference
1416:/usr/include/c++/11/bits/stl_deque.h ****       front() const _GLIBCXX_NOEXCEPT
1417:/usr/include/c++/11/bits/stl_deque.h ****       {
1418:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1419:/usr/include/c++/11/bits/stl_deque.h **** 	return *begin();
1420:/usr/include/c++/11/bits/stl_deque.h ****       }
1421:/usr/include/c++/11/bits/stl_deque.h **** 
1422:/usr/include/c++/11/bits/stl_deque.h ****       /**
1423:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read/write reference to the data at the last element of the
1424:/usr/include/c++/11/bits/stl_deque.h ****        *  %deque.
1425:/usr/include/c++/11/bits/stl_deque.h ****        */
1426:/usr/include/c++/11/bits/stl_deque.h ****       reference
1427:/usr/include/c++/11/bits/stl_deque.h ****       back() _GLIBCXX_NOEXCEPT
1428:/usr/include/c++/11/bits/stl_deque.h ****       {
1429:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1430:/usr/include/c++/11/bits/stl_deque.h **** 	iterator __tmp = end();
1431:/usr/include/c++/11/bits/stl_deque.h **** 	--__tmp;
1432:/usr/include/c++/11/bits/stl_deque.h **** 	return *__tmp;
1433:/usr/include/c++/11/bits/stl_deque.h ****       }
1434:/usr/include/c++/11/bits/stl_deque.h **** 
1435:/usr/include/c++/11/bits/stl_deque.h ****       /**
1436:/usr/include/c++/11/bits/stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the last
1437:/usr/include/c++/11/bits/stl_deque.h ****        *  element of the %deque.
1438:/usr/include/c++/11/bits/stl_deque.h ****        */
1439:/usr/include/c++/11/bits/stl_deque.h ****       const_reference
1440:/usr/include/c++/11/bits/stl_deque.h ****       back() const _GLIBCXX_NOEXCEPT
1441:/usr/include/c++/11/bits/stl_deque.h ****       {
1442:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1443:/usr/include/c++/11/bits/stl_deque.h **** 	const_iterator __tmp = end();
1444:/usr/include/c++/11/bits/stl_deque.h **** 	--__tmp;
1445:/usr/include/c++/11/bits/stl_deque.h **** 	return *__tmp;
1446:/usr/include/c++/11/bits/stl_deque.h ****       }
1447:/usr/include/c++/11/bits/stl_deque.h **** 
1448:/usr/include/c++/11/bits/stl_deque.h ****       // [23.2.1.2] modifiers
1449:/usr/include/c++/11/bits/stl_deque.h ****       /**
1450:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Add data to the front of the %deque.
1451:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be added.
1452:/usr/include/c++/11/bits/stl_deque.h ****        *
1453:/usr/include/c++/11/bits/stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1454:/usr/include/c++/11/bits/stl_deque.h ****        *  element at the front of the %deque and assigns the given
1455:/usr/include/c++/11/bits/stl_deque.h ****        *  data to it.  Due to the nature of a %deque this operation
1456:/usr/include/c++/11/bits/stl_deque.h ****        *  can be done in constant time.
GAS LISTING x64lin/../common/event.s 			page 52


1457:/usr/include/c++/11/bits/stl_deque.h ****        */
1458:/usr/include/c++/11/bits/stl_deque.h ****       void
1459:/usr/include/c++/11/bits/stl_deque.h ****       push_front(const value_type& __x)
1460:/usr/include/c++/11/bits/stl_deque.h ****       {
1461:/usr/include/c++/11/bits/stl_deque.h **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
1462:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1463:/usr/include/c++/11/bits/stl_deque.h **** 	    _Alloc_traits::construct(this->_M_impl,
1464:/usr/include/c++/11/bits/stl_deque.h **** 				     this->_M_impl._M_start._M_cur - 1,
1465:/usr/include/c++/11/bits/stl_deque.h **** 				     __x);
1466:/usr/include/c++/11/bits/stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
1467:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1468:/usr/include/c++/11/bits/stl_deque.h **** 	else
1469:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_push_front_aux(__x);
1470:/usr/include/c++/11/bits/stl_deque.h ****       }
1471:/usr/include/c++/11/bits/stl_deque.h **** 
1472:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1473:/usr/include/c++/11/bits/stl_deque.h ****       void
1474:/usr/include/c++/11/bits/stl_deque.h ****       push_front(value_type&& __x)
1475:/usr/include/c++/11/bits/stl_deque.h ****       { emplace_front(std::move(__x)); }
1476:/usr/include/c++/11/bits/stl_deque.h **** 
1477:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
1478:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus > 201402L
1479:/usr/include/c++/11/bits/stl_deque.h **** 	reference
1480:/usr/include/c++/11/bits/stl_deque.h **** #else
1481:/usr/include/c++/11/bits/stl_deque.h **** 	void
1482:/usr/include/c++/11/bits/stl_deque.h **** #endif
1483:/usr/include/c++/11/bits/stl_deque.h **** 	emplace_front(_Args&&... __args);
1484:/usr/include/c++/11/bits/stl_deque.h **** #endif
1485:/usr/include/c++/11/bits/stl_deque.h **** 
1486:/usr/include/c++/11/bits/stl_deque.h ****       /**
1487:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Add data to the end of the %deque.
1488:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be added.
1489:/usr/include/c++/11/bits/stl_deque.h ****        *
1490:/usr/include/c++/11/bits/stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1491:/usr/include/c++/11/bits/stl_deque.h ****        *  element at the end of the %deque and assigns the given data
1492:/usr/include/c++/11/bits/stl_deque.h ****        *  to it.  Due to the nature of a %deque this operation can be
1493:/usr/include/c++/11/bits/stl_deque.h ****        *  done in constant time.
1494:/usr/include/c++/11/bits/stl_deque.h ****        */
1495:/usr/include/c++/11/bits/stl_deque.h ****       void
1496:/usr/include/c++/11/bits/stl_deque.h ****       push_back(const value_type& __x)
1497:/usr/include/c++/11/bits/stl_deque.h ****       {
1498:/usr/include/c++/11/bits/stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1499:/usr/include/c++/11/bits/stl_deque.h **** 	    != this->_M_impl._M_finish._M_last - 1)
1500:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1501:/usr/include/c++/11/bits/stl_deque.h **** 	    _Alloc_traits::construct(this->_M_impl,
1502:/usr/include/c++/11/bits/stl_deque.h **** 				     this->_M_impl._M_finish._M_cur, __x);
1503:/usr/include/c++/11/bits/stl_deque.h **** 	    ++this->_M_impl._M_finish._M_cur;
1504:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1505:/usr/include/c++/11/bits/stl_deque.h **** 	else
1506:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_push_back_aux(__x);
1507:/usr/include/c++/11/bits/stl_deque.h ****       }
1508:/usr/include/c++/11/bits/stl_deque.h **** 
1509:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1510:/usr/include/c++/11/bits/stl_deque.h ****       void
1511:/usr/include/c++/11/bits/stl_deque.h ****       push_back(value_type&& __x)
 127              		.loc 5 1511 7 view .LVU21
 128              	.LBB575:
GAS LISTING x64lin/../common/event.s 			page 53


 129              	.LBI575:
 130              		.file 6 "/usr/include/c++/11/bits/deque.tcc"
   1:/usr/include/c++/11/bits/deque.tcc **** // Deque implementation (out of line) -*- C++ -*-
   2:/usr/include/c++/11/bits/deque.tcc **** 
   3:/usr/include/c++/11/bits/deque.tcc **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/deque.tcc **** //
   5:/usr/include/c++/11/bits/deque.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/deque.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/deque.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/deque.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/deque.tcc **** // any later version.
  10:/usr/include/c++/11/bits/deque.tcc **** 
  11:/usr/include/c++/11/bits/deque.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/deque.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/deque.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/deque.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/deque.tcc **** 
  16:/usr/include/c++/11/bits/deque.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/deque.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/deque.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/deque.tcc **** 
  20:/usr/include/c++/11/bits/deque.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/deque.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/deque.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/deque.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/deque.tcc **** 
  25:/usr/include/c++/11/bits/deque.tcc **** /*
  26:/usr/include/c++/11/bits/deque.tcc ****  *
  27:/usr/include/c++/11/bits/deque.tcc ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/deque.tcc ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/deque.tcc ****  *
  30:/usr/include/c++/11/bits/deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/deque.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/deque.tcc ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/deque.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/deque.tcc ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/deque.tcc ****  *
  38:/usr/include/c++/11/bits/deque.tcc ****  *
  39:/usr/include/c++/11/bits/deque.tcc ****  * Copyright (c) 1997
  40:/usr/include/c++/11/bits/deque.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/deque.tcc ****  *
  42:/usr/include/c++/11/bits/deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/deque.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/deque.tcc ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/deque.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/deque.tcc ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/deque.tcc ****  */
  50:/usr/include/c++/11/bits/deque.tcc **** 
  51:/usr/include/c++/11/bits/deque.tcc **** /** @file bits/deque.tcc
  52:/usr/include/c++/11/bits/deque.tcc ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/deque.tcc ****  *  Do not attempt to use it directly. @headername{deque}
  54:/usr/include/c++/11/bits/deque.tcc ****  */
  55:/usr/include/c++/11/bits/deque.tcc **** 
GAS LISTING x64lin/../common/event.s 			page 54


  56:/usr/include/c++/11/bits/deque.tcc **** #ifndef _DEQUE_TCC
  57:/usr/include/c++/11/bits/deque.tcc **** #define _DEQUE_TCC 1
  58:/usr/include/c++/11/bits/deque.tcc **** 
  59:/usr/include/c++/11/bits/deque.tcc **** #include <bits/stl_algobase.h>
  60:/usr/include/c++/11/bits/deque.tcc **** 
  61:/usr/include/c++/11/bits/deque.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  62:/usr/include/c++/11/bits/deque.tcc **** {
  63:/usr/include/c++/11/bits/deque.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  64:/usr/include/c++/11/bits/deque.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  65:/usr/include/c++/11/bits/deque.tcc **** 
  66:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
  67:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
  68:/usr/include/c++/11/bits/deque.tcc ****     void
  69:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
  70:/usr/include/c++/11/bits/deque.tcc ****     _M_default_initialize()
  71:/usr/include/c++/11/bits/deque.tcc ****     {
  72:/usr/include/c++/11/bits/deque.tcc ****       _Map_pointer __cur;
  73:/usr/include/c++/11/bits/deque.tcc ****       __try
  74:/usr/include/c++/11/bits/deque.tcc **** 	{
  75:/usr/include/c++/11/bits/deque.tcc **** 	  for (__cur = this->_M_impl._M_start._M_node;
  76:/usr/include/c++/11/bits/deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
  77:/usr/include/c++/11/bits/deque.tcc **** 	       ++__cur)
  78:/usr/include/c++/11/bits/deque.tcc **** 	    std::__uninitialized_default_a(*__cur, *__cur + _S_buffer_size(),
  79:/usr/include/c++/11/bits/deque.tcc **** 					   _M_get_Tp_allocator());
  80:/usr/include/c++/11/bits/deque.tcc **** 	  std::__uninitialized_default_a(this->_M_impl._M_finish._M_first,
  81:/usr/include/c++/11/bits/deque.tcc **** 					 this->_M_impl._M_finish._M_cur,
  82:/usr/include/c++/11/bits/deque.tcc **** 					 _M_get_Tp_allocator());
  83:/usr/include/c++/11/bits/deque.tcc **** 	}
  84:/usr/include/c++/11/bits/deque.tcc ****       __catch(...)
  85:/usr/include/c++/11/bits/deque.tcc **** 	{
  86:/usr/include/c++/11/bits/deque.tcc **** 	  std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
  87:/usr/include/c++/11/bits/deque.tcc **** 			_M_get_Tp_allocator());
  88:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_exception_again;
  89:/usr/include/c++/11/bits/deque.tcc **** 	}
  90:/usr/include/c++/11/bits/deque.tcc ****     }
  91:/usr/include/c++/11/bits/deque.tcc **** #endif
  92:/usr/include/c++/11/bits/deque.tcc **** 
  93:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
  94:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>&
  95:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
  96:/usr/include/c++/11/bits/deque.tcc ****     operator=(const deque& __x)
  97:/usr/include/c++/11/bits/deque.tcc ****     {
  98:/usr/include/c++/11/bits/deque.tcc ****       if (&__x != this)
  99:/usr/include/c++/11/bits/deque.tcc **** 	{
 100:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 101:/usr/include/c++/11/bits/deque.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 102:/usr/include/c++/11/bits/deque.tcc **** 	    {
 103:/usr/include/c++/11/bits/deque.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 104:/usr/include/c++/11/bits/deque.tcc **** 		  && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 105:/usr/include/c++/11/bits/deque.tcc **** 		{
 106:/usr/include/c++/11/bits/deque.tcc **** 		  // Replacement allocator cannot free existing storage,
 107:/usr/include/c++/11/bits/deque.tcc **** 		  // so deallocate everything and take copy of __x's data.
 108:/usr/include/c++/11/bits/deque.tcc **** 		  _M_replace_map(__x, __x.get_allocator());
 109:/usr/include/c++/11/bits/deque.tcc **** 		  std::__alloc_on_copy(_M_get_Tp_allocator(),
 110:/usr/include/c++/11/bits/deque.tcc **** 				       __x._M_get_Tp_allocator());
 111:/usr/include/c++/11/bits/deque.tcc **** 		  return *this;
 112:/usr/include/c++/11/bits/deque.tcc **** 		}
GAS LISTING x64lin/../common/event.s 			page 55


 113:/usr/include/c++/11/bits/deque.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 114:/usr/include/c++/11/bits/deque.tcc **** 				   __x._M_get_Tp_allocator());
 115:/usr/include/c++/11/bits/deque.tcc **** 	    }
 116:/usr/include/c++/11/bits/deque.tcc **** #endif
 117:/usr/include/c++/11/bits/deque.tcc **** 	  const size_type __len = size();
 118:/usr/include/c++/11/bits/deque.tcc **** 	  if (__len >= __x.size())
 119:/usr/include/c++/11/bits/deque.tcc **** 	    _M_erase_at_end(std::copy(__x.begin(), __x.end(),
 120:/usr/include/c++/11/bits/deque.tcc **** 				      this->_M_impl._M_start));
 121:/usr/include/c++/11/bits/deque.tcc **** 	  else
 122:/usr/include/c++/11/bits/deque.tcc **** 	    {
 123:/usr/include/c++/11/bits/deque.tcc **** 	      const_iterator __mid = __x.begin() + difference_type(__len);
 124:/usr/include/c++/11/bits/deque.tcc **** 	      std::copy(__x.begin(), __mid, this->_M_impl._M_start);
 125:/usr/include/c++/11/bits/deque.tcc **** 	      _M_range_insert_aux(this->_M_impl._M_finish, __mid, __x.end(),
 126:/usr/include/c++/11/bits/deque.tcc **** 				  std::random_access_iterator_tag());
 127:/usr/include/c++/11/bits/deque.tcc **** 	    }
 128:/usr/include/c++/11/bits/deque.tcc **** 	}
 129:/usr/include/c++/11/bits/deque.tcc ****       return *this;
 130:/usr/include/c++/11/bits/deque.tcc ****     }
 131:/usr/include/c++/11/bits/deque.tcc **** 
 132:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 133:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 134:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 135:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus > 201402L
 136:/usr/include/c++/11/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::reference
 137:/usr/include/c++/11/bits/deque.tcc **** #else
 138:/usr/include/c++/11/bits/deque.tcc ****       void
 139:/usr/include/c++/11/bits/deque.tcc **** #endif
 140:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 141:/usr/include/c++/11/bits/deque.tcc ****       emplace_front(_Args&&... __args)
 142:/usr/include/c++/11/bits/deque.tcc ****       {
 143:/usr/include/c++/11/bits/deque.tcc **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
 144:/usr/include/c++/11/bits/deque.tcc **** 	  {
 145:/usr/include/c++/11/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 146:/usr/include/c++/11/bits/deque.tcc **** 				     this->_M_impl._M_start._M_cur - 1,
 147:/usr/include/c++/11/bits/deque.tcc **** 				     std::forward<_Args>(__args)...);
 148:/usr/include/c++/11/bits/deque.tcc **** 	    --this->_M_impl._M_start._M_cur;
 149:/usr/include/c++/11/bits/deque.tcc **** 	  }
 150:/usr/include/c++/11/bits/deque.tcc **** 	else
 151:/usr/include/c++/11/bits/deque.tcc **** 	  _M_push_front_aux(std::forward<_Args>(__args)...);
 152:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus > 201402L
 153:/usr/include/c++/11/bits/deque.tcc **** 	return front();
 154:/usr/include/c++/11/bits/deque.tcc **** #endif
 155:/usr/include/c++/11/bits/deque.tcc ****       }
 156:/usr/include/c++/11/bits/deque.tcc **** 
 157:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 158:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 159:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus > 201402L
 160:/usr/include/c++/11/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::reference
 161:/usr/include/c++/11/bits/deque.tcc **** #else
 162:/usr/include/c++/11/bits/deque.tcc ****       void
 163:/usr/include/c++/11/bits/deque.tcc **** #endif
 164:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 131              		.loc 6 164 7 view .LVU22
 132              	.LBB576:
 165:/usr/include/c++/11/bits/deque.tcc ****       emplace_back(_Args&&... __args)
 166:/usr/include/c++/11/bits/deque.tcc ****       {
 167:/usr/include/c++/11/bits/deque.tcc **** 	if (this->_M_impl._M_finish._M_cur
GAS LISTING x64lin/../common/event.s 			page 56


 168:/usr/include/c++/11/bits/deque.tcc **** 	    != this->_M_impl._M_finish._M_last - 1)
 133              		.loc 6 168 41 is_stmt 0 view .LVU23
 134 002c 488B4B40 		movq	64(%rbx), %rcx
 167:/usr/include/c++/11/bits/deque.tcc **** 	    != this->_M_impl._M_finish._M_last - 1)
 135              		.loc 6 167 30 view .LVU24
 136 0030 488B4330 		movq	48(%rbx), %rax
 137              	.LVL6:
 138              		.loc 6 168 41 view .LVU25
 139 0034 488D51F8 		leaq	-8(%rcx), %rdx
 167:/usr/include/c++/11/bits/deque.tcc **** 	    != this->_M_impl._M_finish._M_last - 1)
 140              		.loc 6 167 2 view .LVU26
 141 0038 4839D0   		cmpq	%rdx, %rax
 142 003b 743B     		je	.L3
 143              	.LVL7:
 144              	.LBB577:
 145              	.LBI577:
 146              		.file 7 "/usr/include/c++/11/bits/alloc_traits.h"
   1:/usr/include/c++/11/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/11/bits/alloc_traits.h **** 
   3:/usr/include/c++/11/bits/alloc_traits.h **** // Copyright (C) 2011-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/alloc_traits.h **** //
   5:/usr/include/c++/11/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/11/bits/alloc_traits.h **** 
  11:/usr/include/c++/11/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/alloc_traits.h **** 
  16:/usr/include/c++/11/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/alloc_traits.h **** 
  20:/usr/include/c++/11/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/alloc_traits.h **** 
  25:/usr/include/c++/11/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/11/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/11/bits/alloc_traits.h ****  */
  29:/usr/include/c++/11/bits/alloc_traits.h **** 
  30:/usr/include/c++/11/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/11/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/11/bits/alloc_traits.h **** 
  33:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/usr/include/c++/11/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/usr/include/c++/11/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/usr/include/c++/11/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/usr/include/c++/11/bits/alloc_traits.h **** #endif
  40:/usr/include/c++/11/bits/alloc_traits.h **** 
GAS LISTING x64lin/../common/event.s 			page 57


  41:/usr/include/c++/11/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/11/bits/alloc_traits.h **** {
  43:/usr/include/c++/11/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/11/bits/alloc_traits.h **** 
  45:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/11/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/usr/include/c++/11/bits/alloc_traits.h **** 
  48:/usr/include/c++/11/bits/alloc_traits.h ****   /// @cond undocumented
  49:/usr/include/c++/11/bits/alloc_traits.h ****   struct __allocator_traits_base
  50:/usr/include/c++/11/bits/alloc_traits.h ****   {
  51:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  52:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  53:/usr/include/c++/11/bits/alloc_traits.h **** 
  54:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  55:/usr/include/c++/11/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  56:/usr/include/c++/11/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  57:/usr/include/c++/11/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  58:/usr/include/c++/11/bits/alloc_traits.h **** 
  59:/usr/include/c++/11/bits/alloc_traits.h ****   protected:
  60:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/11/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  62:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/11/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  64:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/11/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  66:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/11/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  68:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  70:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  72:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  73:/usr/include/c++/11/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  74:/usr/include/c++/11/bits/alloc_traits.h ****     template<typename _Tp>
  75:/usr/include/c++/11/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  76:/usr/include/c++/11/bits/alloc_traits.h ****   };
  77:/usr/include/c++/11/bits/alloc_traits.h **** 
  78:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  79:/usr/include/c++/11/bits/alloc_traits.h ****     using __alloc_rebind
  80:/usr/include/c++/11/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  81:/usr/include/c++/11/bits/alloc_traits.h ****   /// @endcond
  82:/usr/include/c++/11/bits/alloc_traits.h **** 
  83:/usr/include/c++/11/bits/alloc_traits.h ****   /**
  84:/usr/include/c++/11/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  85:/usr/include/c++/11/bits/alloc_traits.h ****    * @headerfile memory
  86:/usr/include/c++/11/bits/alloc_traits.h ****    * @ingroup allocators
  87:/usr/include/c++/11/bits/alloc_traits.h ****    * @since C++11
  88:/usr/include/c++/11/bits/alloc_traits.h ****   */
  89:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Alloc>
  90:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  91:/usr/include/c++/11/bits/alloc_traits.h ****     {
  92:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
  93:/usr/include/c++/11/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  94:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
  95:/usr/include/c++/11/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  96:/usr/include/c++/11/bits/alloc_traits.h **** 
  97:/usr/include/c++/11/bits/alloc_traits.h ****       /**
GAS LISTING x64lin/../common/event.s 			page 58


  98:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  99:/usr/include/c++/11/bits/alloc_traits.h ****        *
 100:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
 101:/usr/include/c++/11/bits/alloc_traits.h ****       */
 102:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
 103:/usr/include/c++/11/bits/alloc_traits.h **** 
 104:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 105:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 106:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 107:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr
 108:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 109:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 110:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 111:/usr/include/c++/11/bits/alloc_traits.h **** 
 112:/usr/include/c++/11/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 113:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 114:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 115:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 116:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 117:/usr/include/c++/11/bits/alloc_traits.h **** 
 118:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 119:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 120:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff
 121:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 122:/usr/include/c++/11/bits/alloc_traits.h **** 
 123:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 124:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 125:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 126:/usr/include/c++/11/bits/alloc_traits.h **** 
 127:/usr/include/c++/11/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 128:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 129:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 130:/usr/include/c++/11/bits/alloc_traits.h **** 
 131:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 132:/usr/include/c++/11/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 133:/usr/include/c++/11/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 134:/usr/include/c++/11/bits/alloc_traits.h **** 
 135:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 136:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 137:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 138:/usr/include/c++/11/bits/alloc_traits.h ****        *
 139:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 140:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 141:/usr/include/c++/11/bits/alloc_traits.h ****       */
 142:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 143:/usr/include/c++/11/bits/alloc_traits.h **** 
 144:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 145:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 146:/usr/include/c++/11/bits/alloc_traits.h ****        *
 147:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 148:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 149:/usr/include/c++/11/bits/alloc_traits.h ****       */
 150:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 151:/usr/include/c++/11/bits/alloc_traits.h **** 
 152:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 153:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 154:/usr/include/c++/11/bits/alloc_traits.h ****        *
GAS LISTING x64lin/../common/event.s 			page 59


 155:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 156:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 157:/usr/include/c++/11/bits/alloc_traits.h ****       */
 158:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 159:/usr/include/c++/11/bits/alloc_traits.h **** 
 160:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 161:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 162:/usr/include/c++/11/bits/alloc_traits.h ****        *
 163:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 164:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 165:/usr/include/c++/11/bits/alloc_traits.h ****       */
 166:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 167:/usr/include/c++/11/bits/alloc_traits.h **** 
 168:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 169:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   The allocator's size type
 170:/usr/include/c++/11/bits/alloc_traits.h ****        *
 171:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 172:/usr/include/c++/11/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 173:/usr/include/c++/11/bits/alloc_traits.h ****       */
 174:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 175:/usr/include/c++/11/bits/alloc_traits.h **** 
 176:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 177:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 178:/usr/include/c++/11/bits/alloc_traits.h ****        *
 179:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 180:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 181:/usr/include/c++/11/bits/alloc_traits.h ****       */
 182:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 183:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 184:/usr/include/c++/11/bits/alloc_traits.h **** 
 185:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 186:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 187:/usr/include/c++/11/bits/alloc_traits.h ****        *
 188:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 189:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 190:/usr/include/c++/11/bits/alloc_traits.h ****       */
 191:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 192:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 193:/usr/include/c++/11/bits/alloc_traits.h **** 
 194:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 195:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 196:/usr/include/c++/11/bits/alloc_traits.h ****        *
 197:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 198:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c false_type
 199:/usr/include/c++/11/bits/alloc_traits.h ****       */
 200:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap
 201:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 202:/usr/include/c++/11/bits/alloc_traits.h **** 
 203:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 204:/usr/include/c++/11/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 205:/usr/include/c++/11/bits/alloc_traits.h ****        *
 206:/usr/include/c++/11/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 207:/usr/include/c++/11/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 208:/usr/include/c++/11/bits/alloc_traits.h ****       */
 209:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal
 210:/usr/include/c++/11/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 211:/usr/include/c++/11/bits/alloc_traits.h **** 
GAS LISTING x64lin/../common/event.s 			page 60


 212:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 213:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 214:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 215:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 216:/usr/include/c++/11/bits/alloc_traits.h **** 
 217:/usr/include/c++/11/bits/alloc_traits.h ****     private:
 218:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 219:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 220:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 221:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 222:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 223:/usr/include/c++/11/bits/alloc_traits.h **** 
 224:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 225:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr pointer
 226:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 227:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 228:/usr/include/c++/11/bits/alloc_traits.h **** 
 229:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 230:/usr/include/c++/11/bits/alloc_traits.h **** 	struct __construct_helper
 231:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 232:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 233:/usr/include/c++/11/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 234:/usr/include/c++/11/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 235:/usr/include/c++/11/bits/alloc_traits.h **** 	    static true_type __test(int);
 236:/usr/include/c++/11/bits/alloc_traits.h **** 
 237:/usr/include/c++/11/bits/alloc_traits.h **** 	  template<typename>
 238:/usr/include/c++/11/bits/alloc_traits.h **** 	    static false_type __test(...);
 239:/usr/include/c++/11/bits/alloc_traits.h **** 
 240:/usr/include/c++/11/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 241:/usr/include/c++/11/bits/alloc_traits.h **** 	};
 242:/usr/include/c++/11/bits/alloc_traits.h **** 
 243:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/usr/include/c++/11/bits/alloc_traits.h **** 	using __has_construct
 245:/usr/include/c++/11/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 246:/usr/include/c++/11/bits/alloc_traits.h **** 
 247:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 248:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 249:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 250:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 251:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 252:/usr/include/c++/11/bits/alloc_traits.h **** 
 253:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 254:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 255:/usr/include/c++/11/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 256:/usr/include/c++/11/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 257:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 258:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 259:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 260:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 261:/usr/include/c++/11/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 262:/usr/include/c++/11/bits/alloc_traits.h **** #else
 263:/usr/include/c++/11/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 264:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 265:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 266:/usr/include/c++/11/bits/alloc_traits.h **** 
 267:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 268:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
GAS LISTING x64lin/../common/event.s 			page 61


 269:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 270:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 271:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 272:/usr/include/c++/11/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 273:/usr/include/c++/11/bits/alloc_traits.h **** 
 274:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 275:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 276:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 277:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 278:/usr/include/c++/11/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 279:/usr/include/c++/11/bits/alloc_traits.h **** 
 280:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 281:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 282:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 283:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 284:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 285:/usr/include/c++/11/bits/alloc_traits.h **** 
 286:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 287:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr size_type
 288:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 289:/usr/include/c++/11/bits/alloc_traits.h **** 	{
 290:/usr/include/c++/11/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 291:/usr/include/c++/11/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 292:/usr/include/c++/11/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 293:/usr/include/c++/11/bits/alloc_traits.h **** 	    / sizeof(value_type);
 294:/usr/include/c++/11/bits/alloc_traits.h **** 	}
 295:/usr/include/c++/11/bits/alloc_traits.h **** 
 296:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 297:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr auto
 298:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 299:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 300:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 301:/usr/include/c++/11/bits/alloc_traits.h **** 
 302:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Alloc2>
 303:/usr/include/c++/11/bits/alloc_traits.h **** 	static constexpr _Alloc2
 304:/usr/include/c++/11/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 305:/usr/include/c++/11/bits/alloc_traits.h **** 	{ return __a; }
 306:/usr/include/c++/11/bits/alloc_traits.h **** 
 307:/usr/include/c++/11/bits/alloc_traits.h ****     public:
 308:/usr/include/c++/11/bits/alloc_traits.h **** 
 309:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 310:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 311:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 312:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 313:/usr/include/c++/11/bits/alloc_traits.h ****        *
 314:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 315:/usr/include/c++/11/bits/alloc_traits.h ****       */
 316:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 317:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 318:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 319:/usr/include/c++/11/bits/alloc_traits.h **** 
 320:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 321:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 322:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 323:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 324:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 325:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
GAS LISTING x64lin/../common/event.s 			page 62


 326:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 327:/usr/include/c++/11/bits/alloc_traits.h ****        *
 328:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 329:/usr/include/c++/11/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 330:/usr/include/c++/11/bits/alloc_traits.h ****       */
 331:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 332:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 333:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 334:/usr/include/c++/11/bits/alloc_traits.h **** 
 335:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 337:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 339:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 340:/usr/include/c++/11/bits/alloc_traits.h ****        *
 341:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 342:/usr/include/c++/11/bits/alloc_traits.h ****       */
 343:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 344:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 345:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 346:/usr/include/c++/11/bits/alloc_traits.h **** 
 347:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 348:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Tp`
 349:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 350:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 351:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 352:/usr/include/c++/11/bits/alloc_traits.h ****        *
 353:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 354:/usr/include/c++/11/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 355:/usr/include/c++/11/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 356:/usr/include/c++/11/bits/alloc_traits.h ****        *  arguments @a __args...
 357:/usr/include/c++/11/bits/alloc_traits.h ****       */
 358:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 359:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 360:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 361:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 362:/usr/include/c++/11/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 363:/usr/include/c++/11/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 364:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 365:/usr/include/c++/11/bits/alloc_traits.h **** 
 366:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 368:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 370:/usr/include/c++/11/bits/alloc_traits.h ****        *
 371:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 372:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 373:/usr/include/c++/11/bits/alloc_traits.h ****       */
 374:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Tp>
 375:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 376:/usr/include/c++/11/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 377:/usr/include/c++/11/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 378:/usr/include/c++/11/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 379:/usr/include/c++/11/bits/alloc_traits.h **** 
 380:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 381:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 382:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
GAS LISTING x64lin/../common/event.s 			page 63


 383:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 384:/usr/include/c++/11/bits/alloc_traits.h ****        *
 385:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 386:/usr/include/c++/11/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 387:/usr/include/c++/11/bits/alloc_traits.h ****       */
 388:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 389:/usr/include/c++/11/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 390:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 391:/usr/include/c++/11/bits/alloc_traits.h **** 
 392:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 393:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 394:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 395:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 396:/usr/include/c++/11/bits/alloc_traits.h ****        *
 397:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 398:/usr/include/c++/11/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 399:/usr/include/c++/11/bits/alloc_traits.h ****       */
 400:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 401:/usr/include/c++/11/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 402:/usr/include/c++/11/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 403:/usr/include/c++/11/bits/alloc_traits.h ****     };
 404:/usr/include/c++/11/bits/alloc_traits.h **** 
 405:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus > 201703L
 406:/usr/include/c++/11/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 407:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 408:/usr/include/c++/11/bits/alloc_traits.h **** 
 409:/usr/include/c++/11/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 410:/usr/include/c++/11/bits/alloc_traits.h ****   template<typename _Tp>
 411:/usr/include/c++/11/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 412:/usr/include/c++/11/bits/alloc_traits.h ****     {
 413:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator type
 414:/usr/include/c++/11/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 415:/usr/include/c++/11/bits/alloc_traits.h **** 
 416:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocated type
 417:/usr/include/c++/11/bits/alloc_traits.h ****       using value_type = _Tp;
 418:/usr/include/c++/11/bits/alloc_traits.h **** 
 419:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's pointer type.
 420:/usr/include/c++/11/bits/alloc_traits.h ****       using pointer = _Tp*;
 421:/usr/include/c++/11/bits/alloc_traits.h **** 
 422:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 423:/usr/include/c++/11/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 424:/usr/include/c++/11/bits/alloc_traits.h **** 
 425:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 426:/usr/include/c++/11/bits/alloc_traits.h ****       using void_pointer = void*;
 427:/usr/include/c++/11/bits/alloc_traits.h **** 
 428:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 429:/usr/include/c++/11/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 430:/usr/include/c++/11/bits/alloc_traits.h **** 
 431:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's difference type
 432:/usr/include/c++/11/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 433:/usr/include/c++/11/bits/alloc_traits.h **** 
 434:/usr/include/c++/11/bits/alloc_traits.h ****       /// The allocator's size type
 435:/usr/include/c++/11/bits/alloc_traits.h ****       using size_type = std::size_t;
 436:/usr/include/c++/11/bits/alloc_traits.h **** 
 437:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 438:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 439:/usr/include/c++/11/bits/alloc_traits.h **** 
GAS LISTING x64lin/../common/event.s 			page 64


 440:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 441:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 442:/usr/include/c++/11/bits/alloc_traits.h **** 
 443:/usr/include/c++/11/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 444:/usr/include/c++/11/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 445:/usr/include/c++/11/bits/alloc_traits.h **** 
 446:/usr/include/c++/11/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 447:/usr/include/c++/11/bits/alloc_traits.h ****       using is_always_equal = true_type;
 448:/usr/include/c++/11/bits/alloc_traits.h **** 
 449:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 450:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 451:/usr/include/c++/11/bits/alloc_traits.h **** 
 452:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up>
 453:/usr/include/c++/11/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 454:/usr/include/c++/11/bits/alloc_traits.h **** 
 455:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 456:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 457:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 458:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 459:/usr/include/c++/11/bits/alloc_traits.h ****        *
 460:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 461:/usr/include/c++/11/bits/alloc_traits.h ****       */
 462:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 463:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 464:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 465:/usr/include/c++/11/bits/alloc_traits.h **** 
 466:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 467:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 468:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 469:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 470:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 471:/usr/include/c++/11/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 472:/usr/include/c++/11/bits/alloc_traits.h ****        *          of type @c value_type
 473:/usr/include/c++/11/bits/alloc_traits.h ****        *
 474:/usr/include/c++/11/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 475:/usr/include/c++/11/bits/alloc_traits.h ****       */
 476:/usr/include/c++/11/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 477:/usr/include/c++/11/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 478:/usr/include/c++/11/bits/alloc_traits.h ****       {
 479:/usr/include/c++/11/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 480:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 481:/usr/include/c++/11/bits/alloc_traits.h **** #else
 482:/usr/include/c++/11/bits/alloc_traits.h **** 	return __a.allocate(__n);
 483:/usr/include/c++/11/bits/alloc_traits.h **** #endif
 484:/usr/include/c++/11/bits/alloc_traits.h ****       }
 485:/usr/include/c++/11/bits/alloc_traits.h **** 
 486:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 487:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 488:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 490:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 491:/usr/include/c++/11/bits/alloc_traits.h ****        *
 492:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 493:/usr/include/c++/11/bits/alloc_traits.h ****       */
 494:/usr/include/c++/11/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 495:/usr/include/c++/11/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 496:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
GAS LISTING x64lin/../common/event.s 			page 65


 497:/usr/include/c++/11/bits/alloc_traits.h **** 
 498:/usr/include/c++/11/bits/alloc_traits.h ****       /**
 499:/usr/include/c++/11/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 500:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 501:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 502:/usr/include/c++/11/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 503:/usr/include/c++/11/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 504:/usr/include/c++/11/bits/alloc_traits.h ****        *
 505:/usr/include/c++/11/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 506:/usr/include/c++/11/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 507:/usr/include/c++/11/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 508:/usr/include/c++/11/bits/alloc_traits.h ****       */
 509:/usr/include/c++/11/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 510:/usr/include/c++/11/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 511:/usr/include/c++/11/bits/alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 147              		.loc 7 511 2 is_stmt 1 view .LVU27
 148              	.LBB578:
 149              	.LBI578:
 150              		.file 8 "/usr/include/c++/11/bits/stl_construct.h"
   1:/usr/include/c++/11/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_construct.h **** 
   3:/usr/include/c++/11/bits/stl_construct.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_construct.h **** //
   5:/usr/include/c++/11/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_construct.h **** 
  11:/usr/include/c++/11/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_construct.h **** 
  16:/usr/include/c++/11/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_construct.h **** 
  20:/usr/include/c++/11/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_construct.h **** 
  25:/usr/include/c++/11/bits/stl_construct.h **** /*
  26:/usr/include/c++/11/bits/stl_construct.h ****  *
  27:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_construct.h ****  *
  30:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_construct.h ****  *
  38:/usr/include/c++/11/bits/stl_construct.h ****  *
GAS LISTING x64lin/../common/event.s 			page 66


  39:/usr/include/c++/11/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/11/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_construct.h ****  *
  42:/usr/include/c++/11/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_construct.h ****  */
  50:/usr/include/c++/11/bits/stl_construct.h **** 
  51:/usr/include/c++/11/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/11/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/11/bits/stl_construct.h ****  */
  55:/usr/include/c++/11/bits/stl_construct.h **** 
  56:/usr/include/c++/11/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/11/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/11/bits/stl_construct.h **** 
  59:/usr/include/c++/11/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:/usr/include/c++/11/bits/stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:/usr/include/c++/11/bits/stl_construct.h **** 
  64:/usr/include/c++/11/bits/stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:/usr/include/c++/11/bits/stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:/usr/include/c++/11/bits/stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:/usr/include/c++/11/bits/stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:/usr/include/c++/11/bits/stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:/usr/include/c++/11/bits/stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:/usr/include/c++/11/bits/stl_construct.h ****  * to allow use in constant expressions.
  71:/usr/include/c++/11/bits/stl_construct.h ****  */
  72:/usr/include/c++/11/bits/stl_construct.h **** 
  73:/usr/include/c++/11/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/11/bits/stl_construct.h **** {
  75:/usr/include/c++/11/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/11/bits/stl_construct.h **** 
  77:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 201703L
  78:/usr/include/c++/11/bits/stl_construct.h ****   template <typename _Tp>
  79:/usr/include/c++/11/bits/stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:/usr/include/c++/11/bits/stl_construct.h ****     destroy_at(_Tp* __location)
  81:/usr/include/c++/11/bits/stl_construct.h ****     {
  82:/usr/include/c++/11/bits/stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:/usr/include/c++/11/bits/stl_construct.h **** 	{
  84:/usr/include/c++/11/bits/stl_construct.h **** 	  for (auto& __x : *__location)
  85:/usr/include/c++/11/bits/stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:/usr/include/c++/11/bits/stl_construct.h **** 	}
  87:/usr/include/c++/11/bits/stl_construct.h ****       else
  88:/usr/include/c++/11/bits/stl_construct.h **** 	__location->~_Tp();
  89:/usr/include/c++/11/bits/stl_construct.h ****     }
  90:/usr/include/c++/11/bits/stl_construct.h **** 
  91:/usr/include/c++/11/bits/stl_construct.h **** #if __cplusplus >= 202002L
  92:/usr/include/c++/11/bits/stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:/usr/include/c++/11/bits/stl_construct.h ****     constexpr auto
  94:/usr/include/c++/11/bits/stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
 151              		.loc 8 94 5 view .LVU28
GAS LISTING x64lin/../common/event.s 			page 67


 152              	.LBB579:
 153              	.LBI579:
 154              		.file 9 "/usr/include/c++/11/bits/unique_ptr.h"
   1:/usr/include/c++/11/bits/unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   2:/usr/include/c++/11/bits/unique_ptr.h **** 
   3:/usr/include/c++/11/bits/unique_ptr.h **** // Copyright (C) 2008-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/unique_ptr.h **** //
   5:/usr/include/c++/11/bits/unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/unique_ptr.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/unique_ptr.h **** // any later version.
  10:/usr/include/c++/11/bits/unique_ptr.h **** 
  11:/usr/include/c++/11/bits/unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/unique_ptr.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/unique_ptr.h **** 
  16:/usr/include/c++/11/bits/unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/unique_ptr.h **** 
  20:/usr/include/c++/11/bits/unique_ptr.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/unique_ptr.h **** 
  25:/usr/include/c++/11/bits/unique_ptr.h **** /** @file bits/unique_ptr.h
  26:/usr/include/c++/11/bits/unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/11/bits/unique_ptr.h ****  */
  29:/usr/include/c++/11/bits/unique_ptr.h **** 
  30:/usr/include/c++/11/bits/unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  31:/usr/include/c++/11/bits/unique_ptr.h **** #define _UNIQUE_PTR_H 1
  32:/usr/include/c++/11/bits/unique_ptr.h **** 
  33:/usr/include/c++/11/bits/unique_ptr.h **** #include <bits/c++config.h>
  34:/usr/include/c++/11/bits/unique_ptr.h **** #include <debug/assertions.h>
  35:/usr/include/c++/11/bits/unique_ptr.h **** #include <type_traits>
  36:/usr/include/c++/11/bits/unique_ptr.h **** #include <utility>
  37:/usr/include/c++/11/bits/unique_ptr.h **** #include <tuple>
  38:/usr/include/c++/11/bits/unique_ptr.h **** #include <bits/stl_function.h>
  39:/usr/include/c++/11/bits/unique_ptr.h **** #include <bits/functional_hash.h>
  40:/usr/include/c++/11/bits/unique_ptr.h **** #if __cplusplus > 201703L
  41:/usr/include/c++/11/bits/unique_ptr.h **** # include <compare>
  42:/usr/include/c++/11/bits/unique_ptr.h **** # include <ostream>
  43:/usr/include/c++/11/bits/unique_ptr.h **** #endif
  44:/usr/include/c++/11/bits/unique_ptr.h **** 
  45:/usr/include/c++/11/bits/unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/11/bits/unique_ptr.h **** {
  47:/usr/include/c++/11/bits/unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  48:/usr/include/c++/11/bits/unique_ptr.h **** 
  49:/usr/include/c++/11/bits/unique_ptr.h ****   /**
  50:/usr/include/c++/11/bits/unique_ptr.h ****    * @addtogroup pointer_abstractions
  51:/usr/include/c++/11/bits/unique_ptr.h ****    * @{
  52:/usr/include/c++/11/bits/unique_ptr.h ****    */
  53:/usr/include/c++/11/bits/unique_ptr.h **** 
  54:/usr/include/c++/11/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
GAS LISTING x64lin/../common/event.s 			page 68


  55:/usr/include/c++/11/bits/unique_ptr.h **** #pragma GCC diagnostic push
  56:/usr/include/c++/11/bits/unique_ptr.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  57:/usr/include/c++/11/bits/unique_ptr.h ****   template<typename> class auto_ptr;
  58:/usr/include/c++/11/bits/unique_ptr.h **** #pragma GCC diagnostic pop
  59:/usr/include/c++/11/bits/unique_ptr.h **** #endif
  60:/usr/include/c++/11/bits/unique_ptr.h **** 
  61:/usr/include/c++/11/bits/unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr for single objects
  62:/usr/include/c++/11/bits/unique_ptr.h ****   template<typename _Tp>
  63:/usr/include/c++/11/bits/unique_ptr.h ****     struct default_delete
  64:/usr/include/c++/11/bits/unique_ptr.h ****     {
  65:/usr/include/c++/11/bits/unique_ptr.h ****       /// Default constructor
  66:/usr/include/c++/11/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  67:/usr/include/c++/11/bits/unique_ptr.h **** 
  68:/usr/include/c++/11/bits/unique_ptr.h ****       /** @brief Converting constructor.
  69:/usr/include/c++/11/bits/unique_ptr.h ****        *
  70:/usr/include/c++/11/bits/unique_ptr.h ****        * Allows conversion from a deleter for objects of another type, `_Up`,
  71:/usr/include/c++/11/bits/unique_ptr.h ****        * only if `_Up*` is convertible to `_Tp*`.
  72:/usr/include/c++/11/bits/unique_ptr.h ****        */
  73:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Up,
  74:/usr/include/c++/11/bits/unique_ptr.h **** 	       typename = _Require<is_convertible<_Up*, _Tp*>>>
  75:/usr/include/c++/11/bits/unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  76:/usr/include/c++/11/bits/unique_ptr.h **** 
  77:/usr/include/c++/11/bits/unique_ptr.h ****       /// Calls `delete __ptr`
  78:/usr/include/c++/11/bits/unique_ptr.h ****       void
  79:/usr/include/c++/11/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
  80:/usr/include/c++/11/bits/unique_ptr.h ****       {
  81:/usr/include/c++/11/bits/unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  82:/usr/include/c++/11/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  83:/usr/include/c++/11/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  84:/usr/include/c++/11/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  85:/usr/include/c++/11/bits/unique_ptr.h **** 	delete __ptr;
  86:/usr/include/c++/11/bits/unique_ptr.h ****       }
  87:/usr/include/c++/11/bits/unique_ptr.h ****     };
  88:/usr/include/c++/11/bits/unique_ptr.h **** 
  89:/usr/include/c++/11/bits/unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  90:/usr/include/c++/11/bits/unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
  91:/usr/include/c++/11/bits/unique_ptr.h **** 
  92:/usr/include/c++/11/bits/unique_ptr.h ****   /// Specialization of default_delete for arrays, used by `unique_ptr<T[]>`
  93:/usr/include/c++/11/bits/unique_ptr.h ****   template<typename _Tp>
  94:/usr/include/c++/11/bits/unique_ptr.h ****     struct default_delete<_Tp[]>
  95:/usr/include/c++/11/bits/unique_ptr.h ****     {
  96:/usr/include/c++/11/bits/unique_ptr.h ****     public:
  97:/usr/include/c++/11/bits/unique_ptr.h ****       /// Default constructor
  98:/usr/include/c++/11/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  99:/usr/include/c++/11/bits/unique_ptr.h **** 
 100:/usr/include/c++/11/bits/unique_ptr.h ****       /** @brief Converting constructor.
 101:/usr/include/c++/11/bits/unique_ptr.h ****        *
 102:/usr/include/c++/11/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, such as
 103:/usr/include/c++/11/bits/unique_ptr.h ****        * a const-qualified version of `_Tp`.
 104:/usr/include/c++/11/bits/unique_ptr.h ****        *
 105:/usr/include/c++/11/bits/unique_ptr.h ****        * Conversions from types derived from `_Tp` are not allowed because
 106:/usr/include/c++/11/bits/unique_ptr.h ****        * it is undefined to `delete[]` an array of derived types through a
 107:/usr/include/c++/11/bits/unique_ptr.h ****        * pointer to the base type.
 108:/usr/include/c++/11/bits/unique_ptr.h ****        */
 109:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Up,
 110:/usr/include/c++/11/bits/unique_ptr.h **** 	       typename = _Require<is_convertible<_Up(*)[], _Tp(*)[]>>>
 111:/usr/include/c++/11/bits/unique_ptr.h ****         default_delete(const default_delete<_Up[]>&) noexcept { }
GAS LISTING x64lin/../common/event.s 			page 69


 112:/usr/include/c++/11/bits/unique_ptr.h **** 
 113:/usr/include/c++/11/bits/unique_ptr.h ****       /// Calls `delete[] __ptr`
 114:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Up>
 115:/usr/include/c++/11/bits/unique_ptr.h **** 	typename enable_if<is_convertible<_Up(*)[], _Tp(*)[]>::value>::type
 116:/usr/include/c++/11/bits/unique_ptr.h **** 	operator()(_Up* __ptr) const
 117:/usr/include/c++/11/bits/unique_ptr.h **** 	{
 118:/usr/include/c++/11/bits/unique_ptr.h **** 	  static_assert(sizeof(_Tp)>0,
 119:/usr/include/c++/11/bits/unique_ptr.h **** 			"can't delete pointer to incomplete type");
 120:/usr/include/c++/11/bits/unique_ptr.h **** 	  delete [] __ptr;
 121:/usr/include/c++/11/bits/unique_ptr.h **** 	}
 122:/usr/include/c++/11/bits/unique_ptr.h ****     };
 123:/usr/include/c++/11/bits/unique_ptr.h **** 
 124:/usr/include/c++/11/bits/unique_ptr.h ****   /// @cond undocumented
 125:/usr/include/c++/11/bits/unique_ptr.h **** 
 126:/usr/include/c++/11/bits/unique_ptr.h ****   // Manages the pointer and deleter of a unique_ptr
 127:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp>
 128:/usr/include/c++/11/bits/unique_ptr.h ****     class __uniq_ptr_impl
 129:/usr/include/c++/11/bits/unique_ptr.h ****     {
 130:/usr/include/c++/11/bits/unique_ptr.h ****       template <typename _Up, typename _Ep, typename = void>
 131:/usr/include/c++/11/bits/unique_ptr.h **** 	struct _Ptr
 132:/usr/include/c++/11/bits/unique_ptr.h **** 	{
 133:/usr/include/c++/11/bits/unique_ptr.h **** 	  using type = _Up*;
 134:/usr/include/c++/11/bits/unique_ptr.h **** 	};
 135:/usr/include/c++/11/bits/unique_ptr.h **** 
 136:/usr/include/c++/11/bits/unique_ptr.h ****       template <typename _Up, typename _Ep>
 137:/usr/include/c++/11/bits/unique_ptr.h **** 	struct
 138:/usr/include/c++/11/bits/unique_ptr.h **** 	_Ptr<_Up, _Ep, __void_t<typename remove_reference<_Ep>::type::pointer>>
 139:/usr/include/c++/11/bits/unique_ptr.h **** 	{
 140:/usr/include/c++/11/bits/unique_ptr.h **** 	  using type = typename remove_reference<_Ep>::type::pointer;
 141:/usr/include/c++/11/bits/unique_ptr.h **** 	};
 142:/usr/include/c++/11/bits/unique_ptr.h **** 
 143:/usr/include/c++/11/bits/unique_ptr.h ****     public:
 144:/usr/include/c++/11/bits/unique_ptr.h ****       using _DeleterConstraint = enable_if<
 145:/usr/include/c++/11/bits/unique_ptr.h ****         __and_<__not_<is_pointer<_Dp>>,
 146:/usr/include/c++/11/bits/unique_ptr.h **** 	       is_default_constructible<_Dp>>::value>;
 147:/usr/include/c++/11/bits/unique_ptr.h **** 
 148:/usr/include/c++/11/bits/unique_ptr.h ****       using pointer = typename _Ptr<_Tp, _Dp>::type;
 149:/usr/include/c++/11/bits/unique_ptr.h **** 
 150:/usr/include/c++/11/bits/unique_ptr.h ****       static_assert( !is_rvalue_reference<_Dp>::value,
 151:/usr/include/c++/11/bits/unique_ptr.h **** 		     "unique_ptr's deleter type must be a function object type"
 152:/usr/include/c++/11/bits/unique_ptr.h **** 		     " or an lvalue reference type" );
 153:/usr/include/c++/11/bits/unique_ptr.h **** 
 154:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_impl() = default;
 155:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
 156:/usr/include/c++/11/bits/unique_ptr.h **** 
 157:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del>
 158:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_impl(pointer __p, _Del&& __d)
 159:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t(__p, std::forward<_Del>(__d)) { }
 160:/usr/include/c++/11/bits/unique_ptr.h **** 
 161:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_impl(__uniq_ptr_impl&& __u) noexcept
 162:/usr/include/c++/11/bits/unique_ptr.h ****       : _M_t(std::move(__u._M_t))
 163:/usr/include/c++/11/bits/unique_ptr.h ****       { __u._M_ptr() = nullptr; }
 164:/usr/include/c++/11/bits/unique_ptr.h **** 
 165:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
 166:/usr/include/c++/11/bits/unique_ptr.h ****       {
 167:/usr/include/c++/11/bits/unique_ptr.h **** 	reset(__u.release());
 168:/usr/include/c++/11/bits/unique_ptr.h **** 	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
GAS LISTING x64lin/../common/event.s 			page 70


 169:/usr/include/c++/11/bits/unique_ptr.h **** 	return *this;
 170:/usr/include/c++/11/bits/unique_ptr.h ****       }
 171:/usr/include/c++/11/bits/unique_ptr.h **** 
 172:/usr/include/c++/11/bits/unique_ptr.h ****       pointer&   _M_ptr() { return std::get<0>(_M_t); }
 173:/usr/include/c++/11/bits/unique_ptr.h ****       pointer    _M_ptr() const { return std::get<0>(_M_t); }
 174:/usr/include/c++/11/bits/unique_ptr.h ****       _Dp&       _M_deleter() { return std::get<1>(_M_t); }
 175:/usr/include/c++/11/bits/unique_ptr.h ****       const _Dp& _M_deleter() const { return std::get<1>(_M_t); }
 176:/usr/include/c++/11/bits/unique_ptr.h **** 
 177:/usr/include/c++/11/bits/unique_ptr.h ****       void reset(pointer __p) noexcept
 178:/usr/include/c++/11/bits/unique_ptr.h ****       {
 179:/usr/include/c++/11/bits/unique_ptr.h **** 	const pointer __old_p = _M_ptr();
 180:/usr/include/c++/11/bits/unique_ptr.h **** 	_M_ptr() = __p;
 181:/usr/include/c++/11/bits/unique_ptr.h **** 	if (__old_p)
 182:/usr/include/c++/11/bits/unique_ptr.h **** 	  _M_deleter()(__old_p);
 183:/usr/include/c++/11/bits/unique_ptr.h ****       }
 184:/usr/include/c++/11/bits/unique_ptr.h **** 
 185:/usr/include/c++/11/bits/unique_ptr.h ****       pointer release() noexcept
 186:/usr/include/c++/11/bits/unique_ptr.h ****       {
 187:/usr/include/c++/11/bits/unique_ptr.h **** 	pointer __p = _M_ptr();
 188:/usr/include/c++/11/bits/unique_ptr.h **** 	_M_ptr() = nullptr;
 189:/usr/include/c++/11/bits/unique_ptr.h **** 	return __p;
 190:/usr/include/c++/11/bits/unique_ptr.h ****       }
 191:/usr/include/c++/11/bits/unique_ptr.h **** 
 192:/usr/include/c++/11/bits/unique_ptr.h ****       void
 193:/usr/include/c++/11/bits/unique_ptr.h ****       swap(__uniq_ptr_impl& __rhs) noexcept
 194:/usr/include/c++/11/bits/unique_ptr.h ****       {
 195:/usr/include/c++/11/bits/unique_ptr.h **** 	using std::swap;
 196:/usr/include/c++/11/bits/unique_ptr.h **** 	swap(this->_M_ptr(), __rhs._M_ptr());
 197:/usr/include/c++/11/bits/unique_ptr.h **** 	swap(this->_M_deleter(), __rhs._M_deleter());
 198:/usr/include/c++/11/bits/unique_ptr.h ****       }
 199:/usr/include/c++/11/bits/unique_ptr.h **** 
 200:/usr/include/c++/11/bits/unique_ptr.h ****     private:
 201:/usr/include/c++/11/bits/unique_ptr.h ****       tuple<pointer, _Dp> _M_t;
 202:/usr/include/c++/11/bits/unique_ptr.h ****     };
 203:/usr/include/c++/11/bits/unique_ptr.h **** 
 204:/usr/include/c++/11/bits/unique_ptr.h ****   // Defines move construction + assignment as either defaulted or deleted.
 205:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp,
 206:/usr/include/c++/11/bits/unique_ptr.h **** 	    bool = is_move_constructible<_Dp>::value,
 207:/usr/include/c++/11/bits/unique_ptr.h **** 	    bool = is_move_assignable<_Dp>::value>
 208:/usr/include/c++/11/bits/unique_ptr.h ****     struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
 209:/usr/include/c++/11/bits/unique_ptr.h ****     {
 210:/usr/include/c++/11/bits/unique_ptr.h ****       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
 211:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data(__uniq_ptr_data&&) = default;
 212:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
 213:/usr/include/c++/11/bits/unique_ptr.h ****     };
 214:/usr/include/c++/11/bits/unique_ptr.h **** 
 215:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp>
 216:/usr/include/c++/11/bits/unique_ptr.h ****     struct __uniq_ptr_data<_Tp, _Dp, true, false> : __uniq_ptr_impl<_Tp, _Dp>
 217:/usr/include/c++/11/bits/unique_ptr.h ****     {
 218:/usr/include/c++/11/bits/unique_ptr.h ****       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
 219:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data(__uniq_ptr_data&&) = default;
 220:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = delete;
 221:/usr/include/c++/11/bits/unique_ptr.h ****     };
 222:/usr/include/c++/11/bits/unique_ptr.h **** 
 223:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp>
 224:/usr/include/c++/11/bits/unique_ptr.h ****     struct __uniq_ptr_data<_Tp, _Dp, false, true> : __uniq_ptr_impl<_Tp, _Dp>
 225:/usr/include/c++/11/bits/unique_ptr.h ****     {
GAS LISTING x64lin/../common/event.s 			page 71


 226:/usr/include/c++/11/bits/unique_ptr.h ****       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
 227:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data(__uniq_ptr_data&&) = delete;
 228:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
 229:/usr/include/c++/11/bits/unique_ptr.h ****     };
 230:/usr/include/c++/11/bits/unique_ptr.h **** 
 231:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp>
 232:/usr/include/c++/11/bits/unique_ptr.h ****     struct __uniq_ptr_data<_Tp, _Dp, false, false> : __uniq_ptr_impl<_Tp, _Dp>
 233:/usr/include/c++/11/bits/unique_ptr.h ****     {
 234:/usr/include/c++/11/bits/unique_ptr.h ****       using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
 235:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data(__uniq_ptr_data&&) = delete;
 236:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = delete;
 237:/usr/include/c++/11/bits/unique_ptr.h ****     };
 238:/usr/include/c++/11/bits/unique_ptr.h ****   /// @endcond
 239:/usr/include/c++/11/bits/unique_ptr.h **** 
 240:/usr/include/c++/11/bits/unique_ptr.h ****   /// 20.7.1.2 unique_ptr for single objects.
 241:/usr/include/c++/11/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp = default_delete<_Tp>>
 242:/usr/include/c++/11/bits/unique_ptr.h ****     class unique_ptr
 243:/usr/include/c++/11/bits/unique_ptr.h ****     {
 244:/usr/include/c++/11/bits/unique_ptr.h ****       template <typename _Up>
 245:/usr/include/c++/11/bits/unique_ptr.h **** 	using _DeleterConstraint =
 246:/usr/include/c++/11/bits/unique_ptr.h **** 	  typename __uniq_ptr_impl<_Tp, _Up>::_DeleterConstraint::type;
 247:/usr/include/c++/11/bits/unique_ptr.h **** 
 248:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data<_Tp, _Dp> _M_t;
 249:/usr/include/c++/11/bits/unique_ptr.h **** 
 250:/usr/include/c++/11/bits/unique_ptr.h ****     public:
 251:/usr/include/c++/11/bits/unique_ptr.h ****       using pointer	  = typename __uniq_ptr_impl<_Tp, _Dp>::pointer;
 252:/usr/include/c++/11/bits/unique_ptr.h ****       using element_type  = _Tp;
 253:/usr/include/c++/11/bits/unique_ptr.h ****       using deleter_type  = _Dp;
 254:/usr/include/c++/11/bits/unique_ptr.h **** 
 255:/usr/include/c++/11/bits/unique_ptr.h ****     private:
 256:/usr/include/c++/11/bits/unique_ptr.h ****       // helper template for detecting a safe conversion from another
 257:/usr/include/c++/11/bits/unique_ptr.h ****       // unique_ptr
 258:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Up, typename _Ep>
 259:/usr/include/c++/11/bits/unique_ptr.h **** 	using __safe_conversion_up = __and_<
 260:/usr/include/c++/11/bits/unique_ptr.h **** 	  is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 261:/usr/include/c++/11/bits/unique_ptr.h **** 	  __not_<is_array<_Up>>
 262:/usr/include/c++/11/bits/unique_ptr.h ****         >;
 263:/usr/include/c++/11/bits/unique_ptr.h **** 
 264:/usr/include/c++/11/bits/unique_ptr.h ****     public:
 265:/usr/include/c++/11/bits/unique_ptr.h ****       // Constructors.
 266:/usr/include/c++/11/bits/unique_ptr.h **** 
 267:/usr/include/c++/11/bits/unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 268:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
 269:/usr/include/c++/11/bits/unique_ptr.h **** 	constexpr unique_ptr() noexcept
 270:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t()
 271:/usr/include/c++/11/bits/unique_ptr.h **** 	{ }
 272:/usr/include/c++/11/bits/unique_ptr.h **** 
 273:/usr/include/c++/11/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 274:/usr/include/c++/11/bits/unique_ptr.h ****        *
 275:/usr/include/c++/11/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 276:/usr/include/c++/11/bits/unique_ptr.h ****        *
 277:/usr/include/c++/11/bits/unique_ptr.h ****        * The deleter will be value-initialized.
 278:/usr/include/c++/11/bits/unique_ptr.h ****        */
 279:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
 280:/usr/include/c++/11/bits/unique_ptr.h **** 	explicit
 281:/usr/include/c++/11/bits/unique_ptr.h **** 	unique_ptr(pointer __p) noexcept
 282:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t(__p)
GAS LISTING x64lin/../common/event.s 			page 72


 283:/usr/include/c++/11/bits/unique_ptr.h ****         { }
 284:/usr/include/c++/11/bits/unique_ptr.h **** 
 285:/usr/include/c++/11/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 286:/usr/include/c++/11/bits/unique_ptr.h ****        *
 287:/usr/include/c++/11/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 288:/usr/include/c++/11/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 289:/usr/include/c++/11/bits/unique_ptr.h ****        *
 290:/usr/include/c++/11/bits/unique_ptr.h ****        * The deleter will be initialized with @p __d
 291:/usr/include/c++/11/bits/unique_ptr.h ****        */
 292:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = deleter_type,
 293:/usr/include/c++/11/bits/unique_ptr.h **** 	       typename = _Require<is_copy_constructible<_Del>>>
 294:/usr/include/c++/11/bits/unique_ptr.h **** 	unique_ptr(pointer __p, const deleter_type& __d) noexcept
 295:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t(__p, __d) { }
 296:/usr/include/c++/11/bits/unique_ptr.h **** 
 297:/usr/include/c++/11/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 298:/usr/include/c++/11/bits/unique_ptr.h ****        *
 299:/usr/include/c++/11/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 300:/usr/include/c++/11/bits/unique_ptr.h ****        * @param __d  An rvalue reference to a (non-reference) deleter.
 301:/usr/include/c++/11/bits/unique_ptr.h ****        *
 302:/usr/include/c++/11/bits/unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
 303:/usr/include/c++/11/bits/unique_ptr.h ****        */
 304:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = deleter_type,
 305:/usr/include/c++/11/bits/unique_ptr.h **** 	       typename = _Require<is_move_constructible<_Del>>>
 306:/usr/include/c++/11/bits/unique_ptr.h **** 	unique_ptr(pointer __p,
 307:/usr/include/c++/11/bits/unique_ptr.h **** 		   __enable_if_t<!is_lvalue_reference<_Del>::value,
 308:/usr/include/c++/11/bits/unique_ptr.h **** 				 _Del&&> __d) noexcept
 309:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t(__p, std::move(__d))
 310:/usr/include/c++/11/bits/unique_ptr.h **** 	{ }
 311:/usr/include/c++/11/bits/unique_ptr.h **** 
 312:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = deleter_type,
 313:/usr/include/c++/11/bits/unique_ptr.h **** 	       typename _DelUnref = typename remove_reference<_Del>::type>
 314:/usr/include/c++/11/bits/unique_ptr.h **** 	unique_ptr(pointer,
 315:/usr/include/c++/11/bits/unique_ptr.h **** 		   __enable_if_t<is_lvalue_reference<_Del>::value,
 316:/usr/include/c++/11/bits/unique_ptr.h **** 				 _DelUnref&&>) = delete;
 317:/usr/include/c++/11/bits/unique_ptr.h **** 
 318:/usr/include/c++/11/bits/unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 319:/usr/include/c++/11/bits/unique_ptr.h ****       template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
 320:/usr/include/c++/11/bits/unique_ptr.h **** 	constexpr unique_ptr(nullptr_t) noexcept
 321:/usr/include/c++/11/bits/unique_ptr.h **** 	: _M_t()
 322:/usr/include/c++/11/bits/unique_ptr.h **** 	{ }
 323:/usr/include/c++/11/bits/unique_ptr.h **** 
 324:/usr/include/c++/11/bits/unique_ptr.h ****       // Move constructors.
 325:/usr/include/c++/11/bits/unique_ptr.h **** 
 326:/usr/include/c++/11/bits/unique_ptr.h ****       /// Move constructor.
 327:/usr/include/c++/11/bits/unique_ptr.h ****       unique_ptr(unique_ptr&&) = default;
 155              		.loc 9 327 7 view .LVU29
 156              	.LBB580:
 157              	.LBI580:
 211:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
 158              		.loc 9 211 7 view .LVU30
 159              	.LBB581:
 160              	.LBI581:
 161:/usr/include/c++/11/bits/unique_ptr.h ****       : _M_t(std::move(__u._M_t))
 161              		.loc 9 161 7 view .LVU31
 162              	.LBB582:
 163              	.LBB583:
 164              	.LBI583:
GAS LISTING x64lin/../common/event.s 			page 73


 165              		.file 10 "/usr/include/c++/11/bits/move.h"
   1:/usr/include/c++/11/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/c++/11/bits/move.h **** 
   3:/usr/include/c++/11/bits/move.h **** // Copyright (C) 2007-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/move.h **** //
   5:/usr/include/c++/11/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/move.h **** // any later version.
  10:/usr/include/c++/11/bits/move.h **** 
  11:/usr/include/c++/11/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/move.h **** 
  16:/usr/include/c++/11/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/move.h **** 
  20:/usr/include/c++/11/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/move.h **** 
  25:/usr/include/c++/11/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/11/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/11/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/11/bits/move.h ****  */
  29:/usr/include/c++/11/bits/move.h **** 
  30:/usr/include/c++/11/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/11/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/11/bits/move.h **** 
  33:/usr/include/c++/11/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/11/bits/move.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/11/bits/move.h **** # include <bits/concept_check.h>
  36:/usr/include/c++/11/bits/move.h **** #endif
  37:/usr/include/c++/11/bits/move.h **** 
  38:/usr/include/c++/11/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/usr/include/c++/11/bits/move.h **** {
  40:/usr/include/c++/11/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/usr/include/c++/11/bits/move.h **** 
  42:/usr/include/c++/11/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:/usr/include/c++/11/bits/move.h ****   /**
  44:/usr/include/c++/11/bits/move.h ****    *  @brief Same as C++11 std::addressof
  45:/usr/include/c++/11/bits/move.h ****    *  @ingroup utilities
  46:/usr/include/c++/11/bits/move.h ****    */
  47:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
  48:/usr/include/c++/11/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:/usr/include/c++/11/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:/usr/include/c++/11/bits/move.h ****     { return __builtin_addressof(__r); }
  51:/usr/include/c++/11/bits/move.h **** 
  52:/usr/include/c++/11/bits/move.h **** #if __cplusplus >= 201103L
  53:/usr/include/c++/11/bits/move.h **** 
  54:/usr/include/c++/11/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:/usr/include/c++/11/bits/move.h **** } // namespace
  56:/usr/include/c++/11/bits/move.h **** 
GAS LISTING x64lin/../common/event.s 			page 74


  57:/usr/include/c++/11/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/usr/include/c++/11/bits/move.h **** 
  59:/usr/include/c++/11/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/11/bits/move.h **** {
  61:/usr/include/c++/11/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/11/bits/move.h **** 
  63:/usr/include/c++/11/bits/move.h ****   /**
  64:/usr/include/c++/11/bits/move.h ****    *  @addtogroup utilities
  65:/usr/include/c++/11/bits/move.h ****    *  @{
  66:/usr/include/c++/11/bits/move.h ****    */
  67:/usr/include/c++/11/bits/move.h **** 
  68:/usr/include/c++/11/bits/move.h ****   /**
  69:/usr/include/c++/11/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/usr/include/c++/11/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/usr/include/c++/11/bits/move.h ****    *
  72:/usr/include/c++/11/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/usr/include/c++/11/bits/move.h ****    */
  74:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
  75:/usr/include/c++/11/bits/move.h ****     _GLIBCXX_NODISCARD
  76:/usr/include/c++/11/bits/move.h ****     constexpr _Tp&&
  77:/usr/include/c++/11/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  78:/usr/include/c++/11/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  79:/usr/include/c++/11/bits/move.h **** 
  80:/usr/include/c++/11/bits/move.h ****   /**
  81:/usr/include/c++/11/bits/move.h ****    *  @brief  Forward an rvalue.
  82:/usr/include/c++/11/bits/move.h ****    *  @return The parameter cast to the specified type.
  83:/usr/include/c++/11/bits/move.h ****    *
  84:/usr/include/c++/11/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  85:/usr/include/c++/11/bits/move.h ****    */
  86:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
  87:/usr/include/c++/11/bits/move.h ****     _GLIBCXX_NODISCARD
  88:/usr/include/c++/11/bits/move.h ****     constexpr _Tp&&
  89:/usr/include/c++/11/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  90:/usr/include/c++/11/bits/move.h ****     {
  91:/usr/include/c++/11/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value,
  92:/usr/include/c++/11/bits/move.h **** 	  "std::forward must not be used to convert an rvalue to an lvalue");
  93:/usr/include/c++/11/bits/move.h ****       return static_cast<_Tp&&>(__t);
  94:/usr/include/c++/11/bits/move.h ****     }
  95:/usr/include/c++/11/bits/move.h **** 
  96:/usr/include/c++/11/bits/move.h ****   /**
  97:/usr/include/c++/11/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  98:/usr/include/c++/11/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  99:/usr/include/c++/11/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
 100:/usr/include/c++/11/bits/move.h ****   */
 101:/usr/include/c++/11/bits/move.h ****   template<typename _Tp>
 102:/usr/include/c++/11/bits/move.h ****     _GLIBCXX_NODISCARD
 103:/usr/include/c++/11/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 104:/usr/include/c++/11/bits/move.h ****     move(_Tp&& __t) noexcept
 166              		.loc 10 104 5 view .LVU32
 167              		.loc 10 104 5 is_stmt 0 view .LVU33
 168              	.LBE583:
 169              	.LBB584:
 170              	.LBI584:
 171              		.file 11 "/usr/include/c++/11/tuple"
   1:/usr/include/c++/11/tuple **** // <tuple> -*- C++ -*-
   2:/usr/include/c++/11/tuple **** 
   3:/usr/include/c++/11/tuple **** // Copyright (C) 2007-2021 Free Software Foundation, Inc.
GAS LISTING x64lin/../common/event.s 			page 75


   4:/usr/include/c++/11/tuple **** //
   5:/usr/include/c++/11/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/tuple **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/tuple **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/tuple **** // any later version.
  10:/usr/include/c++/11/tuple **** 
  11:/usr/include/c++/11/tuple **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/tuple **** // GNU General Public License for more details.
  15:/usr/include/c++/11/tuple **** 
  16:/usr/include/c++/11/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/tuple **** 
  20:/usr/include/c++/11/tuple **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/tuple **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/tuple **** 
  25:/usr/include/c++/11/tuple **** /** @file include/tuple
  26:/usr/include/c++/11/tuple ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/11/tuple ****  */
  28:/usr/include/c++/11/tuple **** 
  29:/usr/include/c++/11/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/usr/include/c++/11/tuple **** #define _GLIBCXX_TUPLE 1
  31:/usr/include/c++/11/tuple **** 
  32:/usr/include/c++/11/tuple **** #pragma GCC system_header
  33:/usr/include/c++/11/tuple **** 
  34:/usr/include/c++/11/tuple **** #if __cplusplus < 201103L
  35:/usr/include/c++/11/tuple **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/11/tuple **** #else
  37:/usr/include/c++/11/tuple **** 
  38:/usr/include/c++/11/tuple **** #include <utility>
  39:/usr/include/c++/11/tuple **** #include <array>
  40:/usr/include/c++/11/tuple **** #include <bits/uses_allocator.h>
  41:/usr/include/c++/11/tuple **** #include <bits/invoke.h>
  42:/usr/include/c++/11/tuple **** #if __cplusplus > 201703L
  43:/usr/include/c++/11/tuple **** # include <compare>
  44:/usr/include/c++/11/tuple **** # define __cpp_lib_constexpr_tuple 201811L
  45:/usr/include/c++/11/tuple **** #endif
  46:/usr/include/c++/11/tuple **** 
  47:/usr/include/c++/11/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/11/tuple **** {
  49:/usr/include/c++/11/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/11/tuple **** 
  51:/usr/include/c++/11/tuple ****   /**
  52:/usr/include/c++/11/tuple ****    *  @addtogroup utilities
  53:/usr/include/c++/11/tuple ****    *  @{
  54:/usr/include/c++/11/tuple ****    */
  55:/usr/include/c++/11/tuple **** 
  56:/usr/include/c++/11/tuple ****   template<typename... _Elements>
  57:/usr/include/c++/11/tuple ****     class tuple;
  58:/usr/include/c++/11/tuple **** 
  59:/usr/include/c++/11/tuple ****   template<typename _Tp>
  60:/usr/include/c++/11/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
GAS LISTING x64lin/../common/event.s 			page 76


  61:/usr/include/c++/11/tuple **** 
  62:/usr/include/c++/11/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  63:/usr/include/c++/11/tuple ****   template<typename _El0, typename... _El>
  64:/usr/include/c++/11/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
  65:/usr/include/c++/11/tuple **** 
  66:/usr/include/c++/11/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  67:/usr/include/c++/11/tuple ****   template<typename _Tp>
  68:/usr/include/c++/11/tuple ****     using __empty_not_final
  69:/usr/include/c++/11/tuple ****     = typename conditional<__is_final(_Tp), false_type,
  70:/usr/include/c++/11/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  71:/usr/include/c++/11/tuple **** 
  72:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head,
  73:/usr/include/c++/11/tuple **** 	   bool = __empty_not_final<_Head>::value>
  74:/usr/include/c++/11/tuple ****     struct _Head_base;
  75:/usr/include/c++/11/tuple **** 
  76:/usr/include/c++/11/tuple **** #if __has_cpp_attribute(__no_unique_address__)
  77:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head>
  78:/usr/include/c++/11/tuple ****     struct _Head_base<_Idx, _Head, true>
  79:/usr/include/c++/11/tuple ****     {
  80:/usr/include/c++/11/tuple ****       constexpr _Head_base()
  81:/usr/include/c++/11/tuple ****       : _M_head_impl() { }
  82:/usr/include/c++/11/tuple **** 
  83:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head& __h)
  84:/usr/include/c++/11/tuple ****       : _M_head_impl(__h) { }
  85:/usr/include/c++/11/tuple **** 
  86:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  87:/usr/include/c++/11/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  88:/usr/include/c++/11/tuple **** 
  89:/usr/include/c++/11/tuple ****       template<typename _UHead>
  90:/usr/include/c++/11/tuple **** 	constexpr _Head_base(_UHead&& __h)
  91:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
  92:/usr/include/c++/11/tuple **** 
  93:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
  94:/usr/include/c++/11/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  95:/usr/include/c++/11/tuple ****       : _M_head_impl() { }
  96:/usr/include/c++/11/tuple **** 
  97:/usr/include/c++/11/tuple ****       template<typename _Alloc>
  98:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
  99:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 100:/usr/include/c++/11/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 101:/usr/include/c++/11/tuple **** 
 102:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 103:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 104:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 105:/usr/include/c++/11/tuple **** 	: _M_head_impl(*__a._M_a) { }
 106:/usr/include/c++/11/tuple **** 
 107:/usr/include/c++/11/tuple ****       template<typename _UHead>
 108:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 109:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 110:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 111:/usr/include/c++/11/tuple **** 
 112:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 113:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 114:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 115:/usr/include/c++/11/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 116:/usr/include/c++/11/tuple **** 	{ }
 117:/usr/include/c++/11/tuple **** 
GAS LISTING x64lin/../common/event.s 			page 77


 118:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 119:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 120:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 121:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 122:/usr/include/c++/11/tuple **** 
 123:/usr/include/c++/11/tuple ****       static constexpr _Head&
 124:/usr/include/c++/11/tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 125:/usr/include/c++/11/tuple **** 
 126:/usr/include/c++/11/tuple ****       static constexpr const _Head&
 127:/usr/include/c++/11/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 128:/usr/include/c++/11/tuple **** 
 129:/usr/include/c++/11/tuple ****       [[__no_unique_address__]] _Head _M_head_impl;
 130:/usr/include/c++/11/tuple ****     };
 131:/usr/include/c++/11/tuple **** #else
 132:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head>
 133:/usr/include/c++/11/tuple ****     struct _Head_base<_Idx, _Head, true>
 134:/usr/include/c++/11/tuple ****     : public _Head
 135:/usr/include/c++/11/tuple ****     {
 136:/usr/include/c++/11/tuple ****       constexpr _Head_base()
 137:/usr/include/c++/11/tuple ****       : _Head() { }
 138:/usr/include/c++/11/tuple **** 
 139:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head& __h)
 140:/usr/include/c++/11/tuple ****       : _Head(__h) { }
 141:/usr/include/c++/11/tuple **** 
 142:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 143:/usr/include/c++/11/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 144:/usr/include/c++/11/tuple **** 
 145:/usr/include/c++/11/tuple ****       template<typename _UHead>
 146:/usr/include/c++/11/tuple ****         constexpr _Head_base(_UHead&& __h)
 147:/usr/include/c++/11/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
 148:/usr/include/c++/11/tuple **** 
 149:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 150:/usr/include/c++/11/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
 151:/usr/include/c++/11/tuple ****       : _Head() { }
 152:/usr/include/c++/11/tuple **** 
 153:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 154:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 155:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 156:/usr/include/c++/11/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
 157:/usr/include/c++/11/tuple **** 
 158:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 159:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 160:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 161:/usr/include/c++/11/tuple **** 	: _Head(*__a._M_a) { }
 162:/usr/include/c++/11/tuple **** 
 163:/usr/include/c++/11/tuple ****       template<typename _UHead>
 164:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 165:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 166:/usr/include/c++/11/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 167:/usr/include/c++/11/tuple **** 
 168:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 169:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 170:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 171:/usr/include/c++/11/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 172:/usr/include/c++/11/tuple **** 
 173:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 174:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
GAS LISTING x64lin/../common/event.s 			page 78


 175:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 176:/usr/include/c++/11/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 177:/usr/include/c++/11/tuple **** 
 178:/usr/include/c++/11/tuple ****       static constexpr _Head&
 179:/usr/include/c++/11/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 180:/usr/include/c++/11/tuple **** 
 181:/usr/include/c++/11/tuple ****       static constexpr const _Head&
 182:/usr/include/c++/11/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 183:/usr/include/c++/11/tuple ****     };
 184:/usr/include/c++/11/tuple **** #endif
 185:/usr/include/c++/11/tuple **** 
 186:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head>
 187:/usr/include/c++/11/tuple ****     struct _Head_base<_Idx, _Head, false>
 188:/usr/include/c++/11/tuple ****     {
 189:/usr/include/c++/11/tuple ****       constexpr _Head_base()
 190:/usr/include/c++/11/tuple ****       : _M_head_impl() { }
 191:/usr/include/c++/11/tuple **** 
 192:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head& __h)
 193:/usr/include/c++/11/tuple ****       : _M_head_impl(__h) { }
 194:/usr/include/c++/11/tuple **** 
 195:/usr/include/c++/11/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 196:/usr/include/c++/11/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 197:/usr/include/c++/11/tuple **** 
 198:/usr/include/c++/11/tuple ****       template<typename _UHead>
 199:/usr/include/c++/11/tuple ****         constexpr _Head_base(_UHead&& __h)
 200:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 201:/usr/include/c++/11/tuple **** 
 202:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 203:/usr/include/c++/11/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
 204:/usr/include/c++/11/tuple ****       : _M_head_impl() { }
 205:/usr/include/c++/11/tuple **** 
 206:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 207:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 208:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 209:/usr/include/c++/11/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 210:/usr/include/c++/11/tuple **** 
 211:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 212:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 213:/usr/include/c++/11/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 214:/usr/include/c++/11/tuple **** 	: _M_head_impl(*__a._M_a) { }
 215:/usr/include/c++/11/tuple **** 
 216:/usr/include/c++/11/tuple ****       template<typename _UHead>
 217:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 218:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 219:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 220:/usr/include/c++/11/tuple **** 
 221:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 222:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 223:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 224:/usr/include/c++/11/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 225:/usr/include/c++/11/tuple **** 	{ }
 226:/usr/include/c++/11/tuple **** 
 227:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 228:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 229:/usr/include/c++/11/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 230:/usr/include/c++/11/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 231:/usr/include/c++/11/tuple **** 
GAS LISTING x64lin/../common/event.s 			page 79


 232:/usr/include/c++/11/tuple ****       static constexpr _Head&
 233:/usr/include/c++/11/tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 234:/usr/include/c++/11/tuple **** 
 235:/usr/include/c++/11/tuple ****       static constexpr const _Head&
 236:/usr/include/c++/11/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 237:/usr/include/c++/11/tuple **** 
 238:/usr/include/c++/11/tuple ****       _Head _M_head_impl;
 239:/usr/include/c++/11/tuple ****     };
 240:/usr/include/c++/11/tuple **** 
 241:/usr/include/c++/11/tuple ****   /**
 242:/usr/include/c++/11/tuple ****    * Contains the actual implementation of the @c tuple template, stored
 243:/usr/include/c++/11/tuple ****    * as a recursive inheritance hierarchy from the first element (most
 244:/usr/include/c++/11/tuple ****    * derived class) to the last (least derived class). The @c Idx
 245:/usr/include/c++/11/tuple ****    * parameter gives the 0-based index of the element stored at this
 246:/usr/include/c++/11/tuple ****    * point in the hierarchy; we use it to implement a constant-time
 247:/usr/include/c++/11/tuple ****    * get() operation.
 248:/usr/include/c++/11/tuple ****    */
 249:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename... _Elements>
 250:/usr/include/c++/11/tuple ****     struct _Tuple_impl;
 251:/usr/include/c++/11/tuple **** 
 252:/usr/include/c++/11/tuple ****   /**
 253:/usr/include/c++/11/tuple ****    * Recursive tuple implementation. Here we store the @c Head element
 254:/usr/include/c++/11/tuple ****    * and derive from a @c Tuple_impl containing the remaining elements
 255:/usr/include/c++/11/tuple ****    * (which contains the @c Tail).
 256:/usr/include/c++/11/tuple ****    */
 257:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head, typename... _Tail>
 258:/usr/include/c++/11/tuple ****     struct _Tuple_impl<_Idx, _Head, _Tail...>
 259:/usr/include/c++/11/tuple ****     : public _Tuple_impl<_Idx + 1, _Tail...>,
 260:/usr/include/c++/11/tuple ****       private _Head_base<_Idx, _Head>
 261:/usr/include/c++/11/tuple ****     {
 262:/usr/include/c++/11/tuple ****       template<size_t, typename...> friend struct _Tuple_impl;
 263:/usr/include/c++/11/tuple **** 
 264:/usr/include/c++/11/tuple ****       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
 265:/usr/include/c++/11/tuple ****       typedef _Head_base<_Idx, _Head> _Base;
 266:/usr/include/c++/11/tuple **** 
 267:/usr/include/c++/11/tuple ****       static constexpr _Head&
 268:/usr/include/c++/11/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 269:/usr/include/c++/11/tuple **** 
 270:/usr/include/c++/11/tuple ****       static constexpr const _Head&
 271:/usr/include/c++/11/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 272:/usr/include/c++/11/tuple **** 
 273:/usr/include/c++/11/tuple ****       static constexpr _Inherited&
 274:/usr/include/c++/11/tuple ****       _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 275:/usr/include/c++/11/tuple **** 
 276:/usr/include/c++/11/tuple ****       static constexpr const _Inherited&
 277:/usr/include/c++/11/tuple ****       _M_tail(const _Tuple_impl& __t) noexcept { return __t; }
 278:/usr/include/c++/11/tuple **** 
 279:/usr/include/c++/11/tuple ****       constexpr _Tuple_impl()
 280:/usr/include/c++/11/tuple ****       : _Inherited(), _Base() { }
 281:/usr/include/c++/11/tuple **** 
 282:/usr/include/c++/11/tuple ****       explicit constexpr
 283:/usr/include/c++/11/tuple ****       _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 284:/usr/include/c++/11/tuple ****       : _Inherited(__tail...), _Base(__head)
 285:/usr/include/c++/11/tuple ****       { }
 286:/usr/include/c++/11/tuple **** 
 287:/usr/include/c++/11/tuple ****       template<typename _UHead, typename... _UTail,
 288:/usr/include/c++/11/tuple **** 	       typename = __enable_if_t<sizeof...(_Tail) == sizeof...(_UTail)>>
GAS LISTING x64lin/../common/event.s 			page 80


 289:/usr/include/c++/11/tuple **** 	explicit constexpr
 290:/usr/include/c++/11/tuple **** 	_Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 291:/usr/include/c++/11/tuple **** 	: _Inherited(std::forward<_UTail>(__tail)...),
 292:/usr/include/c++/11/tuple **** 	  _Base(std::forward<_UHead>(__head))
 293:/usr/include/c++/11/tuple **** 	{ }
 294:/usr/include/c++/11/tuple **** 
 295:/usr/include/c++/11/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 296:/usr/include/c++/11/tuple **** 
 297:/usr/include/c++/11/tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 298:/usr/include/c++/11/tuple ****       // 2729. Missing SFINAE on std::pair::operator=
 299:/usr/include/c++/11/tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 300:/usr/include/c++/11/tuple **** 
 301:/usr/include/c++/11/tuple ****       _Tuple_impl(_Tuple_impl&&) = default;
 302:/usr/include/c++/11/tuple **** 
 303:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 304:/usr/include/c++/11/tuple **** 	constexpr
 305:/usr/include/c++/11/tuple **** 	_Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
 306:/usr/include/c++/11/tuple **** 	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 307:/usr/include/c++/11/tuple **** 	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in))
 308:/usr/include/c++/11/tuple **** 	{ }
 309:/usr/include/c++/11/tuple **** 
 310:/usr/include/c++/11/tuple ****       template<typename _UHead, typename... _UTails>
 311:/usr/include/c++/11/tuple **** 	constexpr
 312:/usr/include/c++/11/tuple **** 	_Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 313:/usr/include/c++/11/tuple **** 	: _Inherited(std::move
 314:/usr/include/c++/11/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 315:/usr/include/c++/11/tuple **** 	  _Base(std::forward<_UHead>
 316:/usr/include/c++/11/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)))
 317:/usr/include/c++/11/tuple **** 	{ }
 318:/usr/include/c++/11/tuple **** 
 319:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 320:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 321:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 322:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a),
 323:/usr/include/c++/11/tuple **** 	  _Base(__tag, __use_alloc<_Head>(__a))
 324:/usr/include/c++/11/tuple **** 	{ }
 325:/usr/include/c++/11/tuple **** 
 326:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 327:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 328:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 329:/usr/include/c++/11/tuple **** 		    const _Head& __head, const _Tail&... __tail)
 330:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, __tail...),
 331:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head)
 332:/usr/include/c++/11/tuple **** 	{ }
 333:/usr/include/c++/11/tuple **** 
 334:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTail,
 335:/usr/include/c++/11/tuple **** 	       typename = __enable_if_t<sizeof...(_Tail) == sizeof...(_UTail)>>
 336:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 337:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 338:/usr/include/c++/11/tuple **** 		    _UHead&& __head, _UTail&&... __tail)
 339:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, std::forward<_UTail>(__tail)...),
 340:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 341:/usr/include/c++/11/tuple **** 		std::forward<_UHead>(__head))
 342:/usr/include/c++/11/tuple **** 	{ }
 343:/usr/include/c++/11/tuple **** 
 344:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 345:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
GAS LISTING x64lin/../common/event.s 			page 81


 346:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 347:/usr/include/c++/11/tuple **** 		    const _Tuple_impl& __in)
 348:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, _M_tail(__in)),
 349:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in))
 350:/usr/include/c++/11/tuple **** 	{ }
 351:/usr/include/c++/11/tuple **** 
 352:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 353:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 354:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 355:/usr/include/c++/11/tuple **** 		    _Tuple_impl&& __in)
 356:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, std::move(_M_tail(__in))),
 357:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 358:/usr/include/c++/11/tuple **** 		std::forward<_Head>(_M_head(__in)))
 359:/usr/include/c++/11/tuple **** 	{ }
 360:/usr/include/c++/11/tuple **** 
 361:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 362:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 363:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 364:/usr/include/c++/11/tuple **** 		    const _Tuple_impl<_Idx, _UHead, _UTails...>& __in)
 365:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a,
 366:/usr/include/c++/11/tuple **** 		     _Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)),
 367:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 368:/usr/include/c++/11/tuple **** 		_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))
 369:/usr/include/c++/11/tuple **** 	{ }
 370:/usr/include/c++/11/tuple **** 
 371:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 372:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 373:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 374:/usr/include/c++/11/tuple **** 		    _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 375:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, std::move
 376:/usr/include/c++/11/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 377:/usr/include/c++/11/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 378:/usr/include/c++/11/tuple **** 		std::forward<_UHead>
 379:/usr/include/c++/11/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)))
 380:/usr/include/c++/11/tuple **** 	{ }
 381:/usr/include/c++/11/tuple **** 
 382:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 383:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 384:/usr/include/c++/11/tuple **** 	void
 385:/usr/include/c++/11/tuple **** 	_M_assign(const _Tuple_impl<_Idx, _UElements...>& __in)
 386:/usr/include/c++/11/tuple **** 	{
 387:/usr/include/c++/11/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
 388:/usr/include/c++/11/tuple **** 	  _M_tail(*this)._M_assign(
 389:/usr/include/c++/11/tuple **** 	      _Tuple_impl<_Idx, _UElements...>::_M_tail(__in));
 390:/usr/include/c++/11/tuple **** 	}
 391:/usr/include/c++/11/tuple **** 
 392:/usr/include/c++/11/tuple ****       template<typename _UHead, typename... _UTails>
 393:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 394:/usr/include/c++/11/tuple **** 	void
 395:/usr/include/c++/11/tuple **** 	_M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 396:/usr/include/c++/11/tuple **** 	{
 397:/usr/include/c++/11/tuple **** 	  _M_head(*this) = std::forward<_UHead>
 398:/usr/include/c++/11/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
 399:/usr/include/c++/11/tuple **** 	  _M_tail(*this)._M_assign(
 400:/usr/include/c++/11/tuple **** 	      std::move(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)));
 401:/usr/include/c++/11/tuple **** 	}
 402:/usr/include/c++/11/tuple **** 
GAS LISTING x64lin/../common/event.s 			page 82


 403:/usr/include/c++/11/tuple ****     protected:
 404:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 405:/usr/include/c++/11/tuple ****       void
 406:/usr/include/c++/11/tuple ****       _M_swap(_Tuple_impl& __in)
 407:/usr/include/c++/11/tuple ****       {
 408:/usr/include/c++/11/tuple **** 	using std::swap;
 409:/usr/include/c++/11/tuple **** 	swap(_M_head(*this), _M_head(__in));
 410:/usr/include/c++/11/tuple **** 	_Inherited::_M_swap(_M_tail(__in));
 411:/usr/include/c++/11/tuple ****       }
 412:/usr/include/c++/11/tuple ****     };
 413:/usr/include/c++/11/tuple **** 
 414:/usr/include/c++/11/tuple ****   // Basis case of inheritance recursion.
 415:/usr/include/c++/11/tuple ****   template<size_t _Idx, typename _Head>
 416:/usr/include/c++/11/tuple ****     struct _Tuple_impl<_Idx, _Head>
 417:/usr/include/c++/11/tuple ****     : private _Head_base<_Idx, _Head>
 418:/usr/include/c++/11/tuple ****     {
 419:/usr/include/c++/11/tuple ****       template<size_t, typename...> friend struct _Tuple_impl;
 420:/usr/include/c++/11/tuple **** 
 421:/usr/include/c++/11/tuple ****       typedef _Head_base<_Idx, _Head> _Base;
 422:/usr/include/c++/11/tuple **** 
 423:/usr/include/c++/11/tuple ****       static constexpr _Head&
 424:/usr/include/c++/11/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 425:/usr/include/c++/11/tuple **** 
 426:/usr/include/c++/11/tuple ****       static constexpr const _Head&
 427:/usr/include/c++/11/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 428:/usr/include/c++/11/tuple **** 
 429:/usr/include/c++/11/tuple ****       constexpr
 430:/usr/include/c++/11/tuple ****       _Tuple_impl()
 431:/usr/include/c++/11/tuple ****       : _Base() { }
 432:/usr/include/c++/11/tuple **** 
 433:/usr/include/c++/11/tuple ****       explicit constexpr
 434:/usr/include/c++/11/tuple ****       _Tuple_impl(const _Head& __head)
 435:/usr/include/c++/11/tuple ****       : _Base(__head)
 436:/usr/include/c++/11/tuple ****       { }
 437:/usr/include/c++/11/tuple **** 
 438:/usr/include/c++/11/tuple ****       template<typename _UHead>
 439:/usr/include/c++/11/tuple **** 	explicit constexpr
 440:/usr/include/c++/11/tuple **** 	_Tuple_impl(_UHead&& __head)
 441:/usr/include/c++/11/tuple **** 	: _Base(std::forward<_UHead>(__head))
 442:/usr/include/c++/11/tuple **** 	{ }
 443:/usr/include/c++/11/tuple **** 
 444:/usr/include/c++/11/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 445:/usr/include/c++/11/tuple **** 
 446:/usr/include/c++/11/tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 447:/usr/include/c++/11/tuple ****       // 2729. Missing SFINAE on std::pair::operator=
 448:/usr/include/c++/11/tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 449:/usr/include/c++/11/tuple **** 
 450:/usr/include/c++/11/tuple **** #if _GLIBCXX_INLINE_VERSION
 451:/usr/include/c++/11/tuple ****       _Tuple_impl(_Tuple_impl&&) = default;
 452:/usr/include/c++/11/tuple **** #else
 453:/usr/include/c++/11/tuple ****       constexpr
 454:/usr/include/c++/11/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 455:/usr/include/c++/11/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 456:/usr/include/c++/11/tuple ****       : _Base(static_cast<_Base&&>(__in))
 457:/usr/include/c++/11/tuple ****       { }
 458:/usr/include/c++/11/tuple **** #endif
 459:/usr/include/c++/11/tuple **** 
GAS LISTING x64lin/../common/event.s 			page 83


 460:/usr/include/c++/11/tuple ****       template<typename _UHead>
 461:/usr/include/c++/11/tuple **** 	constexpr
 462:/usr/include/c++/11/tuple **** 	_Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
 463:/usr/include/c++/11/tuple **** 	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in))
 464:/usr/include/c++/11/tuple **** 	{ }
 465:/usr/include/c++/11/tuple **** 
 466:/usr/include/c++/11/tuple ****       template<typename _UHead>
 467:/usr/include/c++/11/tuple **** 	constexpr
 468:/usr/include/c++/11/tuple **** 	_Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
 469:/usr/include/c++/11/tuple **** 	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 470:/usr/include/c++/11/tuple **** 	{ }
 471:/usr/include/c++/11/tuple **** 
 472:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 473:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 474:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 475:/usr/include/c++/11/tuple **** 	: _Base(__tag, __use_alloc<_Head>(__a))
 476:/usr/include/c++/11/tuple **** 	{ }
 477:/usr/include/c++/11/tuple **** 
 478:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 479:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 480:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 481:/usr/include/c++/11/tuple **** 		    const _Head& __head)
 482:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, const _Head&>(__a), __head)
 483:/usr/include/c++/11/tuple **** 	{ }
 484:/usr/include/c++/11/tuple **** 
 485:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 486:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 487:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 488:/usr/include/c++/11/tuple **** 		    _UHead&& __head)
 489:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 490:/usr/include/c++/11/tuple **** 		std::forward<_UHead>(__head))
 491:/usr/include/c++/11/tuple **** 	{ }
 492:/usr/include/c++/11/tuple **** 
 493:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 494:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 495:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 496:/usr/include/c++/11/tuple **** 		    const _Tuple_impl& __in)
 497:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, const _Head&>(__a), _M_head(__in))
 498:/usr/include/c++/11/tuple **** 	{ }
 499:/usr/include/c++/11/tuple **** 
 500:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 501:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 502:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 503:/usr/include/c++/11/tuple **** 		    _Tuple_impl&& __in)
 504:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 505:/usr/include/c++/11/tuple **** 		std::forward<_Head>(_M_head(__in)))
 506:/usr/include/c++/11/tuple **** 	{ }
 507:/usr/include/c++/11/tuple **** 
 508:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
 509:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 510:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 511:/usr/include/c++/11/tuple **** 		    const _Tuple_impl<_Idx, _UHead>& __in)
 512:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 513:/usr/include/c++/11/tuple **** 		_Tuple_impl<_Idx, _UHead>::_M_head(__in))
 514:/usr/include/c++/11/tuple **** 	{ }
 515:/usr/include/c++/11/tuple **** 
 516:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename _UHead>
GAS LISTING x64lin/../common/event.s 			page 84


 517:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 518:/usr/include/c++/11/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 519:/usr/include/c++/11/tuple **** 		    _Tuple_impl<_Idx, _UHead>&& __in)
 520:/usr/include/c++/11/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 521:/usr/include/c++/11/tuple **** 		std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 522:/usr/include/c++/11/tuple **** 	{ }
 523:/usr/include/c++/11/tuple **** 
 524:/usr/include/c++/11/tuple ****       template<typename _UHead>
 525:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 526:/usr/include/c++/11/tuple **** 	void
 527:/usr/include/c++/11/tuple **** 	_M_assign(const _Tuple_impl<_Idx, _UHead>& __in)
 528:/usr/include/c++/11/tuple **** 	{
 529:/usr/include/c++/11/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
 530:/usr/include/c++/11/tuple **** 	}
 531:/usr/include/c++/11/tuple **** 
 532:/usr/include/c++/11/tuple ****       template<typename _UHead>
 533:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 534:/usr/include/c++/11/tuple **** 	void
 535:/usr/include/c++/11/tuple **** 	_M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
 536:/usr/include/c++/11/tuple **** 	{
 537:/usr/include/c++/11/tuple **** 	  _M_head(*this)
 538:/usr/include/c++/11/tuple **** 	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 539:/usr/include/c++/11/tuple **** 	}
 540:/usr/include/c++/11/tuple **** 
 541:/usr/include/c++/11/tuple ****     protected:
 542:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 543:/usr/include/c++/11/tuple ****       void
 544:/usr/include/c++/11/tuple ****       _M_swap(_Tuple_impl& __in)
 545:/usr/include/c++/11/tuple ****       {
 546:/usr/include/c++/11/tuple **** 	using std::swap;
 547:/usr/include/c++/11/tuple **** 	swap(_M_head(*this), _M_head(__in));
 548:/usr/include/c++/11/tuple ****       }
 549:/usr/include/c++/11/tuple ****     };
 550:/usr/include/c++/11/tuple **** 
 551:/usr/include/c++/11/tuple ****   // Concept utility functions, reused in conditionally-explicit
 552:/usr/include/c++/11/tuple ****   // constructors.
 553:/usr/include/c++/11/tuple ****   template<bool, typename... _Types>
 554:/usr/include/c++/11/tuple ****     struct _TupleConstraints
 555:/usr/include/c++/11/tuple ****     {
 556:/usr/include/c++/11/tuple ****       // Constraint for a non-explicit constructor.
 557:/usr/include/c++/11/tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 558:/usr/include/c++/11/tuple ****       // and every Ui is implicitly convertible to Ti.
 559:/usr/include/c++/11/tuple ****       template<typename... _UTypes>
 560:/usr/include/c++/11/tuple **** 	static constexpr bool __is_implicitly_constructible()
 561:/usr/include/c++/11/tuple **** 	{
 562:/usr/include/c++/11/tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
 563:/usr/include/c++/11/tuple **** 			is_convertible<_UTypes, _Types>...
 564:/usr/include/c++/11/tuple **** 			>::value;
 565:/usr/include/c++/11/tuple **** 	}
 566:/usr/include/c++/11/tuple **** 
 567:/usr/include/c++/11/tuple ****       // Constraint for a non-explicit constructor.
 568:/usr/include/c++/11/tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 569:/usr/include/c++/11/tuple ****       // but not every Ui is implicitly convertible to Ti.
 570:/usr/include/c++/11/tuple ****       template<typename... _UTypes>
 571:/usr/include/c++/11/tuple **** 	static constexpr bool __is_explicitly_constructible()
 572:/usr/include/c++/11/tuple **** 	{
 573:/usr/include/c++/11/tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
GAS LISTING x64lin/../common/event.s 			page 85


 574:/usr/include/c++/11/tuple **** 			__not_<__and_<is_convertible<_UTypes, _Types>...>>
 575:/usr/include/c++/11/tuple **** 			>::value;
 576:/usr/include/c++/11/tuple **** 	}
 577:/usr/include/c++/11/tuple **** 
 578:/usr/include/c++/11/tuple ****       static constexpr bool __is_implicitly_default_constructible()
 579:/usr/include/c++/11/tuple ****       {
 580:/usr/include/c++/11/tuple **** 	return __and_<std::__is_implicitly_default_constructible<_Types>...
 581:/usr/include/c++/11/tuple **** 		      >::value;
 582:/usr/include/c++/11/tuple ****       }
 583:/usr/include/c++/11/tuple **** 
 584:/usr/include/c++/11/tuple ****       static constexpr bool __is_explicitly_default_constructible()
 585:/usr/include/c++/11/tuple ****       {
 586:/usr/include/c++/11/tuple **** 	return __and_<is_default_constructible<_Types>...,
 587:/usr/include/c++/11/tuple **** 		      __not_<__and_<
 588:/usr/include/c++/11/tuple **** 			std::__is_implicitly_default_constructible<_Types>...>
 589:/usr/include/c++/11/tuple **** 		      >>::value;
 590:/usr/include/c++/11/tuple ****       }
 591:/usr/include/c++/11/tuple ****     };
 592:/usr/include/c++/11/tuple **** 
 593:/usr/include/c++/11/tuple ****   // Partial specialization used when a required precondition isn't met,
 594:/usr/include/c++/11/tuple ****   // e.g. when sizeof...(_Types) != sizeof...(_UTypes).
 595:/usr/include/c++/11/tuple ****   template<typename... _Types>
 596:/usr/include/c++/11/tuple ****     struct _TupleConstraints<false, _Types...>
 597:/usr/include/c++/11/tuple ****     {
 598:/usr/include/c++/11/tuple ****       template<typename... _UTypes>
 599:/usr/include/c++/11/tuple **** 	static constexpr bool __is_implicitly_constructible()
 600:/usr/include/c++/11/tuple **** 	{ return false; }
 601:/usr/include/c++/11/tuple **** 
 602:/usr/include/c++/11/tuple ****       template<typename... _UTypes>
 603:/usr/include/c++/11/tuple **** 	static constexpr bool __is_explicitly_constructible()
 604:/usr/include/c++/11/tuple **** 	{ return false; }
 605:/usr/include/c++/11/tuple ****     };
 606:/usr/include/c++/11/tuple **** 
 607:/usr/include/c++/11/tuple ****   /// Primary class template, tuple
 608:/usr/include/c++/11/tuple ****   template<typename... _Elements>
 609:/usr/include/c++/11/tuple ****     class tuple : public _Tuple_impl<0, _Elements...>
 610:/usr/include/c++/11/tuple ****     {
 611:/usr/include/c++/11/tuple ****       typedef _Tuple_impl<0, _Elements...> _Inherited;
 612:/usr/include/c++/11/tuple **** 
 613:/usr/include/c++/11/tuple ****       template<bool _Cond>
 614:/usr/include/c++/11/tuple **** 	using _TCC = _TupleConstraints<_Cond, _Elements...>;
 615:/usr/include/c++/11/tuple **** 
 616:/usr/include/c++/11/tuple ****       // Constraint for non-explicit default constructor
 617:/usr/include/c++/11/tuple ****       template<bool _Dummy>
 618:/usr/include/c++/11/tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 619:/usr/include/c++/11/tuple **** 	  _TCC<_Dummy>::__is_implicitly_default_constructible(),
 620:/usr/include/c++/11/tuple **** 	  bool>;
 621:/usr/include/c++/11/tuple **** 
 622:/usr/include/c++/11/tuple ****       // Constraint for explicit default constructor
 623:/usr/include/c++/11/tuple ****       template<bool _Dummy>
 624:/usr/include/c++/11/tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 625:/usr/include/c++/11/tuple **** 	  _TCC<_Dummy>::__is_explicitly_default_constructible(),
 626:/usr/include/c++/11/tuple **** 	  bool>;
 627:/usr/include/c++/11/tuple **** 
 628:/usr/include/c++/11/tuple ****       // Constraint for non-explicit constructors
 629:/usr/include/c++/11/tuple ****       template<bool _Cond, typename... _Args>
 630:/usr/include/c++/11/tuple **** 	using _ImplicitCtor = __enable_if_t<
GAS LISTING x64lin/../common/event.s 			page 86


 631:/usr/include/c++/11/tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_Args...>(),
 632:/usr/include/c++/11/tuple **** 	  bool>;
 633:/usr/include/c++/11/tuple **** 
 634:/usr/include/c++/11/tuple ****       // Constraint for non-explicit constructors
 635:/usr/include/c++/11/tuple ****       template<bool _Cond, typename... _Args>
 636:/usr/include/c++/11/tuple **** 	using _ExplicitCtor = __enable_if_t<
 637:/usr/include/c++/11/tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_Args...>(),
 638:/usr/include/c++/11/tuple **** 	  bool>;
 639:/usr/include/c++/11/tuple **** 
 640:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 641:/usr/include/c++/11/tuple **** 	static constexpr
 642:/usr/include/c++/11/tuple **** 	__enable_if_t<sizeof...(_UElements) == sizeof...(_Elements), bool>
 643:/usr/include/c++/11/tuple **** 	__assignable()
 644:/usr/include/c++/11/tuple **** 	{ return __and_<is_assignable<_Elements&, _UElements>...>::value; }
 645:/usr/include/c++/11/tuple **** 
 646:/usr/include/c++/11/tuple ****       // Condition for noexcept-specifier of an assignment operator.
 647:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 648:/usr/include/c++/11/tuple **** 	static constexpr bool __nothrow_assignable()
 649:/usr/include/c++/11/tuple **** 	{
 650:/usr/include/c++/11/tuple **** 	  return
 651:/usr/include/c++/11/tuple **** 	    __and_<is_nothrow_assignable<_Elements&, _UElements>...>::value;
 652:/usr/include/c++/11/tuple **** 	}
 653:/usr/include/c++/11/tuple **** 
 654:/usr/include/c++/11/tuple ****       // Condition for noexcept-specifier of a constructor.
 655:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 656:/usr/include/c++/11/tuple **** 	static constexpr bool __nothrow_constructible()
 657:/usr/include/c++/11/tuple **** 	{
 658:/usr/include/c++/11/tuple **** 	  return
 659:/usr/include/c++/11/tuple **** 	    __and_<is_nothrow_constructible<_Elements, _UElements>...>::value;
 660:/usr/include/c++/11/tuple **** 	}
 661:/usr/include/c++/11/tuple **** 
 662:/usr/include/c++/11/tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) == 1.
 663:/usr/include/c++/11/tuple ****       template<typename _Up>
 664:/usr/include/c++/11/tuple **** 	static constexpr bool __valid_args()
 665:/usr/include/c++/11/tuple **** 	{
 666:/usr/include/c++/11/tuple **** 	  return sizeof...(_Elements) == 1
 667:/usr/include/c++/11/tuple **** 	    && !is_same<tuple, __remove_cvref_t<_Up>>::value;
 668:/usr/include/c++/11/tuple **** 	}
 669:/usr/include/c++/11/tuple **** 
 670:/usr/include/c++/11/tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) > 1.
 671:/usr/include/c++/11/tuple ****       template<typename, typename, typename... _Tail>
 672:/usr/include/c++/11/tuple **** 	static constexpr bool __valid_args()
 673:/usr/include/c++/11/tuple **** 	{ return (sizeof...(_Tail) + 2) == sizeof...(_Elements); }
 674:/usr/include/c++/11/tuple **** 
 675:/usr/include/c++/11/tuple ****       /* Constraint for constructors with a tuple<UTypes...> parameter ensures
 676:/usr/include/c++/11/tuple ****        * that the constructor is only viable when it would not interfere with
 677:/usr/include/c++/11/tuple ****        * tuple(UTypes&&...) or tuple(const tuple&) or tuple(tuple&&).
 678:/usr/include/c++/11/tuple ****        * Such constructors are only viable if:
 679:/usr/include/c++/11/tuple ****        * either sizeof...(Types) != 1,
 680:/usr/include/c++/11/tuple ****        * or (when Types... expands to T and UTypes... expands to U)
 681:/usr/include/c++/11/tuple ****        * is_convertible_v<TUPLE, T>, is_constructible_v<T, TUPLE>,
 682:/usr/include/c++/11/tuple ****        * and is_same_v<T, U> are all false.
 683:/usr/include/c++/11/tuple ****        */
 684:/usr/include/c++/11/tuple ****       template<typename _Tuple, typename = tuple,
 685:/usr/include/c++/11/tuple **** 	       typename = __remove_cvref_t<_Tuple>>
 686:/usr/include/c++/11/tuple **** 	struct _UseOtherCtor
 687:/usr/include/c++/11/tuple **** 	: false_type
GAS LISTING x64lin/../common/event.s 			page 87


 688:/usr/include/c++/11/tuple **** 	{ };
 689:/usr/include/c++/11/tuple ****       // If TUPLE is convertible to the single element in *this,
 690:/usr/include/c++/11/tuple ****       // then TUPLE should match tuple(UTypes&&...) instead.
 691:/usr/include/c++/11/tuple ****       template<typename _Tuple, typename _Tp, typename _Up>
 692:/usr/include/c++/11/tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Up>>
 693:/usr/include/c++/11/tuple **** 	: __or_<is_convertible<_Tuple, _Tp>, is_constructible<_Tp, _Tuple>>
 694:/usr/include/c++/11/tuple **** 	{ };
 695:/usr/include/c++/11/tuple ****       // If TUPLE and *this each have a single element of the same type,
 696:/usr/include/c++/11/tuple ****       // then TUPLE should match a copy/move constructor instead.
 697:/usr/include/c++/11/tuple ****       template<typename _Tuple, typename _Tp>
 698:/usr/include/c++/11/tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Tp>>
 699:/usr/include/c++/11/tuple **** 	: true_type
 700:/usr/include/c++/11/tuple **** 	{ };
 701:/usr/include/c++/11/tuple **** 
 702:/usr/include/c++/11/tuple ****       // Return true iff sizeof...(Types) == 1 && tuple_size_v<TUPLE> == 1
 703:/usr/include/c++/11/tuple ****       // and the single element in Types can be initialized from TUPLE,
 704:/usr/include/c++/11/tuple ****       // or is the same type as tuple_element_t<0, TUPLE>.
 705:/usr/include/c++/11/tuple ****       template<typename _Tuple>
 706:/usr/include/c++/11/tuple **** 	static constexpr bool __use_other_ctor()
 707:/usr/include/c++/11/tuple **** 	{ return _UseOtherCtor<_Tuple>::value; }
 708:/usr/include/c++/11/tuple **** 
 709:/usr/include/c++/11/tuple ****     public:
 710:/usr/include/c++/11/tuple ****       template<typename _Dummy = void,
 711:/usr/include/c++/11/tuple **** 	       _ImplicitDefaultCtor<is_void<_Dummy>::value> = true>
 712:/usr/include/c++/11/tuple **** 	constexpr
 713:/usr/include/c++/11/tuple **** 	tuple()
 714:/usr/include/c++/11/tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 715:/usr/include/c++/11/tuple **** 	: _Inherited() { }
 716:/usr/include/c++/11/tuple **** 
 717:/usr/include/c++/11/tuple ****       template<typename _Dummy = void,
 718:/usr/include/c++/11/tuple **** 	       _ExplicitDefaultCtor<is_void<_Dummy>::value> = false>
 719:/usr/include/c++/11/tuple **** 	explicit constexpr
 720:/usr/include/c++/11/tuple **** 	tuple()
 721:/usr/include/c++/11/tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 722:/usr/include/c++/11/tuple **** 	: _Inherited() { }
 723:/usr/include/c++/11/tuple **** 
 724:/usr/include/c++/11/tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
 725:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 726:/usr/include/c++/11/tuple **** 	constexpr
 727:/usr/include/c++/11/tuple **** 	tuple(const _Elements&... __elements)
 728:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 729:/usr/include/c++/11/tuple **** 	: _Inherited(__elements...) { }
 730:/usr/include/c++/11/tuple **** 
 731:/usr/include/c++/11/tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
 732:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 733:/usr/include/c++/11/tuple **** 	explicit constexpr
 734:/usr/include/c++/11/tuple **** 	tuple(const _Elements&... __elements)
 735:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 736:/usr/include/c++/11/tuple **** 	: _Inherited(__elements...) { }
 737:/usr/include/c++/11/tuple **** 
 738:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 739:/usr/include/c++/11/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 740:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 741:/usr/include/c++/11/tuple **** 	constexpr
 742:/usr/include/c++/11/tuple **** 	tuple(_UElements&&... __elements)
 743:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 744:/usr/include/c++/11/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) { }
GAS LISTING x64lin/../common/event.s 			page 88


 745:/usr/include/c++/11/tuple **** 
 746:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 747:/usr/include/c++/11/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 748:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 749:/usr/include/c++/11/tuple **** 	explicit constexpr
 750:/usr/include/c++/11/tuple **** 	tuple(_UElements&&... __elements)
 751:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 752:/usr/include/c++/11/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) {	}
 753:/usr/include/c++/11/tuple **** 
 754:/usr/include/c++/11/tuple ****       constexpr tuple(const tuple&) = default;
 755:/usr/include/c++/11/tuple **** 
 756:/usr/include/c++/11/tuple ****       constexpr tuple(tuple&&) = default;
 757:/usr/include/c++/11/tuple **** 
 758:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 759:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 760:/usr/include/c++/11/tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 761:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 762:/usr/include/c++/11/tuple **** 	constexpr
 763:/usr/include/c++/11/tuple **** 	tuple(const tuple<_UElements...>& __in)
 764:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 765:/usr/include/c++/11/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 766:/usr/include/c++/11/tuple **** 	{ }
 767:/usr/include/c++/11/tuple **** 
 768:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 769:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 770:/usr/include/c++/11/tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 771:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 772:/usr/include/c++/11/tuple **** 	explicit constexpr
 773:/usr/include/c++/11/tuple **** 	tuple(const tuple<_UElements...>& __in)
 774:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 775:/usr/include/c++/11/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 776:/usr/include/c++/11/tuple **** 	{ }
 777:/usr/include/c++/11/tuple **** 
 778:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 779:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 780:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 781:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 782:/usr/include/c++/11/tuple **** 	constexpr
 783:/usr/include/c++/11/tuple **** 	tuple(tuple<_UElements...>&& __in)
 784:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 785:/usr/include/c++/11/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 786:/usr/include/c++/11/tuple **** 
 787:/usr/include/c++/11/tuple ****       template<typename... _UElements,
 788:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 789:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 790:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 791:/usr/include/c++/11/tuple **** 	explicit constexpr
 792:/usr/include/c++/11/tuple **** 	tuple(tuple<_UElements...>&& __in)
 793:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 794:/usr/include/c++/11/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 795:/usr/include/c++/11/tuple **** 
 796:/usr/include/c++/11/tuple ****       // Allocator-extended constructors.
 797:/usr/include/c++/11/tuple **** 
 798:/usr/include/c++/11/tuple ****       template<typename _Alloc,
 799:/usr/include/c++/11/tuple **** 	       _ImplicitDefaultCtor<is_object<_Alloc>::value> = true>
 800:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 801:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
GAS LISTING x64lin/../common/event.s 			page 89


 802:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a) { }
 803:/usr/include/c++/11/tuple **** 
 804:/usr/include/c++/11/tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 805:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 806:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 807:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 808:/usr/include/c++/11/tuple **** 	      const _Elements&... __elements)
 809:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 810:/usr/include/c++/11/tuple **** 
 811:/usr/include/c++/11/tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 812:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 813:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 814:/usr/include/c++/11/tuple **** 	explicit
 815:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 816:/usr/include/c++/11/tuple **** 	      const _Elements&... __elements)
 817:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 818:/usr/include/c++/11/tuple **** 
 819:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 820:/usr/include/c++/11/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 821:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 822:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 823:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 824:/usr/include/c++/11/tuple **** 	      _UElements&&... __elements)
 825:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 826:/usr/include/c++/11/tuple **** 	{ }
 827:/usr/include/c++/11/tuple **** 
 828:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 829:/usr/include/c++/11/tuple **** 		 bool _Valid = __valid_args<_UElements...>(),
 830:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 831:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 832:/usr/include/c++/11/tuple **** 	explicit
 833:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 834:/usr/include/c++/11/tuple **** 	      _UElements&&... __elements)
 835:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 836:/usr/include/c++/11/tuple **** 	{ }
 837:/usr/include/c++/11/tuple **** 
 838:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 839:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 840:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
 841:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
 842:/usr/include/c++/11/tuple **** 
 843:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 844:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 845:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
 846:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
 847:/usr/include/c++/11/tuple **** 
 848:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 849:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 850:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 851:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 852:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 853:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 854:/usr/include/c++/11/tuple **** 	      const tuple<_UElements...>& __in)
 855:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a,
 856:/usr/include/c++/11/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 857:/usr/include/c++/11/tuple **** 	{ }
 858:/usr/include/c++/11/tuple **** 
GAS LISTING x64lin/../common/event.s 			page 90


 859:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 860:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 861:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 862:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 863:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 864:/usr/include/c++/11/tuple **** 	explicit
 865:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 866:/usr/include/c++/11/tuple **** 	      const tuple<_UElements...>& __in)
 867:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a,
 868:/usr/include/c++/11/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 869:/usr/include/c++/11/tuple **** 	{ }
 870:/usr/include/c++/11/tuple **** 
 871:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 872:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 873:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 874:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 875:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 876:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 877:/usr/include/c++/11/tuple **** 	      tuple<_UElements...>&& __in)
 878:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a,
 879:/usr/include/c++/11/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 880:/usr/include/c++/11/tuple **** 	{ }
 881:/usr/include/c++/11/tuple **** 
 882:/usr/include/c++/11/tuple ****       template<typename _Alloc, typename... _UElements,
 883:/usr/include/c++/11/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 884:/usr/include/c++/11/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 885:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 886:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 887:/usr/include/c++/11/tuple **** 	explicit
 888:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 889:/usr/include/c++/11/tuple **** 	      tuple<_UElements...>&& __in)
 890:/usr/include/c++/11/tuple **** 	: _Inherited(__tag, __a,
 891:/usr/include/c++/11/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 892:/usr/include/c++/11/tuple **** 	{ }
 893:/usr/include/c++/11/tuple **** 
 894:/usr/include/c++/11/tuple ****       // tuple assignment
 895:/usr/include/c++/11/tuple **** 
 896:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 897:/usr/include/c++/11/tuple ****       tuple&
 898:/usr/include/c++/11/tuple ****       operator=(typename conditional<__assignable<const _Elements&...>(),
 899:/usr/include/c++/11/tuple **** 				     const tuple&,
 900:/usr/include/c++/11/tuple **** 				     const __nonesuch&>::type __in)
 901:/usr/include/c++/11/tuple ****       noexcept(__nothrow_assignable<const _Elements&...>())
 902:/usr/include/c++/11/tuple ****       {
 903:/usr/include/c++/11/tuple **** 	this->_M_assign(__in);
 904:/usr/include/c++/11/tuple **** 	return *this;
 905:/usr/include/c++/11/tuple ****       }
 906:/usr/include/c++/11/tuple **** 
 907:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 908:/usr/include/c++/11/tuple ****       tuple&
 909:/usr/include/c++/11/tuple ****       operator=(typename conditional<__assignable<_Elements...>(),
 910:/usr/include/c++/11/tuple **** 				     tuple&&,
 911:/usr/include/c++/11/tuple **** 				     __nonesuch&&>::type __in)
 912:/usr/include/c++/11/tuple ****       noexcept(__nothrow_assignable<_Elements...>())
 913:/usr/include/c++/11/tuple ****       {
 914:/usr/include/c++/11/tuple **** 	this->_M_assign(std::move(__in));
 915:/usr/include/c++/11/tuple **** 	return *this;
GAS LISTING x64lin/../common/event.s 			page 91


 916:/usr/include/c++/11/tuple ****       }
 917:/usr/include/c++/11/tuple **** 
 918:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 919:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 920:/usr/include/c++/11/tuple **** 	__enable_if_t<__assignable<const _UElements&...>(), tuple&>
 921:/usr/include/c++/11/tuple **** 	operator=(const tuple<_UElements...>& __in)
 922:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_assignable<const _UElements&...>())
 923:/usr/include/c++/11/tuple **** 	{
 924:/usr/include/c++/11/tuple **** 	  this->_M_assign(__in);
 925:/usr/include/c++/11/tuple **** 	  return *this;
 926:/usr/include/c++/11/tuple **** 	}
 927:/usr/include/c++/11/tuple **** 
 928:/usr/include/c++/11/tuple ****       template<typename... _UElements>
 929:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 930:/usr/include/c++/11/tuple **** 	__enable_if_t<__assignable<_UElements...>(), tuple&>
 931:/usr/include/c++/11/tuple **** 	operator=(tuple<_UElements...>&& __in)
 932:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_assignable<_UElements...>())
 933:/usr/include/c++/11/tuple **** 	{
 934:/usr/include/c++/11/tuple **** 	  this->_M_assign(std::move(__in));
 935:/usr/include/c++/11/tuple **** 	  return *this;
 936:/usr/include/c++/11/tuple **** 	}
 937:/usr/include/c++/11/tuple **** 
 938:/usr/include/c++/11/tuple ****       // tuple swap
 939:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 940:/usr/include/c++/11/tuple ****       void
 941:/usr/include/c++/11/tuple ****       swap(tuple& __in)
 942:/usr/include/c++/11/tuple ****       noexcept(__and_<__is_nothrow_swappable<_Elements>...>::value)
 943:/usr/include/c++/11/tuple ****       { _Inherited::_M_swap(__in); }
 944:/usr/include/c++/11/tuple ****     };
 945:/usr/include/c++/11/tuple **** 
 946:/usr/include/c++/11/tuple **** #if __cpp_deduction_guides >= 201606
 947:/usr/include/c++/11/tuple ****   template<typename... _UTypes>
 948:/usr/include/c++/11/tuple ****     tuple(_UTypes...) -> tuple<_UTypes...>;
 949:/usr/include/c++/11/tuple ****   template<typename _T1, typename _T2>
 950:/usr/include/c++/11/tuple ****     tuple(pair<_T1, _T2>) -> tuple<_T1, _T2>;
 951:/usr/include/c++/11/tuple ****   template<typename _Alloc, typename... _UTypes>
 952:/usr/include/c++/11/tuple ****     tuple(allocator_arg_t, _Alloc, _UTypes...) -> tuple<_UTypes...>;
 953:/usr/include/c++/11/tuple ****   template<typename _Alloc, typename _T1, typename _T2>
 954:/usr/include/c++/11/tuple ****     tuple(allocator_arg_t, _Alloc, pair<_T1, _T2>) -> tuple<_T1, _T2>;
 955:/usr/include/c++/11/tuple ****   template<typename _Alloc, typename... _UTypes>
 956:/usr/include/c++/11/tuple ****     tuple(allocator_arg_t, _Alloc, tuple<_UTypes...>) -> tuple<_UTypes...>;
 957:/usr/include/c++/11/tuple **** #endif
 958:/usr/include/c++/11/tuple **** 
 959:/usr/include/c++/11/tuple ****   // Explicit specialization, zero-element tuple.
 960:/usr/include/c++/11/tuple ****   template<>
 961:/usr/include/c++/11/tuple ****     class tuple<>
 962:/usr/include/c++/11/tuple ****     {
 963:/usr/include/c++/11/tuple ****     public:
 964:/usr/include/c++/11/tuple ****       _GLIBCXX20_CONSTEXPR
 965:/usr/include/c++/11/tuple ****       void swap(tuple&) noexcept { /* no-op */ }
 966:/usr/include/c++/11/tuple ****       // We need the default since we're going to define no-op
 967:/usr/include/c++/11/tuple ****       // allocator constructors.
 968:/usr/include/c++/11/tuple ****       tuple() = default;
 969:/usr/include/c++/11/tuple ****       // No-op allocator constructors.
 970:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 971:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 972:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t, const _Alloc&) noexcept { }
GAS LISTING x64lin/../common/event.s 			page 92


 973:/usr/include/c++/11/tuple ****       template<typename _Alloc>
 974:/usr/include/c++/11/tuple **** 	_GLIBCXX20_CONSTEXPR
 975:/usr/include/c++/11/tuple **** 	tuple(allocator_arg_t, const _Alloc&, const tuple&) noexcept { }
 976:/usr/include/c++/11/tuple ****     };
 977:/usr/include/c++/11/tuple **** 
 978:/usr/include/c++/11/tuple ****   /// Partial specialization, 2-element tuple.
 979:/usr/include/c++/11/tuple ****   /// Includes construction and assignment from a pair.
 980:/usr/include/c++/11/tuple ****   template<typename _T1, typename _T2>
 981:/usr/include/c++/11/tuple ****     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>
 982:/usr/include/c++/11/tuple ****     {
 983:/usr/include/c++/11/tuple ****       typedef _Tuple_impl<0, _T1, _T2> _Inherited;
 984:/usr/include/c++/11/tuple **** 
 985:/usr/include/c++/11/tuple ****       // Constraint for non-explicit default constructor
 986:/usr/include/c++/11/tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 987:/usr/include/c++/11/tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 988:/usr/include/c++/11/tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 989:/usr/include/c++/11/tuple **** 	    __is_implicitly_default_constructible(),
 990:/usr/include/c++/11/tuple **** 	  bool>;
 991:/usr/include/c++/11/tuple **** 
 992:/usr/include/c++/11/tuple ****       // Constraint for explicit default constructor
 993:/usr/include/c++/11/tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 994:/usr/include/c++/11/tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 995:/usr/include/c++/11/tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 996:/usr/include/c++/11/tuple **** 	    __is_explicitly_default_constructible(),
 997:/usr/include/c++/11/tuple **** 	  bool>;
 998:/usr/include/c++/11/tuple **** 
 999:/usr/include/c++/11/tuple ****       template<bool _Dummy>
1000:/usr/include/c++/11/tuple **** 	using _TCC = _TupleConstraints<_Dummy, _T1, _T2>;
1001:/usr/include/c++/11/tuple **** 
1002:/usr/include/c++/11/tuple ****       // Constraint for non-explicit constructors
1003:/usr/include/c++/11/tuple ****       template<bool _Cond, typename _U1, typename _U2>
1004:/usr/include/c++/11/tuple **** 	using _ImplicitCtor = __enable_if_t<
1005:/usr/include/c++/11/tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_U1, _U2>(),
1006:/usr/include/c++/11/tuple **** 	  bool>;
1007:/usr/include/c++/11/tuple **** 
1008:/usr/include/c++/11/tuple ****       // Constraint for non-explicit constructors
1009:/usr/include/c++/11/tuple ****       template<bool _Cond, typename _U1, typename _U2>
1010:/usr/include/c++/11/tuple **** 	using _ExplicitCtor = __enable_if_t<
1011:/usr/include/c++/11/tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_U1, _U2>(),
1012:/usr/include/c++/11/tuple **** 	  bool>;
1013:/usr/include/c++/11/tuple **** 
1014:/usr/include/c++/11/tuple ****       template<typename _U1, typename _U2>
1015:/usr/include/c++/11/tuple **** 	static constexpr bool __assignable()
1016:/usr/include/c++/11/tuple **** 	{
1017:/usr/include/c++/11/tuple **** 	  return __and_<is_assignable<_T1&, _U1>,
1018:/usr/include/c++/11/tuple **** 			is_assignable<_T2&, _U2>>::value;
1019:/usr/include/c++/11/tuple **** 	}
1020:/usr/include/c++/11/tuple **** 
1021:/usr/include/c++/11/tuple ****       template<typename _U1, typename _U2>
1022:/usr/include/c++/11/tuple **** 	static constexpr bool __nothrow_assignable()
1023:/usr/include/c++/11/tuple **** 	{
1024:/usr/include/c++/11/tuple **** 	  return __and_<is_nothrow_assignable<_T1&, _U1>,
1025:/usr/include/c++/11/tuple **** 			is_nothrow_assignable<_T2&, _U2>>::value;
1026:/usr/include/c++/11/tuple **** 	}
1027:/usr/include/c++/11/tuple **** 
1028:/usr/include/c++/11/tuple ****       template<typename _U1, typename _U2>
1029:/usr/include/c++/11/tuple **** 	static constexpr bool __nothrow_constructible()
GAS LISTING x64lin/../common/event.s 			page 93


1030:/usr/include/c++/11/tuple **** 	{
1031:/usr/include/c++/11/tuple **** 	  return __and_<is_nothrow_constructible<_T1, _U1>,
1032:/usr/include/c++/11/tuple **** 			    is_nothrow_constructible<_T2, _U2>>::value;
1033:/usr/include/c++/11/tuple **** 	}
1034:/usr/include/c++/11/tuple **** 
1035:/usr/include/c++/11/tuple ****       static constexpr bool __nothrow_default_constructible()
1036:/usr/include/c++/11/tuple ****       {
1037:/usr/include/c++/11/tuple **** 	return __and_<is_nothrow_default_constructible<_T1>,
1038:/usr/include/c++/11/tuple **** 		      is_nothrow_default_constructible<_T2>>::value;
1039:/usr/include/c++/11/tuple ****       }
1040:/usr/include/c++/11/tuple **** 
1041:/usr/include/c++/11/tuple ****       template<typename _U1>
1042:/usr/include/c++/11/tuple **** 	static constexpr bool __is_alloc_arg()
1043:/usr/include/c++/11/tuple **** 	{ return is_same<__remove_cvref_t<_U1>, allocator_arg_t>::value; }
1044:/usr/include/c++/11/tuple **** 
1045:/usr/include/c++/11/tuple ****     public:
1046:/usr/include/c++/11/tuple ****       template<bool _Dummy = true,
1047:/usr/include/c++/11/tuple **** 	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
1048:/usr/include/c++/11/tuple **** 	constexpr
1049:/usr/include/c++/11/tuple **** 	tuple()
1050:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_default_constructible())
1051:/usr/include/c++/11/tuple **** 	: _Inherited() { }
1052:/usr/include/c++/11/tuple **** 
1053:/usr/include/c++/11/tuple ****       template<bool _Dummy = true,
1054:/usr/include/c++/11/tuple **** 	       _ExplicitDefaultCtor<_Dummy, _T1, _T2> = false>
1055:/usr/include/c++/11/tuple **** 	explicit constexpr
1056:/usr/include/c++/11/tuple **** 	tuple()
1057:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_default_constructible())
1058:/usr/include/c++/11/tuple **** 	: _Inherited() { }
1059:/usr/include/c++/11/tuple **** 
1060:/usr/include/c++/11/tuple ****       template<bool _Dummy = true,
1061:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<_Dummy, const _T1&, const _T2&> = true>
1062:/usr/include/c++/11/tuple **** 	constexpr
1063:/usr/include/c++/11/tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
1064:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
1065:/usr/include/c++/11/tuple **** 	: _Inherited(__a1, __a2) { }
1066:/usr/include/c++/11/tuple **** 
1067:/usr/include/c++/11/tuple ****       template<bool _Dummy = true,
1068:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<_Dummy, const _T1&, const _T2&> = false>
1069:/usr/include/c++/11/tuple **** 	explicit constexpr
1070:/usr/include/c++/11/tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
1071:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
1072:/usr/include/c++/11/tuple **** 	: _Inherited(__a1, __a2) { }
1073:/usr/include/c++/11/tuple **** 
1074:/usr/include/c++/11/tuple ****       template<typename _U1, typename _U2,
1075:/usr/include/c++/11/tuple **** 	       _ImplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = true>
1076:/usr/include/c++/11/tuple **** 	constexpr
1077:/usr/include/c++/11/tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
1078:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1079:/usr/include/c++/11/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
1080:/usr/include/c++/11/tuple **** 
1081:/usr/include/c++/11/tuple ****       template<typename _U1, typename _U2,
1082:/usr/include/c++/11/tuple **** 	       _ExplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = false>
1083:/usr/include/c++/11/tuple **** 	explicit constexpr
1084:/usr/include/c++/11/tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
1085:/usr/include/c++/11/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1086:/usr/include/c++/11/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
GAS LISTING x64lin/../common/event.s 			page 94


1087:/usr/include/c++/11/tuple **** 
1088:/usr/include/c++/11/tuple ****       constexpr tuple(const tuple&) = default;
1089:/usr/include/c++/11/tuple **** 
1090:/usr/include/c++/11/tuple ****       constexpr tuple(tuple&&) = default;
 172              		.loc 11 1090 17 is_stmt 1 view .LVU34
 173              	.LBB585:
 174              	.LBI585:
 301:/usr/include/c++/11/tuple **** 
 175              		.loc 11 301 7 view .LVU35
 176              	.LBB586:
 177              	.LBB587:
 178              	.LBI587:
 454:/usr/include/c++/11/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 179              		.loc 11 454 7 view .LVU36
 454:/usr/include/c++/11/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 180              		.loc 11 454 7 is_stmt 0 view .LVU37
 181              	.LBE587:
 301:/usr/include/c++/11/tuple **** 
 182              		.loc 11 301 7 view .LVU38
 183 003d 488B5500 		movq	0(%rbp), %rdx
 184              	.LBE586:
 185              	.LBE585:
 186              	.LBE584:
 187              	.LBE582:
 188              	.LBE581:
 189              	.LBE580:
 190              	.LBE579:
 191              	.LBE578:
 192              	.LBE577:
 169:/usr/include/c++/11/bits/deque.tcc **** 	  {
 170:/usr/include/c++/11/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 171:/usr/include/c++/11/bits/deque.tcc **** 				     this->_M_impl._M_finish._M_cur,
 172:/usr/include/c++/11/bits/deque.tcc **** 				     std::forward<_Args>(__args)...);
 173:/usr/include/c++/11/bits/deque.tcc **** 	    ++this->_M_impl._M_finish._M_cur;
 193              		.loc 6 173 6 view .LVU39
 194 0041 4883C008 		addq	$8, %rax
 195              	.LVL8:
 196              	.LBB597:
 197              	.LBB596:
 198              	.LBB595:
 199              	.LBB594:
 200              	.LBB593:
 201              	.LBB592:
 202              	.LBB590:
 203              	.LBB589:
 204              	.LBB588:
 301:/usr/include/c++/11/tuple **** 
 205              		.loc 11 301 7 view .LVU40
 206 0045 488950F8 		movq	%rdx, -8(%rax)
 207              	.LVL9:
 301:/usr/include/c++/11/tuple **** 
 208              		.loc 11 301 7 view .LVU41
 209              	.LBE588:
 210              	.LBE589:
 211              	.LBE590:
 212              	.LBB591:
 213              	.LBI591:
GAS LISTING x64lin/../common/event.s 			page 95


 172:/usr/include/c++/11/bits/unique_ptr.h ****       pointer    _M_ptr() const { return std::get<0>(_M_t); }
 214              		.loc 9 172 16 is_stmt 1 view .LVU42
 172:/usr/include/c++/11/bits/unique_ptr.h ****       pointer    _M_ptr() const { return std::get<0>(_M_t); }
 215              		.loc 9 172 16 is_stmt 0 view .LVU43
 216              	.LBE591:
 163:/usr/include/c++/11/bits/unique_ptr.h **** 
 217              		.loc 9 163 22 view .LVU44
 218 0049 48C74500 		movq	$0, 0(%rbp)
 218      00000000 
 219              	.LVL10:
 220              	.L4:
 163:/usr/include/c++/11/bits/unique_ptr.h **** 
 221              		.loc 9 163 22 view .LVU45
 222              	.LBE592:
 223              	.LBE593:
 224              	.LBE594:
 225              	.LBE595:
 226              	.LBE596:
 227              	.LBE597:
 228              		.loc 6 173 6 view .LVU46
 229 0051 48894330 		movq	%rax, 48(%rbx)
 230              	.LVL11:
 231              	.LBB598:
 232              	.LBI598:
1427:/usr/include/c++/11/bits/stl_deque.h ****       {
 233              		.loc 5 1427 7 is_stmt 1 view .LVU47
 234              	.LBB599:
 235              	.LBB600:
 236              	.LBI600:
1145:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
 237              		.loc 5 1145 7 view .LVU48
 238              	.LBB601:
 239              	.LBI601:
 168:/usr/include/c++/11/bits/stl_deque.h ****        : _M_cur(__x._M_cur), _M_first(__x._M_first),
 240              		.loc 5 168 7 view .LVU49
 168:/usr/include/c++/11/bits/stl_deque.h ****        : _M_cur(__x._M_cur), _M_first(__x._M_first),
 241              		.loc 5 168 7 is_stmt 0 view .LVU50
 242              	.LBE601:
 243              	.LBE600:
 244              	.LBE599:
 245              	.LBE598:
 246              	.LBE576:
 247              	.LBE575:
 248              	.LBE574:
 249              	.LBE573:
   8:../common/event.cpp **** 
   9:../common/event.cpp ****     sharedResources.eventCondition.notify_one();
 250              		.loc 1 9 5 is_stmt 1 view .LVU51
 251              		.loc 1 9 46 is_stmt 0 view .LVU52
 252 0055 488D7B78 		leaq	120(%rbx), %rdi
 253 0059 E8000000 		call	_ZNSt18condition_variable10notify_oneEv@PLT
 253      00
 254              	.LVL12:
 255              	.LBB723:
 256              	.LBI723:
 229:/usr/include/c++/11/bits/std_mutex.h ****       { _M_device.lock(); }
 230:/usr/include/c++/11/bits/std_mutex.h **** 
GAS LISTING x64lin/../common/event.s 			page 96


 231:/usr/include/c++/11/bits/std_mutex.h ****       lock_guard(mutex_type& __m, adopt_lock_t) noexcept : _M_device(__m)
 232:/usr/include/c++/11/bits/std_mutex.h ****       { } // calling thread owns mutex
 233:/usr/include/c++/11/bits/std_mutex.h **** 
 234:/usr/include/c++/11/bits/std_mutex.h ****       ~lock_guard()
 257              		.loc 2 234 7 is_stmt 1 view .LVU53
 258              	.LBB724:
 259              	.LBI724:
 115:/usr/include/c++/11/bits/std_mutex.h ****     {
 260              		.loc 2 115 5 view .LVU54
 118:/usr/include/c++/11/bits/std_mutex.h ****     }
 261              		.loc 2 118 7 view .LVU55
 262              	.LBB725:
 263              	.LBI725:
 750:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 751:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 752:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 753:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 754:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 755:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_trylock (__gthread_mutex_t *__mutex)
 756:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 757:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 758:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_trylock) (__mutex);
 759:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 760:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 761:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 762:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 763:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #if _GTHREAD_USE_MUTEX_TIMEDLOCK
 764:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 765:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_timedlock (__gthread_mutex_t *__mutex,
 766:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 			   const __gthread_time_t *__abs_timeout)
 767:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 768:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 769:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_timedlock) (__mutex, __abs_timeout);
 770:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   else
 771:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return 0;
 772:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** }
 773:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** #endif
 774:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** 
 775:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** static inline int
 776:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** __gthread_mutex_unlock (__gthread_mutex_t *__mutex)
 264              		.loc 3 776 1 view .LVU56
 265              	.LBB726:
 777:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 778:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****   if (__gthread_active_p ())
 266              		.loc 3 778 3 view .LVU57
 779:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_unlock) (__mutex);
 267              		.loc 3 779 5 view .LVU58
 268              	.LBE726:
 269              	.LBE725:
 270              	.LBE724:
 271              	.LBE723:
  10:../common/event.cpp **** }
 272              		.loc 1 10 1 is_stmt 0 view .LVU59
 273 005e 4883C418 		addq	$24, %rsp
 274              		.cfi_remember_state
 275              		.cfi_def_cfa_offset 56
 276              	.LBB733:
GAS LISTING x64lin/../common/event.s 			page 97


 277              	.LBB731:
 278              	.LBB729:
 279              	.LBB727:
 280              		.loc 3 779 33 view .LVU60
 281 0062 4C89E7   		movq	%r12, %rdi
 282              	.LBE727:
 283              	.LBE729:
 284              	.LBE731:
 285              	.LBE733:
 286              		.loc 1 10 1 view .LVU61
 287 0065 5B       		popq	%rbx
 288              		.cfi_def_cfa_offset 48
 289              	.LVL13:
 290              		.loc 1 10 1 view .LVU62
 291 0066 5D       		popq	%rbp
 292              		.cfi_def_cfa_offset 40
 293              	.LVL14:
 294              		.loc 1 10 1 view .LVU63
 295 0067 415C     		popq	%r12
 296              		.cfi_def_cfa_offset 32
 297              	.LVL15:
 298              		.loc 1 10 1 view .LVU64
 299 0069 415D     		popq	%r13
 300              		.cfi_def_cfa_offset 24
 301 006b 415E     		popq	%r14
 302              		.cfi_def_cfa_offset 16
 303 006d 415F     		popq	%r15
 304              		.cfi_def_cfa_offset 8
 305              	.LBB734:
 306              	.LBB732:
 307              	.LBB730:
 308              	.LBB728:
 309              		.loc 3 779 33 view .LVU65
 310 006f E9000000 		jmp	pthread_mutex_unlock@PLT
 310      00
 311              	.LVL16:
 312              		.p2align 4,,10
 313 0074 0F1F4000 		.p2align 3
 314              	.L3:
 315              		.cfi_restore_state
 316              		.loc 3 779 33 view .LVU66
 317              	.LBE728:
 318              	.LBE730:
 319              	.LBE732:
 320              	.LBE734:
 321              	.LBB735:
 322              	.LBB721:
 323              	.LBB719:
 324              	.LBB717:
 325              	.LBB602:
 326              	.LBI602:
 174:/usr/include/c++/11/bits/deque.tcc **** 	  }
 175:/usr/include/c++/11/bits/deque.tcc **** 	else
 176:/usr/include/c++/11/bits/deque.tcc **** 	  _M_push_back_aux(std::forward<_Args>(__args)...);
 177:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus > 201402L
 178:/usr/include/c++/11/bits/deque.tcc **** 	return back();
 179:/usr/include/c++/11/bits/deque.tcc **** #endif
GAS LISTING x64lin/../common/event.s 			page 98


 180:/usr/include/c++/11/bits/deque.tcc ****       }
 181:/usr/include/c++/11/bits/deque.tcc **** #endif
 182:/usr/include/c++/11/bits/deque.tcc **** 
 183:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 184:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 185:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 186:/usr/include/c++/11/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
 187:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 188:/usr/include/c++/11/bits/deque.tcc ****       emplace(const_iterator __position, _Args&&... __args)
 189:/usr/include/c++/11/bits/deque.tcc ****       {
 190:/usr/include/c++/11/bits/deque.tcc **** 	if (__position._M_cur == this->_M_impl._M_start._M_cur)
 191:/usr/include/c++/11/bits/deque.tcc **** 	  {
 192:/usr/include/c++/11/bits/deque.tcc **** 	    emplace_front(std::forward<_Args>(__args)...);
 193:/usr/include/c++/11/bits/deque.tcc **** 	    return this->_M_impl._M_start;
 194:/usr/include/c++/11/bits/deque.tcc **** 	  }
 195:/usr/include/c++/11/bits/deque.tcc **** 	else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 196:/usr/include/c++/11/bits/deque.tcc **** 	  {
 197:/usr/include/c++/11/bits/deque.tcc **** 	    emplace_back(std::forward<_Args>(__args)...);
 198:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __tmp = this->_M_impl._M_finish;
 199:/usr/include/c++/11/bits/deque.tcc **** 	    --__tmp;
 200:/usr/include/c++/11/bits/deque.tcc **** 	    return __tmp;
 201:/usr/include/c++/11/bits/deque.tcc **** 	  }
 202:/usr/include/c++/11/bits/deque.tcc **** 	else
 203:/usr/include/c++/11/bits/deque.tcc **** 	  return _M_insert_aux(__position._M_const_cast(),
 204:/usr/include/c++/11/bits/deque.tcc **** 			       std::forward<_Args>(__args)...);
 205:/usr/include/c++/11/bits/deque.tcc ****       }
 206:/usr/include/c++/11/bits/deque.tcc **** #endif
 207:/usr/include/c++/11/bits/deque.tcc **** 
 208:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 209:/usr/include/c++/11/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 210:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 211:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 212:/usr/include/c++/11/bits/deque.tcc ****     insert(const_iterator __position, const value_type& __x)
 213:/usr/include/c++/11/bits/deque.tcc **** #else
 214:/usr/include/c++/11/bits/deque.tcc ****     insert(iterator __position, const value_type& __x)
 215:/usr/include/c++/11/bits/deque.tcc **** #endif
 216:/usr/include/c++/11/bits/deque.tcc ****     {
 217:/usr/include/c++/11/bits/deque.tcc ****       if (__position._M_cur == this->_M_impl._M_start._M_cur)
 218:/usr/include/c++/11/bits/deque.tcc **** 	{
 219:/usr/include/c++/11/bits/deque.tcc **** 	  push_front(__x);
 220:/usr/include/c++/11/bits/deque.tcc **** 	  return this->_M_impl._M_start;
 221:/usr/include/c++/11/bits/deque.tcc **** 	}
 222:/usr/include/c++/11/bits/deque.tcc ****       else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 223:/usr/include/c++/11/bits/deque.tcc **** 	{
 224:/usr/include/c++/11/bits/deque.tcc **** 	  push_back(__x);
 225:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __tmp = this->_M_impl._M_finish;
 226:/usr/include/c++/11/bits/deque.tcc **** 	  --__tmp;
 227:/usr/include/c++/11/bits/deque.tcc **** 	  return __tmp;
 228:/usr/include/c++/11/bits/deque.tcc **** 	}
 229:/usr/include/c++/11/bits/deque.tcc ****       else
 230:/usr/include/c++/11/bits/deque.tcc **** 	return _M_insert_aux(__position._M_const_cast(), __x);
 231:/usr/include/c++/11/bits/deque.tcc ****    }
 232:/usr/include/c++/11/bits/deque.tcc **** 
 233:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 234:/usr/include/c++/11/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 235:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 236:/usr/include/c++/11/bits/deque.tcc ****     _M_erase(iterator __position)
GAS LISTING x64lin/../common/event.s 			page 99


 237:/usr/include/c++/11/bits/deque.tcc ****     {
 238:/usr/include/c++/11/bits/deque.tcc ****       iterator __next = __position;
 239:/usr/include/c++/11/bits/deque.tcc ****       ++__next;
 240:/usr/include/c++/11/bits/deque.tcc ****       const difference_type __index = __position - begin();
 241:/usr/include/c++/11/bits/deque.tcc ****       if (static_cast<size_type>(__index) < (size() >> 1))
 242:/usr/include/c++/11/bits/deque.tcc **** 	{
 243:/usr/include/c++/11/bits/deque.tcc **** 	  if (__position != begin())
 244:/usr/include/c++/11/bits/deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(begin(), __position, __next);
 245:/usr/include/c++/11/bits/deque.tcc **** 	  pop_front();
 246:/usr/include/c++/11/bits/deque.tcc **** 	}
 247:/usr/include/c++/11/bits/deque.tcc ****       else
 248:/usr/include/c++/11/bits/deque.tcc **** 	{
 249:/usr/include/c++/11/bits/deque.tcc **** 	  if (__next != end())
 250:/usr/include/c++/11/bits/deque.tcc **** 	    _GLIBCXX_MOVE3(__next, end(), __position);
 251:/usr/include/c++/11/bits/deque.tcc **** 	  pop_back();
 252:/usr/include/c++/11/bits/deque.tcc **** 	}
 253:/usr/include/c++/11/bits/deque.tcc ****       return begin() + __index;
 254:/usr/include/c++/11/bits/deque.tcc ****     }
 255:/usr/include/c++/11/bits/deque.tcc **** 
 256:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 257:/usr/include/c++/11/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 258:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 259:/usr/include/c++/11/bits/deque.tcc ****     _M_erase(iterator __first, iterator __last)
 260:/usr/include/c++/11/bits/deque.tcc ****     {
 261:/usr/include/c++/11/bits/deque.tcc ****       if (__first == __last)
 262:/usr/include/c++/11/bits/deque.tcc **** 	return __first;
 263:/usr/include/c++/11/bits/deque.tcc ****       else if (__first == begin() && __last == end())
 264:/usr/include/c++/11/bits/deque.tcc **** 	{
 265:/usr/include/c++/11/bits/deque.tcc **** 	  clear();
 266:/usr/include/c++/11/bits/deque.tcc **** 	  return end();
 267:/usr/include/c++/11/bits/deque.tcc **** 	}
 268:/usr/include/c++/11/bits/deque.tcc ****       else
 269:/usr/include/c++/11/bits/deque.tcc **** 	{
 270:/usr/include/c++/11/bits/deque.tcc **** 	  const difference_type __n = __last - __first;
 271:/usr/include/c++/11/bits/deque.tcc **** 	  const difference_type __elems_before = __first - begin();
 272:/usr/include/c++/11/bits/deque.tcc **** 	  if (static_cast<size_type>(__elems_before) <= (size() - __n) / 2)
 273:/usr/include/c++/11/bits/deque.tcc **** 	    {
 274:/usr/include/c++/11/bits/deque.tcc **** 	      if (__first != begin())
 275:/usr/include/c++/11/bits/deque.tcc **** 		_GLIBCXX_MOVE_BACKWARD3(begin(), __first, __last);
 276:/usr/include/c++/11/bits/deque.tcc **** 	      _M_erase_at_begin(begin() + __n);
 277:/usr/include/c++/11/bits/deque.tcc **** 	    }
 278:/usr/include/c++/11/bits/deque.tcc **** 	  else
 279:/usr/include/c++/11/bits/deque.tcc **** 	    {
 280:/usr/include/c++/11/bits/deque.tcc **** 	      if (__last != end())
 281:/usr/include/c++/11/bits/deque.tcc **** 		_GLIBCXX_MOVE3(__last, end(), __first);
 282:/usr/include/c++/11/bits/deque.tcc **** 	      _M_erase_at_end(end() - __n);
 283:/usr/include/c++/11/bits/deque.tcc **** 	    }
 284:/usr/include/c++/11/bits/deque.tcc **** 	  return begin() + __elems_before;
 285:/usr/include/c++/11/bits/deque.tcc **** 	}
 286:/usr/include/c++/11/bits/deque.tcc ****     }
 287:/usr/include/c++/11/bits/deque.tcc **** 
 288:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, class _Alloc>
 289:/usr/include/c++/11/bits/deque.tcc ****     template <typename _InputIterator>
 290:/usr/include/c++/11/bits/deque.tcc ****       void
 291:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 292:/usr/include/c++/11/bits/deque.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 293:/usr/include/c++/11/bits/deque.tcc **** 		    std::input_iterator_tag)
GAS LISTING x64lin/../common/event.s 			page 100


 294:/usr/include/c++/11/bits/deque.tcc ****       {
 295:/usr/include/c++/11/bits/deque.tcc **** 	iterator __cur = begin();
 296:/usr/include/c++/11/bits/deque.tcc **** 	for (; __first != __last && __cur != end(); ++__cur, (void)++__first)
 297:/usr/include/c++/11/bits/deque.tcc **** 	  *__cur = *__first;
 298:/usr/include/c++/11/bits/deque.tcc **** 	if (__first == __last)
 299:/usr/include/c++/11/bits/deque.tcc **** 	  _M_erase_at_end(__cur);
 300:/usr/include/c++/11/bits/deque.tcc **** 	else
 301:/usr/include/c++/11/bits/deque.tcc **** 	  _M_range_insert_aux(end(), __first, __last,
 302:/usr/include/c++/11/bits/deque.tcc **** 			      std::__iterator_category(__first));
 303:/usr/include/c++/11/bits/deque.tcc ****       }
 304:/usr/include/c++/11/bits/deque.tcc **** 
 305:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 306:/usr/include/c++/11/bits/deque.tcc ****     void
 307:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 308:/usr/include/c++/11/bits/deque.tcc ****     _M_fill_insert(iterator __pos, size_type __n, const value_type& __x)
 309:/usr/include/c++/11/bits/deque.tcc ****     {
 310:/usr/include/c++/11/bits/deque.tcc ****       if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 311:/usr/include/c++/11/bits/deque.tcc **** 	{
 312:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 313:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 314:/usr/include/c++/11/bits/deque.tcc **** 	    {
 315:/usr/include/c++/11/bits/deque.tcc **** 	      std::__uninitialized_fill_a(__new_start, this->_M_impl._M_start,
 316:/usr/include/c++/11/bits/deque.tcc **** 					  __x, _M_get_Tp_allocator());
 317:/usr/include/c++/11/bits/deque.tcc **** 	      this->_M_impl._M_start = __new_start;
 318:/usr/include/c++/11/bits/deque.tcc **** 	    }
 319:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 320:/usr/include/c++/11/bits/deque.tcc **** 	    {
 321:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 322:/usr/include/c++/11/bits/deque.tcc **** 			       this->_M_impl._M_start._M_node);
 323:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 324:/usr/include/c++/11/bits/deque.tcc **** 	    }
 325:/usr/include/c++/11/bits/deque.tcc **** 	}
 326:/usr/include/c++/11/bits/deque.tcc ****       else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 327:/usr/include/c++/11/bits/deque.tcc **** 	{
 328:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 329:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 330:/usr/include/c++/11/bits/deque.tcc **** 	    {
 331:/usr/include/c++/11/bits/deque.tcc **** 	      std::__uninitialized_fill_a(this->_M_impl._M_finish,
 332:/usr/include/c++/11/bits/deque.tcc **** 					  __new_finish, __x,
 333:/usr/include/c++/11/bits/deque.tcc **** 					  _M_get_Tp_allocator());
 334:/usr/include/c++/11/bits/deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 335:/usr/include/c++/11/bits/deque.tcc **** 	    }
 336:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 337:/usr/include/c++/11/bits/deque.tcc **** 	    {
 338:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 339:/usr/include/c++/11/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 340:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 341:/usr/include/c++/11/bits/deque.tcc **** 	    }
 342:/usr/include/c++/11/bits/deque.tcc **** 	}
 343:/usr/include/c++/11/bits/deque.tcc ****       else
 344:/usr/include/c++/11/bits/deque.tcc **** 	_M_insert_aux(__pos, __n, __x);
 345:/usr/include/c++/11/bits/deque.tcc ****     }
 346:/usr/include/c++/11/bits/deque.tcc **** 
 347:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 348:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 349:/usr/include/c++/11/bits/deque.tcc ****     void
 350:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
GAS LISTING x64lin/../common/event.s 			page 101


 351:/usr/include/c++/11/bits/deque.tcc ****     _M_default_append(size_type __n)
 352:/usr/include/c++/11/bits/deque.tcc ****     {
 353:/usr/include/c++/11/bits/deque.tcc ****       if (__n)
 354:/usr/include/c++/11/bits/deque.tcc **** 	{
 355:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 356:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 357:/usr/include/c++/11/bits/deque.tcc **** 	    {
 358:/usr/include/c++/11/bits/deque.tcc **** 	      std::__uninitialized_default_a(this->_M_impl._M_finish,
 359:/usr/include/c++/11/bits/deque.tcc **** 					     __new_finish,
 360:/usr/include/c++/11/bits/deque.tcc **** 					     _M_get_Tp_allocator());
 361:/usr/include/c++/11/bits/deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 362:/usr/include/c++/11/bits/deque.tcc **** 	    }
 363:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 364:/usr/include/c++/11/bits/deque.tcc **** 	    {
 365:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 366:/usr/include/c++/11/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 367:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 368:/usr/include/c++/11/bits/deque.tcc **** 	    }
 369:/usr/include/c++/11/bits/deque.tcc **** 	}
 370:/usr/include/c++/11/bits/deque.tcc ****     }
 371:/usr/include/c++/11/bits/deque.tcc **** 
 372:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 373:/usr/include/c++/11/bits/deque.tcc ****     bool
 374:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 375:/usr/include/c++/11/bits/deque.tcc ****     _M_shrink_to_fit()
 376:/usr/include/c++/11/bits/deque.tcc ****     {
 377:/usr/include/c++/11/bits/deque.tcc ****       const difference_type __front_capacity
 378:/usr/include/c++/11/bits/deque.tcc **** 	= (this->_M_impl._M_start._M_cur - this->_M_impl._M_start._M_first);
 379:/usr/include/c++/11/bits/deque.tcc ****       if (__front_capacity == 0)
 380:/usr/include/c++/11/bits/deque.tcc **** 	return false;
 381:/usr/include/c++/11/bits/deque.tcc **** 
 382:/usr/include/c++/11/bits/deque.tcc ****       const difference_type __back_capacity
 383:/usr/include/c++/11/bits/deque.tcc **** 	= (this->_M_impl._M_finish._M_last - this->_M_impl._M_finish._M_cur);
 384:/usr/include/c++/11/bits/deque.tcc ****       if (__front_capacity + __back_capacity < _S_buffer_size())
 385:/usr/include/c++/11/bits/deque.tcc **** 	return false;
 386:/usr/include/c++/11/bits/deque.tcc **** 
 387:/usr/include/c++/11/bits/deque.tcc ****       return std::__shrink_to_fit_aux<deque>::_S_do_it(*this);
 388:/usr/include/c++/11/bits/deque.tcc ****     }
 389:/usr/include/c++/11/bits/deque.tcc **** #endif
 390:/usr/include/c++/11/bits/deque.tcc **** 
 391:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 392:/usr/include/c++/11/bits/deque.tcc ****     void
 393:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 394:/usr/include/c++/11/bits/deque.tcc ****     _M_fill_initialize(const value_type& __value)
 395:/usr/include/c++/11/bits/deque.tcc ****     {
 396:/usr/include/c++/11/bits/deque.tcc ****       _Map_pointer __cur;
 397:/usr/include/c++/11/bits/deque.tcc ****       __try
 398:/usr/include/c++/11/bits/deque.tcc **** 	{
 399:/usr/include/c++/11/bits/deque.tcc **** 	  for (__cur = this->_M_impl._M_start._M_node;
 400:/usr/include/c++/11/bits/deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
 401:/usr/include/c++/11/bits/deque.tcc **** 	       ++__cur)
 402:/usr/include/c++/11/bits/deque.tcc **** 	    std::__uninitialized_fill_a(*__cur, *__cur + _S_buffer_size(),
 403:/usr/include/c++/11/bits/deque.tcc **** 					__value, _M_get_Tp_allocator());
 404:/usr/include/c++/11/bits/deque.tcc **** 	  std::__uninitialized_fill_a(this->_M_impl._M_finish._M_first,
 405:/usr/include/c++/11/bits/deque.tcc **** 				      this->_M_impl._M_finish._M_cur,
 406:/usr/include/c++/11/bits/deque.tcc **** 				      __value, _M_get_Tp_allocator());
 407:/usr/include/c++/11/bits/deque.tcc **** 	}
GAS LISTING x64lin/../common/event.s 			page 102


 408:/usr/include/c++/11/bits/deque.tcc ****       __catch(...)
 409:/usr/include/c++/11/bits/deque.tcc **** 	{
 410:/usr/include/c++/11/bits/deque.tcc **** 	  std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
 411:/usr/include/c++/11/bits/deque.tcc **** 			_M_get_Tp_allocator());
 412:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_exception_again;
 413:/usr/include/c++/11/bits/deque.tcc **** 	}
 414:/usr/include/c++/11/bits/deque.tcc ****     }
 415:/usr/include/c++/11/bits/deque.tcc **** 
 416:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 417:/usr/include/c++/11/bits/deque.tcc ****     template <typename _InputIterator>
 418:/usr/include/c++/11/bits/deque.tcc ****       void
 419:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 420:/usr/include/c++/11/bits/deque.tcc ****       _M_range_initialize(_InputIterator __first, _InputIterator __last,
 421:/usr/include/c++/11/bits/deque.tcc **** 			  std::input_iterator_tag)
 422:/usr/include/c++/11/bits/deque.tcc ****       {
 423:/usr/include/c++/11/bits/deque.tcc **** 	this->_M_initialize_map(0);
 424:/usr/include/c++/11/bits/deque.tcc **** 	__try
 425:/usr/include/c++/11/bits/deque.tcc **** 	  {
 426:/usr/include/c++/11/bits/deque.tcc **** 	    for (; __first != __last; ++__first)
 427:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 428:/usr/include/c++/11/bits/deque.tcc **** 	      emplace_back(*__first);
 429:/usr/include/c++/11/bits/deque.tcc **** #else
 430:/usr/include/c++/11/bits/deque.tcc **** 	      push_back(*__first);
 431:/usr/include/c++/11/bits/deque.tcc **** #endif
 432:/usr/include/c++/11/bits/deque.tcc **** 	  }
 433:/usr/include/c++/11/bits/deque.tcc **** 	__catch(...)
 434:/usr/include/c++/11/bits/deque.tcc **** 	  {
 435:/usr/include/c++/11/bits/deque.tcc **** 	    clear();
 436:/usr/include/c++/11/bits/deque.tcc **** 	    __throw_exception_again;
 437:/usr/include/c++/11/bits/deque.tcc **** 	  }
 438:/usr/include/c++/11/bits/deque.tcc ****       }
 439:/usr/include/c++/11/bits/deque.tcc **** 
 440:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 441:/usr/include/c++/11/bits/deque.tcc ****     template <typename _ForwardIterator>
 442:/usr/include/c++/11/bits/deque.tcc ****       void
 443:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 444:/usr/include/c++/11/bits/deque.tcc ****       _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 445:/usr/include/c++/11/bits/deque.tcc **** 			  std::forward_iterator_tag)
 446:/usr/include/c++/11/bits/deque.tcc ****       {
 447:/usr/include/c++/11/bits/deque.tcc **** 	const size_type __n = std::distance(__first, __last);
 448:/usr/include/c++/11/bits/deque.tcc **** 	this->_M_initialize_map(_S_check_init_len(__n, _M_get_Tp_allocator()));
 449:/usr/include/c++/11/bits/deque.tcc **** 
 450:/usr/include/c++/11/bits/deque.tcc **** 	_Map_pointer __cur_node;
 451:/usr/include/c++/11/bits/deque.tcc **** 	__try
 452:/usr/include/c++/11/bits/deque.tcc **** 	  {
 453:/usr/include/c++/11/bits/deque.tcc **** 	    for (__cur_node = this->_M_impl._M_start._M_node;
 454:/usr/include/c++/11/bits/deque.tcc **** 		 __cur_node < this->_M_impl._M_finish._M_node;
 455:/usr/include/c++/11/bits/deque.tcc **** 		 ++__cur_node)
 456:/usr/include/c++/11/bits/deque.tcc **** 	      {
 457:/usr/include/c++/11/bits/deque.tcc **** 		if (__n < _S_buffer_size())
 458:/usr/include/c++/11/bits/deque.tcc **** 		  __builtin_unreachable(); // See PR 100516
 459:/usr/include/c++/11/bits/deque.tcc **** 
 460:/usr/include/c++/11/bits/deque.tcc **** 		_ForwardIterator __mid = __first;
 461:/usr/include/c++/11/bits/deque.tcc **** 		std::advance(__mid, _S_buffer_size());
 462:/usr/include/c++/11/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __mid, *__cur_node,
 463:/usr/include/c++/11/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 464:/usr/include/c++/11/bits/deque.tcc **** 		__first = __mid;
GAS LISTING x64lin/../common/event.s 			page 103


 465:/usr/include/c++/11/bits/deque.tcc **** 	      }
 466:/usr/include/c++/11/bits/deque.tcc **** 	    std::__uninitialized_copy_a(__first, __last,
 467:/usr/include/c++/11/bits/deque.tcc **** 					this->_M_impl._M_finish._M_first,
 468:/usr/include/c++/11/bits/deque.tcc **** 					_M_get_Tp_allocator());
 469:/usr/include/c++/11/bits/deque.tcc **** 	  }
 470:/usr/include/c++/11/bits/deque.tcc **** 	__catch(...)
 471:/usr/include/c++/11/bits/deque.tcc **** 	  {
 472:/usr/include/c++/11/bits/deque.tcc **** 	    std::_Destroy(this->_M_impl._M_start,
 473:/usr/include/c++/11/bits/deque.tcc **** 			  iterator(*__cur_node, __cur_node),
 474:/usr/include/c++/11/bits/deque.tcc **** 			  _M_get_Tp_allocator());
 475:/usr/include/c++/11/bits/deque.tcc **** 	    __throw_exception_again;
 476:/usr/include/c++/11/bits/deque.tcc **** 	  }
 477:/usr/include/c++/11/bits/deque.tcc ****       }
 478:/usr/include/c++/11/bits/deque.tcc **** 
 479:/usr/include/c++/11/bits/deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_last - 1.
 480:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 481:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 482:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 483:/usr/include/c++/11/bits/deque.tcc ****       void
 484:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 327              		.loc 6 484 7 is_stmt 1 view .LVU67
 328              	.LBB603:
 329              	.LBB604:
 330              	.LBI604:
1233:/usr/include/c++/11/bits/stl_deque.h ****       { return this->_M_impl._M_finish - this->_M_impl._M_start; }
 331              		.loc 5 1233 7 view .LVU68
 332              	.LBB605:
 333              	.LBI605:
 353:/usr/include/c++/11/bits/stl_deque.h ****       {
 334              		.loc 5 353 7 view .LVU69
 335              	.LBB606:
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 336              		.loc 5 356 11 is_stmt 0 view .LVU70
 337 0078 4C8B7B48 		movq	72(%rbx), %r15
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 338              		.loc 5 356 25 view .LVU71
 339 007c 488B7328 		movq	40(%rbx), %rsi
 340              	.LBE606:
 341              	.LBE605:
 342              	.LBE604:
 485:/usr/include/c++/11/bits/deque.tcc ****       _M_push_back_aux(_Args&&... __args)
 486:/usr/include/c++/11/bits/deque.tcc **** #else
 487:/usr/include/c++/11/bits/deque.tcc ****       void
 488:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 489:/usr/include/c++/11/bits/deque.tcc ****       _M_push_back_aux(const value_type& __t)
 490:/usr/include/c++/11/bits/deque.tcc **** #endif
 491:/usr/include/c++/11/bits/deque.tcc ****       {
 492:/usr/include/c++/11/bits/deque.tcc **** 	if (size() == max_size())
 343              		.loc 6 492 2 view .LVU72
 344 0080 48BFFFFF 		movabsq	$2305843009213693951, %rdi
 344      FFFFFFFF 
 344      FF1F
 345              	.LBB609:
 346              	.LBB608:
 347              	.LBB607:
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 348              		.loc 5 356 19 view .LVU73
GAS LISTING x64lin/../common/event.s 			page 104


 349 008a 4D89FE   		movq	%r15, %r14
 350 008d 4929F6   		subq	%rsi, %r14
 351 0090 4D89F5   		movq	%r14, %r13
 352 0093 49C1FD03 		sarq	$3, %r13
 353              	.LVL17:
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 354              		.loc 5 356 33 view .LVU74
 355 0097 4983FF01 		cmpq	$1, %r15
 356 009b 4C89EA   		movq	%r13, %rdx
 357 009e 4883D2FF 		adcq	$-1, %rdx
 357:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__y._M_last - __y._M_cur);
 358              		.loc 5 357 18 view .LVU75
 359 00a2 482B4338 		subq	56(%rbx), %rax
 356:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__x._M_cur - __x._M_first)
 360              		.loc 5 356 4 view .LVU76
 361 00a6 48C1E206 		salq	$6, %rdx
 357:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__y._M_last - __y._M_cur);
 362              		.loc 5 357 18 view .LVU77
 363 00aa 48C1F803 		sarq	$3, %rax
 357:/usr/include/c++/11/bits/stl_deque.h **** 	  + (__y._M_last - __y._M_cur);
 364              		.loc 5 357 4 view .LVU78
 365 00ae 4801D0   		addq	%rdx, %rax
 358:/usr/include/c++/11/bits/stl_deque.h ****       }
 366              		.loc 5 358 19 view .LVU79
 367 00b1 488B5320 		movq	32(%rbx), %rdx
 368 00b5 482B5310 		subq	16(%rbx), %rdx
 369 00b9 48C1FA03 		sarq	$3, %rdx
 358:/usr/include/c++/11/bits/stl_deque.h ****       }
 370              		.loc 5 358 31 view .LVU80
 371 00bd 4801D0   		addq	%rdx, %rax
 372              	.LBE607:
 373              	.LBE608:
 374              	.LBE609:
 375              		.loc 6 492 2 view .LVU81
 376 00c0 4839F8   		cmpq	%rdi, %rax
 377 00c3 0F84A601 		je	.L18
 377      0000
 378              	.LVL18:
 379              	.LBB610:
 380              	.LBI610:
1512:/usr/include/c++/11/bits/stl_deque.h ****       { emplace_back(std::move(__x)); }
1513:/usr/include/c++/11/bits/stl_deque.h **** 
1514:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
1515:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus > 201402L
1516:/usr/include/c++/11/bits/stl_deque.h **** 	reference
1517:/usr/include/c++/11/bits/stl_deque.h **** #else
1518:/usr/include/c++/11/bits/stl_deque.h **** 	void
1519:/usr/include/c++/11/bits/stl_deque.h **** #endif
1520:/usr/include/c++/11/bits/stl_deque.h **** 	emplace_back(_Args&&... __args);
1521:/usr/include/c++/11/bits/stl_deque.h **** #endif
1522:/usr/include/c++/11/bits/stl_deque.h **** 
1523:/usr/include/c++/11/bits/stl_deque.h ****       /**
1524:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Removes first element.
1525:/usr/include/c++/11/bits/stl_deque.h ****        *
1526:/usr/include/c++/11/bits/stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1527:/usr/include/c++/11/bits/stl_deque.h ****        *
1528:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that no data is returned, and if the first element's data is
GAS LISTING x64lin/../common/event.s 			page 105


1529:/usr/include/c++/11/bits/stl_deque.h ****        *  needed, it should be retrieved before pop_front() is called.
1530:/usr/include/c++/11/bits/stl_deque.h ****        */
1531:/usr/include/c++/11/bits/stl_deque.h ****       void
1532:/usr/include/c++/11/bits/stl_deque.h ****       pop_front() _GLIBCXX_NOEXCEPT
1533:/usr/include/c++/11/bits/stl_deque.h ****       {
1534:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1535:/usr/include/c++/11/bits/stl_deque.h **** 	if (this->_M_impl._M_start._M_cur
1536:/usr/include/c++/11/bits/stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
1537:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1538:/usr/include/c++/11/bits/stl_deque.h **** 	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
1539:/usr/include/c++/11/bits/stl_deque.h **** 				   this->_M_impl._M_start._M_cur);
1540:/usr/include/c++/11/bits/stl_deque.h **** 	    ++this->_M_impl._M_start._M_cur;
1541:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1542:/usr/include/c++/11/bits/stl_deque.h **** 	else
1543:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_pop_front_aux();
1544:/usr/include/c++/11/bits/stl_deque.h ****       }
1545:/usr/include/c++/11/bits/stl_deque.h **** 
1546:/usr/include/c++/11/bits/stl_deque.h ****       /**
1547:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Removes last element.
1548:/usr/include/c++/11/bits/stl_deque.h ****        *
1549:/usr/include/c++/11/bits/stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1550:/usr/include/c++/11/bits/stl_deque.h ****        *
1551:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that no data is returned, and if the last element's data is
1552:/usr/include/c++/11/bits/stl_deque.h ****        *  needed, it should be retrieved before pop_back() is called.
1553:/usr/include/c++/11/bits/stl_deque.h ****        */
1554:/usr/include/c++/11/bits/stl_deque.h ****       void
1555:/usr/include/c++/11/bits/stl_deque.h ****       pop_back() _GLIBCXX_NOEXCEPT
1556:/usr/include/c++/11/bits/stl_deque.h ****       {
1557:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_requires_nonempty();
1558:/usr/include/c++/11/bits/stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1559:/usr/include/c++/11/bits/stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
1560:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1561:/usr/include/c++/11/bits/stl_deque.h **** 	    --this->_M_impl._M_finish._M_cur;
1562:/usr/include/c++/11/bits/stl_deque.h **** 	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
1563:/usr/include/c++/11/bits/stl_deque.h **** 				   this->_M_impl._M_finish._M_cur);
1564:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1565:/usr/include/c++/11/bits/stl_deque.h **** 	else
1566:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_pop_back_aux();
1567:/usr/include/c++/11/bits/stl_deque.h ****       }
1568:/usr/include/c++/11/bits/stl_deque.h **** 
1569:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1570:/usr/include/c++/11/bits/stl_deque.h ****       /**
1571:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts an object in %deque before specified iterator.
1572:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1573:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __args  Arguments.
1574:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1575:/usr/include/c++/11/bits/stl_deque.h ****        *
1576:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert an object of type T constructed
1577:/usr/include/c++/11/bits/stl_deque.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1578:/usr/include/c++/11/bits/stl_deque.h ****        */
1579:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
1580:/usr/include/c++/11/bits/stl_deque.h **** 	iterator
1581:/usr/include/c++/11/bits/stl_deque.h **** 	emplace(const_iterator __position, _Args&&... __args);
1582:/usr/include/c++/11/bits/stl_deque.h **** 
1583:/usr/include/c++/11/bits/stl_deque.h ****       /**
1584:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts given value into %deque before specified iterator.
1585:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
GAS LISTING x64lin/../common/event.s 			page 106


1586:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1587:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1588:/usr/include/c++/11/bits/stl_deque.h ****        *
1589:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert a copy of the given value before the
1590:/usr/include/c++/11/bits/stl_deque.h ****        *  specified location.
1591:/usr/include/c++/11/bits/stl_deque.h ****        */
1592:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1593:/usr/include/c++/11/bits/stl_deque.h ****       insert(const_iterator __position, const value_type& __x);
1594:/usr/include/c++/11/bits/stl_deque.h **** #else
1595:/usr/include/c++/11/bits/stl_deque.h ****       /**
1596:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts given value into %deque before specified iterator.
1597:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1598:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1599:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1600:/usr/include/c++/11/bits/stl_deque.h ****        *
1601:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert a copy of the given value before the
1602:/usr/include/c++/11/bits/stl_deque.h ****        *  specified location.
1603:/usr/include/c++/11/bits/stl_deque.h ****        */
1604:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1605:/usr/include/c++/11/bits/stl_deque.h ****       insert(iterator __position, const value_type& __x);
1606:/usr/include/c++/11/bits/stl_deque.h **** #endif
1607:/usr/include/c++/11/bits/stl_deque.h **** 
1608:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1609:/usr/include/c++/11/bits/stl_deque.h ****       /**
1610:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts given rvalue into %deque before specified iterator.
1611:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1612:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1613:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1614:/usr/include/c++/11/bits/stl_deque.h ****        *
1615:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert a copy of the given rvalue before the
1616:/usr/include/c++/11/bits/stl_deque.h ****        *  specified location.
1617:/usr/include/c++/11/bits/stl_deque.h ****        */
1618:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1619:/usr/include/c++/11/bits/stl_deque.h ****       insert(const_iterator __position, value_type&& __x)
1620:/usr/include/c++/11/bits/stl_deque.h ****       { return emplace(__position, std::move(__x)); }
1621:/usr/include/c++/11/bits/stl_deque.h **** 
1622:/usr/include/c++/11/bits/stl_deque.h ****       /**
1623:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts an initializer list into the %deque.
1624:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __p  An iterator into the %deque.
1625:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1626:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1627:/usr/include/c++/11/bits/stl_deque.h ****        *
1628:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert copies of the data in the
1629:/usr/include/c++/11/bits/stl_deque.h ****        *  initializer_list @a __l into the %deque before the location
1630:/usr/include/c++/11/bits/stl_deque.h ****        *  specified by @a __p.  This is known as <em>list insert</em>.
1631:/usr/include/c++/11/bits/stl_deque.h ****        */
1632:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1633:/usr/include/c++/11/bits/stl_deque.h ****       insert(const_iterator __p, initializer_list<value_type> __l)
1634:/usr/include/c++/11/bits/stl_deque.h ****       {
1635:/usr/include/c++/11/bits/stl_deque.h **** 	auto __offset = __p - cbegin();
1636:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_insert_aux(__p._M_const_cast(), __l.begin(), __l.end(),
1637:/usr/include/c++/11/bits/stl_deque.h **** 			    std::random_access_iterator_tag());
1638:/usr/include/c++/11/bits/stl_deque.h **** 	return begin() + __offset;
1639:/usr/include/c++/11/bits/stl_deque.h ****       }
1640:/usr/include/c++/11/bits/stl_deque.h **** 
1641:/usr/include/c++/11/bits/stl_deque.h ****       /**
1642:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts a number of copies of given data into the %deque.
GAS LISTING x64lin/../common/event.s 			page 107


1643:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1644:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  Number of elements to be inserted.
1645:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1646:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1647:/usr/include/c++/11/bits/stl_deque.h ****        *
1648:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert a specified number of copies of the given
1649:/usr/include/c++/11/bits/stl_deque.h ****        *  data before the location specified by @a __position.
1650:/usr/include/c++/11/bits/stl_deque.h ****        */
1651:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1652:/usr/include/c++/11/bits/stl_deque.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1653:/usr/include/c++/11/bits/stl_deque.h ****       {
1654:/usr/include/c++/11/bits/stl_deque.h **** 	difference_type __offset = __position - cbegin();
1655:/usr/include/c++/11/bits/stl_deque.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
1656:/usr/include/c++/11/bits/stl_deque.h **** 	return begin() + __offset;
1657:/usr/include/c++/11/bits/stl_deque.h ****       }
1658:/usr/include/c++/11/bits/stl_deque.h **** #else
1659:/usr/include/c++/11/bits/stl_deque.h ****       /**
1660:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts a number of copies of given data into the %deque.
1661:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1662:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __n  Number of elements to be inserted.
1663:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1664:/usr/include/c++/11/bits/stl_deque.h ****        *
1665:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert a specified number of copies of the given
1666:/usr/include/c++/11/bits/stl_deque.h ****        *  data before the location specified by @a __position.
1667:/usr/include/c++/11/bits/stl_deque.h ****        */
1668:/usr/include/c++/11/bits/stl_deque.h ****       void
1669:/usr/include/c++/11/bits/stl_deque.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1670:/usr/include/c++/11/bits/stl_deque.h ****       { _M_fill_insert(__position, __n, __x); }
1671:/usr/include/c++/11/bits/stl_deque.h **** #endif
1672:/usr/include/c++/11/bits/stl_deque.h **** 
1673:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1674:/usr/include/c++/11/bits/stl_deque.h ****       /**
1675:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts a range into the %deque.
1676:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1677:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1678:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1679:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1680:/usr/include/c++/11/bits/stl_deque.h ****        *
1681:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert copies of the data in the range
1682:/usr/include/c++/11/bits/stl_deque.h ****        *  [__first,__last) into the %deque before the location specified
1683:/usr/include/c++/11/bits/stl_deque.h ****        *  by @a __position.  This is known as <em>range insert</em>.
1684:/usr/include/c++/11/bits/stl_deque.h ****        */
1685:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator,
1686:/usr/include/c++/11/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1687:/usr/include/c++/11/bits/stl_deque.h **** 	iterator
1688:/usr/include/c++/11/bits/stl_deque.h **** 	insert(const_iterator __position, _InputIterator __first,
1689:/usr/include/c++/11/bits/stl_deque.h **** 	       _InputIterator __last)
1690:/usr/include/c++/11/bits/stl_deque.h **** 	{
1691:/usr/include/c++/11/bits/stl_deque.h **** 	  difference_type __offset = __position - cbegin();
1692:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_range_insert_aux(__position._M_const_cast(), __first, __last,
1693:/usr/include/c++/11/bits/stl_deque.h **** 			      std::__iterator_category(__first));
1694:/usr/include/c++/11/bits/stl_deque.h **** 	  return begin() + __offset;
1695:/usr/include/c++/11/bits/stl_deque.h **** 	}
1696:/usr/include/c++/11/bits/stl_deque.h **** #else
1697:/usr/include/c++/11/bits/stl_deque.h ****       /**
1698:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Inserts a range into the %deque.
1699:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
GAS LISTING x64lin/../common/event.s 			page 108


1700:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1701:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1702:/usr/include/c++/11/bits/stl_deque.h ****        *
1703:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will insert copies of the data in the range
1704:/usr/include/c++/11/bits/stl_deque.h ****        *  [__first,__last) into the %deque before the location specified
1705:/usr/include/c++/11/bits/stl_deque.h ****        *  by @a __position.  This is known as <em>range insert</em>.
1706:/usr/include/c++/11/bits/stl_deque.h ****        */
1707:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1708:/usr/include/c++/11/bits/stl_deque.h **** 	void
1709:/usr/include/c++/11/bits/stl_deque.h **** 	insert(iterator __position, _InputIterator __first,
1710:/usr/include/c++/11/bits/stl_deque.h **** 	       _InputIterator __last)
1711:/usr/include/c++/11/bits/stl_deque.h **** 	{
1712:/usr/include/c++/11/bits/stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1713:/usr/include/c++/11/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1714:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1715:/usr/include/c++/11/bits/stl_deque.h **** 	}
1716:/usr/include/c++/11/bits/stl_deque.h **** #endif
1717:/usr/include/c++/11/bits/stl_deque.h **** 
1718:/usr/include/c++/11/bits/stl_deque.h ****       /**
1719:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Remove element at given position.
1720:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __position  Iterator pointing to element to be erased.
1721:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator pointing to the next element (or end()).
1722:/usr/include/c++/11/bits/stl_deque.h ****        *
1723:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will erase the element at the given position and thus
1724:/usr/include/c++/11/bits/stl_deque.h ****        *  shorten the %deque by one.
1725:/usr/include/c++/11/bits/stl_deque.h ****        *
1726:/usr/include/c++/11/bits/stl_deque.h ****        *  The user is cautioned that
1727:/usr/include/c++/11/bits/stl_deque.h ****        *  this function only erases the element, and that if the element is
1728:/usr/include/c++/11/bits/stl_deque.h ****        *  itself a pointer, the pointed-to memory is not touched in any way.
1729:/usr/include/c++/11/bits/stl_deque.h ****        *  Managing the pointer is the user's responsibility.
1730:/usr/include/c++/11/bits/stl_deque.h ****        */
1731:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1732:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1733:/usr/include/c++/11/bits/stl_deque.h ****       erase(const_iterator __position)
1734:/usr/include/c++/11/bits/stl_deque.h **** #else
1735:/usr/include/c++/11/bits/stl_deque.h ****       erase(iterator __position)
1736:/usr/include/c++/11/bits/stl_deque.h **** #endif
1737:/usr/include/c++/11/bits/stl_deque.h ****       { return _M_erase(__position._M_const_cast()); }
1738:/usr/include/c++/11/bits/stl_deque.h **** 
1739:/usr/include/c++/11/bits/stl_deque.h ****       /**
1740:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Remove a range of elements.
1741:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1742:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1743:/usr/include/c++/11/bits/stl_deque.h ****        *                erased.
1744:/usr/include/c++/11/bits/stl_deque.h ****        *  @return  An iterator pointing to the element pointed to by @a last
1745:/usr/include/c++/11/bits/stl_deque.h ****        *           prior to erasing (or end()).
1746:/usr/include/c++/11/bits/stl_deque.h ****        *
1747:/usr/include/c++/11/bits/stl_deque.h ****        *  This function will erase the elements in the range
1748:/usr/include/c++/11/bits/stl_deque.h ****        *  [__first,__last) and shorten the %deque accordingly.
1749:/usr/include/c++/11/bits/stl_deque.h ****        *
1750:/usr/include/c++/11/bits/stl_deque.h ****        *  The user is cautioned that
1751:/usr/include/c++/11/bits/stl_deque.h ****        *  this function only erases the elements, and that if the elements
1752:/usr/include/c++/11/bits/stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
1753:/usr/include/c++/11/bits/stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
1754:/usr/include/c++/11/bits/stl_deque.h ****        */
1755:/usr/include/c++/11/bits/stl_deque.h ****       iterator
1756:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
GAS LISTING x64lin/../common/event.s 			page 109


1757:/usr/include/c++/11/bits/stl_deque.h ****       erase(const_iterator __first, const_iterator __last)
1758:/usr/include/c++/11/bits/stl_deque.h **** #else
1759:/usr/include/c++/11/bits/stl_deque.h ****       erase(iterator __first, iterator __last)
1760:/usr/include/c++/11/bits/stl_deque.h **** #endif
1761:/usr/include/c++/11/bits/stl_deque.h ****       { return _M_erase(__first._M_const_cast(), __last._M_const_cast()); }
1762:/usr/include/c++/11/bits/stl_deque.h **** 
1763:/usr/include/c++/11/bits/stl_deque.h ****       /**
1764:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief  Swaps data with another %deque.
1765:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __x  A %deque of the same element and allocator types.
1766:/usr/include/c++/11/bits/stl_deque.h ****        *
1767:/usr/include/c++/11/bits/stl_deque.h ****        *  This exchanges the elements between two deques in constant time.
1768:/usr/include/c++/11/bits/stl_deque.h ****        *  (Four pointers, so it should be quite fast.)
1769:/usr/include/c++/11/bits/stl_deque.h ****        *  Note that the global std::swap() function is specialized such that
1770:/usr/include/c++/11/bits/stl_deque.h ****        *  std::swap(d1,d2) will feed to this function.
1771:/usr/include/c++/11/bits/stl_deque.h ****        *
1772:/usr/include/c++/11/bits/stl_deque.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1773:/usr/include/c++/11/bits/stl_deque.h ****        */
1774:/usr/include/c++/11/bits/stl_deque.h ****       void
1775:/usr/include/c++/11/bits/stl_deque.h ****       swap(deque& __x) _GLIBCXX_NOEXCEPT
1776:/usr/include/c++/11/bits/stl_deque.h ****       {
1777:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1778:/usr/include/c++/11/bits/stl_deque.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1779:/usr/include/c++/11/bits/stl_deque.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1780:/usr/include/c++/11/bits/stl_deque.h **** #endif
1781:/usr/include/c++/11/bits/stl_deque.h **** 	_M_impl._M_swap_data(__x._M_impl);
1782:/usr/include/c++/11/bits/stl_deque.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1783:/usr/include/c++/11/bits/stl_deque.h **** 				  __x._M_get_Tp_allocator());
1784:/usr/include/c++/11/bits/stl_deque.h ****       }
1785:/usr/include/c++/11/bits/stl_deque.h **** 
1786:/usr/include/c++/11/bits/stl_deque.h ****       /**
1787:/usr/include/c++/11/bits/stl_deque.h ****        *  Erases all the elements.  Note that this function only erases the
1788:/usr/include/c++/11/bits/stl_deque.h ****        *  elements, and that if the elements themselves are pointers, the
1789:/usr/include/c++/11/bits/stl_deque.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1790:/usr/include/c++/11/bits/stl_deque.h ****        *  the user's responsibility.
1791:/usr/include/c++/11/bits/stl_deque.h ****        */
1792:/usr/include/c++/11/bits/stl_deque.h ****       void
1793:/usr/include/c++/11/bits/stl_deque.h ****       clear() _GLIBCXX_NOEXCEPT
1794:/usr/include/c++/11/bits/stl_deque.h ****       { _M_erase_at_end(begin()); }
1795:/usr/include/c++/11/bits/stl_deque.h **** 
1796:/usr/include/c++/11/bits/stl_deque.h ****     protected:
1797:/usr/include/c++/11/bits/stl_deque.h ****       // Internal constructor functions follow.
1798:/usr/include/c++/11/bits/stl_deque.h **** 
1799:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
1800:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
1801:/usr/include/c++/11/bits/stl_deque.h **** 
1802:/usr/include/c++/11/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1803:/usr/include/c++/11/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1804:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _Integer>
1805:/usr/include/c++/11/bits/stl_deque.h **** 	void
1806:/usr/include/c++/11/bits/stl_deque.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1807:/usr/include/c++/11/bits/stl_deque.h **** 	{
1808:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_initialize_map(_S_check_init_len(static_cast<size_type>(__n),
1809:/usr/include/c++/11/bits/stl_deque.h **** 					      _M_get_Tp_allocator()));
1810:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_fill_initialize(__x);
1811:/usr/include/c++/11/bits/stl_deque.h **** 	}
1812:/usr/include/c++/11/bits/stl_deque.h **** 
1813:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
GAS LISTING x64lin/../common/event.s 			page 110


1814:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1815:/usr/include/c++/11/bits/stl_deque.h **** 	void
1816:/usr/include/c++/11/bits/stl_deque.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1817:/usr/include/c++/11/bits/stl_deque.h **** 			       __false_type)
1818:/usr/include/c++/11/bits/stl_deque.h **** 	{
1819:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_range_initialize(__first, __last,
1820:/usr/include/c++/11/bits/stl_deque.h **** 			      std::__iterator_category(__first));
1821:/usr/include/c++/11/bits/stl_deque.h **** 	}
1822:/usr/include/c++/11/bits/stl_deque.h **** #endif
1823:/usr/include/c++/11/bits/stl_deque.h **** 
1824:/usr/include/c++/11/bits/stl_deque.h ****       static size_t
1825:/usr/include/c++/11/bits/stl_deque.h ****       _S_check_init_len(size_t __n, const allocator_type& __a)
1826:/usr/include/c++/11/bits/stl_deque.h ****       {
1827:/usr/include/c++/11/bits/stl_deque.h **** 	if (__n > _S_max_size(__a))
1828:/usr/include/c++/11/bits/stl_deque.h **** 	  __throw_length_error(
1829:/usr/include/c++/11/bits/stl_deque.h **** 	      __N("cannot create std::deque larger than max_size()"));
1830:/usr/include/c++/11/bits/stl_deque.h **** 	return __n;
1831:/usr/include/c++/11/bits/stl_deque.h ****       }
1832:/usr/include/c++/11/bits/stl_deque.h **** 
1833:/usr/include/c++/11/bits/stl_deque.h ****       static size_type
1834:/usr/include/c++/11/bits/stl_deque.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1835:/usr/include/c++/11/bits/stl_deque.h ****       {
1836:/usr/include/c++/11/bits/stl_deque.h **** 	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
1837:/usr/include/c++/11/bits/stl_deque.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1838:/usr/include/c++/11/bits/stl_deque.h **** 	return (std::min)(__diffmax, __allocmax);
1839:/usr/include/c++/11/bits/stl_deque.h ****       }
1840:/usr/include/c++/11/bits/stl_deque.h **** 
1841:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second initialize_dispatch above
1842:/usr/include/c++/11/bits/stl_deque.h ****       ///@{
1843:/usr/include/c++/11/bits/stl_deque.h ****       /**
1844:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief Fills the deque with whatever is in [first,last).
1845:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1846:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __last  An input iterator.
1847:/usr/include/c++/11/bits/stl_deque.h ****        *  @return   Nothing.
1848:/usr/include/c++/11/bits/stl_deque.h ****        *
1849:/usr/include/c++/11/bits/stl_deque.h ****        *  If the iterators are actually forward iterators (or better), then the
1850:/usr/include/c++/11/bits/stl_deque.h ****        *  memory layout can be done all at once.  Else we move forward using
1851:/usr/include/c++/11/bits/stl_deque.h ****        *  push_back on each value from the iterator.
1852:/usr/include/c++/11/bits/stl_deque.h ****        */
1853:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1854:/usr/include/c++/11/bits/stl_deque.h **** 	void
1855:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1856:/usr/include/c++/11/bits/stl_deque.h **** 			    std::input_iterator_tag);
1857:/usr/include/c++/11/bits/stl_deque.h **** 
1858:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second initialize_dispatch above
1859:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _ForwardIterator>
1860:/usr/include/c++/11/bits/stl_deque.h **** 	void
1861:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1862:/usr/include/c++/11/bits/stl_deque.h **** 			    std::forward_iterator_tag);
1863:/usr/include/c++/11/bits/stl_deque.h ****       ///@}
1864:/usr/include/c++/11/bits/stl_deque.h **** 
1865:/usr/include/c++/11/bits/stl_deque.h ****       /**
1866:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief Fills the %deque with copies of value.
1867:/usr/include/c++/11/bits/stl_deque.h ****        *  @param  __value  Initial value.
1868:/usr/include/c++/11/bits/stl_deque.h ****        *  @return   Nothing.
1869:/usr/include/c++/11/bits/stl_deque.h ****        *  @pre _M_start and _M_finish have already been initialized,
1870:/usr/include/c++/11/bits/stl_deque.h ****        *  but none of the %deque's elements have yet been constructed.
GAS LISTING x64lin/../common/event.s 			page 111


1871:/usr/include/c++/11/bits/stl_deque.h ****        *
1872:/usr/include/c++/11/bits/stl_deque.h ****        *  This function is called only when the user provides an explicit size
1873:/usr/include/c++/11/bits/stl_deque.h ****        *  (with or without an explicit exemplar value).
1874:/usr/include/c++/11/bits/stl_deque.h ****        */
1875:/usr/include/c++/11/bits/stl_deque.h ****       void
1876:/usr/include/c++/11/bits/stl_deque.h ****       _M_fill_initialize(const value_type& __value);
1877:/usr/include/c++/11/bits/stl_deque.h **** 
1878:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
1879:/usr/include/c++/11/bits/stl_deque.h ****       // called by deque(n).
1880:/usr/include/c++/11/bits/stl_deque.h ****       void
1881:/usr/include/c++/11/bits/stl_deque.h ****       _M_default_initialize();
1882:/usr/include/c++/11/bits/stl_deque.h **** #endif
1883:/usr/include/c++/11/bits/stl_deque.h **** 
1884:/usr/include/c++/11/bits/stl_deque.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1885:/usr/include/c++/11/bits/stl_deque.h ****       // assignment work for the range versions.
1886:/usr/include/c++/11/bits/stl_deque.h **** 
1887:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
1888:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1889:/usr/include/c++/11/bits/stl_deque.h **** 
1890:/usr/include/c++/11/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1891:/usr/include/c++/11/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1892:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _Integer>
1893:/usr/include/c++/11/bits/stl_deque.h **** 	void
1894:/usr/include/c++/11/bits/stl_deque.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1895:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_fill_assign(__n, __val); }
1896:/usr/include/c++/11/bits/stl_deque.h **** 
1897:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1898:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1899:/usr/include/c++/11/bits/stl_deque.h **** 	void
1900:/usr/include/c++/11/bits/stl_deque.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1901:/usr/include/c++/11/bits/stl_deque.h **** 			   __false_type)
1902:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1903:/usr/include/c++/11/bits/stl_deque.h **** #endif
1904:/usr/include/c++/11/bits/stl_deque.h **** 
1905:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second assign_dispatch above
1906:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1907:/usr/include/c++/11/bits/stl_deque.h **** 	void
1908:/usr/include/c++/11/bits/stl_deque.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1909:/usr/include/c++/11/bits/stl_deque.h **** 		      std::input_iterator_tag);
1910:/usr/include/c++/11/bits/stl_deque.h **** 
1911:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second assign_dispatch above
1912:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _ForwardIterator>
1913:/usr/include/c++/11/bits/stl_deque.h **** 	void
1914:/usr/include/c++/11/bits/stl_deque.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1915:/usr/include/c++/11/bits/stl_deque.h **** 		      std::forward_iterator_tag)
1916:/usr/include/c++/11/bits/stl_deque.h **** 	{
1917:/usr/include/c++/11/bits/stl_deque.h **** 	  const size_type __len = std::distance(__first, __last);
1918:/usr/include/c++/11/bits/stl_deque.h **** 	  if (__len > size())
1919:/usr/include/c++/11/bits/stl_deque.h **** 	    {
1920:/usr/include/c++/11/bits/stl_deque.h **** 	      _ForwardIterator __mid = __first;
1921:/usr/include/c++/11/bits/stl_deque.h **** 	      std::advance(__mid, size());
1922:/usr/include/c++/11/bits/stl_deque.h **** 	      std::copy(__first, __mid, begin());
1923:/usr/include/c++/11/bits/stl_deque.h **** 	      _M_range_insert_aux(end(), __mid, __last,
1924:/usr/include/c++/11/bits/stl_deque.h **** 				  std::__iterator_category(__first));
1925:/usr/include/c++/11/bits/stl_deque.h **** 	    }
1926:/usr/include/c++/11/bits/stl_deque.h **** 	  else
1927:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
GAS LISTING x64lin/../common/event.s 			page 112


1928:/usr/include/c++/11/bits/stl_deque.h **** 	}
1929:/usr/include/c++/11/bits/stl_deque.h **** 
1930:/usr/include/c++/11/bits/stl_deque.h ****       // Called by assign(n,t), and the range assign when it turns out
1931:/usr/include/c++/11/bits/stl_deque.h ****       // to be the same thing.
1932:/usr/include/c++/11/bits/stl_deque.h ****       void
1933:/usr/include/c++/11/bits/stl_deque.h ****       _M_fill_assign(size_type __n, const value_type& __val)
1934:/usr/include/c++/11/bits/stl_deque.h ****       {
1935:/usr/include/c++/11/bits/stl_deque.h **** 	if (__n > size())
1936:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1937:/usr/include/c++/11/bits/stl_deque.h **** 	    std::fill(begin(), end(), __val);
1938:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_fill_insert(end(), __n - size(), __val);
1939:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1940:/usr/include/c++/11/bits/stl_deque.h **** 	else
1941:/usr/include/c++/11/bits/stl_deque.h **** 	  {
1942:/usr/include/c++/11/bits/stl_deque.h **** 	    _M_erase_at_end(begin() + difference_type(__n));
1943:/usr/include/c++/11/bits/stl_deque.h **** 	    std::fill(begin(), end(), __val);
1944:/usr/include/c++/11/bits/stl_deque.h **** 	  }
1945:/usr/include/c++/11/bits/stl_deque.h ****       }
1946:/usr/include/c++/11/bits/stl_deque.h **** 
1947:/usr/include/c++/11/bits/stl_deque.h ****       ///@{
1948:/usr/include/c++/11/bits/stl_deque.h ****       /// Helper functions for push_* and pop_*.
1949:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
1950:/usr/include/c++/11/bits/stl_deque.h ****       void _M_push_back_aux(const value_type&);
1951:/usr/include/c++/11/bits/stl_deque.h **** 
1952:/usr/include/c++/11/bits/stl_deque.h ****       void _M_push_front_aux(const value_type&);
1953:/usr/include/c++/11/bits/stl_deque.h **** #else
1954:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
1955:/usr/include/c++/11/bits/stl_deque.h **** 	void _M_push_back_aux(_Args&&... __args);
1956:/usr/include/c++/11/bits/stl_deque.h **** 
1957:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
1958:/usr/include/c++/11/bits/stl_deque.h **** 	void _M_push_front_aux(_Args&&... __args);
1959:/usr/include/c++/11/bits/stl_deque.h **** #endif
1960:/usr/include/c++/11/bits/stl_deque.h **** 
1961:/usr/include/c++/11/bits/stl_deque.h ****       void _M_pop_back_aux();
1962:/usr/include/c++/11/bits/stl_deque.h **** 
1963:/usr/include/c++/11/bits/stl_deque.h ****       void _M_pop_front_aux();
1964:/usr/include/c++/11/bits/stl_deque.h ****       ///@}
1965:/usr/include/c++/11/bits/stl_deque.h **** 
1966:/usr/include/c++/11/bits/stl_deque.h ****       // Internal insert functions follow.  The *_aux functions do the actual
1967:/usr/include/c++/11/bits/stl_deque.h ****       // insertion work when all shortcuts fail.
1968:/usr/include/c++/11/bits/stl_deque.h **** 
1969:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
1970:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1971:/usr/include/c++/11/bits/stl_deque.h **** 
1972:/usr/include/c++/11/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1973:/usr/include/c++/11/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1974:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _Integer>
1975:/usr/include/c++/11/bits/stl_deque.h **** 	void
1976:/usr/include/c++/11/bits/stl_deque.h **** 	_M_insert_dispatch(iterator __pos,
1977:/usr/include/c++/11/bits/stl_deque.h **** 			   _Integer __n, _Integer __x, __true_type)
1978:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_fill_insert(__pos, __n, __x); }
1979:/usr/include/c++/11/bits/stl_deque.h **** 
1980:/usr/include/c++/11/bits/stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1981:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1982:/usr/include/c++/11/bits/stl_deque.h **** 	void
1983:/usr/include/c++/11/bits/stl_deque.h **** 	_M_insert_dispatch(iterator __pos,
1984:/usr/include/c++/11/bits/stl_deque.h **** 			   _InputIterator __first, _InputIterator __last,
GAS LISTING x64lin/../common/event.s 			page 113


1985:/usr/include/c++/11/bits/stl_deque.h **** 			   __false_type)
1986:/usr/include/c++/11/bits/stl_deque.h **** 	{
1987:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_range_insert_aux(__pos, __first, __last,
1988:/usr/include/c++/11/bits/stl_deque.h **** 			      std::__iterator_category(__first));
1989:/usr/include/c++/11/bits/stl_deque.h **** 	}
1990:/usr/include/c++/11/bits/stl_deque.h **** #endif
1991:/usr/include/c++/11/bits/stl_deque.h **** 
1992:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second insert_dispatch above
1993:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _InputIterator>
1994:/usr/include/c++/11/bits/stl_deque.h **** 	void
1995:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_insert_aux(iterator __pos, _InputIterator __first,
1996:/usr/include/c++/11/bits/stl_deque.h **** 			    _InputIterator __last, std::input_iterator_tag);
1997:/usr/include/c++/11/bits/stl_deque.h **** 
1998:/usr/include/c++/11/bits/stl_deque.h ****       // called by the second insert_dispatch above
1999:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _ForwardIterator>
2000:/usr/include/c++/11/bits/stl_deque.h **** 	void
2001:/usr/include/c++/11/bits/stl_deque.h **** 	_M_range_insert_aux(iterator __pos, _ForwardIterator __first,
2002:/usr/include/c++/11/bits/stl_deque.h **** 			    _ForwardIterator __last, std::forward_iterator_tag);
2003:/usr/include/c++/11/bits/stl_deque.h **** 
2004:/usr/include/c++/11/bits/stl_deque.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
2005:/usr/include/c++/11/bits/stl_deque.h ****       // the same thing.  Can use fill functions in optimal situations,
2006:/usr/include/c++/11/bits/stl_deque.h ****       // otherwise passes off to insert_aux(p,n,x).
2007:/usr/include/c++/11/bits/stl_deque.h ****       void
2008:/usr/include/c++/11/bits/stl_deque.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
2009:/usr/include/c++/11/bits/stl_deque.h **** 
2010:/usr/include/c++/11/bits/stl_deque.h ****       // called by insert(p,x)
2011:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus < 201103L
2012:/usr/include/c++/11/bits/stl_deque.h ****       iterator
2013:/usr/include/c++/11/bits/stl_deque.h ****       _M_insert_aux(iterator __pos, const value_type& __x);
2014:/usr/include/c++/11/bits/stl_deque.h **** #else
2015:/usr/include/c++/11/bits/stl_deque.h ****       template<typename... _Args>
2016:/usr/include/c++/11/bits/stl_deque.h **** 	iterator
2017:/usr/include/c++/11/bits/stl_deque.h **** 	_M_insert_aux(iterator __pos, _Args&&... __args);
2018:/usr/include/c++/11/bits/stl_deque.h **** #endif
2019:/usr/include/c++/11/bits/stl_deque.h **** 
2020:/usr/include/c++/11/bits/stl_deque.h ****       // called by insert(p,n,x) via fill_insert
2021:/usr/include/c++/11/bits/stl_deque.h ****       void
2022:/usr/include/c++/11/bits/stl_deque.h ****       _M_insert_aux(iterator __pos, size_type __n, const value_type& __x);
2023:/usr/include/c++/11/bits/stl_deque.h **** 
2024:/usr/include/c++/11/bits/stl_deque.h ****       // called by range_insert_aux for forward iterators
2025:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _ForwardIterator>
2026:/usr/include/c++/11/bits/stl_deque.h **** 	void
2027:/usr/include/c++/11/bits/stl_deque.h **** 	_M_insert_aux(iterator __pos,
2028:/usr/include/c++/11/bits/stl_deque.h **** 		      _ForwardIterator __first, _ForwardIterator __last,
2029:/usr/include/c++/11/bits/stl_deque.h **** 		      size_type __n);
2030:/usr/include/c++/11/bits/stl_deque.h **** 
2031:/usr/include/c++/11/bits/stl_deque.h **** 
2032:/usr/include/c++/11/bits/stl_deque.h ****       // Internal erase functions follow.
2033:/usr/include/c++/11/bits/stl_deque.h **** 
2034:/usr/include/c++/11/bits/stl_deque.h ****       void
2035:/usr/include/c++/11/bits/stl_deque.h ****       _M_destroy_data_aux(iterator __first, iterator __last);
2036:/usr/include/c++/11/bits/stl_deque.h **** 
2037:/usr/include/c++/11/bits/stl_deque.h ****       // Called by ~deque().
2038:/usr/include/c++/11/bits/stl_deque.h ****       // NB: Doesn't deallocate the nodes.
2039:/usr/include/c++/11/bits/stl_deque.h ****       template<typename _Alloc1>
2040:/usr/include/c++/11/bits/stl_deque.h **** 	void
2041:/usr/include/c++/11/bits/stl_deque.h **** 	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
GAS LISTING x64lin/../common/event.s 			page 114


2042:/usr/include/c++/11/bits/stl_deque.h **** 	{ _M_destroy_data_aux(__first, __last); }
2043:/usr/include/c++/11/bits/stl_deque.h **** 
2044:/usr/include/c++/11/bits/stl_deque.h ****       void
2045:/usr/include/c++/11/bits/stl_deque.h ****       _M_destroy_data(iterator __first, iterator __last,
2046:/usr/include/c++/11/bits/stl_deque.h **** 		      const std::allocator<_Tp>&)
2047:/usr/include/c++/11/bits/stl_deque.h ****       {
2048:/usr/include/c++/11/bits/stl_deque.h **** 	if (!__has_trivial_destructor(value_type))
2049:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_destroy_data_aux(__first, __last);
2050:/usr/include/c++/11/bits/stl_deque.h ****       }
2051:/usr/include/c++/11/bits/stl_deque.h **** 
2052:/usr/include/c++/11/bits/stl_deque.h ****       // Called by erase(q1, q2).
2053:/usr/include/c++/11/bits/stl_deque.h ****       void
2054:/usr/include/c++/11/bits/stl_deque.h ****       _M_erase_at_begin(iterator __pos)
2055:/usr/include/c++/11/bits/stl_deque.h ****       {
2056:/usr/include/c++/11/bits/stl_deque.h **** 	_M_destroy_data(begin(), __pos, _M_get_Tp_allocator());
2057:/usr/include/c++/11/bits/stl_deque.h **** 	_M_destroy_nodes(this->_M_impl._M_start._M_node, __pos._M_node);
2058:/usr/include/c++/11/bits/stl_deque.h **** 	this->_M_impl._M_start = __pos;
2059:/usr/include/c++/11/bits/stl_deque.h ****       }
2060:/usr/include/c++/11/bits/stl_deque.h **** 
2061:/usr/include/c++/11/bits/stl_deque.h ****       // Called by erase(q1, q2), resize(), clear(), _M_assign_aux,
2062:/usr/include/c++/11/bits/stl_deque.h ****       // _M_fill_assign, operator=.
2063:/usr/include/c++/11/bits/stl_deque.h ****       void
2064:/usr/include/c++/11/bits/stl_deque.h ****       _M_erase_at_end(iterator __pos)
2065:/usr/include/c++/11/bits/stl_deque.h ****       {
2066:/usr/include/c++/11/bits/stl_deque.h **** 	_M_destroy_data(__pos, end(), _M_get_Tp_allocator());
2067:/usr/include/c++/11/bits/stl_deque.h **** 	_M_destroy_nodes(__pos._M_node + 1,
2068:/usr/include/c++/11/bits/stl_deque.h **** 			 this->_M_impl._M_finish._M_node + 1);
2069:/usr/include/c++/11/bits/stl_deque.h **** 	this->_M_impl._M_finish = __pos;
2070:/usr/include/c++/11/bits/stl_deque.h ****       }
2071:/usr/include/c++/11/bits/stl_deque.h **** 
2072:/usr/include/c++/11/bits/stl_deque.h ****       iterator
2073:/usr/include/c++/11/bits/stl_deque.h ****       _M_erase(iterator __pos);
2074:/usr/include/c++/11/bits/stl_deque.h **** 
2075:/usr/include/c++/11/bits/stl_deque.h ****       iterator
2076:/usr/include/c++/11/bits/stl_deque.h ****       _M_erase(iterator __first, iterator __last);
2077:/usr/include/c++/11/bits/stl_deque.h **** 
2078:/usr/include/c++/11/bits/stl_deque.h **** #if __cplusplus >= 201103L
2079:/usr/include/c++/11/bits/stl_deque.h ****       // Called by resize(sz).
2080:/usr/include/c++/11/bits/stl_deque.h ****       void
2081:/usr/include/c++/11/bits/stl_deque.h ****       _M_default_append(size_type __n);
2082:/usr/include/c++/11/bits/stl_deque.h **** 
2083:/usr/include/c++/11/bits/stl_deque.h ****       bool
2084:/usr/include/c++/11/bits/stl_deque.h ****       _M_shrink_to_fit();
2085:/usr/include/c++/11/bits/stl_deque.h **** #endif
2086:/usr/include/c++/11/bits/stl_deque.h **** 
2087:/usr/include/c++/11/bits/stl_deque.h ****       ///@{
2088:/usr/include/c++/11/bits/stl_deque.h ****       /// Memory-handling helpers for the previous internal insert functions.
2089:/usr/include/c++/11/bits/stl_deque.h ****       iterator
2090:/usr/include/c++/11/bits/stl_deque.h ****       _M_reserve_elements_at_front(size_type __n)
2091:/usr/include/c++/11/bits/stl_deque.h ****       {
2092:/usr/include/c++/11/bits/stl_deque.h **** 	const size_type __vacancies = this->_M_impl._M_start._M_cur
2093:/usr/include/c++/11/bits/stl_deque.h **** 				      - this->_M_impl._M_start._M_first;
2094:/usr/include/c++/11/bits/stl_deque.h **** 	if (__n > __vacancies)
2095:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_new_elements_at_front(__n - __vacancies);
2096:/usr/include/c++/11/bits/stl_deque.h **** 	return this->_M_impl._M_start - difference_type(__n);
2097:/usr/include/c++/11/bits/stl_deque.h ****       }
2098:/usr/include/c++/11/bits/stl_deque.h **** 
GAS LISTING x64lin/../common/event.s 			page 115


2099:/usr/include/c++/11/bits/stl_deque.h ****       iterator
2100:/usr/include/c++/11/bits/stl_deque.h ****       _M_reserve_elements_at_back(size_type __n)
2101:/usr/include/c++/11/bits/stl_deque.h ****       {
2102:/usr/include/c++/11/bits/stl_deque.h **** 	const size_type __vacancies = (this->_M_impl._M_finish._M_last
2103:/usr/include/c++/11/bits/stl_deque.h **** 				       - this->_M_impl._M_finish._M_cur) - 1;
2104:/usr/include/c++/11/bits/stl_deque.h **** 	if (__n > __vacancies)
2105:/usr/include/c++/11/bits/stl_deque.h **** 	  _M_new_elements_at_back(__n - __vacancies);
2106:/usr/include/c++/11/bits/stl_deque.h **** 	return this->_M_impl._M_finish + difference_type(__n);
2107:/usr/include/c++/11/bits/stl_deque.h ****       }
2108:/usr/include/c++/11/bits/stl_deque.h **** 
2109:/usr/include/c++/11/bits/stl_deque.h ****       void
2110:/usr/include/c++/11/bits/stl_deque.h ****       _M_new_elements_at_front(size_type __new_elements);
2111:/usr/include/c++/11/bits/stl_deque.h **** 
2112:/usr/include/c++/11/bits/stl_deque.h ****       void
2113:/usr/include/c++/11/bits/stl_deque.h ****       _M_new_elements_at_back(size_type __new_elements);
2114:/usr/include/c++/11/bits/stl_deque.h ****       ///@}
2115:/usr/include/c++/11/bits/stl_deque.h **** 
2116:/usr/include/c++/11/bits/stl_deque.h **** 
2117:/usr/include/c++/11/bits/stl_deque.h ****       ///@{
2118:/usr/include/c++/11/bits/stl_deque.h ****       /**
2119:/usr/include/c++/11/bits/stl_deque.h ****        *  @brief Memory-handling helpers for the major %map.
2120:/usr/include/c++/11/bits/stl_deque.h ****        *
2121:/usr/include/c++/11/bits/stl_deque.h ****        *  Makes sure the _M_map has space for new nodes.  Does not
2122:/usr/include/c++/11/bits/stl_deque.h ****        *  actually add the nodes.  Can invalidate _M_map pointers.
2123:/usr/include/c++/11/bits/stl_deque.h ****        *  (And consequently, %deque iterators.)
2124:/usr/include/c++/11/bits/stl_deque.h ****        */
2125:/usr/include/c++/11/bits/stl_deque.h ****       void
2126:/usr/include/c++/11/bits/stl_deque.h ****       _M_reserve_map_at_back(size_type __nodes_to_add = 1)
 381              		.loc 5 2126 7 is_stmt 1 view .LVU82
 382              	.LBB611:
2127:/usr/include/c++/11/bits/stl_deque.h ****       {
2128:/usr/include/c++/11/bits/stl_deque.h **** 	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
2129:/usr/include/c++/11/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 383              		.loc 5 2129 57 is_stmt 0 view .LVU83
 384 00c9 488B0B   		movq	(%rbx), %rcx
2128:/usr/include/c++/11/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 385              		.loc 5 2128 41 view .LVU84
 386 00cc 488B5308 		movq	8(%rbx), %rdx
 387              		.loc 5 2129 41 view .LVU85
 388 00d0 4C89F8   		movq	%r15, %rax
 389 00d3 4829C8   		subq	%rcx, %rax
 390              		.loc 5 2129 6 view .LVU86
 391 00d6 4989D0   		movq	%rdx, %r8
 392              		.loc 5 2129 41 view .LVU87
 393 00d9 48C1F803 		sarq	$3, %rax
 394              		.loc 5 2129 6 view .LVU88
 395 00dd 4929C0   		subq	%rax, %r8
2128:/usr/include/c++/11/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 396              		.loc 5 2128 2 view .LVU89
 397 00e0 4983F801 		cmpq	$1, %r8
 398 00e4 7652     		jbe	.L19
 399              	.L6:
 400              	.LVL19:
2128:/usr/include/c++/11/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 401              		.loc 5 2128 2 view .LVU90
 402              	.LBE611:
 403              	.LBE610:
GAS LISTING x64lin/../common/event.s 			page 116


 404              	.LBB685:
 405              	.LBI685:
 559:/usr/include/c++/11/bits/stl_deque.h ****       {
 406              		.loc 5 559 7 is_stmt 1 view .LVU91
 407              	.LBB686:
 408              	.LBB687:
 409              	.LBI687:
 463:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 410              		.loc 7 463 7 view .LVU92
 411              	.LBB688:
 412              	.LBI688:
 413              		.file 12 "/usr/include/c++/11/bits/allocator.h"
   1:/usr/include/c++/11/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/11/bits/allocator.h **** 
   3:/usr/include/c++/11/bits/allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/allocator.h **** //
   5:/usr/include/c++/11/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/allocator.h **** // any later version.
  10:/usr/include/c++/11/bits/allocator.h **** 
  11:/usr/include/c++/11/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/allocator.h **** 
  16:/usr/include/c++/11/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/allocator.h **** 
  20:/usr/include/c++/11/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/allocator.h **** 
  25:/usr/include/c++/11/bits/allocator.h **** /*
  26:/usr/include/c++/11/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/11/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/11/bits/allocator.h ****  *
  29:/usr/include/c++/11/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/11/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/11/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/11/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/11/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/11/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/11/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/11/bits/allocator.h ****  */
  37:/usr/include/c++/11/bits/allocator.h **** 
  38:/usr/include/c++/11/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/11/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/11/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/11/bits/allocator.h ****  */
  42:/usr/include/c++/11/bits/allocator.h **** 
  43:/usr/include/c++/11/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/11/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/11/bits/allocator.h **** 
GAS LISTING x64lin/../common/event.s 			page 117


  46:/usr/include/c++/11/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/11/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/11/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/11/bits/allocator.h **** #endif
  51:/usr/include/c++/11/bits/allocator.h **** 
  52:/usr/include/c++/11/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/11/bits/allocator.h **** 
  54:/usr/include/c++/11/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/usr/include/c++/11/bits/allocator.h **** {
  56:/usr/include/c++/11/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/usr/include/c++/11/bits/allocator.h **** 
  58:/usr/include/c++/11/bits/allocator.h ****   /**
  59:/usr/include/c++/11/bits/allocator.h ****    *  @addtogroup allocators
  60:/usr/include/c++/11/bits/allocator.h ****    *  @{
  61:/usr/include/c++/11/bits/allocator.h ****    */
  62:/usr/include/c++/11/bits/allocator.h **** 
  63:/usr/include/c++/11/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  64:/usr/include/c++/11/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor for C++20,
  65:/usr/include/c++/11/bits/allocator.h ****   // but trivial for C++98-17, which would be an ABI incompatibiliy between
  66:/usr/include/c++/11/bits/allocator.h ****   // different standard dialects. So C++20 still uses the allocator<void>
  67:/usr/include/c++/11/bits/allocator.h ****   // explicit specialization, with the historical ABI properties, but with
  68:/usr/include/c++/11/bits/allocator.h ****   // the same members that are present in the primary template.
  69:/usr/include/c++/11/bits/allocator.h **** 
  70:/usr/include/c++/11/bits/allocator.h ****   /// allocator<void> specialization.
  71:/usr/include/c++/11/bits/allocator.h ****   template<>
  72:/usr/include/c++/11/bits/allocator.h ****     class allocator<void>
  73:/usr/include/c++/11/bits/allocator.h ****     {
  74:/usr/include/c++/11/bits/allocator.h ****     public:
  75:/usr/include/c++/11/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/11/bits/allocator.h ****       typedef size_t      size_type;
  77:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  78:/usr/include/c++/11/bits/allocator.h **** 
  79:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
  80:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20, allocator_traits does the right thing.
  81:/usr/include/c++/11/bits/allocator.h ****       typedef void*       pointer;
  82:/usr/include/c++/11/bits/allocator.h ****       typedef const void* const_pointer;
  83:/usr/include/c++/11/bits/allocator.h **** 
  84:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
  86:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  87:/usr/include/c++/11/bits/allocator.h **** #endif
  88:/usr/include/c++/11/bits/allocator.h **** 
  89:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
  90:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  92:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
  93:/usr/include/c++/11/bits/allocator.h **** 
  94:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
  95:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
  96:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
  97:/usr/include/c++/11/bits/allocator.h **** 
  98:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 202002L
  99:/usr/include/c++/11/bits/allocator.h ****       // As noted above, these members are present for C++20 to provide the
 100:/usr/include/c++/11/bits/allocator.h ****       // same API as the primary template, but still trivial as in pre-C++20.
 101:/usr/include/c++/11/bits/allocator.h ****       allocator() = default;
 102:/usr/include/c++/11/bits/allocator.h ****       ~allocator() = default;
GAS LISTING x64lin/../common/event.s 			page 118


 103:/usr/include/c++/11/bits/allocator.h **** 
 104:/usr/include/c++/11/bits/allocator.h ****       template<typename _Up>
 105:/usr/include/c++/11/bits/allocator.h **** 	constexpr
 106:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 107:/usr/include/c++/11/bits/allocator.h **** 
 108:/usr/include/c++/11/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 109:/usr/include/c++/11/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 110:/usr/include/c++/11/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 111:/usr/include/c++/11/bits/allocator.h **** #endif // C++20
 112:/usr/include/c++/11/bits/allocator.h **** #endif // C++11
 113:/usr/include/c++/11/bits/allocator.h ****     };
 114:/usr/include/c++/11/bits/allocator.h **** 
 115:/usr/include/c++/11/bits/allocator.h ****   /**
 116:/usr/include/c++/11/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 117:/usr/include/c++/11/bits/allocator.h ****    *
 118:/usr/include/c++/11/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 119:/usr/include/c++/11/bits/allocator.h ****    *  for further details.
 120:/usr/include/c++/11/bits/allocator.h ****    *
 121:/usr/include/c++/11/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 122:/usr/include/c++/11/bits/allocator.h ****    */
 123:/usr/include/c++/11/bits/allocator.h ****   template<typename _Tp>
 124:/usr/include/c++/11/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 125:/usr/include/c++/11/bits/allocator.h ****     {
 126:/usr/include/c++/11/bits/allocator.h ****     public:
 127:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp        value_type;
 128:/usr/include/c++/11/bits/allocator.h ****       typedef size_t     size_type;
 129:/usr/include/c++/11/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 130:/usr/include/c++/11/bits/allocator.h **** 
 131:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus <= 201703L
 132:/usr/include/c++/11/bits/allocator.h ****       // These were removed for C++20.
 133:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp*       pointer;
 134:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp* const_pointer;
 135:/usr/include/c++/11/bits/allocator.h ****       typedef _Tp&       reference;
 136:/usr/include/c++/11/bits/allocator.h ****       typedef const _Tp& const_reference;
 137:/usr/include/c++/11/bits/allocator.h **** 
 138:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 139:/usr/include/c++/11/bits/allocator.h **** 	struct rebind
 140:/usr/include/c++/11/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 141:/usr/include/c++/11/bits/allocator.h **** #endif
 142:/usr/include/c++/11/bits/allocator.h **** 
 143:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 144:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 145:/usr/include/c++/11/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 146:/usr/include/c++/11/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
 147:/usr/include/c++/11/bits/allocator.h **** 
 148:/usr/include/c++/11/bits/allocator.h ****       using is_always_equal
 149:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
 150:/usr/include/c++/11/bits/allocator.h **** 	= true_type;
 151:/usr/include/c++/11/bits/allocator.h **** #endif
 152:/usr/include/c++/11/bits/allocator.h **** 
 153:/usr/include/c++/11/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 154:/usr/include/c++/11/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 155:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 156:/usr/include/c++/11/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 157:/usr/include/c++/11/bits/allocator.h **** 
 158:/usr/include/c++/11/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 159:/usr/include/c++/11/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
GAS LISTING x64lin/../common/event.s 			page 119


 160:/usr/include/c++/11/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 161:/usr/include/c++/11/bits/allocator.h **** 
 162:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus >= 201103L
 163:/usr/include/c++/11/bits/allocator.h ****       // Avoid implicit deprecation.
 164:/usr/include/c++/11/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 165:/usr/include/c++/11/bits/allocator.h **** #endif
 166:/usr/include/c++/11/bits/allocator.h **** 
 167:/usr/include/c++/11/bits/allocator.h ****       template<typename _Tp1>
 168:/usr/include/c++/11/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 169:/usr/include/c++/11/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 170:/usr/include/c++/11/bits/allocator.h **** 
 171:/usr/include/c++/11/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 172:/usr/include/c++/11/bits/allocator.h ****       constexpr
 173:/usr/include/c++/11/bits/allocator.h **** #endif
 174:/usr/include/c++/11/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 175:/usr/include/c++/11/bits/allocator.h **** 
 176:/usr/include/c++/11/bits/allocator.h **** #if __cplusplus > 201703L
 177:/usr/include/c++/11/bits/allocator.h ****       [[nodiscard,__gnu__::__always_inline__]]
 178:/usr/include/c++/11/bits/allocator.h ****       constexpr _Tp*
 179:/usr/include/c++/11/bits/allocator.h ****       allocate(size_t __n)
 414              		.loc 12 179 7 view .LVU93
 415              	.LBB689:
 416              	.LBI689:
 417              		.file 13 "/usr/include/c++/11/ext/new_allocator.h"
   1:/usr/include/c++/11/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/11/ext/new_allocator.h **** 
   3:/usr/include/c++/11/ext/new_allocator.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/ext/new_allocator.h **** //
   5:/usr/include/c++/11/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/11/ext/new_allocator.h **** 
  11:/usr/include/c++/11/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/ext/new_allocator.h **** 
  16:/usr/include/c++/11/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/ext/new_allocator.h **** 
  20:/usr/include/c++/11/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/ext/new_allocator.h **** 
  25:/usr/include/c++/11/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/11/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/11/ext/new_allocator.h ****  */
  28:/usr/include/c++/11/ext/new_allocator.h **** 
  29:/usr/include/c++/11/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/11/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/11/ext/new_allocator.h **** 
  32:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/11/ext/new_allocator.h **** #include <new>
GAS LISTING x64lin/../common/event.s 			page 120


  34:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/11/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/11/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/11/ext/new_allocator.h **** #endif
  39:/usr/include/c++/11/ext/new_allocator.h **** 
  40:/usr/include/c++/11/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/11/ext/new_allocator.h **** {
  42:/usr/include/c++/11/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/11/ext/new_allocator.h **** 
  44:/usr/include/c++/11/ext/new_allocator.h ****   /**
  45:/usr/include/c++/11/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
  46:/usr/include/c++/11/ext/new_allocator.h ****    *  @ingroup allocators
  47:/usr/include/c++/11/ext/new_allocator.h ****    *
  48:/usr/include/c++/11/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/usr/include/c++/11/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/usr/include/c++/11/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/usr/include/c++/11/ext/new_allocator.h ****    *
  52:/usr/include/c++/11/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/usr/include/c++/11/ext/new_allocator.h ****    */
  54:/usr/include/c++/11/ext/new_allocator.h ****   template<typename _Tp>
  55:/usr/include/c++/11/ext/new_allocator.h ****     class new_allocator
  56:/usr/include/c++/11/ext/new_allocator.h ****     {
  57:/usr/include/c++/11/ext/new_allocator.h ****     public:
  58:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/usr/include/c++/11/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/usr/include/c++/11/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/usr/include/c++/11/ext/new_allocator.h **** 
  67:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  68:/usr/include/c++/11/ext/new_allocator.h **** 	struct rebind
  69:/usr/include/c++/11/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/usr/include/c++/11/ext/new_allocator.h **** #endif
  71:/usr/include/c++/11/ext/new_allocator.h **** 
  72:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/usr/include/c++/11/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/usr/include/c++/11/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/usr/include/c++/11/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/usr/include/c++/11/ext/new_allocator.h **** #endif
  77:/usr/include/c++/11/ext/new_allocator.h **** 
  78:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/11/ext/new_allocator.h **** 
  81:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/usr/include/c++/11/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/usr/include/c++/11/ext/new_allocator.h **** 
  84:/usr/include/c++/11/ext/new_allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/11/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/usr/include/c++/11/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/11/ext/new_allocator.h **** 
  88:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/usr/include/c++/11/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/c++/11/ext/new_allocator.h **** 
GAS LISTING x64lin/../common/event.s 			page 121


  91:/usr/include/c++/11/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/11/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/11/ext/new_allocator.h **** 
  95:/usr/include/c++/11/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/11/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/11/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/11/ext/new_allocator.h **** #endif
  99:/usr/include/c++/11/ext/new_allocator.h **** 
 100:/usr/include/c++/11/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/usr/include/c++/11/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/usr/include/c++/11/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/usr/include/c++/11/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 418              		.loc 13 103 7 view .LVU94
 419              	.LBB690:
 104:/usr/include/c++/11/ext/new_allocator.h ****       {
 105:/usr/include/c++/11/ext/new_allocator.h **** #if __cplusplus >= 201103L
 106:/usr/include/c++/11/ext/new_allocator.h **** 	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
 107:/usr/include/c++/11/ext/new_allocator.h **** 	 // 3308. std::allocator<void>().allocate(n)
 108:/usr/include/c++/11/ext/new_allocator.h **** 	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
 109:/usr/include/c++/11/ext/new_allocator.h **** #endif
 110:/usr/include/c++/11/ext/new_allocator.h **** 
 111:/usr/include/c++/11/ext/new_allocator.h **** 	if (__builtin_expect(__n > this->_M_max_size(), false))
 112:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 113:/usr/include/c++/11/ext/new_allocator.h **** 	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 114:/usr/include/c++/11/ext/new_allocator.h **** 	    // 3190. allocator::allocate sometimes returns too little storage
 115:/usr/include/c++/11/ext/new_allocator.h **** 	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
 116:/usr/include/c++/11/ext/new_allocator.h **** 	      std::__throw_bad_array_new_length();
 117:/usr/include/c++/11/ext/new_allocator.h **** 	    std::__throw_bad_alloc();
 118:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 119:/usr/include/c++/11/ext/new_allocator.h **** 
 120:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 121:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 122:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 123:/usr/include/c++/11/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 124:/usr/include/c++/11/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 125:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 126:/usr/include/c++/11/ext/new_allocator.h **** #endif
 127:/usr/include/c++/11/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 420              		.loc 13 127 41 is_stmt 0 view .LVU95
 421 00e6 BF000200 		movl	$512, %edi
 421      00
 422              	.LEHB0:
 423 00eb E8000000 		call	_Znwm@PLT
 423      00
 424              	.LVL20:
 425              		.loc 13 127 41 view .LVU96
 426              	.LBE690:
 427              	.LBE689:
 428              	.LBE688:
 429              	.LBE687:
 430              	.LBE686:
 431              	.LBE685:
 493:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_length_error(
 494:/usr/include/c++/11/bits/deque.tcc **** 	      __N("cannot create std::deque larger than max_size()"));
 495:/usr/include/c++/11/bits/deque.tcc **** 
 496:/usr/include/c++/11/bits/deque.tcc **** 	_M_reserve_map_at_back();
GAS LISTING x64lin/../common/event.s 			page 122


 497:/usr/include/c++/11/bits/deque.tcc **** 	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 432              		.loc 6 497 41 view .LVU97
 433 00f0 49894708 		movq	%rax, 8(%r15)
 434              	.LVL21:
 435              	.LBB691:
 436              	.LBI691:
 437              		.loc 7 511 2 is_stmt 1 view .LVU98
 438              	.LBB692:
 439              	.LBI692:
 440              		.loc 8 94 5 view .LVU99
 441              	.LBB693:
 442              	.LBI693:
 443              		.loc 9 327 7 view .LVU100
 444              	.LBB694:
 445              	.LBI694:
 211:/usr/include/c++/11/bits/unique_ptr.h ****       __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
 446              		.loc 9 211 7 view .LVU101
 447              	.LBB695:
 448              	.LBI695:
 161:/usr/include/c++/11/bits/unique_ptr.h ****       : _M_t(std::move(__u._M_t))
 449              		.loc 9 161 7 view .LVU102
 450              	.LBB696:
 451              	.LBB697:
 452              	.LBI697:
 453              		.loc 10 104 5 view .LVU103
 454              		.loc 10 104 5 is_stmt 0 view .LVU104
 455              	.LBE697:
 456              	.LBB698:
 457              	.LBI698:
 458              		.loc 11 1090 17 is_stmt 1 view .LVU105
 459              	.LBB699:
 460              	.LBI699:
 301:/usr/include/c++/11/tuple **** 
 461              		.loc 11 301 7 view .LVU106
 462              	.LBB700:
 463              	.LBB701:
 464              	.LBI701:
 454:/usr/include/c++/11/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 465              		.loc 11 454 7 view .LVU107
 454:/usr/include/c++/11/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 466              		.loc 11 454 7 is_stmt 0 view .LVU108
 467              	.LBE701:
 301:/usr/include/c++/11/tuple **** 
 468              		.loc 11 301 7 view .LVU109
 469 00f4 488B5500 		movq	0(%rbp), %rdx
 470 00f8 488B4330 		movq	48(%rbx), %rax
 471 00fc 488910   		movq	%rdx, (%rax)
 472              	.LVL22:
 301:/usr/include/c++/11/tuple **** 
 473              		.loc 11 301 7 view .LVU110
 474              	.LBE700:
 475              	.LBE699:
 476              	.LBE698:
 477              	.LBB702:
 478              	.LBI702:
 172:/usr/include/c++/11/bits/unique_ptr.h ****       pointer    _M_ptr() const { return std::get<0>(_M_t); }
 479              		.loc 9 172 16 is_stmt 1 view .LVU111
GAS LISTING x64lin/../common/event.s 			page 123


 172:/usr/include/c++/11/bits/unique_ptr.h ****       pointer    _M_ptr() const { return std::get<0>(_M_t); }
 480              		.loc 9 172 16 is_stmt 0 view .LVU112
 481              	.LBE702:
 482              	.LBE696:
 483              	.LBE695:
 484              	.LBE694:
 485              	.LBE693:
 486              	.LBE692:
 487              	.LBE691:
 498:/usr/include/c++/11/bits/deque.tcc **** 	__try
 499:/usr/include/c++/11/bits/deque.tcc **** 	  {
 500:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 501:/usr/include/c++/11/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 502:/usr/include/c++/11/bits/deque.tcc **** 				     this->_M_impl._M_finish._M_cur,
 503:/usr/include/c++/11/bits/deque.tcc **** 				     std::forward<_Args>(__args)...);
 504:/usr/include/c++/11/bits/deque.tcc **** #else
 505:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __t);
 506:/usr/include/c++/11/bits/deque.tcc **** #endif
 507:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 488              		.loc 6 507 66 view .LVU113
 489 00ff 488B4348 		movq	72(%rbx), %rax
 490              	.LBB708:
 491              	.LBB707:
 492              	.LBB706:
 493              	.LBB705:
 494              	.LBB704:
 495              	.LBB703:
 163:/usr/include/c++/11/bits/unique_ptr.h **** 
 496              		.loc 9 163 22 view .LVU114
 497 0103 48C74500 		movq	$0, 0(%rbp)
 497      00000000 
 498              	.LVL23:
 163:/usr/include/c++/11/bits/unique_ptr.h **** 
 499              		.loc 9 163 22 view .LVU115
 500              	.LBE703:
 501              	.LBE704:
 502              	.LBE705:
 503              	.LBE706:
 504              	.LBE707:
 505              	.LBE708:
 506              	.LBB709:
 507              	.LBI709:
 260:/usr/include/c++/11/bits/stl_deque.h ****       {
 508              		.loc 5 260 7 is_stmt 1 view .LVU116
 509              	.LBE709:
 510              		.loc 6 507 41 is_stmt 0 view .LVU117
 511 010b 488D5008 		leaq	8(%rax), %rdx
 512              	.LVL24:
 513              	.LBB712:
 514              	.LBB710:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 515              		.loc 5 263 11 view .LVU118
 516 010f 488B4008 		movq	8(%rax), %rax
 517              	.LBE710:
 518              	.LBE712:
 519              		.loc 6 507 41 view .LVU119
 520 0113 48895348 		movq	%rdx, 72(%rbx)
GAS LISTING x64lin/../common/event.s 			page 124


 521              	.LBB713:
 522              	.LBB711:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 523              		.loc 5 263 11 view .LVU120
 524 0117 C4E1F96E 		vmovq	%rax, %xmm1
 524      C8
 264:/usr/include/c++/11/bits/stl_deque.h ****       }
 525              		.loc 5 264 21 view .LVU121
 526 011c 488D9000 		leaq	512(%rax), %rdx
 526      020000
 527              	.LVL25:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 528              		.loc 5 263 11 view .LVU122
 529 0123 C4E3F122 		vpinsrq	$1, %rdx, %xmm1, %xmm0
 529      C201
 530 0129 C5FA7F43 		vmovdqu	%xmm0, 56(%rbx)
 530      38
 531              	.LVL26:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 532              		.loc 5 263 11 view .LVU123
 533              	.LBE711:
 534              	.LBE713:
 508:/usr/include/c++/11/bits/deque.tcc **** 						+ 1);
 509:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 510:/usr/include/c++/11/bits/deque.tcc **** 	  }
 511:/usr/include/c++/11/bits/deque.tcc **** 	__catch(...)
 512:/usr/include/c++/11/bits/deque.tcc **** 	  {
 513:/usr/include/c++/11/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
 514:/usr/include/c++/11/bits/deque.tcc **** 	    __throw_exception_again;
 515:/usr/include/c++/11/bits/deque.tcc **** 	  }
 516:/usr/include/c++/11/bits/deque.tcc ****       }
 535              		.loc 6 516 7 view .LVU124
 536 012e E91EFFFF 		jmp	.L4
 536      FF
 537              	.LVL27:
 538              		.p2align 4,,10
 539 0133 0F1F4400 		.p2align 3
 539      00
 540              	.L19:
 541              	.LBB714:
 542              	.LBB684:
 543              	.LBB612:
 544              	.LBI612:
 517:/usr/include/c++/11/bits/deque.tcc **** 
 518:/usr/include/c++/11/bits/deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_first.
 519:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 520:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 521:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 522:/usr/include/c++/11/bits/deque.tcc ****       void
 523:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 524:/usr/include/c++/11/bits/deque.tcc ****       _M_push_front_aux(_Args&&... __args)
 525:/usr/include/c++/11/bits/deque.tcc **** #else
 526:/usr/include/c++/11/bits/deque.tcc ****       void
 527:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 528:/usr/include/c++/11/bits/deque.tcc ****       _M_push_front_aux(const value_type& __t)
 529:/usr/include/c++/11/bits/deque.tcc **** #endif
 530:/usr/include/c++/11/bits/deque.tcc ****       {
GAS LISTING x64lin/../common/event.s 			page 125


 531:/usr/include/c++/11/bits/deque.tcc **** 	if (size() == max_size())
 532:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_length_error(
 533:/usr/include/c++/11/bits/deque.tcc **** 	      __N("cannot create std::deque larger than max_size()"));
 534:/usr/include/c++/11/bits/deque.tcc **** 
 535:/usr/include/c++/11/bits/deque.tcc **** 	_M_reserve_map_at_front();
 536:/usr/include/c++/11/bits/deque.tcc **** 	*(this->_M_impl._M_start._M_node - 1) = this->_M_allocate_node();
 537:/usr/include/c++/11/bits/deque.tcc **** 	__try
 538:/usr/include/c++/11/bits/deque.tcc **** 	  {
 539:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node
 540:/usr/include/c++/11/bits/deque.tcc **** 					       - 1);
 541:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_last - 1;
 542:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 543:/usr/include/c++/11/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 544:/usr/include/c++/11/bits/deque.tcc **** 				     this->_M_impl._M_start._M_cur,
 545:/usr/include/c++/11/bits/deque.tcc **** 				     std::forward<_Args>(__args)...);
 546:/usr/include/c++/11/bits/deque.tcc **** #else
 547:/usr/include/c++/11/bits/deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur, __t);
 548:/usr/include/c++/11/bits/deque.tcc **** #endif
 549:/usr/include/c++/11/bits/deque.tcc **** 	  }
 550:/usr/include/c++/11/bits/deque.tcc **** 	__catch(...)
 551:/usr/include/c++/11/bits/deque.tcc **** 	  {
 552:/usr/include/c++/11/bits/deque.tcc **** 	    ++this->_M_impl._M_start;
 553:/usr/include/c++/11/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_start._M_node - 1));
 554:/usr/include/c++/11/bits/deque.tcc **** 	    __throw_exception_again;
 555:/usr/include/c++/11/bits/deque.tcc **** 	  }
 556:/usr/include/c++/11/bits/deque.tcc ****       }
 557:/usr/include/c++/11/bits/deque.tcc **** 
 558:/usr/include/c++/11/bits/deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_first.
 559:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 560:/usr/include/c++/11/bits/deque.tcc ****     void deque<_Tp, _Alloc>::
 561:/usr/include/c++/11/bits/deque.tcc ****     _M_pop_back_aux()
 562:/usr/include/c++/11/bits/deque.tcc ****     {
 563:/usr/include/c++/11/bits/deque.tcc ****       _M_deallocate_node(this->_M_impl._M_finish._M_first);
 564:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node - 1);
 565:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 566:/usr/include/c++/11/bits/deque.tcc ****       _Alloc_traits::destroy(_M_get_Tp_allocator(),
 567:/usr/include/c++/11/bits/deque.tcc **** 			     this->_M_impl._M_finish._M_cur);
 568:/usr/include/c++/11/bits/deque.tcc ****     }
 569:/usr/include/c++/11/bits/deque.tcc **** 
 570:/usr/include/c++/11/bits/deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_last - 1.
 571:/usr/include/c++/11/bits/deque.tcc ****   // Note that if the deque has at least one element (a precondition for this
 572:/usr/include/c++/11/bits/deque.tcc ****   // member function), and if
 573:/usr/include/c++/11/bits/deque.tcc ****   //   _M_impl._M_start._M_cur == _M_impl._M_start._M_last,
 574:/usr/include/c++/11/bits/deque.tcc ****   // then the deque must have at least two nodes.
 575:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 576:/usr/include/c++/11/bits/deque.tcc ****     void deque<_Tp, _Alloc>::
 577:/usr/include/c++/11/bits/deque.tcc ****     _M_pop_front_aux()
 578:/usr/include/c++/11/bits/deque.tcc ****     {
 579:/usr/include/c++/11/bits/deque.tcc ****       _Alloc_traits::destroy(_M_get_Tp_allocator(),
 580:/usr/include/c++/11/bits/deque.tcc **** 			     this->_M_impl._M_start._M_cur);
 581:/usr/include/c++/11/bits/deque.tcc ****       _M_deallocate_node(this->_M_impl._M_start._M_first);
 582:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 583:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 584:/usr/include/c++/11/bits/deque.tcc ****     }
 585:/usr/include/c++/11/bits/deque.tcc **** 
 586:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 587:/usr/include/c++/11/bits/deque.tcc ****     template <typename _InputIterator>
GAS LISTING x64lin/../common/event.s 			page 126


 588:/usr/include/c++/11/bits/deque.tcc ****       void
 589:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 590:/usr/include/c++/11/bits/deque.tcc ****       _M_range_insert_aux(iterator __pos,
 591:/usr/include/c++/11/bits/deque.tcc **** 			  _InputIterator __first, _InputIterator __last,
 592:/usr/include/c++/11/bits/deque.tcc **** 			  std::input_iterator_tag)
 593:/usr/include/c++/11/bits/deque.tcc ****       { std::copy(__first, __last, std::inserter(*this, __pos)); }
 594:/usr/include/c++/11/bits/deque.tcc **** 
 595:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 596:/usr/include/c++/11/bits/deque.tcc ****     template <typename _ForwardIterator>
 597:/usr/include/c++/11/bits/deque.tcc ****       void
 598:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 599:/usr/include/c++/11/bits/deque.tcc ****       _M_range_insert_aux(iterator __pos,
 600:/usr/include/c++/11/bits/deque.tcc **** 			  _ForwardIterator __first, _ForwardIterator __last,
 601:/usr/include/c++/11/bits/deque.tcc **** 			  std::forward_iterator_tag)
 602:/usr/include/c++/11/bits/deque.tcc ****       {
 603:/usr/include/c++/11/bits/deque.tcc **** 	const size_type __n = std::distance(__first, __last);
 604:/usr/include/c++/11/bits/deque.tcc **** 	if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 605:/usr/include/c++/11/bits/deque.tcc **** 	  {
 606:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 607:/usr/include/c++/11/bits/deque.tcc **** 	    __try
 608:/usr/include/c++/11/bits/deque.tcc **** 	      {
 609:/usr/include/c++/11/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __last, __new_start,
 610:/usr/include/c++/11/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 611:/usr/include/c++/11/bits/deque.tcc **** 		this->_M_impl._M_start = __new_start;
 612:/usr/include/c++/11/bits/deque.tcc **** 	      }
 613:/usr/include/c++/11/bits/deque.tcc **** 	    __catch(...)
 614:/usr/include/c++/11/bits/deque.tcc **** 	      {
 615:/usr/include/c++/11/bits/deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 616:/usr/include/c++/11/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 617:/usr/include/c++/11/bits/deque.tcc **** 		__throw_exception_again;
 618:/usr/include/c++/11/bits/deque.tcc **** 	      }
 619:/usr/include/c++/11/bits/deque.tcc **** 	  }
 620:/usr/include/c++/11/bits/deque.tcc **** 	else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 621:/usr/include/c++/11/bits/deque.tcc **** 	  {
 622:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __new_finish = _M_reserve_elements_at_back(__n);
 623:/usr/include/c++/11/bits/deque.tcc **** 	    __try
 624:/usr/include/c++/11/bits/deque.tcc **** 	      {
 625:/usr/include/c++/11/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __last,
 626:/usr/include/c++/11/bits/deque.tcc **** 					    this->_M_impl._M_finish,
 627:/usr/include/c++/11/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 628:/usr/include/c++/11/bits/deque.tcc **** 		this->_M_impl._M_finish = __new_finish;
 629:/usr/include/c++/11/bits/deque.tcc **** 	      }
 630:/usr/include/c++/11/bits/deque.tcc **** 	    __catch(...)
 631:/usr/include/c++/11/bits/deque.tcc **** 	      {
 632:/usr/include/c++/11/bits/deque.tcc **** 		_M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 633:/usr/include/c++/11/bits/deque.tcc **** 				 __new_finish._M_node + 1);
 634:/usr/include/c++/11/bits/deque.tcc **** 		__throw_exception_again;
 635:/usr/include/c++/11/bits/deque.tcc **** 	      }
 636:/usr/include/c++/11/bits/deque.tcc **** 	  }
 637:/usr/include/c++/11/bits/deque.tcc **** 	else
 638:/usr/include/c++/11/bits/deque.tcc **** 	  _M_insert_aux(__pos, __first, __last, __n);
 639:/usr/include/c++/11/bits/deque.tcc ****       }
 640:/usr/include/c++/11/bits/deque.tcc **** 
 641:/usr/include/c++/11/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 642:/usr/include/c++/11/bits/deque.tcc **** #if __cplusplus >= 201103L
 643:/usr/include/c++/11/bits/deque.tcc ****     template<typename... _Args>
 644:/usr/include/c++/11/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
GAS LISTING x64lin/../common/event.s 			page 127


 645:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 646:/usr/include/c++/11/bits/deque.tcc ****       _M_insert_aux(iterator __pos, _Args&&... __args)
 647:/usr/include/c++/11/bits/deque.tcc ****       {
 648:/usr/include/c++/11/bits/deque.tcc **** 	value_type __x_copy(std::forward<_Args>(__args)...); // XXX copy
 649:/usr/include/c++/11/bits/deque.tcc **** #else
 650:/usr/include/c++/11/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 651:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 652:/usr/include/c++/11/bits/deque.tcc ****       _M_insert_aux(iterator __pos, const value_type& __x)
 653:/usr/include/c++/11/bits/deque.tcc ****       {
 654:/usr/include/c++/11/bits/deque.tcc **** 	value_type __x_copy = __x; // XXX copy
 655:/usr/include/c++/11/bits/deque.tcc **** #endif
 656:/usr/include/c++/11/bits/deque.tcc **** 	difference_type __index = __pos - this->_M_impl._M_start;
 657:/usr/include/c++/11/bits/deque.tcc **** 	if (static_cast<size_type>(__index) < size() / 2)
 658:/usr/include/c++/11/bits/deque.tcc **** 	  {
 659:/usr/include/c++/11/bits/deque.tcc **** 	    push_front(_GLIBCXX_MOVE(front()));
 660:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __front1 = this->_M_impl._M_start;
 661:/usr/include/c++/11/bits/deque.tcc **** 	    ++__front1;
 662:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __front2 = __front1;
 663:/usr/include/c++/11/bits/deque.tcc **** 	    ++__front2;
 664:/usr/include/c++/11/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 665:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __pos1 = __pos;
 666:/usr/include/c++/11/bits/deque.tcc **** 	    ++__pos1;
 667:/usr/include/c++/11/bits/deque.tcc **** 	    _GLIBCXX_MOVE3(__front2, __pos1, __front1);
 668:/usr/include/c++/11/bits/deque.tcc **** 	  }
 669:/usr/include/c++/11/bits/deque.tcc **** 	else
 670:/usr/include/c++/11/bits/deque.tcc **** 	  {
 671:/usr/include/c++/11/bits/deque.tcc **** 	    push_back(_GLIBCXX_MOVE(back()));
 672:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __back1 = this->_M_impl._M_finish;
 673:/usr/include/c++/11/bits/deque.tcc **** 	    --__back1;
 674:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __back2 = __back1;
 675:/usr/include/c++/11/bits/deque.tcc **** 	    --__back2;
 676:/usr/include/c++/11/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 677:/usr/include/c++/11/bits/deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(__pos, __back2, __back1);
 678:/usr/include/c++/11/bits/deque.tcc **** 	  }
 679:/usr/include/c++/11/bits/deque.tcc **** 	*__pos = _GLIBCXX_MOVE(__x_copy);
 680:/usr/include/c++/11/bits/deque.tcc **** 	return __pos;
 681:/usr/include/c++/11/bits/deque.tcc ****       }
 682:/usr/include/c++/11/bits/deque.tcc **** 
 683:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 684:/usr/include/c++/11/bits/deque.tcc ****     void
 685:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 686:/usr/include/c++/11/bits/deque.tcc ****     _M_insert_aux(iterator __pos, size_type __n, const value_type& __x)
 687:/usr/include/c++/11/bits/deque.tcc ****     {
 688:/usr/include/c++/11/bits/deque.tcc ****       const difference_type __elems_before = __pos - this->_M_impl._M_start;
 689:/usr/include/c++/11/bits/deque.tcc ****       const size_type __length = this->size();
 690:/usr/include/c++/11/bits/deque.tcc ****       value_type __x_copy = __x;
 691:/usr/include/c++/11/bits/deque.tcc ****       if (__elems_before < difference_type(__length / 2))
 692:/usr/include/c++/11/bits/deque.tcc **** 	{
 693:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 694:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __old_start = this->_M_impl._M_start;
 695:/usr/include/c++/11/bits/deque.tcc **** 	  __pos = this->_M_impl._M_start + __elems_before;
 696:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 697:/usr/include/c++/11/bits/deque.tcc **** 	    {
 698:/usr/include/c++/11/bits/deque.tcc **** 	      if (__elems_before >= difference_type(__n))
 699:/usr/include/c++/11/bits/deque.tcc **** 		{
 700:/usr/include/c++/11/bits/deque.tcc **** 		  iterator __start_n = (this->_M_impl._M_start
 701:/usr/include/c++/11/bits/deque.tcc **** 					+ difference_type(__n));
GAS LISTING x64lin/../common/event.s 			page 128


 702:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_start,
 703:/usr/include/c++/11/bits/deque.tcc **** 					      __start_n, __new_start,
 704:/usr/include/c++/11/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 705:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 706:/usr/include/c++/11/bits/deque.tcc **** 		  _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 707:/usr/include/c++/11/bits/deque.tcc **** 		  std::fill(__pos - difference_type(__n), __pos, __x_copy);
 708:/usr/include/c++/11/bits/deque.tcc **** 		}
 709:/usr/include/c++/11/bits/deque.tcc **** 	      else
 710:/usr/include/c++/11/bits/deque.tcc **** 		{
 711:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_move_fill(this->_M_impl._M_start,
 712:/usr/include/c++/11/bits/deque.tcc **** 						 __pos, __new_start,
 713:/usr/include/c++/11/bits/deque.tcc **** 						 this->_M_impl._M_start,
 714:/usr/include/c++/11/bits/deque.tcc **** 						 __x_copy,
 715:/usr/include/c++/11/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 716:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 717:/usr/include/c++/11/bits/deque.tcc **** 		  std::fill(__old_start, __pos, __x_copy);
 718:/usr/include/c++/11/bits/deque.tcc **** 		}
 719:/usr/include/c++/11/bits/deque.tcc **** 	    }
 720:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 721:/usr/include/c++/11/bits/deque.tcc **** 	    {
 722:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 723:/usr/include/c++/11/bits/deque.tcc **** 			       this->_M_impl._M_start._M_node);
 724:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 725:/usr/include/c++/11/bits/deque.tcc **** 	    }
 726:/usr/include/c++/11/bits/deque.tcc **** 	}
 727:/usr/include/c++/11/bits/deque.tcc ****       else
 728:/usr/include/c++/11/bits/deque.tcc **** 	{
 729:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 730:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __old_finish = this->_M_impl._M_finish;
 731:/usr/include/c++/11/bits/deque.tcc **** 	  const difference_type __elems_after =
 732:/usr/include/c++/11/bits/deque.tcc **** 	    difference_type(__length) - __elems_before;
 733:/usr/include/c++/11/bits/deque.tcc **** 	  __pos = this->_M_impl._M_finish - __elems_after;
 734:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 735:/usr/include/c++/11/bits/deque.tcc **** 	    {
 736:/usr/include/c++/11/bits/deque.tcc **** 	      if (__elems_after > difference_type(__n))
 737:/usr/include/c++/11/bits/deque.tcc **** 		{
 738:/usr/include/c++/11/bits/deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 739:/usr/include/c++/11/bits/deque.tcc **** 					 - difference_type(__n));
 740:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 741:/usr/include/c++/11/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 742:/usr/include/c++/11/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 743:/usr/include/c++/11/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 744:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 745:/usr/include/c++/11/bits/deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 746:/usr/include/c++/11/bits/deque.tcc **** 		  std::fill(__pos, __pos + difference_type(__n), __x_copy);
 747:/usr/include/c++/11/bits/deque.tcc **** 		}
 748:/usr/include/c++/11/bits/deque.tcc **** 	      else
 749:/usr/include/c++/11/bits/deque.tcc **** 		{
 750:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_fill_move(this->_M_impl._M_finish,
 751:/usr/include/c++/11/bits/deque.tcc **** 						 __pos + difference_type(__n),
 752:/usr/include/c++/11/bits/deque.tcc **** 						 __x_copy, __pos,
 753:/usr/include/c++/11/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 754:/usr/include/c++/11/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 755:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 756:/usr/include/c++/11/bits/deque.tcc **** 		  std::fill(__pos, __old_finish, __x_copy);
 757:/usr/include/c++/11/bits/deque.tcc **** 		}
 758:/usr/include/c++/11/bits/deque.tcc **** 	    }
GAS LISTING x64lin/../common/event.s 			page 129


 759:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 760:/usr/include/c++/11/bits/deque.tcc **** 	    {
 761:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 762:/usr/include/c++/11/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 763:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 764:/usr/include/c++/11/bits/deque.tcc **** 	    }
 765:/usr/include/c++/11/bits/deque.tcc **** 	}
 766:/usr/include/c++/11/bits/deque.tcc ****     }
 767:/usr/include/c++/11/bits/deque.tcc **** 
 768:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 769:/usr/include/c++/11/bits/deque.tcc ****     template <typename _ForwardIterator>
 770:/usr/include/c++/11/bits/deque.tcc ****       void
 771:/usr/include/c++/11/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 772:/usr/include/c++/11/bits/deque.tcc ****       _M_insert_aux(iterator __pos,
 773:/usr/include/c++/11/bits/deque.tcc **** 		    _ForwardIterator __first, _ForwardIterator __last,
 774:/usr/include/c++/11/bits/deque.tcc **** 		    size_type __n)
 775:/usr/include/c++/11/bits/deque.tcc ****       {
 776:/usr/include/c++/11/bits/deque.tcc **** 	const difference_type __elemsbefore = __pos - this->_M_impl._M_start;
 777:/usr/include/c++/11/bits/deque.tcc **** 	const size_type __length = size();
 778:/usr/include/c++/11/bits/deque.tcc **** 	if (static_cast<size_type>(__elemsbefore) < __length / 2)
 779:/usr/include/c++/11/bits/deque.tcc **** 	  {
 780:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 781:/usr/include/c++/11/bits/deque.tcc **** 	    iterator __old_start = this->_M_impl._M_start;
 782:/usr/include/c++/11/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __elemsbefore;
 783:/usr/include/c++/11/bits/deque.tcc **** 	    __try
 784:/usr/include/c++/11/bits/deque.tcc **** 	      {
 785:/usr/include/c++/11/bits/deque.tcc **** 		if (__elemsbefore >= difference_type(__n))
 786:/usr/include/c++/11/bits/deque.tcc **** 		  {
 787:/usr/include/c++/11/bits/deque.tcc **** 		    iterator __start_n = (this->_M_impl._M_start
 788:/usr/include/c++/11/bits/deque.tcc **** 					  + difference_type(__n));
 789:/usr/include/c++/11/bits/deque.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_start,
 790:/usr/include/c++/11/bits/deque.tcc **** 						__start_n, __new_start,
 791:/usr/include/c++/11/bits/deque.tcc **** 						_M_get_Tp_allocator());
 792:/usr/include/c++/11/bits/deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 793:/usr/include/c++/11/bits/deque.tcc **** 		    _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 794:/usr/include/c++/11/bits/deque.tcc **** 		    std::copy(__first, __last, __pos - difference_type(__n));
 795:/usr/include/c++/11/bits/deque.tcc **** 		  }
 796:/usr/include/c++/11/bits/deque.tcc **** 		else
 797:/usr/include/c++/11/bits/deque.tcc **** 		  {
 798:/usr/include/c++/11/bits/deque.tcc **** 		    _ForwardIterator __mid = __first;
 799:/usr/include/c++/11/bits/deque.tcc **** 		    std::advance(__mid, difference_type(__n) - __elemsbefore);
 800:/usr/include/c++/11/bits/deque.tcc **** 		    std::__uninitialized_move_copy(this->_M_impl._M_start,
 801:/usr/include/c++/11/bits/deque.tcc **** 						   __pos, __first, __mid,
 802:/usr/include/c++/11/bits/deque.tcc **** 						   __new_start,
 803:/usr/include/c++/11/bits/deque.tcc **** 						   _M_get_Tp_allocator());
 804:/usr/include/c++/11/bits/deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 805:/usr/include/c++/11/bits/deque.tcc **** 		    std::copy(__mid, __last, __old_start);
 806:/usr/include/c++/11/bits/deque.tcc **** 		  }
 807:/usr/include/c++/11/bits/deque.tcc **** 	      }
 808:/usr/include/c++/11/bits/deque.tcc **** 	    __catch(...)
 809:/usr/include/c++/11/bits/deque.tcc **** 	      {
 810:/usr/include/c++/11/bits/deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 811:/usr/include/c++/11/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 812:/usr/include/c++/11/bits/deque.tcc **** 		__throw_exception_again;
 813:/usr/include/c++/11/bits/deque.tcc **** 	      }
 814:/usr/include/c++/11/bits/deque.tcc **** 	  }
 815:/usr/include/c++/11/bits/deque.tcc **** 	else
GAS LISTING x64lin/../common/event.s 			page 130


 816:/usr/include/c++/11/bits/deque.tcc **** 	{
 817:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 818:/usr/include/c++/11/bits/deque.tcc **** 	  iterator __old_finish = this->_M_impl._M_finish;
 819:/usr/include/c++/11/bits/deque.tcc **** 	  const difference_type __elemsafter =
 820:/usr/include/c++/11/bits/deque.tcc **** 	    difference_type(__length) - __elemsbefore;
 821:/usr/include/c++/11/bits/deque.tcc **** 	  __pos = this->_M_impl._M_finish - __elemsafter;
 822:/usr/include/c++/11/bits/deque.tcc **** 	  __try
 823:/usr/include/c++/11/bits/deque.tcc **** 	    {
 824:/usr/include/c++/11/bits/deque.tcc **** 	      if (__elemsafter > difference_type(__n))
 825:/usr/include/c++/11/bits/deque.tcc **** 		{
 826:/usr/include/c++/11/bits/deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 827:/usr/include/c++/11/bits/deque.tcc **** 					 - difference_type(__n));
 828:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 829:/usr/include/c++/11/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 830:/usr/include/c++/11/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 831:/usr/include/c++/11/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 832:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 833:/usr/include/c++/11/bits/deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 834:/usr/include/c++/11/bits/deque.tcc **** 		  std::copy(__first, __last, __pos);
 835:/usr/include/c++/11/bits/deque.tcc **** 		}
 836:/usr/include/c++/11/bits/deque.tcc **** 	      else
 837:/usr/include/c++/11/bits/deque.tcc **** 		{
 838:/usr/include/c++/11/bits/deque.tcc **** 		  _ForwardIterator __mid = __first;
 839:/usr/include/c++/11/bits/deque.tcc **** 		  std::advance(__mid, __elemsafter);
 840:/usr/include/c++/11/bits/deque.tcc **** 		  std::__uninitialized_copy_move(__mid, __last, __pos,
 841:/usr/include/c++/11/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 842:/usr/include/c++/11/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 843:/usr/include/c++/11/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 844:/usr/include/c++/11/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 845:/usr/include/c++/11/bits/deque.tcc **** 		  std::copy(__first, __mid, __pos);
 846:/usr/include/c++/11/bits/deque.tcc **** 		}
 847:/usr/include/c++/11/bits/deque.tcc **** 	    }
 848:/usr/include/c++/11/bits/deque.tcc **** 	  __catch(...)
 849:/usr/include/c++/11/bits/deque.tcc **** 	    {
 850:/usr/include/c++/11/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 851:/usr/include/c++/11/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 852:/usr/include/c++/11/bits/deque.tcc **** 	      __throw_exception_again;
 853:/usr/include/c++/11/bits/deque.tcc **** 	    }
 854:/usr/include/c++/11/bits/deque.tcc **** 	}
 855:/usr/include/c++/11/bits/deque.tcc ****       }
 856:/usr/include/c++/11/bits/deque.tcc **** 
 857:/usr/include/c++/11/bits/deque.tcc ****    template<typename _Tp, typename _Alloc>
 858:/usr/include/c++/11/bits/deque.tcc ****      void
 859:/usr/include/c++/11/bits/deque.tcc ****      deque<_Tp, _Alloc>::
 860:/usr/include/c++/11/bits/deque.tcc ****      _M_destroy_data_aux(iterator __first, iterator __last)
 861:/usr/include/c++/11/bits/deque.tcc ****      {
 862:/usr/include/c++/11/bits/deque.tcc ****        for (_Map_pointer __node = __first._M_node + 1;
 863:/usr/include/c++/11/bits/deque.tcc **** 	    __node < __last._M_node; ++__node)
 864:/usr/include/c++/11/bits/deque.tcc **** 	 std::_Destroy(*__node, *__node + _S_buffer_size(),
 865:/usr/include/c++/11/bits/deque.tcc **** 		       _M_get_Tp_allocator());
 866:/usr/include/c++/11/bits/deque.tcc **** 
 867:/usr/include/c++/11/bits/deque.tcc ****        if (__first._M_node != __last._M_node)
 868:/usr/include/c++/11/bits/deque.tcc **** 	 {
 869:/usr/include/c++/11/bits/deque.tcc **** 	   std::_Destroy(__first._M_cur, __first._M_last,
 870:/usr/include/c++/11/bits/deque.tcc **** 			 _M_get_Tp_allocator());
 871:/usr/include/c++/11/bits/deque.tcc **** 	   std::_Destroy(__last._M_first, __last._M_cur,
 872:/usr/include/c++/11/bits/deque.tcc **** 			 _M_get_Tp_allocator());
GAS LISTING x64lin/../common/event.s 			page 131


 873:/usr/include/c++/11/bits/deque.tcc **** 	 }
 874:/usr/include/c++/11/bits/deque.tcc ****        else
 875:/usr/include/c++/11/bits/deque.tcc **** 	 std::_Destroy(__first._M_cur, __last._M_cur,
 876:/usr/include/c++/11/bits/deque.tcc **** 		       _M_get_Tp_allocator());
 877:/usr/include/c++/11/bits/deque.tcc ****      }
 878:/usr/include/c++/11/bits/deque.tcc **** 
 879:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 880:/usr/include/c++/11/bits/deque.tcc ****     void
 881:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 882:/usr/include/c++/11/bits/deque.tcc ****     _M_new_elements_at_front(size_type __new_elems)
 883:/usr/include/c++/11/bits/deque.tcc ****     {
 884:/usr/include/c++/11/bits/deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 885:/usr/include/c++/11/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_front"));
 886:/usr/include/c++/11/bits/deque.tcc **** 
 887:/usr/include/c++/11/bits/deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 888:/usr/include/c++/11/bits/deque.tcc **** 				     / _S_buffer_size());
 889:/usr/include/c++/11/bits/deque.tcc ****       _M_reserve_map_at_front(__new_nodes);
 890:/usr/include/c++/11/bits/deque.tcc ****       size_type __i;
 891:/usr/include/c++/11/bits/deque.tcc ****       __try
 892:/usr/include/c++/11/bits/deque.tcc **** 	{
 893:/usr/include/c++/11/bits/deque.tcc **** 	  for (__i = 1; __i <= __new_nodes; ++__i)
 894:/usr/include/c++/11/bits/deque.tcc **** 	    *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 895:/usr/include/c++/11/bits/deque.tcc **** 	}
 896:/usr/include/c++/11/bits/deque.tcc ****       __catch(...)
 897:/usr/include/c++/11/bits/deque.tcc **** 	{
 898:/usr/include/c++/11/bits/deque.tcc **** 	  for (size_type __j = 1; __j < __i; ++__j)
 899:/usr/include/c++/11/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 900:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_exception_again;
 901:/usr/include/c++/11/bits/deque.tcc **** 	}
 902:/usr/include/c++/11/bits/deque.tcc ****     }
 903:/usr/include/c++/11/bits/deque.tcc **** 
 904:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 905:/usr/include/c++/11/bits/deque.tcc ****     void
 906:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 907:/usr/include/c++/11/bits/deque.tcc ****     _M_new_elements_at_back(size_type __new_elems)
 908:/usr/include/c++/11/bits/deque.tcc ****     {
 909:/usr/include/c++/11/bits/deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 910:/usr/include/c++/11/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_back"));
 911:/usr/include/c++/11/bits/deque.tcc **** 
 912:/usr/include/c++/11/bits/deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 913:/usr/include/c++/11/bits/deque.tcc **** 				     / _S_buffer_size());
 914:/usr/include/c++/11/bits/deque.tcc ****       _M_reserve_map_at_back(__new_nodes);
 915:/usr/include/c++/11/bits/deque.tcc ****       size_type __i;
 916:/usr/include/c++/11/bits/deque.tcc ****       __try
 917:/usr/include/c++/11/bits/deque.tcc **** 	{
 918:/usr/include/c++/11/bits/deque.tcc **** 	  for (__i = 1; __i <= __new_nodes; ++__i)
 919:/usr/include/c++/11/bits/deque.tcc **** 	    *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 920:/usr/include/c++/11/bits/deque.tcc **** 	}
 921:/usr/include/c++/11/bits/deque.tcc ****       __catch(...)
 922:/usr/include/c++/11/bits/deque.tcc **** 	{
 923:/usr/include/c++/11/bits/deque.tcc **** 	  for (size_type __j = 1; __j < __i; ++__j)
 924:/usr/include/c++/11/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 925:/usr/include/c++/11/bits/deque.tcc **** 	  __throw_exception_again;
 926:/usr/include/c++/11/bits/deque.tcc **** 	}
 927:/usr/include/c++/11/bits/deque.tcc ****     }
 928:/usr/include/c++/11/bits/deque.tcc **** 
 929:/usr/include/c++/11/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
GAS LISTING x64lin/../common/event.s 			page 132


 930:/usr/include/c++/11/bits/deque.tcc ****     void
 931:/usr/include/c++/11/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 545              		.loc 6 931 5 is_stmt 1 view .LVU125
 546              	.LBB613:
 932:/usr/include/c++/11/bits/deque.tcc ****     _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
 933:/usr/include/c++/11/bits/deque.tcc ****     {
 934:/usr/include/c++/11/bits/deque.tcc ****       const size_type __old_num_nodes
 935:/usr/include/c++/11/bits/deque.tcc **** 	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
 936:/usr/include/c++/11/bits/deque.tcc ****       const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 547              		.loc 6 936 23 is_stmt 0 view .LVU126
 548 0138 4983C502 		addq	$2, %r13
 549              	.LVL28:
 550              	.LBB614:
 937:/usr/include/c++/11/bits/deque.tcc **** 
 938:/usr/include/c++/11/bits/deque.tcc ****       _Map_pointer __new_nstart;
 939:/usr/include/c++/11/bits/deque.tcc ****       if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 551              		.loc 6 939 41 view .LVU127
 552 013c 4B8D442D 		leaq	(%r13,%r13), %rax
 552      00
 553              		.loc 6 939 7 view .LVU128
 554 0141 4839C2   		cmpq	%rax, %rdx
 555 0144 0F87C600 		ja	.L20
 555      0000
 556              	.LBB615:
 940:/usr/include/c++/11/bits/deque.tcc **** 	{
 941:/usr/include/c++/11/bits/deque.tcc **** 	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 942:/usr/include/c++/11/bits/deque.tcc **** 					 - __new_num_nodes) / 2
 943:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 944:/usr/include/c++/11/bits/deque.tcc **** 	  if (__new_nstart < this->_M_impl._M_start._M_node)
 945:/usr/include/c++/11/bits/deque.tcc **** 	    std::copy(this->_M_impl._M_start._M_node,
 946:/usr/include/c++/11/bits/deque.tcc **** 		      this->_M_impl._M_finish._M_node + 1,
 947:/usr/include/c++/11/bits/deque.tcc **** 		      __new_nstart);
 948:/usr/include/c++/11/bits/deque.tcc **** 	  else
 949:/usr/include/c++/11/bits/deque.tcc **** 	    std::copy_backward(this->_M_impl._M_start._M_node,
 950:/usr/include/c++/11/bits/deque.tcc **** 			       this->_M_impl._M_finish._M_node + 1,
 951:/usr/include/c++/11/bits/deque.tcc **** 			       __new_nstart + __old_num_nodes);
 952:/usr/include/c++/11/bits/deque.tcc **** 	}
 953:/usr/include/c++/11/bits/deque.tcc ****       else
 954:/usr/include/c++/11/bits/deque.tcc **** 	{
 955:/usr/include/c++/11/bits/deque.tcc **** 	  size_type __new_map_size = this->_M_impl._M_map_size
 557              		.loc 6 955 14 view .LVU129
 558 014a 4885D2   		testq	%rdx, %rdx
 559 014d B8010000 		movl	$1, %eax
 559      00
 560 0152 480F45C2 		cmovne	%rdx, %rax
 561 0156 4C8D7C02 		leaq	2(%rdx,%rax), %r15
 561      02
 562              	.LVL29:
 563              	.LBB616:
 564              	.LBI616:
 573:/usr/include/c++/11/bits/stl_deque.h ****       {
 565              		.loc 5 573 7 is_stmt 1 view .LVU130
 566              	.LBB617:
 567              	.LBB618:
 568              	.LBI618:
 555:/usr/include/c++/11/bits/stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 569              		.loc 5 555 7 view .LVU131
GAS LISTING x64lin/../common/event.s 			page 133


 570              	.LBB619:
 571              	.LBI619:
 169:/usr/include/c++/11/bits/allocator.h **** 
 572              		.loc 12 169 2 view .LVU132
 573              	.LBB620:
 574              	.LBI620:
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 575              		.loc 13 79 7 view .LVU133
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 576              		.loc 13 79 7 is_stmt 0 view .LVU134
 577              	.LBE620:
 578              	.LBE619:
 579              	.LBE618:
 580              	.LBB621:
 581              	.LBI621:
 463:/usr/include/c++/11/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 582              		.loc 7 463 7 is_stmt 1 view .LVU135
 583              	.LBB622:
 584              	.LBI622:
 585              		.loc 12 179 7 view .LVU136
 586              	.LBB623:
 587              	.LBI623:
 103:/usr/include/c++/11/ext/new_allocator.h ****       {
 588              		.loc 13 103 7 view .LVU137
 589              	.LBB624:
 111:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 590              		.loc 13 111 2 is_stmt 0 view .LVU138
 591 015b 4C89F8   		movq	%r15, %rax
 592 015e 48C1E83C 		shrq	$60, %rax
 593 0162 0F85F100 		jne	.L21
 593      0000
 594              		.loc 13 127 41 view .LVU139
 595 0168 4A8D3CFD 		leaq	0(,%r15,8), %rdi
 595      00000000 
 596 0170 E8000000 		call	_Znwm@PLT
 596      00
 597              	.LVL30:
 598 0175 4889C1   		movq	%rax, %rcx
 599 0178 48894424 		movq	%rax, 8(%rsp)
 599      08
 600              	.LVL31:
 601              		.loc 13 127 41 view .LVU140
 602              	.LBE624:
 603              	.LBE623:
 604              	.LBE622:
 605              	.LBE621:
 606              	.LBB628:
 607              	.LBI628:
 174:/usr/include/c++/11/bits/allocator.h **** 
 608              		.loc 12 174 7 is_stmt 1 view .LVU141
 174:/usr/include/c++/11/bits/allocator.h **** 
 609              		.loc 12 174 7 is_stmt 0 view .LVU142
 610              	.LBE628:
 611              	.LBE617:
 612              	.LBE616:
 956:/usr/include/c++/11/bits/deque.tcc **** 				     + std::max(this->_M_impl._M_map_size,
 957:/usr/include/c++/11/bits/deque.tcc **** 						__nodes_to_add) + 2;
GAS LISTING x64lin/../common/event.s 			page 134


 958:/usr/include/c++/11/bits/deque.tcc **** 
 959:/usr/include/c++/11/bits/deque.tcc **** 	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
 960:/usr/include/c++/11/bits/deque.tcc **** 	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 613              		.loc 6 960 47 view .LVU143
 614 017d 4C89F8   		movq	%r15, %rax
 615              	.LVL32:
 961:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 962:/usr/include/c++/11/bits/deque.tcc **** 	  std::copy(this->_M_impl._M_start._M_node,
 616              		.loc 6 962 13 view .LVU144
 617 0180 488B7328 		movq	40(%rbx), %rsi
 960:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 618              		.loc 6 960 47 view .LVU145
 619 0184 4C29E8   		subq	%r13, %rax
 960:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 620              		.loc 6 960 66 view .LVU146
 621 0187 48D1E8   		shrq	%rax
 960:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 622              		.loc 6 960 17 view .LVU147
 623 018a 4C8D2CC1 		leaq	(%rcx,%rax,8), %r13
 624              	.LVL33:
 625              		.loc 6 962 13 view .LVU148
 626 018e 488B4348 		movq	72(%rbx), %rax
 627 0192 488D5008 		leaq	8(%rax), %rdx
 628              	.LVL34:
 629              	.LBB631:
 630              	.LBI631:
 631              		.file 14 "/usr/include/c++/11/bits/stl_algobase.h"
   1:/usr/include/c++/11/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/11/bits/stl_algobase.h **** 
   3:/usr/include/c++/11/bits/stl_algobase.h **** // Copyright (C) 2001-2021 Free Software Foundation, Inc.
   4:/usr/include/c++/11/bits/stl_algobase.h **** //
   5:/usr/include/c++/11/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/11/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/11/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/11/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/11/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/11/bits/stl_algobase.h **** 
  11:/usr/include/c++/11/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/11/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/11/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/11/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/11/bits/stl_algobase.h **** 
  16:/usr/include/c++/11/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/11/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/11/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/11/bits/stl_algobase.h **** 
  20:/usr/include/c++/11/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/11/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/11/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/11/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/11/bits/stl_algobase.h **** 
  25:/usr/include/c++/11/bits/stl_algobase.h **** /*
  26:/usr/include/c++/11/bits/stl_algobase.h ****  *
  27:/usr/include/c++/11/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/11/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/11/bits/stl_algobase.h ****  *
  30:/usr/include/c++/11/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
GAS LISTING x64lin/../common/event.s 			page 135


  31:/usr/include/c++/11/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/11/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/11/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/11/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/11/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/11/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/11/bits/stl_algobase.h ****  *
  38:/usr/include/c++/11/bits/stl_algobase.h ****  *
  39:/usr/include/c++/11/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/11/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/11/bits/stl_algobase.h ****  *
  42:/usr/include/c++/11/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/11/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/11/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/11/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/11/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/11/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/11/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/11/bits/stl_algobase.h ****  */
  50:/usr/include/c++/11/bits/stl_algobase.h **** 
  51:/usr/include/c++/11/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/11/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/11/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/11/bits/stl_algobase.h ****  */
  55:/usr/include/c++/11/bits/stl_algobase.h **** 
  56:/usr/include/c++/11/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/11/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/11/bits/stl_algobase.h **** 
  59:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/11/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/11/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/11/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/include/c++/11/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/include/c++/11/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/include/c++/11/bits/stl_algobase.h **** #endif
  75:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/usr/include/c++/11/bits/stl_algobase.h **** # include <compare>
  77:/usr/include/c++/11/bits/stl_algobase.h **** #endif
  78:/usr/include/c++/11/bits/stl_algobase.h **** 
  79:/usr/include/c++/11/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/c++/11/bits/stl_algobase.h **** {
  81:/usr/include/c++/11/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/c++/11/bits/stl_algobase.h **** 
  83:/usr/include/c++/11/bits/stl_algobase.h ****   /*
  84:/usr/include/c++/11/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/usr/include/c++/11/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/usr/include/c++/11/bits/stl_algobase.h ****    */
  87:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
GAS LISTING x64lin/../common/event.s 			page 136


  88:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/usr/include/c++/11/bits/stl_algobase.h ****     inline int
  90:/usr/include/c++/11/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/usr/include/c++/11/bits/stl_algobase.h ****     {
  92:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/usr/include/c++/11/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/usr/include/c++/11/bits/stl_algobase.h **** #endif
  95:/usr/include/c++/11/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/usr/include/c++/11/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/usr/include/c++/11/bits/stl_algobase.h **** 	{
  98:/usr/include/c++/11/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/usr/include/c++/11/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/usr/include/c++/11/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/usr/include/c++/11/bits/stl_algobase.h **** 	  return 0;
 102:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 103:/usr/include/c++/11/bits/stl_algobase.h ****       else
 104:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 105:/usr/include/c++/11/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/usr/include/c++/11/bits/stl_algobase.h ****     }
 107:/usr/include/c++/11/bits/stl_algobase.h **** 
 108:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/usr/include/c++/11/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/usr/include/c++/11/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/usr/include/c++/11/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/usr/include/c++/11/bits/stl_algobase.h ****     struct __iter_swap
 114:/usr/include/c++/11/bits/stl_algobase.h ****     {
 115:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/usr/include/c++/11/bits/stl_algobase.h **** 	static void
 117:/usr/include/c++/11/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 119:/usr/include/c++/11/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/usr/include/c++/11/bits/stl_algobase.h **** 	    _ValueType1;
 121:/usr/include/c++/11/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/usr/include/c++/11/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/usr/include/c++/11/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 125:/usr/include/c++/11/bits/stl_algobase.h ****     };
 126:/usr/include/c++/11/bits/stl_algobase.h **** 
 127:/usr/include/c++/11/bits/stl_algobase.h ****   template<>
 128:/usr/include/c++/11/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/usr/include/c++/11/bits/stl_algobase.h ****     {
 130:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/usr/include/c++/11/bits/stl_algobase.h **** 	static void
 132:/usr/include/c++/11/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 134:/usr/include/c++/11/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 136:/usr/include/c++/11/bits/stl_algobase.h ****     };
 137:/usr/include/c++/11/bits/stl_algobase.h **** #endif // C++03
 138:/usr/include/c++/11/bits/stl_algobase.h **** 
 139:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 140:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   Nothing.
GAS LISTING x64lin/../common/event.s 			page 137


 145:/usr/include/c++/11/bits/stl_algobase.h ****    *
 146:/usr/include/c++/11/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/usr/include/c++/11/bits/stl_algobase.h ****    *  iterators themselves.
 148:/usr/include/c++/11/bits/stl_algobase.h ****   */
 149:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/usr/include/c++/11/bits/stl_algobase.h ****     inline void
 152:/usr/include/c++/11/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/usr/include/c++/11/bits/stl_algobase.h ****     {
 154:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 155:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/usr/include/c++/11/bits/stl_algobase.h **** 
 160:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/usr/include/c++/11/bits/stl_algobase.h **** 	_ValueType1;
 163:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/usr/include/c++/11/bits/stl_algobase.h **** 	_ValueType2;
 165:/usr/include/c++/11/bits/stl_algobase.h **** 
 166:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/usr/include/c++/11/bits/stl_algobase.h **** 
 171:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/usr/include/c++/11/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/usr/include/c++/11/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/usr/include/c++/11/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/usr/include/c++/11/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/usr/include/c++/11/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/usr/include/c++/11/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/usr/include/c++/11/bits/stl_algobase.h **** #else
 180:/usr/include/c++/11/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/usr/include/c++/11/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/usr/include/c++/11/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 184:/usr/include/c++/11/bits/stl_algobase.h ****     }
 185:/usr/include/c++/11/bits/stl_algobase.h **** 
 186:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 187:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/usr/include/c++/11/bits/stl_algobase.h ****    *
 194:/usr/include/c++/11/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/usr/include/c++/11/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/usr/include/c++/11/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/usr/include/c++/11/bits/stl_algobase.h ****   */
 198:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/usr/include/c++/11/bits/stl_algobase.h ****     _ForwardIterator2
 201:/usr/include/c++/11/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
GAS LISTING x64lin/../common/event.s 			page 138


 202:/usr/include/c++/11/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/usr/include/c++/11/bits/stl_algobase.h ****     {
 204:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 205:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/usr/include/c++/11/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/usr/include/c++/11/bits/stl_algobase.h **** 
 211:/usr/include/c++/11/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/usr/include/c++/11/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/usr/include/c++/11/bits/stl_algobase.h ****       return __first2;
 214:/usr/include/c++/11/bits/stl_algobase.h ****     }
 215:/usr/include/c++/11/bits/stl_algobase.h **** 
 216:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 217:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/usr/include/c++/11/bits/stl_algobase.h ****    *
 223:/usr/include/c++/11/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/usr/include/c++/11/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/usr/include/c++/11/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/usr/include/c++/11/bits/stl_algobase.h ****   */
 227:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp>
 228:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/usr/include/c++/11/bits/stl_algobase.h ****     inline const _Tp&
 230:/usr/include/c++/11/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/usr/include/c++/11/bits/stl_algobase.h ****     {
 232:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 233:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/usr/include/c++/11/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/usr/include/c++/11/bits/stl_algobase.h ****       if (__b < __a)
 236:/usr/include/c++/11/bits/stl_algobase.h **** 	return __b;
 237:/usr/include/c++/11/bits/stl_algobase.h ****       return __a;
 238:/usr/include/c++/11/bits/stl_algobase.h ****     }
 239:/usr/include/c++/11/bits/stl_algobase.h **** 
 240:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 241:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/usr/include/c++/11/bits/stl_algobase.h ****    *
 247:/usr/include/c++/11/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/usr/include/c++/11/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/usr/include/c++/11/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/usr/include/c++/11/bits/stl_algobase.h ****   */
 251:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp>
 252:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/usr/include/c++/11/bits/stl_algobase.h ****     inline const _Tp&
 254:/usr/include/c++/11/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/usr/include/c++/11/bits/stl_algobase.h ****     {
 256:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 257:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/usr/include/c++/11/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
GAS LISTING x64lin/../common/event.s 			page 139


 259:/usr/include/c++/11/bits/stl_algobase.h ****       if (__a < __b)
 260:/usr/include/c++/11/bits/stl_algobase.h **** 	return __b;
 261:/usr/include/c++/11/bits/stl_algobase.h ****       return __a;
 262:/usr/include/c++/11/bits/stl_algobase.h ****     }
 263:/usr/include/c++/11/bits/stl_algobase.h **** 
 264:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 265:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/usr/include/c++/11/bits/stl_algobase.h ****    *
 272:/usr/include/c++/11/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/usr/include/c++/11/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/usr/include/c++/11/bits/stl_algobase.h ****   */
 275:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/usr/include/c++/11/bits/stl_algobase.h ****     inline const _Tp&
 278:/usr/include/c++/11/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/usr/include/c++/11/bits/stl_algobase.h ****     {
 280:/usr/include/c++/11/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/usr/include/c++/11/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/usr/include/c++/11/bits/stl_algobase.h **** 	return __b;
 283:/usr/include/c++/11/bits/stl_algobase.h ****       return __a;
 284:/usr/include/c++/11/bits/stl_algobase.h ****     }
 285:/usr/include/c++/11/bits/stl_algobase.h **** 
 286:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 287:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/usr/include/c++/11/bits/stl_algobase.h ****    *
 294:/usr/include/c++/11/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/usr/include/c++/11/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/usr/include/c++/11/bits/stl_algobase.h ****   */
 297:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/usr/include/c++/11/bits/stl_algobase.h ****     inline const _Tp&
 300:/usr/include/c++/11/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/usr/include/c++/11/bits/stl_algobase.h ****     {
 302:/usr/include/c++/11/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/usr/include/c++/11/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/usr/include/c++/11/bits/stl_algobase.h **** 	return __b;
 305:/usr/include/c++/11/bits/stl_algobase.h ****       return __a;
 306:/usr/include/c++/11/bits/stl_algobase.h ****     }
 307:/usr/include/c++/11/bits/stl_algobase.h **** 
 308:/usr/include/c++/11/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/usr/include/c++/11/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/usr/include/c++/11/bits/stl_algobase.h ****     inline _Iterator
 313:/usr/include/c++/11/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/usr/include/c++/11/bits/stl_algobase.h ****     { return __it; }
GAS LISTING x64lin/../common/event.s 			page 140


 316:/usr/include/c++/11/bits/stl_algobase.h **** 
 317:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq>
 318:/usr/include/c++/11/bits/stl_algobase.h ****     _Ite
 319:/usr/include/c++/11/bits/stl_algobase.h ****     __niter_base(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq,
 320:/usr/include/c++/11/bits/stl_algobase.h **** 		 std::random_access_iterator_tag>&);
 321:/usr/include/c++/11/bits/stl_algobase.h **** 
 322:/usr/include/c++/11/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 323:/usr/include/c++/11/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 324:/usr/include/c++/11/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 325:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _From, typename _To>
 326:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 327:/usr/include/c++/11/bits/stl_algobase.h ****     inline _From
 328:/usr/include/c++/11/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 329:/usr/include/c++/11/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 330:/usr/include/c++/11/bits/stl_algobase.h **** 
 331:/usr/include/c++/11/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 332:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Iterator>
 333:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 334:/usr/include/c++/11/bits/stl_algobase.h ****     inline _Iterator
 335:/usr/include/c++/11/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 336:/usr/include/c++/11/bits/stl_algobase.h ****     { return __res; }
 337:/usr/include/c++/11/bits/stl_algobase.h **** 
 338:/usr/include/c++/11/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 339:/usr/include/c++/11/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 340:/usr/include/c++/11/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 341:/usr/include/c++/11/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 342:/usr/include/c++/11/bits/stl_algobase.h ****   // a for loop with an explicit count.
 343:/usr/include/c++/11/bits/stl_algobase.h **** 
 344:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 345:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move
 346:/usr/include/c++/11/bits/stl_algobase.h ****     {
 347:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 348:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 349:/usr/include/c++/11/bits/stl_algobase.h **** 	static _OI
 350:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 351:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 352:/usr/include/c++/11/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 353:/usr/include/c++/11/bits/stl_algobase.h **** 	    *__result = *__first;
 354:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 355:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 356:/usr/include/c++/11/bits/stl_algobase.h ****     };
 357:/usr/include/c++/11/bits/stl_algobase.h **** 
 358:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 359:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Category>
 360:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 361:/usr/include/c++/11/bits/stl_algobase.h ****     {
 362:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 363:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 364:/usr/include/c++/11/bits/stl_algobase.h **** 	static _OI
 365:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 366:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 367:/usr/include/c++/11/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 368:/usr/include/c++/11/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 369:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 370:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 371:/usr/include/c++/11/bits/stl_algobase.h ****     };
 372:/usr/include/c++/11/bits/stl_algobase.h **** #endif
GAS LISTING x64lin/../common/event.s 			page 141


 373:/usr/include/c++/11/bits/stl_algobase.h **** 
 374:/usr/include/c++/11/bits/stl_algobase.h ****   template<>
 375:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 376:/usr/include/c++/11/bits/stl_algobase.h ****     {
 377:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 378:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 379:/usr/include/c++/11/bits/stl_algobase.h **** 	static _OI
 380:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 381:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 382:/usr/include/c++/11/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 383:/usr/include/c++/11/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 384:/usr/include/c++/11/bits/stl_algobase.h **** 	    {
 385:/usr/include/c++/11/bits/stl_algobase.h **** 	      *__result = *__first;
 386:/usr/include/c++/11/bits/stl_algobase.h **** 	      ++__first;
 387:/usr/include/c++/11/bits/stl_algobase.h **** 	      ++__result;
 388:/usr/include/c++/11/bits/stl_algobase.h **** 	    }
 389:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 390:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 391:/usr/include/c++/11/bits/stl_algobase.h ****     };
 392:/usr/include/c++/11/bits/stl_algobase.h **** 
 393:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 394:/usr/include/c++/11/bits/stl_algobase.h ****   template<>
 395:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 396:/usr/include/c++/11/bits/stl_algobase.h ****     {
 397:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 398:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 399:/usr/include/c++/11/bits/stl_algobase.h **** 	static _OI
 400:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 401:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 402:/usr/include/c++/11/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 403:/usr/include/c++/11/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 404:/usr/include/c++/11/bits/stl_algobase.h **** 	    {
 405:/usr/include/c++/11/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 406:/usr/include/c++/11/bits/stl_algobase.h **** 	      ++__first;
 407:/usr/include/c++/11/bits/stl_algobase.h **** 	      ++__result;
 408:/usr/include/c++/11/bits/stl_algobase.h **** 	    }
 409:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 410:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 411:/usr/include/c++/11/bits/stl_algobase.h ****     };
 412:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 413:/usr/include/c++/11/bits/stl_algobase.h **** 
 414:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove>
 415:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 416:/usr/include/c++/11/bits/stl_algobase.h ****     {
 417:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _Tp>
 418:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 419:/usr/include/c++/11/bits/stl_algobase.h **** 	static _Tp*
 420:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 421:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 422:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 423:/usr/include/c++/11/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 424:/usr/include/c++/11/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 425:/usr/include/c++/11/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 426:/usr/include/c++/11/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 427:/usr/include/c++/11/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 428:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 429:/usr/include/c++/11/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
GAS LISTING x64lin/../common/event.s 			page 142


 430:/usr/include/c++/11/bits/stl_algobase.h **** 	  if (_Num)
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 432:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 433:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 434:/usr/include/c++/11/bits/stl_algobase.h ****     };
 435:/usr/include/c++/11/bits/stl_algobase.h **** 
 436:/usr/include/c++/11/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 437:/usr/include/c++/11/bits/stl_algobase.h **** 
 438:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 439:/usr/include/c++/11/bits/stl_algobase.h ****     struct _Deque_iterator;
 440:/usr/include/c++/11/bits/stl_algobase.h **** 
 441:/usr/include/c++/11/bits/stl_algobase.h ****   struct _Bit_iterator;
 442:/usr/include/c++/11/bits/stl_algobase.h **** 
 443:/usr/include/c++/11/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 444:/usr/include/c++/11/bits/stl_algobase.h **** 
 445:/usr/include/c++/11/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 446:/usr/include/c++/11/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 447:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _CharT>
 448:/usr/include/c++/11/bits/stl_algobase.h ****     struct char_traits;
 449:/usr/include/c++/11/bits/stl_algobase.h **** 
 450:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 451:/usr/include/c++/11/bits/stl_algobase.h ****     class istreambuf_iterator;
 452:/usr/include/c++/11/bits/stl_algobase.h **** 
 453:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 454:/usr/include/c++/11/bits/stl_algobase.h ****     class ostreambuf_iterator;
 455:/usr/include/c++/11/bits/stl_algobase.h **** 
 456:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 457:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 458:/usr/include/c++/11/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 459:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 460:/usr/include/c++/11/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 461:/usr/include/c++/11/bits/stl_algobase.h **** 
 462:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 463:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 464:/usr/include/c++/11/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 465:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 466:/usr/include/c++/11/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 467:/usr/include/c++/11/bits/stl_algobase.h **** 
 468:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 469:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 470:/usr/include/c++/11/bits/stl_algobase.h **** 				    _CharT*>::__type
 471:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 472:/usr/include/c++/11/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 473:/usr/include/c++/11/bits/stl_algobase.h **** 
 474:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 475:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 476:/usr/include/c++/11/bits/stl_algobase.h ****       __is_char<_CharT>::__value,
 477:/usr/include/c++/11/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*> >::__type
 478:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a2(
 479:/usr/include/c++/11/bits/stl_algobase.h **** 	istreambuf_iterator<_CharT, char_traits<_CharT> >,
 480:/usr/include/c++/11/bits/stl_algobase.h **** 	istreambuf_iterator<_CharT, char_traits<_CharT> >,
 481:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*>);
 482:/usr/include/c++/11/bits/stl_algobase.h **** 
 483:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 484:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 485:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 486:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
GAS LISTING x64lin/../common/event.s 			page 143


 487:/usr/include/c++/11/bits/stl_algobase.h ****     {
 488:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 489:/usr/include/c++/11/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 490:/usr/include/c++/11/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 491:/usr/include/c++/11/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 492:/usr/include/c++/11/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 493:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 494:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 495:/usr/include/c++/11/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 496:/usr/include/c++/11/bits/stl_algobase.h ****     }
 497:/usr/include/c++/11/bits/stl_algobase.h **** 
 498:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 499:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 500:/usr/include/c++/11/bits/stl_algobase.h ****     _OI
 501:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 502:/usr/include/c++/11/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 503:/usr/include/c++/11/bits/stl_algobase.h **** 		   _OI);
 504:/usr/include/c++/11/bits/stl_algobase.h **** 
 505:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 506:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 507:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 508:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 509:/usr/include/c++/11/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 510:/usr/include/c++/11/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 511:/usr/include/c++/11/bits/stl_algobase.h **** 
 512:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 513:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 514:/usr/include/c++/11/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 515:/usr/include/c++/11/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 516:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 517:/usr/include/c++/11/bits/stl_algobase.h **** 
 518:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 519:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 520:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 521:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 522:/usr/include/c++/11/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 523:/usr/include/c++/11/bits/stl_algobase.h **** 
 524:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 525:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 526:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 527:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 528:/usr/include/c++/11/bits/stl_algobase.h ****     {
 529:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 530:/usr/include/c++/11/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 531:/usr/include/c++/11/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 532:/usr/include/c++/11/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 533:/usr/include/c++/11/bits/stl_algobase.h ****     }
 534:/usr/include/c++/11/bits/stl_algobase.h **** 
 535:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 536:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 537:/usr/include/c++/11/bits/stl_algobase.h ****     _OI
 538:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 539:/usr/include/c++/11/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 540:/usr/include/c++/11/bits/stl_algobase.h **** 		  _OI);
 541:/usr/include/c++/11/bits/stl_algobase.h **** 
 542:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 543:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
GAS LISTING x64lin/../common/event.s 			page 144


 544:/usr/include/c++/11/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 545:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 546:/usr/include/c++/11/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 547:/usr/include/c++/11/bits/stl_algobase.h **** 
 548:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 549:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 550:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 551:/usr/include/c++/11/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 552:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 553:/usr/include/c++/11/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 554:/usr/include/c++/11/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 555:/usr/include/c++/11/bits/stl_algobase.h **** 
 556:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 557:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 558:/usr/include/c++/11/bits/stl_algobase.h ****     _OutputIterator
 559:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result,
 560:/usr/include/c++/11/bits/stl_algobase.h **** 	       bool)
 561:/usr/include/c++/11/bits/stl_algobase.h ****     {
 562:/usr/include/c++/11/bits/stl_algobase.h ****       if (__n > 0)
 563:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 564:/usr/include/c++/11/bits/stl_algobase.h **** 	  while (true)
 565:/usr/include/c++/11/bits/stl_algobase.h **** 	    {
 566:/usr/include/c++/11/bits/stl_algobase.h **** 	      *__result = *__first;
 567:/usr/include/c++/11/bits/stl_algobase.h **** 	      ++__result;
 568:/usr/include/c++/11/bits/stl_algobase.h **** 	      if (--__n > 0)
 569:/usr/include/c++/11/bits/stl_algobase.h **** 		++__first;
 570:/usr/include/c++/11/bits/stl_algobase.h **** 	      else
 571:/usr/include/c++/11/bits/stl_algobase.h **** 		break;
 572:/usr/include/c++/11/bits/stl_algobase.h **** 	    }
 573:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 574:/usr/include/c++/11/bits/stl_algobase.h ****       return __result;
 575:/usr/include/c++/11/bits/stl_algobase.h ****     }
 576:/usr/include/c++/11/bits/stl_algobase.h **** 
 577:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _CharT, typename _Size>
 578:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 579:/usr/include/c++/11/bits/stl_algobase.h ****       __is_char<_CharT>::__value, _CharT*>::__type
 580:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 581:/usr/include/c++/11/bits/stl_algobase.h **** 	       _Size, _CharT*, bool);
 582:/usr/include/c++/11/bits/stl_algobase.h **** 
 583:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _CharT, typename _Size>
 584:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 585:/usr/include/c++/11/bits/stl_algobase.h ****       __is_char<_CharT>::__value,
 586:/usr/include/c++/11/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*> >::__type
 587:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT> >, _Size,
 588:/usr/include/c++/11/bits/stl_algobase.h **** 	       _GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*>,
 589:/usr/include/c++/11/bits/stl_algobase.h **** 	       bool);
 590:/usr/include/c++/11/bits/stl_algobase.h **** 
 591:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 592:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 593:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 594:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 595:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 596:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 597:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   result + (last - first)
 598:/usr/include/c++/11/bits/stl_algobase.h ****    *
 599:/usr/include/c++/11/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 600:/usr/include/c++/11/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
GAS LISTING x64lin/../common/event.s 			page 145


 601:/usr/include/c++/11/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 602:/usr/include/c++/11/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 603:/usr/include/c++/11/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 604:/usr/include/c++/11/bits/stl_algobase.h ****    *
 605:/usr/include/c++/11/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 606:/usr/include/c++/11/bits/stl_algobase.h ****    *  within [first,last).
 607:/usr/include/c++/11/bits/stl_algobase.h ****   */
 608:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 609:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 610:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 611:/usr/include/c++/11/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 632              		.loc 14 611 5 is_stmt 1 view .LVU149
 633              	.LBB632:
 634              	.LBI632:
 527:/usr/include/c++/11/bits/stl_algobase.h ****     {
 635              		.loc 14 527 5 view .LVU150
 636              	.LBB633:
 637              	.LBI633:
 521:/usr/include/c++/11/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 638              		.loc 14 521 5 view .LVU151
 639              	.LBB634:
 640              	.LBI634:
 486:/usr/include/c++/11/bits/stl_algobase.h ****     {
 641              		.loc 14 486 5 view .LVU152
 642              	.LBB635:
 643              	.LBB636:
 644              	.LBI636:
 420:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 645              		.loc 14 420 2 view .LVU153
 646              	.LBB637:
 430:/usr/include/c++/11/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 647              		.loc 14 430 4 is_stmt 0 view .LVU154
 648 0196 4839F2   		cmpq	%rsi, %rdx
 649 0199 740B     		je	.L12
 429:/usr/include/c++/11/bits/stl_algobase.h **** 	  if (_Num)
 650              		.loc 14 429 34 view .LVU155
 651 019b 4829F2   		subq	%rsi, %rdx
 652              	.LVL35:
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 653              		.loc 14 431 23 view .LVU156
 654 019e 4C89EF   		movq	%r13, %rdi
 655 01a1 E8000000 		call	memmove@PLT
 655      00
 656              	.LVL36:
 657              	.L12:
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 658              		.loc 14 431 23 view .LVU157
 659              	.LBE637:
 660              	.LBE636:
 661              	.LBE635:
 662              	.LBE634:
 663              	.LBE633:
 664              	.LBE632:
 665              	.LBE631:
 666              	.LBB638:
 667              	.LBI638:
 580:/usr/include/c++/11/bits/stl_deque.h ****       {
GAS LISTING x64lin/../common/event.s 			page 146


 668              		.loc 5 580 7 is_stmt 1 view .LVU158
 669              	.LBB639:
 670              	.LBB640:
 671              	.LBI640:
 555:/usr/include/c++/11/bits/stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 672              		.loc 5 555 7 view .LVU159
 673              	.LBB641:
 674              	.LBI641:
 169:/usr/include/c++/11/bits/allocator.h **** 
 675              		.loc 12 169 2 view .LVU160
 676              	.LBB642:
 677              	.LBI642:
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 678              		.loc 13 79 7 view .LVU161
  79:/usr/include/c++/11/ext/new_allocator.h **** 
 679              		.loc 13 79 7 is_stmt 0 view .LVU162
 680              	.LBE642:
 681              	.LBE641:
 682              	.LBE640:
 683              	.LBB643:
 684              	.LBI643:
 495:/usr/include/c++/11/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 685              		.loc 7 495 7 is_stmt 1 view .LVU163
 686              	.LBB644:
 687              	.LBI644:
 180:/usr/include/c++/11/bits/allocator.h ****       {
 181:/usr/include/c++/11/bits/allocator.h **** #ifdef __cpp_lib_is_constant_evaluated
 182:/usr/include/c++/11/bits/allocator.h **** 	if (std::is_constant_evaluated())
 183:/usr/include/c++/11/bits/allocator.h **** 	  return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 184:/usr/include/c++/11/bits/allocator.h **** #endif
 185:/usr/include/c++/11/bits/allocator.h **** 	return __allocator_base<_Tp>::allocate(__n, 0);
 186:/usr/include/c++/11/bits/allocator.h ****       }
 187:/usr/include/c++/11/bits/allocator.h **** 
 188:/usr/include/c++/11/bits/allocator.h ****       [[__gnu__::__always_inline__]]
 189:/usr/include/c++/11/bits/allocator.h ****       constexpr void
 190:/usr/include/c++/11/bits/allocator.h ****       deallocate(_Tp* __p, size_t __n)
 688              		.loc 12 190 7 view .LVU164
 689              	.LBB645:
 690              	.LBI645:
 128:/usr/include/c++/11/ext/new_allocator.h ****       }
 129:/usr/include/c++/11/ext/new_allocator.h **** 
 130:/usr/include/c++/11/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 131:/usr/include/c++/11/ext/new_allocator.h ****       void
 132:/usr/include/c++/11/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
 691              		.loc 13 132 7 view .LVU165
 692              	.LBB646:
 133:/usr/include/c++/11/ext/new_allocator.h ****       {
 134:/usr/include/c++/11/ext/new_allocator.h **** #if __cpp_aligned_new
 135:/usr/include/c++/11/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 136:/usr/include/c++/11/ext/new_allocator.h **** 	  {
 137:/usr/include/c++/11/ext/new_allocator.h **** 	    ::operator delete(__p,
 138:/usr/include/c++/11/ext/new_allocator.h **** # if __cpp_sized_deallocation
 139:/usr/include/c++/11/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 140:/usr/include/c++/11/ext/new_allocator.h **** # endif
 141:/usr/include/c++/11/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 142:/usr/include/c++/11/ext/new_allocator.h **** 	    return;
 143:/usr/include/c++/11/ext/new_allocator.h **** 	  }
GAS LISTING x64lin/../common/event.s 			page 147


 144:/usr/include/c++/11/ext/new_allocator.h **** #endif
 145:/usr/include/c++/11/ext/new_allocator.h **** 	::operator delete(__p
 693              		.loc 13 145 19 is_stmt 0 view .LVU166
 694 01a6 488B4308 		movq	8(%rbx), %rax
 695 01aa 488B3B   		movq	(%rbx), %rdi
 696 01ad 488D34C5 		leaq	0(,%rax,8), %rsi
 696      00000000 
 697 01b5 E8000000 		call	_ZdlPvm@PLT
 697      00
 698              	.LVL37:
 699              		.loc 13 145 19 view .LVU167
 700              	.LBE646:
 701              	.LBE645:
 702              	.LBE644:
 703              	.LBE643:
 704              	.LBB647:
 705              	.LBI647:
 174:/usr/include/c++/11/bits/allocator.h **** 
 706              		.loc 12 174 7 is_stmt 1 view .LVU168
 174:/usr/include/c++/11/bits/allocator.h **** 
 707              		.loc 12 174 7 is_stmt 0 view .LVU169
 708              	.LBE647:
 709              	.LBE639:
 710              	.LBE638:
 963:/usr/include/c++/11/bits/deque.tcc **** 		    this->_M_impl._M_finish._M_node + 1,
 964:/usr/include/c++/11/bits/deque.tcc **** 		    __new_nstart);
 965:/usr/include/c++/11/bits/deque.tcc **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 966:/usr/include/c++/11/bits/deque.tcc **** 
 967:/usr/include/c++/11/bits/deque.tcc **** 	  this->_M_impl._M_map = __new_map;
 711              		.loc 6 967 25 view .LVU170
 712 01ba 488B4424 		movq	8(%rsp), %rax
 712      08
 968:/usr/include/c++/11/bits/deque.tcc **** 	  this->_M_impl._M_map_size = __new_map_size;
 713              		.loc 6 968 30 view .LVU171
 714 01bf 4C897B08 		movq	%r15, 8(%rbx)
 967:/usr/include/c++/11/bits/deque.tcc **** 	  this->_M_impl._M_map_size = __new_map_size;
 715              		.loc 6 967 25 view .LVU172
 716 01c3 488903   		movq	%rax, (%rbx)
 717              	.LVL38:
 718              	.L9:
 967:/usr/include/c++/11/bits/deque.tcc **** 	  this->_M_impl._M_map_size = __new_map_size;
 719              		.loc 6 967 25 view .LVU173
 720              	.LBE615:
 721              	.LBE614:
 722              	.LBB671:
 723              	.LBI671:
 260:/usr/include/c++/11/bits/stl_deque.h ****       {
 724              		.loc 5 260 7 is_stmt 1 view .LVU174
 725              	.LBB672:
 264:/usr/include/c++/11/bits/stl_deque.h ****       }
 726              		.loc 5 264 21 is_stmt 0 view .LVU175
 727 01c6 498B4500 		movq	0(%r13), %rax
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 728              		.loc 5 263 11 view .LVU176
 729 01ca C4C17A7E 		vmovq	0(%r13), %xmm2
 729      5500
 730              	.LBE672:
GAS LISTING x64lin/../common/event.s 			page 148


 731              	.LBE671:
 969:/usr/include/c++/11/bits/deque.tcc **** 	}
 970:/usr/include/c++/11/bits/deque.tcc **** 
 971:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_start._M_set_node(__new_nstart);
 972:/usr/include/c++/11/bits/deque.tcc ****       this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 732              		.loc 6 972 42 view .LVU177
 733 01d0 4F8D7C35 		leaq	0(%r13,%r14), %r15
 733      00
 734              	.LBB675:
 735              	.LBB673:
 262:/usr/include/c++/11/bits/stl_deque.h **** 	_M_first = *__new_node;
 736              		.loc 5 262 10 view .LVU178
 737 01d5 4C896B28 		movq	%r13, 40(%rbx)
 738              	.LBE673:
 739              	.LBE675:
 740              	.LBB676:
 741              	.LBB677:
 742 01d9 4C897B48 		movq	%r15, 72(%rbx)
 743              	.LBE677:
 744              	.LBE676:
 745              	.LBB679:
 746              	.LBB674:
 264:/usr/include/c++/11/bits/stl_deque.h ****       }
 747              		.loc 5 264 21 view .LVU179
 748 01dd 48050002 		addq	$512, %rax
 748      0000
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 749              		.loc 5 263 11 view .LVU180
 750 01e3 C4E3E922 		vpinsrq	$1, %rax, %xmm2, %xmm0
 750      C001
 751 01e9 C5FA7F43 		vmovdqu	%xmm0, 24(%rbx)
 751      18
 752              	.LVL39:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 753              		.loc 5 263 11 view .LVU181
 754              	.LBE674:
 755              	.LBE679:
 756              	.LBB680:
 757              	.LBI676:
 260:/usr/include/c++/11/bits/stl_deque.h ****       {
 758              		.loc 5 260 7 is_stmt 1 view .LVU182
 759              	.LBB678:
 264:/usr/include/c++/11/bits/stl_deque.h ****       }
 760              		.loc 5 264 21 is_stmt 0 view .LVU183
 761 01ee 498B07   		movq	(%r15), %rax
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 762              		.loc 5 263 11 view .LVU184
 763 01f1 C4C17A7E 		vmovq	(%r15), %xmm3
 763      1F
 264:/usr/include/c++/11/bits/stl_deque.h ****       }
 764              		.loc 5 264 21 view .LVU185
 765 01f6 48050002 		addq	$512, %rax
 765      0000
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 766              		.loc 5 263 11 view .LVU186
 767 01fc C4E3E122 		vpinsrq	$1, %rax, %xmm3, %xmm0
 767      C001
GAS LISTING x64lin/../common/event.s 			page 149


 768 0202 C5FA7F43 		vmovdqu	%xmm0, 56(%rbx)
 768      38
 769              	.LVL40:
 263:/usr/include/c++/11/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 770              		.loc 5 263 11 view .LVU187
 771              	.LBE678:
 772              	.LBE680:
 773              	.LBE613:
 774              	.LBE612:
 775 0207 E9DAFEFF 		jmp	.L6
 775      FF
 776              	.LVL41:
 777 020c 0F1F4000 		.p2align 4,,10
 778              		.p2align 3
 779              	.L20:
 780              	.LBB683:
 781              	.LBB682:
 782              	.LBB681:
 942:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 783              		.loc 6 942 7 view .LVU188
 784 0210 4C29EA   		subq	%r13, %rdx
 945:/usr/include/c++/11/bits/deque.tcc **** 		      this->_M_impl._M_finish._M_node + 1,
 785              		.loc 6 945 15 view .LVU189
 786 0213 4983C708 		addq	$8, %r15
 942:/usr/include/c++/11/bits/deque.tcc **** 			 + (__add_at_front ? __nodes_to_add : 0);
 787              		.loc 6 942 26 view .LVU190
 788 0217 48D1EA   		shrq	%rdx
 941:/usr/include/c++/11/bits/deque.tcc **** 					 - __new_num_nodes) / 2
 789              		.loc 6 941 17 view .LVU191
 790 021a 4C8D2CD1 		leaq	(%rcx,%rdx,8), %r13
 791              	.LVL42:
 792              	.LBB649:
 793              	.LBB650:
 794              	.LBB651:
 795              	.LBB652:
 796              	.LBB653:
 797              	.LBB654:
 798              	.LBB655:
 429:/usr/include/c++/11/bits/stl_algobase.h **** 	  if (_Num)
 799              		.loc 14 429 34 view .LVU192
 800 021e 4C89FA   		movq	%r15, %rdx
 801 0221 4829F2   		subq	%rsi, %rdx
 802              	.LBE655:
 803              	.LBE654:
 804              	.LBE653:
 805              	.LBE652:
 806              	.LBE651:
 807              	.LBE650:
 808              	.LBE649:
 944:/usr/include/c++/11/bits/deque.tcc **** 	    std::copy(this->_M_impl._M_start._M_node,
 809              		.loc 6 944 4 view .LVU193
 810 0224 4C39EE   		cmpq	%r13, %rsi
 811 0227 7617     		jbe	.L8
 812              	.LVL43:
 813              	.LBB662:
 814              	.LBI649:
 815              		.loc 14 611 5 is_stmt 1 view .LVU194
GAS LISTING x64lin/../common/event.s 			page 150


 816              	.LBB661:
 817              	.LBI650:
 527:/usr/include/c++/11/bits/stl_algobase.h ****     {
 818              		.loc 14 527 5 view .LVU195
 819              	.LBB660:
 820              	.LBI651:
 521:/usr/include/c++/11/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 821              		.loc 14 521 5 view .LVU196
 822              	.LBB659:
 823              	.LBI652:
 486:/usr/include/c++/11/bits/stl_algobase.h ****     {
 824              		.loc 14 486 5 view .LVU197
 825              	.LBB658:
 826              	.LBB657:
 827              	.LBI654:
 420:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 828              		.loc 14 420 2 view .LVU198
 829              	.LBB656:
 430:/usr/include/c++/11/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 830              		.loc 14 430 4 is_stmt 0 view .LVU199
 831 0229 4C39FE   		cmpq	%r15, %rsi
 832 022c 7498     		je	.L9
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 833              		.loc 14 431 23 view .LVU200
 834 022e 4C89EF   		movq	%r13, %rdi
 835 0231 E8000000 		call	memmove@PLT
 835      00
 836              	.LVL44:
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 837              		.loc 14 431 23 view .LVU201
 838 0236 EB8E     		jmp	.L9
 839              	.LVL45:
 840 0238 0F1F8400 		.p2align 4,,10
 840      00000000 
 841              		.p2align 3
 842              	.L8:
 431:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result + _Num;
 843              		.loc 14 431 23 view .LVU202
 844              	.LBE656:
 845              	.LBE657:
 846              	.LBE658:
 847              	.LBE659:
 848              	.LBE660:
 849              	.LBE661:
 850              	.LBE662:
 851              	.LBB663:
 852              	.LBI663:
 612:/usr/include/c++/11/bits/stl_algobase.h ****     {
 613:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 614:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 615:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 616:/usr/include/c++/11/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 617:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 618:/usr/include/c++/11/bits/stl_algobase.h **** 
 619:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 620:/usr/include/c++/11/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 621:/usr/include/c++/11/bits/stl_algobase.h ****     }
GAS LISTING x64lin/../common/event.s 			page 151


 622:/usr/include/c++/11/bits/stl_algobase.h **** 
 623:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 624:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 625:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 626:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 627:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 628:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 629:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 630:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   result + (last - first)
 631:/usr/include/c++/11/bits/stl_algobase.h ****    *
 632:/usr/include/c++/11/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 633:/usr/include/c++/11/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 634:/usr/include/c++/11/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 635:/usr/include/c++/11/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 636:/usr/include/c++/11/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 637:/usr/include/c++/11/bits/stl_algobase.h ****    *
 638:/usr/include/c++/11/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 639:/usr/include/c++/11/bits/stl_algobase.h ****    *  within [first,last).
 640:/usr/include/c++/11/bits/stl_algobase.h ****   */
 641:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 642:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 643:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 644:/usr/include/c++/11/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 645:/usr/include/c++/11/bits/stl_algobase.h ****     {
 646:/usr/include/c++/11/bits/stl_algobase.h ****       // concept requirements
 647:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 648:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 649:/usr/include/c++/11/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 650:/usr/include/c++/11/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 651:/usr/include/c++/11/bits/stl_algobase.h **** 
 652:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 653:/usr/include/c++/11/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 654:/usr/include/c++/11/bits/stl_algobase.h ****     }
 655:/usr/include/c++/11/bits/stl_algobase.h **** 
 656:/usr/include/c++/11/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 657:/usr/include/c++/11/bits/stl_algobase.h **** #else
 658:/usr/include/c++/11/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 659:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 660:/usr/include/c++/11/bits/stl_algobase.h **** 
 661:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 662:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move_backward
 663:/usr/include/c++/11/bits/stl_algobase.h ****     {
 664:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 665:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 666:/usr/include/c++/11/bits/stl_algobase.h **** 	static _BI2
 667:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 668:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 669:/usr/include/c++/11/bits/stl_algobase.h **** 	  while (__first != __last)
 670:/usr/include/c++/11/bits/stl_algobase.h **** 	    *--__result = *--__last;
 671:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 672:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 673:/usr/include/c++/11/bits/stl_algobase.h ****     };
 674:/usr/include/c++/11/bits/stl_algobase.h **** 
 675:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 676:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _Category>
 677:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 678:/usr/include/c++/11/bits/stl_algobase.h ****     {
GAS LISTING x64lin/../common/event.s 			page 152


 679:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 680:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 681:/usr/include/c++/11/bits/stl_algobase.h **** 	static _BI2
 682:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 683:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 684:/usr/include/c++/11/bits/stl_algobase.h **** 	  while (__first != __last)
 685:/usr/include/c++/11/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 686:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 687:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 688:/usr/include/c++/11/bits/stl_algobase.h ****     };
 689:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 690:/usr/include/c++/11/bits/stl_algobase.h **** 
 691:/usr/include/c++/11/bits/stl_algobase.h ****   template<>
 692:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 693:/usr/include/c++/11/bits/stl_algobase.h ****     {
 694:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 695:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 696:/usr/include/c++/11/bits/stl_algobase.h **** 	static _BI2
 697:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 698:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 699:/usr/include/c++/11/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 700:/usr/include/c++/11/bits/stl_algobase.h **** 	    __n = __last - __first;
 701:/usr/include/c++/11/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 702:/usr/include/c++/11/bits/stl_algobase.h **** 	    *--__result = *--__last;
 703:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 704:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 705:/usr/include/c++/11/bits/stl_algobase.h ****     };
 706:/usr/include/c++/11/bits/stl_algobase.h **** 
 707:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 708:/usr/include/c++/11/bits/stl_algobase.h ****   template<>
 709:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 710:/usr/include/c++/11/bits/stl_algobase.h ****     {
 711:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 712:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 713:/usr/include/c++/11/bits/stl_algobase.h **** 	static _BI2
 714:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 715:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 716:/usr/include/c++/11/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 717:/usr/include/c++/11/bits/stl_algobase.h **** 	    __n = __last - __first;
 718:/usr/include/c++/11/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 719:/usr/include/c++/11/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 720:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result;
 721:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 722:/usr/include/c++/11/bits/stl_algobase.h ****     };
 723:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 724:/usr/include/c++/11/bits/stl_algobase.h **** 
 725:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove>
 726:/usr/include/c++/11/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 727:/usr/include/c++/11/bits/stl_algobase.h ****     {
 728:/usr/include/c++/11/bits/stl_algobase.h ****       template<typename _Tp>
 729:/usr/include/c++/11/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 730:/usr/include/c++/11/bits/stl_algobase.h **** 	static _Tp*
 731:/usr/include/c++/11/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 732:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 733:/usr/include/c++/11/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 734:/usr/include/c++/11/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 735:/usr/include/c++/11/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
GAS LISTING x64lin/../common/event.s 			page 153


 736:/usr/include/c++/11/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 737:/usr/include/c++/11/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 738:/usr/include/c++/11/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 739:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 740:/usr/include/c++/11/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 741:/usr/include/c++/11/bits/stl_algobase.h **** 	  if (_Num)
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 743:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 744:/usr/include/c++/11/bits/stl_algobase.h **** 	}
 745:/usr/include/c++/11/bits/stl_algobase.h ****     };
 746:/usr/include/c++/11/bits/stl_algobase.h **** 
 747:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 748:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 749:/usr/include/c++/11/bits/stl_algobase.h ****     inline _BI2
 750:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 751:/usr/include/c++/11/bits/stl_algobase.h ****     {
 752:/usr/include/c++/11/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 753:/usr/include/c++/11/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 754:/usr/include/c++/11/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 755:/usr/include/c++/11/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 756:/usr/include/c++/11/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 757:/usr/include/c++/11/bits/stl_algobase.h **** #endif
 758:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 759:/usr/include/c++/11/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 760:/usr/include/c++/11/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 761:/usr/include/c++/11/bits/stl_algobase.h **** 								 __last,
 762:/usr/include/c++/11/bits/stl_algobase.h **** 								 __result);
 763:/usr/include/c++/11/bits/stl_algobase.h ****     }
 764:/usr/include/c++/11/bits/stl_algobase.h **** 
 765:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 766:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 767:/usr/include/c++/11/bits/stl_algobase.h ****     inline _BI2
 768:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 769:/usr/include/c++/11/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 770:/usr/include/c++/11/bits/stl_algobase.h **** 
 771:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 772:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 773:/usr/include/c++/11/bits/stl_algobase.h ****     _OI
 774:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 775:/usr/include/c++/11/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 776:/usr/include/c++/11/bits/stl_algobase.h **** 			    _OI);
 777:/usr/include/c++/11/bits/stl_algobase.h **** 
 778:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 779:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 780:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 781:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a1(
 782:/usr/include/c++/11/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 783:/usr/include/c++/11/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 784:/usr/include/c++/11/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 785:/usr/include/c++/11/bits/stl_algobase.h **** 
 786:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 787:/usr/include/c++/11/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 788:/usr/include/c++/11/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 789:/usr/include/c++/11/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 790:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 791:/usr/include/c++/11/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 792:/usr/include/c++/11/bits/stl_algobase.h **** 
GAS LISTING x64lin/../common/event.s 			page 154


 793:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 794:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 795:/usr/include/c++/11/bits/stl_algobase.h ****     inline _OI
 796:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 797:/usr/include/c++/11/bits/stl_algobase.h ****     {
 798:/usr/include/c++/11/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 799:/usr/include/c++/11/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 800:/usr/include/c++/11/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 801:/usr/include/c++/11/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 802:/usr/include/c++/11/bits/stl_algobase.h ****     }
 803:/usr/include/c++/11/bits/stl_algobase.h **** 
 804:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 805:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 806:/usr/include/c++/11/bits/stl_algobase.h ****     _OI
 807:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a(
 808:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 809:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 810:/usr/include/c++/11/bits/stl_algobase.h **** 		_OI);
 811:/usr/include/c++/11/bits/stl_algobase.h **** 
 812:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 813:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 814:/usr/include/c++/11/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 815:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 816:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 817:/usr/include/c++/11/bits/stl_algobase.h **** 
 818:/usr/include/c++/11/bits/stl_algobase.h ****   template<bool _IsMove,
 819:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 820:/usr/include/c++/11/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 821:/usr/include/c++/11/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 822:/usr/include/c++/11/bits/stl_algobase.h ****     __copy_move_backward_a(
 823:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 824:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 825:/usr/include/c++/11/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 826:/usr/include/c++/11/bits/stl_algobase.h **** 
 827:/usr/include/c++/11/bits/stl_algobase.h ****   /**
 828:/usr/include/c++/11/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 829:/usr/include/c++/11/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 830:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 831:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 832:/usr/include/c++/11/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 833:/usr/include/c++/11/bits/stl_algobase.h ****    *  @return   result - (last - first)
 834:/usr/include/c++/11/bits/stl_algobase.h ****    *
 835:/usr/include/c++/11/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 836:/usr/include/c++/11/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 837:/usr/include/c++/11/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 838:/usr/include/c++/11/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 839:/usr/include/c++/11/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 840:/usr/include/c++/11/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 841:/usr/include/c++/11/bits/stl_algobase.h ****    *
 842:/usr/include/c++/11/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 843:/usr/include/c++/11/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 844:/usr/include/c++/11/bits/stl_algobase.h ****   */
 845:/usr/include/c++/11/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 846:/usr/include/c++/11/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 847:/usr/include/c++/11/bits/stl_algobase.h ****     inline _BI2
 848:/usr/include/c++/11/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 853              		.loc 14 848 5 is_stmt 1 view .LVU203
GAS LISTING x64lin/../common/event.s 			page 155


 854              	.LBB664:
 855              	.LBI664:
 796:/usr/include/c++/11/bits/stl_algobase.h ****     {
 856              		.loc 14 796 5 view .LVU204
 857              	.LBB665:
 858              	.LBI665:
 768:/usr/include/c++/11/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 859              		.loc 14 768 5 view .LVU205
 860              	.LBB666:
 861              	.LBI666:
 750:/usr/include/c++/11/bits/stl_algobase.h ****     {
 862              		.loc 14 750 5 view .LVU206
 863              	.LBB667:
 864              	.LBB668:
 865              	.LBI668:
 731:/usr/include/c++/11/bits/stl_algobase.h **** 	{
 866              		.loc 14 731 2 view .LVU207
 867              	.LBB669:
 741:/usr/include/c++/11/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 868              		.loc 14 741 4 is_stmt 0 view .LVU208
 869 0240 4C39FE   		cmpq	%r15, %rsi
 870 0243 7481     		je	.L9
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 871              		.loc 14 742 33 view .LVU209
 872 0245 498D7E08 		leaq	8(%r14), %rdi
 873              	.LVL46:
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 874              		.loc 14 742 33 view .LVU210
 875 0249 4829D7   		subq	%rdx, %rdi
 876              	.LVL47:
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 877              		.loc 14 742 33 view .LVU211
 878 024c 4C01EF   		addq	%r13, %rdi
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 879              		.loc 14 742 23 view .LVU212
 880 024f E8000000 		call	memmove@PLT
 880      00
 881              	.LVL48:
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 882              		.loc 14 742 23 view .LVU213
 883 0254 E96DFFFF 		jmp	.L9
 883      FF
 884              	.LVL49:
 885              	.L21:
 742:/usr/include/c++/11/bits/stl_algobase.h **** 	  return __result - _Num;
 886              		.loc 14 742 23 view .LVU214
 887              	.LBE669:
 888              	.LBE668:
 889              	.LBE667:
 890              	.LBE666:
 891              	.LBE665:
 892              	.LBE664:
 893              	.LBE663:
 894              	.LBB670:
 895              	.LBB648:
 896              	.LBB630:
 897              	.LBB629:
GAS LISTING x64lin/../common/event.s 			page 156


 898              	.LBB627:
 899              	.LBB626:
 900              	.LBB625:
 115:/usr/include/c++/11/ext/new_allocator.h **** 	      std::__throw_bad_array_new_length();
 901              		.loc 13 115 6 view .LVU215
 902 0259 4939FF   		cmpq	%rdi, %r15
 903 025c 7605     		jbe	.L11
 116:/usr/include/c++/11/ext/new_allocator.h **** 	    std::__throw_bad_alloc();
 904              		.loc 13 116 41 view .LVU216
 905 025e E8000000 		call	_ZSt28__throw_bad_array_new_lengthv@PLT
 905      00
 906              	.LVL50:
 907              	.L11:
 117:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 908              		.loc 13 117 28 view .LVU217
 909 0263 E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 909      00
 910              	.LVL51:
 911              	.LEHE0:
 912              	.L17:
 117:/usr/include/c++/11/ext/new_allocator.h **** 	  }
 913              		.loc 13 117 28 view .LVU218
 914              	.LBE625:
 915              	.LBE626:
 916              	.LBE627:
 917              	.LBE629:
 918              	.LBE630:
 919              	.LBE648:
 920              	.LBE670:
 921              	.LBE681:
 922              	.LBE682:
 923              	.LBE683:
 924              	.LBE684:
 925              	.LBE714:
 926              	.LBE603:
 927              	.LBE602:
 928              	.LBE717:
 929              	.LBE719:
 930              	.LBE721:
 931              	.LBE735:
 932              	.LBB736:
 933              	.LBB569:
 934              	.LBB565:
 104:/usr/include/c++/11/bits/std_mutex.h ****     }
 935              		.loc 2 104 2 is_stmt 1 view .LVU219
 104:/usr/include/c++/11/bits/std_mutex.h ****     }
 936              		.loc 2 104 22 is_stmt 0 view .LVU220
 937 0268 89C7     		movl	%eax, %edi
 938              	.LEHB1:
 939 026a E8000000 		call	_ZSt20__throw_system_errori@PLT
 939      00
 940              	.LVL52:
 941              	.LEHE1:
 942              	.L18:
 104:/usr/include/c++/11/bits/std_mutex.h ****     }
 943              		.loc 2 104 22 view .LVU221
 944              	.LBE565:
GAS LISTING x64lin/../common/event.s 			page 157


 945              	.LBE569:
 946              	.LBE736:
 947              	.LBB737:
 948              	.LBB722:
 949              	.LBB720:
 950              	.LBB718:
 951              	.LBB716:
 952              	.LBB715:
 493:/usr/include/c++/11/bits/deque.tcc **** 	      __N("cannot create std::deque larger than max_size()"));
 953              		.loc 6 493 24 view .LVU222
 954 026f 488D3D00 		leaq	.LC0(%rip), %rdi
 954      000000
 955              	.LEHB2:
 956 0276 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 956      00
 957              	.LVL53:
 958              	.LEHE2:
 959              	.L14:
 493:/usr/include/c++/11/bits/deque.tcc **** 	      __N("cannot create std::deque larger than max_size()"));
 960              		.loc 6 493 24 view .LVU223
 961 027b F30F1EFA 		endbr64
 962              	.LBE715:
 963              	.LBE716:
 964              	.LBE718:
 965              	.LBE720:
 966              	.LBE722:
 967              	.LBE737:
 968              	.LBB738:
 969              	.LBB739:
 970              	.LBB740:
 971              	.LBB741:
 972              		.loc 3 779 33 view .LVU224
 973 027f 4889C5   		movq	%rax, %rbp
 974              	.LVL54:
 975              		.loc 3 779 33 view .LVU225
 976 0282 E9000000 		jmp	.L13
 976      00
 977              	.LBE741:
 978              	.LBE740:
 979              	.LBE739:
 980              	.LBE738:
 981              		.globl	__gxx_personality_v0
 982              		.section	.gcc_except_table,"a",@progbits
 983              	.LLSDA5359:
 984 0000 FF       		.byte	0xff
 985 0001 FF       		.byte	0xff
 986 0002 01       		.byte	0x1
 987 0003 12       		.uleb128 .LLSDACSE5359-.LLSDACSB5359
 988              	.LLSDACSB5359:
 989 0004 EB01     		.uleb128 .LEHB0-.LFB5359
 990 0006 FD02     		.uleb128 .LEHE0-.LEHB0
 991 0008 FB04     		.uleb128 .L14-.LFB5359
 992 000a 00       		.uleb128 0
 993 000b EA04     		.uleb128 .LEHB1-.LFB5359
 994 000d 05       		.uleb128 .LEHE1-.LEHB1
 995 000e 00       		.uleb128 0
 996 000f 00       		.uleb128 0
GAS LISTING x64lin/../common/event.s 			page 158


 997 0010 F604     		.uleb128 .LEHB2-.LFB5359
 998 0012 05       		.uleb128 .LEHE2-.LEHB2
 999 0013 FB04     		.uleb128 .L14-.LFB5359
 1000 0015 00       		.uleb128 0
 1001              	.LLSDACSE5359:
 1002              		.text
 1003              		.cfi_endproc
 1004              		.section	.text.unlikely
 1005              		.cfi_startproc
 1006              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1007              		.cfi_lsda 0x1b,.LLSDAC5359
 1008              		.type	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE.cold, @funct
 1009              	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE.cold:
 1010              	.LFSB5359:
 1011              	.LBB748:
 1012              	.LBB746:
 1013              	.LBB744:
 1014              	.LBB742:
 1015              	.L13:
 1016              		.cfi_def_cfa_offset 80
 1017              		.cfi_offset 3, -56
 1018              		.cfi_offset 6, -48
 1019              		.cfi_offset 12, -40
 1020              		.cfi_offset 13, -32
 1021              		.cfi_offset 14, -24
 1022              		.cfi_offset 15, -16
 1023              	.LVL55:
 1024              		.loc 3 779 33 view -0
 1025              	.LBE742:
 1026              	.LBE744:
 1027              	.LBE746:
 1028              	.LBI738:
 1029              		.loc 2 234 7 is_stmt 1 view .LVU227
 1030              	.LBB747:
 1031              	.LBI739:
 115:/usr/include/c++/11/bits/std_mutex.h ****     {
 1032              		.loc 2 115 5 view .LVU228
 118:/usr/include/c++/11/bits/std_mutex.h ****     }
 1033              		.loc 2 118 7 view .LVU229
 1034              	.LBB745:
 1035              	.LBI740:
 776:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h **** {
 1036              		.loc 3 776 1 view .LVU230
 1037              	.LBB743:
 778:/usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h ****     return __gthrw_(pthread_mutex_unlock) (__mutex);
 1038              		.loc 3 778 3 view .LVU231
 1039              		.loc 3 779 5 view .LVU232
 1040              		.loc 3 779 33 is_stmt 0 view .LVU233
 1041 0000 4C89E7   		movq	%r12, %rdi
 1042 0003 C5F877   		vzeroupper
 1043 0006 E8000000 		call	pthread_mutex_unlock@PLT
 1043      00
 1044              	.LVL56:
 1045              		.loc 3 779 33 view .LVU234
 1046 000b 4889EF   		movq	%rbp, %rdi
 1047              	.LEHB3:
 1048 000e E8000000 		call	_Unwind_Resume@PLT
GAS LISTING x64lin/../common/event.s 			page 159


 1048      00
 1049              	.LVL57:
 1050              	.LEHE3:
 1051              	.LBE743:
 1052              	.LBE745:
 1053              	.LBE747:
 1054              	.LBE748:
 1055              		.cfi_endproc
 1056              	.LFE5359:
 1057              		.section	.gcc_except_table
 1058              	.LLSDAC5359:
 1059 0016 FF       		.byte	0xff
 1060 0017 FF       		.byte	0xff
 1061 0018 01       		.byte	0x1
 1062 0019 04       		.uleb128 .LLSDACSEC5359-.LLSDACSBC5359
 1063              	.LLSDACSBC5359:
 1064 001a 0E       		.uleb128 .LEHB3-.LCOLDB1
 1065 001b 05       		.uleb128 .LEHE3-.LEHB3
 1066 001c 00       		.uleb128 0
 1067 001d 00       		.uleb128 0
 1068              	.LLSDACSEC5359:
 1069              		.section	.text.unlikely
 1070              		.text
 1071              		.size	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE, .-_Z9pushEv
 1072              		.section	.text.unlikely
 1073              		.size	_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE.cold, .-_Z9p
 1074              	.LCOLDE1:
 1075              		.text
 1076              	.LHOTE1:
 1077              	.Letext0:
 1078              		.section	.text.unlikely
 1079              	.Letext_cold0:
 1080              		.file 15 "/usr/include/c++/11/type_traits"
 1081              		.file 16 "/usr/include/x86_64-linux-gnu/c++/11/bits/c++config.h"
 1082              		.file 17 "/usr/include/c++/11/concepts"
 1083              		.file 18 "/usr/include/c++/11/bits/iterator_concepts.h"
 1084              		.file 19 "/usr/include/c++/11/bits/ranges_cmp.h"
 1085              		.file 20 "/usr/include/c++/11/compare"
 1086              		.file 21 "/usr/include/c++/11/bits/atomic_wait.h"
 1087              		.file 22 "/usr/include/c++/11/bits/stl_iterator_base_types.h"
 1088              		.file 23 "/usr/include/c++/11/debug/debug.h"
 1089              		.file 24 "/usr/include/c++/11/cwchar"
 1090              		.file 25 "/usr/include/c++/11/cstdint"
 1091              		.file 26 "/usr/include/c++/11/clocale"
 1092              		.file 27 "/usr/include/c++/11/cstdlib"
 1093              		.file 28 "/usr/include/c++/11/numbers"
 1094              		.file 29 "/usr/include/c++/11/cstdio"
 1095              		.file 30 "/usr/include/c++/11/bits/uses_allocator.h"
 1096              		.file 31 "/usr/include/c++/11/bits/exception_ptr.h"
 1097              		.file 32 "/usr/include/c++/11/cwctype"
 1098              		.file 33 "/usr/include/c++/11/bits/shared_ptr_base.h"
 1099              		.file 34 "/usr/include/c++/11/ctime"
 1100              		.file 35 "/usr/include/c++/11/chrono"
 1101              		.file 36 "/usr/include/c++/11/bits/algorithmfwd.h"
 1102              		.file 37 "/usr/include/c++/11/bits/parse_numbers.h"
 1103              		.file 38 "/usr/include/c++/11/condition_variable"
 1104              		.file 39 "/usr/include/c++/11/bits/unique_lock.h"
GAS LISTING x64lin/../common/event.s 			page 160


 1105              		.file 40 "/usr/include/c++/11/bits/ptr_traits.h"
 1106              		.file 41 "/usr/include/c++/11/bits/functexcept.h"
 1107              		.file 42 "/usr/include/c++/11/utility"
 1108              		.file 43 "/usr/include/c++/11/bits/cpp_type_traits.h"
 1109              		.file 44 "/usr/include/c++/11/bits/predefined_ops.h"
 1110              		.file 45 "/usr/include/c++/11/ext/alloc_traits.h"
 1111              		.file 46 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
 1112              		.file 47 "<built-in>"
 1113              		.file 48 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 1114              		.file 49 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 1115              		.file 50 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 1116              		.file 51 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 1117              		.file 52 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 1118              		.file 53 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 1119              		.file 54 "/usr/include/wchar.h"
 1120              		.file 55 "/usr/include/x86_64-linux-gnu/bits/wchar2.h"
 1121              		.file 56 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 1122              		.file 57 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1123              		.file 58 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 1124              		.file 59 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 1125              		.file 60 "/usr/include/stdint.h"
 1126              		.file 61 "/usr/include/locale.h"
 1127              		.file 62 "/usr/include/stdlib.h"
 1128              		.file 63 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h"
 1129              		.file 64 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h"
 1130              		.file 65 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h"
 1131              		.file 66 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 1132              		.file 67 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h"
 1133              		.file 68 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
 1134              		.file 69 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h"
 1135              		.file 70 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
 1136              		.file 71 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h"
 1137              		.file 72 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h"
 1138              		.file 73 "/usr/include/x86_64-linux-gnu/bits/stdlib.h"
 1139              		.file 74 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h"
 1140              		.file 75 "/usr/include/stdio.h"
 1141              		.file 76 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
 1142              		.file 77 "/usr/include/x86_64-linux-gnu/bits/stdio.h"
 1143              		.file 78 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 1144              		.file 79 "/usr/include/wctype.h"
 1145              		.file 80 "/usr/include/c++/11/pstl/execution_defs.h"
 1146              		.file 81 "/usr/include/time.h"
 1147              		.file 82 "../common/event.h"
 1148              		.file 83 "/usr/include/pthread.h"
 1149              		.file 84 "/usr/include/c++/11/new"
 1150              		.file 85 "/usr/include/c++/11/ext/concurrence.h"
 1151              		.file 86 "/usr/include/c++/11/string_view"
 1152              		.section	.debug_info,"",@progbits
 1153              	.Ldebug_info0:
 1154 0000 31850000 		.long	0x8531
 1155 0004 0500     		.value	0x5
 1156 0006 01       		.byte	0x1
 1157 0007 08       		.byte	0x8
 1158 0008 00000000 		.long	.Ldebug_abbrev0
 1159 000c 8001     		.uleb128 0x80
 1160 000e 00000000 		.long	.LASF1133
 1161 0012 21       		.byte	0x21
GAS LISTING x64lin/../common/event.s 			page 161


 1162 0013 00000000 		.long	.LASF0
 1163 0017 00000000 		.long	.LASF1
 1164 001b 00000000 		.long	.LLRL191
 1165 001f 00000000 		.quad	0
 1165      00000000 
 1166 0027 00000000 		.long	.Ldebug_line0
 1167 002b 8101     		.uleb128 0x81
 1168 002d 73746400 		.string	"std"
 1169 0031 10       		.byte	0x10
 1170 0032 1601     		.value	0x116
 1171 0034 0B       		.byte	0xb
 1172 0035 713F0000 		.long	0x3f71
 1173 0039 16       		.uleb128 0x16
 1174 003a 00000000 		.long	.LASF6
 1175 003e 01       		.byte	0x1
 1176 003f 0F       		.byte	0xf
 1177 0040 41       		.byte	0x41
 1178 0041 0C       		.byte	0xc
 1179 0042 A2000000 		.long	0xa2
 1180 0046 06       		.uleb128 0x6
 1181 0047 00000000 		.long	.LASF8
 1182 004b 0F       		.byte	0xf
 1183 004c 44       		.byte	0x44
 1184 004d 13       		.byte	0x13
 1185 004e 783F0000 		.long	0x3f78
 1186 0052 24       		.uleb128 0x24
 1187 0053 00000000 		.long	.LASF2
 1188 0057 0F       		.byte	0xf
 1189 0058 46       		.byte	0x46
 1190 0059 11       		.byte	0x11
 1191 005a 00000000 		.long	.LASF4
 1192 005e 46000000 		.long	0x46
 1193 0062 6A000000 		.long	0x6a
 1194 0066 70000000 		.long	0x70
 1195 006a 02       		.uleb128 0x2
 1196 006b 7C430000 		.long	0x437c
 1197 006f 00       		.byte	0
 1198 0070 24       		.uleb128 0x24
 1199 0071 00000000 		.long	.LASF3
 1200 0075 0F       		.byte	0xf
 1201 0076 4B       		.byte	0x4b
 1202 0077 1C       		.byte	0x1c
 1203 0078 00000000 		.long	.LASF5
 1204 007c 46000000 		.long	0x46
 1205 0080 88000000 		.long	0x88
 1206 0084 8E000000 		.long	0x8e
 1207 0088 02       		.uleb128 0x2
 1208 0089 7C430000 		.long	0x437c
 1209 008d 00       		.byte	0
 1210 008e 0A       		.uleb128 0xa
 1211 008f 5F547000 		.string	"_Tp"
 1212 0093 783F0000 		.long	0x3f78
 1213 0097 38       		.uleb128 0x38
 1214 0098 5F5F7600 		.string	"__v"
 1215 009c 783F0000 		.long	0x3f78
 1216 00a0 00       		.byte	0
 1217 00a1 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 162


 1218 00a2 08       		.uleb128 0x8
 1219 00a3 39000000 		.long	0x39
 1220 00a7 16       		.uleb128 0x16
 1221 00a8 00000000 		.long	.LASF7
 1222 00ac 01       		.byte	0x1
 1223 00ad 0F       		.byte	0xf
 1224 00ae 41       		.byte	0x41
 1225 00af 0C       		.byte	0xc
 1226 00b0 10010000 		.long	0x110
 1227 00b4 06       		.uleb128 0x6
 1228 00b5 00000000 		.long	.LASF8
 1229 00b9 0F       		.byte	0xf
 1230 00ba 44       		.byte	0x44
 1231 00bb 13       		.byte	0x13
 1232 00bc 783F0000 		.long	0x3f78
 1233 00c0 24       		.uleb128 0x24
 1234 00c1 00000000 		.long	.LASF9
 1235 00c5 0F       		.byte	0xf
 1236 00c6 46       		.byte	0x46
 1237 00c7 11       		.byte	0x11
 1238 00c8 00000000 		.long	.LASF10
 1239 00cc B4000000 		.long	0xb4
 1240 00d0 D8000000 		.long	0xd8
 1241 00d4 DE000000 		.long	0xde
 1242 00d8 02       		.uleb128 0x2
 1243 00d9 81430000 		.long	0x4381
 1244 00dd 00       		.byte	0
 1245 00de 24       		.uleb128 0x24
 1246 00df 00000000 		.long	.LASF3
 1247 00e3 0F       		.byte	0xf
 1248 00e4 4B       		.byte	0x4b
 1249 00e5 1C       		.byte	0x1c
 1250 00e6 00000000 		.long	.LASF11
 1251 00ea B4000000 		.long	0xb4
 1252 00ee F6000000 		.long	0xf6
 1253 00f2 FC000000 		.long	0xfc
 1254 00f6 02       		.uleb128 0x2
 1255 00f7 81430000 		.long	0x4381
 1256 00fb 00       		.byte	0
 1257 00fc 0A       		.uleb128 0xa
 1258 00fd 5F547000 		.string	"_Tp"
 1259 0101 783F0000 		.long	0x3f78
 1260 0105 38       		.uleb128 0x38
 1261 0106 5F5F7600 		.string	"__v"
 1262 010a 783F0000 		.long	0x3f78
 1263 010e 01       		.byte	0x1
 1264 010f 00       		.byte	0
 1265 0110 08       		.uleb128 0x8
 1266 0111 A7000000 		.long	0xa7
 1267 0115 06       		.uleb128 0x6
 1268 0116 00000000 		.long	.LASF12
 1269 011a 0F       		.byte	0xf
 1270 011b 56       		.byte	0x56
 1271 011c 09       		.byte	0x9
 1272 011d 39000000 		.long	0x39
 1273 0121 18       		.uleb128 0x18
 1274 0122 00000000 		.long	.LASF13
GAS LISTING x64lin/../common/event.s 			page 163


 1275 0126 10       		.byte	0x10
 1276 0127 1801     		.value	0x118
 1277 0129 1D       		.byte	0x1d
 1278 012a 2B430000 		.long	0x432b
 1279 012e 08       		.uleb128 0x8
 1280 012f 21010000 		.long	0x121
 1281 0133 3C       		.uleb128 0x3c
 1282 0134 00000000 		.long	.LASF14
 1283 0138 0F       		.byte	0xf
 1284 0139 800A     		.value	0xa80
 1285 013b 0D       		.byte	0xd
 1286 013c 3C       		.uleb128 0x3c
 1287 013d 00000000 		.long	.LASF15
 1288 0141 0F       		.byte	0xf
 1289 0142 D60A     		.value	0xad6
 1290 0144 0D       		.byte	0xd
 1291 0145 3D       		.uleb128 0x3d
 1292 0146 00000000 		.long	.LASF16
 1293 014a 11       		.byte	0x11
 1294 014b A3       		.byte	0xa3
 1295 014c 0D       		.byte	0xd
 1296 014d 85010000 		.long	0x185
 1297 0151 33       		.uleb128 0x33
 1298 0152 00000000 		.long	.LASF17
 1299 0156 11       		.byte	0x11
 1300 0157 A5       		.byte	0xa5
 1301 0158 0F       		.byte	0xf
 1302 0159 8201     		.uleb128 0x82
 1303 015b 00000000 		.long	.LASF27
 1304 015f 11       		.byte	0x11
 1305 0160 E1       		.byte	0xe1
 1306 0161 16       		.byte	0x16
 1307 0162 33       		.uleb128 0x33
 1308 0163 00000000 		.long	.LASF18
 1309 0167 12       		.byte	0x12
 1310 0168 50       		.byte	0x50
 1311 0169 0F       		.byte	0xf
 1312 016a 3C       		.uleb128 0x3c
 1313 016b 00000000 		.long	.LASF19
 1314 016f 12       		.byte	0x12
 1315 0170 1D03     		.value	0x31d
 1316 0172 0D       		.byte	0xd
 1317 0173 3C       		.uleb128 0x3c
 1318 0174 00000000 		.long	.LASF20
 1319 0178 12       		.byte	0x12
 1320 0179 A003     		.value	0x3a0
 1321 017b 15       		.byte	0x15
 1322 017c 33       		.uleb128 0x33
 1323 017d 00000000 		.long	.LASF21
 1324 0181 13       		.byte	0x13
 1325 0182 40       		.byte	0x40
 1326 0183 0D       		.byte	0xd
 1327 0184 00       		.byte	0
 1328 0185 33       		.uleb128 0x33
 1329 0186 00000000 		.long	.LASF22
 1330 018a 14       		.byte	0x14
 1331 018b 31       		.byte	0x31
GAS LISTING x64lin/../common/event.s 			page 164


 1332 018c 0D       		.byte	0xd
 1333 018d 3D       		.uleb128 0x3d
 1334 018e 00000000 		.long	.LASF21
 1335 0192 11       		.byte	0x11
 1336 0193 36       		.byte	0x36
 1337 0194 0D       		.byte	0xd
 1338 0195 BE010000 		.long	0x1be
 1339 0199 58       		.uleb128 0x58
 1340 019a 00000000 		.long	.LASF23
 1341 019e 3D       		.byte	0x3d
 1342 019f 1D       		.byte	0x1d
 1343 01a0 2E010000 		.long	0x12e
 1344 01a4 04       		.byte	0x4
 1345 01a5 58       		.uleb128 0x58
 1346 01a6 00000000 		.long	.LASF24
 1347 01aa 91       		.byte	0x91
 1348 01ab 14       		.byte	0x14
 1349 01ac 54430000 		.long	0x4354
 1350 01b0 0C       		.byte	0xc
 1351 01b1 58       		.uleb128 0x58
 1352 01b2 00000000 		.long	.LASF25
 1353 01b6 92       		.byte	0x92
 1354 01b7 14       		.byte	0x14
 1355 01b8 54430000 		.long	0x4354
 1356 01bc 10       		.byte	0x10
 1357 01bd 00       		.byte	0
 1358 01be 3C       		.uleb128 0x3c
 1359 01bf 00000000 		.long	.LASF26
 1360 01c3 14       		.byte	0x14
 1361 01c4 0E02     		.value	0x20e
 1362 01c6 0D       		.byte	0xd
 1363 01c7 59       		.uleb128 0x59
 1364 01c8 00000000 		.long	.LASF28
 1365 01cc 14       		.byte	0x14
 1366 01cd 5703     		.value	0x357
 1367 01cf 14       		.byte	0x14
 1368 01d0 63       		.uleb128 0x63
 1369 01d1 00000000 		.long	.LASF54
 1370 01d5 16       		.byte	0x16
 1371 01d6 5D       		.byte	0x5d
 1372 01d7 16       		.uleb128 0x16
 1373 01d8 00000000 		.long	.LASF29
 1374 01dc 01       		.byte	0x1
 1375 01dd 16       		.byte	0x16
 1376 01de 63       		.byte	0x63
 1377 01df 0A       		.byte	0xa
 1378 01e0 EA010000 		.long	0x1ea
 1379 01e4 30       		.uleb128 0x30
 1380 01e5 D0010000 		.long	0x1d0
 1381 01e9 00       		.byte	0
 1382 01ea 16       		.uleb128 0x16
 1383 01eb 00000000 		.long	.LASF30
 1384 01ef 01       		.byte	0x1
 1385 01f0 16       		.byte	0x16
 1386 01f1 67       		.byte	0x67
 1387 01f2 0A       		.byte	0xa
 1388 01f3 FD010000 		.long	0x1fd
GAS LISTING x64lin/../common/event.s 			page 165


 1389 01f7 30       		.uleb128 0x30
 1390 01f8 D7010000 		.long	0x1d7
 1391 01fc 00       		.byte	0
 1392 01fd 16       		.uleb128 0x16
 1393 01fe 00000000 		.long	.LASF31
 1394 0202 01       		.byte	0x1
 1395 0203 16       		.byte	0x16
 1396 0204 6B       		.byte	0x6b
 1397 0205 0A       		.byte	0xa
 1398 0206 10020000 		.long	0x210
 1399 020a 30       		.uleb128 0x30
 1400 020b EA010000 		.long	0x1ea
 1401 020f 00       		.byte	0
 1402 0210 8301     		.uleb128 0x83
 1403 0212 00000000 		.long	.LASF1134
 1404 0216 07       		.byte	0x7
 1405 0217 08       		.byte	0x8
 1406 0218 2B430000 		.long	0x432b
 1407 021c 54       		.byte	0x54
 1408 021d 59       		.byte	0x59
 1409 021e 0E       		.byte	0xe
 1410 021f 33       		.uleb128 0x33
 1411 0220 00000000 		.long	.LASF32
 1412 0224 17       		.byte	0x17
 1413 0225 32       		.byte	0x32
 1414 0226 0D       		.byte	0xd
 1415 0227 25       		.uleb128 0x25
 1416 0228 00000000 		.long	.LASF33
 1417 022c 01       		.byte	0x1
 1418 022d 0E       		.byte	0xe
 1419 022e 7701     		.value	0x177
 1420 0230 89020000 		.long	0x289
 1421 0234 14       		.uleb128 0x14
 1422 0235 00000000 		.long	.LASF38
 1423 0239 0E       		.byte	0xe
 1424 023a 7C01     		.value	0x17c
 1425 023c 02       		.byte	0x2
 1426 023d 00000000 		.long	.LASF40
 1427 0241 36600000 		.long	0x6036
 1428 0245 6B020000 		.long	0x26b
 1429 0249 0A       		.uleb128 0xa
 1430 024a 5F494900 		.string	"_II"
 1431 024e 36600000 		.long	0x6036
 1432 0252 0A       		.uleb128 0xa
 1433 0253 5F4F4900 		.string	"_OI"
 1434 0257 36600000 		.long	0x6036
 1435 025b 01       		.uleb128 0x1
 1436 025c 36600000 		.long	0x6036
 1437 0260 01       		.uleb128 0x1
 1438 0261 36600000 		.long	0x6036
 1439 0265 01       		.uleb128 0x1
 1440 0266 36600000 		.long	0x6036
 1441 026a 00       		.byte	0
 1442 026b 19       		.uleb128 0x19
 1443 026c 00000000 		.long	.LASF34
 1444 0270 783F0000 		.long	0x3f78
 1445 0274 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 166


 1446 0275 19       		.uleb128 0x19
 1447 0276 00000000 		.long	.LASF35
 1448 027a 783F0000 		.long	0x3f78
 1449 027e 00       		.byte	0
 1450 027f 12       		.uleb128 0x12
 1451 0280 00000000 		.long	.LASF36
 1452 0284 FD010000 		.long	0x1fd
 1453 0288 00       		.byte	0
 1454 0289 25       		.uleb128 0x25
 1455 028a 00000000 		.long	.LASF37
 1456 028e 01       		.byte	0x1
 1457 028f 0E       		.byte	0xe
 1458 0290 B402     		.value	0x2b4
 1459 0292 EB020000 		.long	0x2eb
 1460 0296 14       		.uleb128 0x14
 1461 0297 00000000 		.long	.LASF39
 1462 029b 0E       		.byte	0xe
 1463 029c B902     		.value	0x2b9
 1464 029e 02       		.byte	0x2
 1465 029f 00000000 		.long	.LASF41
 1466 02a3 36600000 		.long	0x6036
 1467 02a7 CD020000 		.long	0x2cd
 1468 02ab 12       		.uleb128 0x12
 1469 02ac 00000000 		.long	.LASF42
 1470 02b0 36600000 		.long	0x6036
 1471 02b4 12       		.uleb128 0x12
 1472 02b5 00000000 		.long	.LASF43
 1473 02b9 36600000 		.long	0x6036
 1474 02bd 01       		.uleb128 0x1
 1475 02be 36600000 		.long	0x6036
 1476 02c2 01       		.uleb128 0x1
 1477 02c3 36600000 		.long	0x6036
 1478 02c7 01       		.uleb128 0x1
 1479 02c8 36600000 		.long	0x6036
 1480 02cc 00       		.byte	0
 1481 02cd 19       		.uleb128 0x19
 1482 02ce 00000000 		.long	.LASF34
 1483 02d2 783F0000 		.long	0x3f78
 1484 02d6 00       		.byte	0
 1485 02d7 19       		.uleb128 0x19
 1486 02d8 00000000 		.long	.LASF35
 1487 02dc 783F0000 		.long	0x3f78
 1488 02e0 00       		.byte	0
 1489 02e1 12       		.uleb128 0x12
 1490 02e2 00000000 		.long	.LASF36
 1491 02e6 FD010000 		.long	0x1fd
 1492 02ea 00       		.byte	0
 1493 02eb 03       		.uleb128 0x3
 1494 02ec 18       		.byte	0x18
 1495 02ed 40       		.byte	0x40
 1496 02ee 0B       		.byte	0xb
 1497 02ef 96440000 		.long	0x4496
 1498 02f3 03       		.uleb128 0x3
 1499 02f4 18       		.byte	0x18
 1500 02f5 8D       		.byte	0x8d
 1501 02f6 0B       		.byte	0xb
 1502 02f7 17440000 		.long	0x4417
GAS LISTING x64lin/../common/event.s 			page 167


 1503 02fb 03       		.uleb128 0x3
 1504 02fc 18       		.byte	0x18
 1505 02fd 8F       		.byte	0x8f
 1506 02fe 0B       		.byte	0xb
 1507 02ff 4B460000 		.long	0x464b
 1508 0303 03       		.uleb128 0x3
 1509 0304 18       		.byte	0x18
 1510 0305 90       		.byte	0x90
 1511 0306 0B       		.byte	0xb
 1512 0307 62460000 		.long	0x4662
 1513 030b 03       		.uleb128 0x3
 1514 030c 18       		.byte	0x18
 1515 030d 91       		.byte	0x91
 1516 030e 0B       		.byte	0xb
 1517 030f 7E460000 		.long	0x467e
 1518 0313 03       		.uleb128 0x3
 1519 0314 18       		.byte	0x18
 1520 0315 92       		.byte	0x92
 1521 0316 0B       		.byte	0xb
 1522 0317 A4460000 		.long	0x46a4
 1523 031b 03       		.uleb128 0x3
 1524 031c 18       		.byte	0x18
 1525 031d 93       		.byte	0x93
 1526 031e 0B       		.byte	0xb
 1527 031f C0460000 		.long	0x46c0
 1528 0323 03       		.uleb128 0x3
 1529 0324 18       		.byte	0x18
 1530 0325 94       		.byte	0x94
 1531 0326 0B       		.byte	0xb
 1532 0327 E1460000 		.long	0x46e1
 1533 032b 03       		.uleb128 0x3
 1534 032c 18       		.byte	0x18
 1535 032d 95       		.byte	0x95
 1536 032e 0B       		.byte	0xb
 1537 032f FD460000 		.long	0x46fd
 1538 0333 03       		.uleb128 0x3
 1539 0334 18       		.byte	0x18
 1540 0335 96       		.byte	0x96
 1541 0336 0B       		.byte	0xb
 1542 0337 1A470000 		.long	0x471a
 1543 033b 03       		.uleb128 0x3
 1544 033c 18       		.byte	0x18
 1545 033d 97       		.byte	0x97
 1546 033e 0B       		.byte	0xb
 1547 033f 3B470000 		.long	0x473b
 1548 0343 03       		.uleb128 0x3
 1549 0344 18       		.byte	0x18
 1550 0345 98       		.byte	0x98
 1551 0346 0B       		.byte	0xb
 1552 0347 52470000 		.long	0x4752
 1553 034b 03       		.uleb128 0x3
 1554 034c 18       		.byte	0x18
 1555 034d 99       		.byte	0x99
 1556 034e 0B       		.byte	0xb
 1557 034f 5F470000 		.long	0x475f
 1558 0353 03       		.uleb128 0x3
 1559 0354 18       		.byte	0x18
GAS LISTING x64lin/../common/event.s 			page 168


 1560 0355 9A       		.byte	0x9a
 1561 0356 0B       		.byte	0xb
 1562 0357 85470000 		.long	0x4785
 1563 035b 03       		.uleb128 0x3
 1564 035c 18       		.byte	0x18
 1565 035d 9B       		.byte	0x9b
 1566 035e 0B       		.byte	0xb
 1567 035f AB470000 		.long	0x47ab
 1568 0363 03       		.uleb128 0x3
 1569 0364 18       		.byte	0x18
 1570 0365 9C       		.byte	0x9c
 1571 0366 0B       		.byte	0xb
 1572 0367 C7470000 		.long	0x47c7
 1573 036b 03       		.uleb128 0x3
 1574 036c 18       		.byte	0x18
 1575 036d 9D       		.byte	0x9d
 1576 036e 0B       		.byte	0xb
 1577 036f F2470000 		.long	0x47f2
 1578 0373 03       		.uleb128 0x3
 1579 0374 18       		.byte	0x18
 1580 0375 9E       		.byte	0x9e
 1581 0376 0B       		.byte	0xb
 1582 0377 0E480000 		.long	0x480e
 1583 037b 03       		.uleb128 0x3
 1584 037c 18       		.byte	0x18
 1585 037d A0       		.byte	0xa0
 1586 037e 0B       		.byte	0xb
 1587 037f 25480000 		.long	0x4825
 1588 0383 03       		.uleb128 0x3
 1589 0384 18       		.byte	0x18
 1590 0385 A2       		.byte	0xa2
 1591 0386 0B       		.byte	0xb
 1592 0387 46480000 		.long	0x4846
 1593 038b 03       		.uleb128 0x3
 1594 038c 18       		.byte	0x18
 1595 038d A3       		.byte	0xa3
 1596 038e 0B       		.byte	0xb
 1597 038f 67480000 		.long	0x4867
 1598 0393 03       		.uleb128 0x3
 1599 0394 18       		.byte	0x18
 1600 0395 A4       		.byte	0xa4
 1601 0396 0B       		.byte	0xb
 1602 0397 83480000 		.long	0x4883
 1603 039b 03       		.uleb128 0x3
 1604 039c 18       		.byte	0x18
 1605 039d A6       		.byte	0xa6
 1606 039e 0B       		.byte	0xb
 1607 039f A9480000 		.long	0x48a9
 1608 03a3 03       		.uleb128 0x3
 1609 03a4 18       		.byte	0x18
 1610 03a5 A9       		.byte	0xa9
 1611 03a6 0B       		.byte	0xb
 1612 03a7 CE480000 		.long	0x48ce
 1613 03ab 03       		.uleb128 0x3
 1614 03ac 18       		.byte	0x18
 1615 03ad AC       		.byte	0xac
 1616 03ae 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 169


 1617 03af F4480000 		.long	0x48f4
 1618 03b3 03       		.uleb128 0x3
 1619 03b4 18       		.byte	0x18
 1620 03b5 AE       		.byte	0xae
 1621 03b6 0B       		.byte	0xb
 1622 03b7 19490000 		.long	0x4919
 1623 03bb 03       		.uleb128 0x3
 1624 03bc 18       		.byte	0x18
 1625 03bd B0       		.byte	0xb0
 1626 03be 0B       		.byte	0xb
 1627 03bf 35490000 		.long	0x4935
 1628 03c3 03       		.uleb128 0x3
 1629 03c4 18       		.byte	0x18
 1630 03c5 B2       		.byte	0xb2
 1631 03c6 0B       		.byte	0xb
 1632 03c7 55490000 		.long	0x4955
 1633 03cb 03       		.uleb128 0x3
 1634 03cc 18       		.byte	0x18
 1635 03cd B3       		.byte	0xb3
 1636 03ce 0B       		.byte	0xb
 1637 03cf 7B490000 		.long	0x497b
 1638 03d3 03       		.uleb128 0x3
 1639 03d4 18       		.byte	0x18
 1640 03d5 B4       		.byte	0xb4
 1641 03d6 0B       		.byte	0xb
 1642 03d7 96490000 		.long	0x4996
 1643 03db 03       		.uleb128 0x3
 1644 03dc 18       		.byte	0x18
 1645 03dd B5       		.byte	0xb5
 1646 03de 0B       		.byte	0xb
 1647 03df B1490000 		.long	0x49b1
 1648 03e3 03       		.uleb128 0x3
 1649 03e4 18       		.byte	0x18
 1650 03e5 B6       		.byte	0xb6
 1651 03e6 0B       		.byte	0xb
 1652 03e7 CC490000 		.long	0x49cc
 1653 03eb 03       		.uleb128 0x3
 1654 03ec 18       		.byte	0x18
 1655 03ed B7       		.byte	0xb7
 1656 03ee 0B       		.byte	0xb
 1657 03ef E7490000 		.long	0x49e7
 1658 03f3 03       		.uleb128 0x3
 1659 03f4 18       		.byte	0x18
 1660 03f5 B8       		.byte	0xb8
 1661 03f6 0B       		.byte	0xb
 1662 03f7 024A0000 		.long	0x4a02
 1663 03fb 03       		.uleb128 0x3
 1664 03fc 18       		.byte	0x18
 1665 03fd B9       		.byte	0xb9
 1666 03fe 0B       		.byte	0xb
 1667 03ff CF4A0000 		.long	0x4acf
 1668 0403 03       		.uleb128 0x3
 1669 0404 18       		.byte	0x18
 1670 0405 BA       		.byte	0xba
 1671 0406 0B       		.byte	0xb
 1672 0407 E54A0000 		.long	0x4ae5
 1673 040b 03       		.uleb128 0x3
GAS LISTING x64lin/../common/event.s 			page 170


 1674 040c 18       		.byte	0x18
 1675 040d BB       		.byte	0xbb
 1676 040e 0B       		.byte	0xb
 1677 040f 054B0000 		.long	0x4b05
 1678 0413 03       		.uleb128 0x3
 1679 0414 18       		.byte	0x18
 1680 0415 BC       		.byte	0xbc
 1681 0416 0B       		.byte	0xb
 1682 0417 254B0000 		.long	0x4b25
 1683 041b 03       		.uleb128 0x3
 1684 041c 18       		.byte	0x18
 1685 041d BD       		.byte	0xbd
 1686 041e 0B       		.byte	0xb
 1687 041f 454B0000 		.long	0x4b45
 1688 0423 03       		.uleb128 0x3
 1689 0424 18       		.byte	0x18
 1690 0425 BE       		.byte	0xbe
 1691 0426 0B       		.byte	0xb
 1692 0427 704B0000 		.long	0x4b70
 1693 042b 03       		.uleb128 0x3
 1694 042c 18       		.byte	0x18
 1695 042d BF       		.byte	0xbf
 1696 042e 0B       		.byte	0xb
 1697 042f 8B4B0000 		.long	0x4b8b
 1698 0433 03       		.uleb128 0x3
 1699 0434 18       		.byte	0x18
 1700 0435 C1       		.byte	0xc1
 1701 0436 0B       		.byte	0xb
 1702 0437 AC4B0000 		.long	0x4bac
 1703 043b 03       		.uleb128 0x3
 1704 043c 18       		.byte	0x18
 1705 043d C3       		.byte	0xc3
 1706 043e 0B       		.byte	0xb
 1707 043f C84B0000 		.long	0x4bc8
 1708 0443 03       		.uleb128 0x3
 1709 0444 18       		.byte	0x18
 1710 0445 C4       		.byte	0xc4
 1711 0446 0B       		.byte	0xb
 1712 0447 E84B0000 		.long	0x4be8
 1713 044b 03       		.uleb128 0x3
 1714 044c 18       		.byte	0x18
 1715 044d C5       		.byte	0xc5
 1716 044e 0B       		.byte	0xb
 1717 044f 094C0000 		.long	0x4c09
 1718 0453 03       		.uleb128 0x3
 1719 0454 18       		.byte	0x18
 1720 0455 C6       		.byte	0xc6
 1721 0456 0B       		.byte	0xb
 1722 0457 2A4C0000 		.long	0x4c2a
 1723 045b 03       		.uleb128 0x3
 1724 045c 18       		.byte	0x18
 1725 045d C7       		.byte	0xc7
 1726 045e 0B       		.byte	0xb
 1727 045f 4A4C0000 		.long	0x4c4a
 1728 0463 03       		.uleb128 0x3
 1729 0464 18       		.byte	0x18
 1730 0465 C8       		.byte	0xc8
GAS LISTING x64lin/../common/event.s 			page 171


 1731 0466 0B       		.byte	0xb
 1732 0467 614C0000 		.long	0x4c61
 1733 046b 03       		.uleb128 0x3
 1734 046c 18       		.byte	0x18
 1735 046d C9       		.byte	0xc9
 1736 046e 0B       		.byte	0xb
 1737 046f 824C0000 		.long	0x4c82
 1738 0473 03       		.uleb128 0x3
 1739 0474 18       		.byte	0x18
 1740 0475 CA       		.byte	0xca
 1741 0476 0B       		.byte	0xb
 1742 0477 A24C0000 		.long	0x4ca2
 1743 047b 03       		.uleb128 0x3
 1744 047c 18       		.byte	0x18
 1745 047d CB       		.byte	0xcb
 1746 047e 0B       		.byte	0xb
 1747 047f C24C0000 		.long	0x4cc2
 1748 0483 03       		.uleb128 0x3
 1749 0484 18       		.byte	0x18
 1750 0485 CC       		.byte	0xcc
 1751 0486 0B       		.byte	0xb
 1752 0487 E24C0000 		.long	0x4ce2
 1753 048b 03       		.uleb128 0x3
 1754 048c 18       		.byte	0x18
 1755 048d CD       		.byte	0xcd
 1756 048e 0B       		.byte	0xb
 1757 048f FA4C0000 		.long	0x4cfa
 1758 0493 03       		.uleb128 0x3
 1759 0494 18       		.byte	0x18
 1760 0495 CE       		.byte	0xce
 1761 0496 0B       		.byte	0xb
 1762 0497 164D0000 		.long	0x4d16
 1763 049b 03       		.uleb128 0x3
 1764 049c 18       		.byte	0x18
 1765 049d CE       		.byte	0xce
 1766 049e 0B       		.byte	0xb
 1767 049f 354D0000 		.long	0x4d35
 1768 04a3 03       		.uleb128 0x3
 1769 04a4 18       		.byte	0x18
 1770 04a5 CF       		.byte	0xcf
 1771 04a6 0B       		.byte	0xb
 1772 04a7 544D0000 		.long	0x4d54
 1773 04ab 03       		.uleb128 0x3
 1774 04ac 18       		.byte	0x18
 1775 04ad CF       		.byte	0xcf
 1776 04ae 0B       		.byte	0xb
 1777 04af 734D0000 		.long	0x4d73
 1778 04b3 03       		.uleb128 0x3
 1779 04b4 18       		.byte	0x18
 1780 04b5 D0       		.byte	0xd0
 1781 04b6 0B       		.byte	0xb
 1782 04b7 924D0000 		.long	0x4d92
 1783 04bb 03       		.uleb128 0x3
 1784 04bc 18       		.byte	0x18
 1785 04bd D0       		.byte	0xd0
 1786 04be 0B       		.byte	0xb
 1787 04bf B14D0000 		.long	0x4db1
GAS LISTING x64lin/../common/event.s 			page 172


 1788 04c3 03       		.uleb128 0x3
 1789 04c4 18       		.byte	0x18
 1790 04c5 D1       		.byte	0xd1
 1791 04c6 0B       		.byte	0xb
 1792 04c7 D04D0000 		.long	0x4dd0
 1793 04cb 03       		.uleb128 0x3
 1794 04cc 18       		.byte	0x18
 1795 04cd D1       		.byte	0xd1
 1796 04ce 0B       		.byte	0xb
 1797 04cf EF4D0000 		.long	0x4def
 1798 04d3 03       		.uleb128 0x3
 1799 04d4 18       		.byte	0x18
 1800 04d5 D2       		.byte	0xd2
 1801 04d6 0B       		.byte	0xb
 1802 04d7 0E4E0000 		.long	0x4e0e
 1803 04db 03       		.uleb128 0x3
 1804 04dc 18       		.byte	0x18
 1805 04dd D2       		.byte	0xd2
 1806 04de 0B       		.byte	0xb
 1807 04df 324E0000 		.long	0x4e32
 1808 04e3 1B       		.uleb128 0x1b
 1809 04e4 18       		.byte	0x18
 1810 04e5 0B01     		.value	0x10b
 1811 04e7 16       		.byte	0x16
 1812 04e8 564E0000 		.long	0x4e56
 1813 04ec 1B       		.uleb128 0x1b
 1814 04ed 18       		.byte	0x18
 1815 04ee 0C01     		.value	0x10c
 1816 04f0 16       		.byte	0x16
 1817 04f1 724E0000 		.long	0x4e72
 1818 04f5 1B       		.uleb128 0x1b
 1819 04f6 18       		.byte	0x18
 1820 04f7 0D01     		.value	0x10d
 1821 04f9 16       		.byte	0x16
 1822 04fa 934E0000 		.long	0x4e93
 1823 04fe 1B       		.uleb128 0x1b
 1824 04ff 18       		.byte	0x18
 1825 0500 1B01     		.value	0x11b
 1826 0502 0E       		.byte	0xe
 1827 0503 AC4B0000 		.long	0x4bac
 1828 0507 1B       		.uleb128 0x1b
 1829 0508 18       		.byte	0x18
 1830 0509 1E01     		.value	0x11e
 1831 050b 0E       		.byte	0xe
 1832 050c A9480000 		.long	0x48a9
 1833 0510 1B       		.uleb128 0x1b
 1834 0511 18       		.byte	0x18
 1835 0512 2101     		.value	0x121
 1836 0514 0E       		.byte	0xe
 1837 0515 F4480000 		.long	0x48f4
 1838 0519 1B       		.uleb128 0x1b
 1839 051a 18       		.byte	0x18
 1840 051b 2401     		.value	0x124
 1841 051d 0E       		.byte	0xe
 1842 051e 35490000 		.long	0x4935
 1843 0522 1B       		.uleb128 0x1b
 1844 0523 18       		.byte	0x18
GAS LISTING x64lin/../common/event.s 			page 173


 1845 0524 2801     		.value	0x128
 1846 0526 0E       		.byte	0xe
 1847 0527 564E0000 		.long	0x4e56
 1848 052b 1B       		.uleb128 0x1b
 1849 052c 18       		.byte	0x18
 1850 052d 2901     		.value	0x129
 1851 052f 0E       		.byte	0xe
 1852 0530 724E0000 		.long	0x4e72
 1853 0534 1B       		.uleb128 0x1b
 1854 0535 18       		.byte	0x18
 1855 0536 2A01     		.value	0x12a
 1856 0538 0E       		.byte	0xe
 1857 0539 934E0000 		.long	0x4e93
 1858 053d 18       		.uleb128 0x18
 1859 053e 00000000 		.long	.LASF44
 1860 0542 10       		.byte	0x10
 1861 0543 1901     		.value	0x119
 1862 0545 14       		.byte	0x14
 1863 0546 59430000 		.long	0x4359
 1864 054a 08       		.uleb128 0x8
 1865 054b 3D050000 		.long	0x53d
 1866 054f 25       		.uleb128 0x25
 1867 0550 00000000 		.long	.LASF45
 1868 0554 01       		.byte	0x1
 1869 0555 0E       		.byte	0xe
 1870 0556 9F01     		.value	0x19f
 1871 0558 A8050000 		.long	0x5a8
 1872 055c 14       		.uleb128 0x14
 1873 055d 00000000 		.long	.LASF46
 1874 0561 0E       		.byte	0xe
 1875 0562 A401     		.value	0x1a4
 1876 0564 02       		.byte	0x2
 1877 0565 00000000 		.long	.LASF47
 1878 0569 36600000 		.long	0x6036
 1879 056d 8A050000 		.long	0x58a
 1880 0571 0A       		.uleb128 0xa
 1881 0572 5F547000 		.string	"_Tp"
 1882 0576 E65F0000 		.long	0x5fe6
 1883 057a 01       		.uleb128 0x1
 1884 057b DF620000 		.long	0x62df
 1885 057f 01       		.uleb128 0x1
 1886 0580 DF620000 		.long	0x62df
 1887 0584 01       		.uleb128 0x1
 1888 0585 36600000 		.long	0x6036
 1889 0589 00       		.byte	0
 1890 058a 19       		.uleb128 0x19
 1891 058b 00000000 		.long	.LASF34
 1892 058f 783F0000 		.long	0x3f78
 1893 0593 00       		.byte	0
 1894 0594 19       		.uleb128 0x19
 1895 0595 00000000 		.long	.LASF35
 1896 0599 783F0000 		.long	0x3f78
 1897 059d 01       		.byte	0x1
 1898 059e 12       		.uleb128 0x12
 1899 059f 00000000 		.long	.LASF36
 1900 05a3 FD010000 		.long	0x1fd
 1901 05a7 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 174


 1902 05a8 03       		.uleb128 0x3
 1903 05a9 19       		.byte	0x19
 1904 05aa 2F       		.byte	0x2f
 1905 05ab 0B       		.byte	0xb
 1906 05ac D94F0000 		.long	0x4fd9
 1907 05b0 03       		.uleb128 0x3
 1908 05b1 19       		.byte	0x19
 1909 05b2 30       		.byte	0x30
 1910 05b3 0B       		.byte	0xb
 1911 05b4 E54F0000 		.long	0x4fe5
 1912 05b8 03       		.uleb128 0x3
 1913 05b9 19       		.byte	0x19
 1914 05ba 31       		.byte	0x31
 1915 05bb 0B       		.byte	0xb
 1916 05bc F14F0000 		.long	0x4ff1
 1917 05c0 03       		.uleb128 0x3
 1918 05c1 19       		.byte	0x19
 1919 05c2 32       		.byte	0x32
 1920 05c3 0B       		.byte	0xb
 1921 05c4 FD4F0000 		.long	0x4ffd
 1922 05c8 03       		.uleb128 0x3
 1923 05c9 19       		.byte	0x19
 1924 05ca 34       		.byte	0x34
 1925 05cb 0B       		.byte	0xb
 1926 05cc 99500000 		.long	0x5099
 1927 05d0 03       		.uleb128 0x3
 1928 05d1 19       		.byte	0x19
 1929 05d2 35       		.byte	0x35
 1930 05d3 0B       		.byte	0xb
 1931 05d4 A5500000 		.long	0x50a5
 1932 05d8 03       		.uleb128 0x3
 1933 05d9 19       		.byte	0x19
 1934 05da 36       		.byte	0x36
 1935 05db 0B       		.byte	0xb
 1936 05dc B1500000 		.long	0x50b1
 1937 05e0 03       		.uleb128 0x3
 1938 05e1 19       		.byte	0x19
 1939 05e2 37       		.byte	0x37
 1940 05e3 0B       		.byte	0xb
 1941 05e4 BD500000 		.long	0x50bd
 1942 05e8 03       		.uleb128 0x3
 1943 05e9 19       		.byte	0x19
 1944 05ea 39       		.byte	0x39
 1945 05eb 0B       		.byte	0xb
 1946 05ec 39500000 		.long	0x5039
 1947 05f0 03       		.uleb128 0x3
 1948 05f1 19       		.byte	0x19
 1949 05f2 3A       		.byte	0x3a
 1950 05f3 0B       		.byte	0xb
 1951 05f4 45500000 		.long	0x5045
 1952 05f8 03       		.uleb128 0x3
 1953 05f9 19       		.byte	0x19
 1954 05fa 3B       		.byte	0x3b
 1955 05fb 0B       		.byte	0xb
 1956 05fc 51500000 		.long	0x5051
 1957 0600 03       		.uleb128 0x3
 1958 0601 19       		.byte	0x19
GAS LISTING x64lin/../common/event.s 			page 175


 1959 0602 3C       		.byte	0x3c
 1960 0603 0B       		.byte	0xb
 1961 0604 5D500000 		.long	0x505d
 1962 0608 03       		.uleb128 0x3
 1963 0609 19       		.byte	0x19
 1964 060a 3E       		.byte	0x3e
 1965 060b 0B       		.byte	0xb
 1966 060c 11510000 		.long	0x5111
 1967 0610 03       		.uleb128 0x3
 1968 0611 19       		.byte	0x19
 1969 0612 3F       		.byte	0x3f
 1970 0613 0B       		.byte	0xb
 1971 0614 F9500000 		.long	0x50f9
 1972 0618 03       		.uleb128 0x3
 1973 0619 19       		.byte	0x19
 1974 061a 41       		.byte	0x41
 1975 061b 0B       		.byte	0xb
 1976 061c 09500000 		.long	0x5009
 1977 0620 03       		.uleb128 0x3
 1978 0621 19       		.byte	0x19
 1979 0622 42       		.byte	0x42
 1980 0623 0B       		.byte	0xb
 1981 0624 15500000 		.long	0x5015
 1982 0628 03       		.uleb128 0x3
 1983 0629 19       		.byte	0x19
 1984 062a 43       		.byte	0x43
 1985 062b 0B       		.byte	0xb
 1986 062c 21500000 		.long	0x5021
 1987 0630 03       		.uleb128 0x3
 1988 0631 19       		.byte	0x19
 1989 0632 44       		.byte	0x44
 1990 0633 0B       		.byte	0xb
 1991 0634 2D500000 		.long	0x502d
 1992 0638 03       		.uleb128 0x3
 1993 0639 19       		.byte	0x19
 1994 063a 46       		.byte	0x46
 1995 063b 0B       		.byte	0xb
 1996 063c C9500000 		.long	0x50c9
 1997 0640 03       		.uleb128 0x3
 1998 0641 19       		.byte	0x19
 1999 0642 47       		.byte	0x47
 2000 0643 0B       		.byte	0xb
 2001 0644 D5500000 		.long	0x50d5
 2002 0648 03       		.uleb128 0x3
 2003 0649 19       		.byte	0x19
 2004 064a 48       		.byte	0x48
 2005 064b 0B       		.byte	0xb
 2006 064c E1500000 		.long	0x50e1
 2007 0650 03       		.uleb128 0x3
 2008 0651 19       		.byte	0x19
 2009 0652 49       		.byte	0x49
 2010 0653 0B       		.byte	0xb
 2011 0654 ED500000 		.long	0x50ed
 2012 0658 03       		.uleb128 0x3
 2013 0659 19       		.byte	0x19
 2014 065a 4B       		.byte	0x4b
 2015 065b 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 176


 2016 065c 69500000 		.long	0x5069
 2017 0660 03       		.uleb128 0x3
 2018 0661 19       		.byte	0x19
 2019 0662 4C       		.byte	0x4c
 2020 0663 0B       		.byte	0xb
 2021 0664 75500000 		.long	0x5075
 2022 0668 03       		.uleb128 0x3
 2023 0669 19       		.byte	0x19
 2024 066a 4D       		.byte	0x4d
 2025 066b 0B       		.byte	0xb
 2026 066c 81500000 		.long	0x5081
 2027 0670 03       		.uleb128 0x3
 2028 0671 19       		.byte	0x19
 2029 0672 4E       		.byte	0x4e
 2030 0673 0B       		.byte	0xb
 2031 0674 8D500000 		.long	0x508d
 2032 0678 03       		.uleb128 0x3
 2033 0679 19       		.byte	0x19
 2034 067a 50       		.byte	0x50
 2035 067b 0B       		.byte	0xb
 2036 067c 1D510000 		.long	0x511d
 2037 0680 03       		.uleb128 0x3
 2038 0681 19       		.byte	0x19
 2039 0682 51       		.byte	0x51
 2040 0683 0B       		.byte	0xb
 2041 0684 05510000 		.long	0x5105
 2042 0688 06       		.uleb128 0x6
 2043 0689 00000000 		.long	.LASF48
 2044 068d 0F       		.byte	0xf
 2045 068e 53       		.byte	0x53
 2046 068f 09       		.byte	0x9
 2047 0690 A7000000 		.long	0xa7
 2048 0694 03       		.uleb128 0x3
 2049 0695 1A       		.byte	0x1a
 2050 0696 35       		.byte	0x35
 2051 0697 0B       		.byte	0xb
 2052 0698 30510000 		.long	0x5130
 2053 069c 03       		.uleb128 0x3
 2054 069d 1A       		.byte	0x1a
 2055 069e 36       		.byte	0x36
 2056 069f 0B       		.byte	0xb
 2057 06a0 76520000 		.long	0x5276
 2058 06a4 03       		.uleb128 0x3
 2059 06a5 1A       		.byte	0x1a
 2060 06a6 37       		.byte	0x37
 2061 06a7 0B       		.byte	0xb
 2062 06a8 91520000 		.long	0x5291
 2063 06ac 03       		.uleb128 0x3
 2064 06ad 1B       		.byte	0x1b
 2065 06ae 7F       		.byte	0x7f
 2066 06af 0B       		.byte	0xb
 2067 06b0 C9520000 		.long	0x52c9
 2068 06b4 03       		.uleb128 0x3
 2069 06b5 1B       		.byte	0x1b
 2070 06b6 80       		.byte	0x80
 2071 06b7 0B       		.byte	0xb
 2072 06b8 FC520000 		.long	0x52fc
GAS LISTING x64lin/../common/event.s 			page 177


 2073 06bc 03       		.uleb128 0x3
 2074 06bd 1B       		.byte	0x1b
 2075 06be 86       		.byte	0x86
 2076 06bf 0B       		.byte	0xb
 2077 06c0 CA550000 		.long	0x55ca
 2078 06c4 03       		.uleb128 0x3
 2079 06c5 1B       		.byte	0x1b
 2080 06c6 89       		.byte	0x89
 2081 06c7 0B       		.byte	0xb
 2082 06c8 E8550000 		.long	0x55e8
 2083 06cc 03       		.uleb128 0x3
 2084 06cd 1B       		.byte	0x1b
 2085 06ce 8C       		.byte	0x8c
 2086 06cf 0B       		.byte	0xb
 2087 06d0 03560000 		.long	0x5603
 2088 06d4 03       		.uleb128 0x3
 2089 06d5 1B       		.byte	0x1b
 2090 06d6 8D       		.byte	0x8d
 2091 06d7 0B       		.byte	0xb
 2092 06d8 19560000 		.long	0x5619
 2093 06dc 03       		.uleb128 0x3
 2094 06dd 1B       		.byte	0x1b
 2095 06de 8E       		.byte	0x8e
 2096 06df 0B       		.byte	0xb
 2097 06e0 30560000 		.long	0x5630
 2098 06e4 03       		.uleb128 0x3
 2099 06e5 1B       		.byte	0x1b
 2100 06e6 8F       		.byte	0x8f
 2101 06e7 0B       		.byte	0xb
 2102 06e8 47560000 		.long	0x5647
 2103 06ec 03       		.uleb128 0x3
 2104 06ed 1B       		.byte	0x1b
 2105 06ee 91       		.byte	0x91
 2106 06ef 0B       		.byte	0xb
 2107 06f0 71560000 		.long	0x5671
 2108 06f4 03       		.uleb128 0x3
 2109 06f5 1B       		.byte	0x1b
 2110 06f6 94       		.byte	0x94
 2111 06f7 0B       		.byte	0xb
 2112 06f8 8E560000 		.long	0x568e
 2113 06fc 03       		.uleb128 0x3
 2114 06fd 1B       		.byte	0x1b
 2115 06fe 96       		.byte	0x96
 2116 06ff 0B       		.byte	0xb
 2117 0700 A5560000 		.long	0x56a5
 2118 0704 03       		.uleb128 0x3
 2119 0705 1B       		.byte	0x1b
 2120 0706 99       		.byte	0x99
 2121 0707 0B       		.byte	0xb
 2122 0708 C1560000 		.long	0x56c1
 2123 070c 03       		.uleb128 0x3
 2124 070d 1B       		.byte	0x1b
 2125 070e 9A       		.byte	0x9a
 2126 070f 0B       		.byte	0xb
 2127 0710 DD560000 		.long	0x56dd
 2128 0714 03       		.uleb128 0x3
 2129 0715 1B       		.byte	0x1b
GAS LISTING x64lin/../common/event.s 			page 178


 2130 0716 9B       		.byte	0x9b
 2131 0717 0B       		.byte	0xb
 2132 0718 FD560000 		.long	0x56fd
 2133 071c 03       		.uleb128 0x3
 2134 071d 1B       		.byte	0x1b
 2135 071e 9D       		.byte	0x9d
 2136 071f 0B       		.byte	0xb
 2137 0720 1E570000 		.long	0x571e
 2138 0724 03       		.uleb128 0x3
 2139 0725 1B       		.byte	0x1b
 2140 0726 A0       		.byte	0xa0
 2141 0727 0B       		.byte	0xb
 2142 0728 3F570000 		.long	0x573f
 2143 072c 03       		.uleb128 0x3
 2144 072d 1B       		.byte	0x1b
 2145 072e A3       		.byte	0xa3
 2146 072f 0B       		.byte	0xb
 2147 0730 53570000 		.long	0x5753
 2148 0734 03       		.uleb128 0x3
 2149 0735 1B       		.byte	0x1b
 2150 0736 A5       		.byte	0xa5
 2151 0737 0B       		.byte	0xb
 2152 0738 60570000 		.long	0x5760
 2153 073c 03       		.uleb128 0x3
 2154 073d 1B       		.byte	0x1b
 2155 073e A6       		.byte	0xa6
 2156 073f 0B       		.byte	0xb
 2157 0740 72570000 		.long	0x5772
 2158 0744 03       		.uleb128 0x3
 2159 0745 1B       		.byte	0x1b
 2160 0746 A7       		.byte	0xa7
 2161 0747 0B       		.byte	0xb
 2162 0748 92570000 		.long	0x5792
 2163 074c 03       		.uleb128 0x3
 2164 074d 1B       		.byte	0x1b
 2165 074e A8       		.byte	0xa8
 2166 074f 0B       		.byte	0xb
 2167 0750 B2570000 		.long	0x57b2
 2168 0754 03       		.uleb128 0x3
 2169 0755 1B       		.byte	0x1b
 2170 0756 A9       		.byte	0xa9
 2171 0757 0B       		.byte	0xb
 2172 0758 D2570000 		.long	0x57d2
 2173 075c 03       		.uleb128 0x3
 2174 075d 1B       		.byte	0x1b
 2175 075e AB       		.byte	0xab
 2176 075f 0B       		.byte	0xb
 2177 0760 E9570000 		.long	0x57e9
 2178 0764 03       		.uleb128 0x3
 2179 0765 1B       		.byte	0x1b
 2180 0766 AC       		.byte	0xac
 2181 0767 0B       		.byte	0xb
 2182 0768 09580000 		.long	0x5809
 2183 076c 03       		.uleb128 0x3
 2184 076d 1B       		.byte	0x1b
 2185 076e F0       		.byte	0xf0
 2186 076f 16       		.byte	0x16
GAS LISTING x64lin/../common/event.s 			page 179


 2187 0770 2F530000 		.long	0x532f
 2188 0774 03       		.uleb128 0x3
 2189 0775 1B       		.byte	0x1b
 2190 0776 F5       		.byte	0xf5
 2191 0777 16       		.byte	0x16
 2192 0778 E73F0000 		.long	0x3fe7
 2193 077c 03       		.uleb128 0x3
 2194 077d 1B       		.byte	0x1b
 2195 077e F6       		.byte	0xf6
 2196 077f 16       		.byte	0x16
 2197 0780 24580000 		.long	0x5824
 2198 0784 03       		.uleb128 0x3
 2199 0785 1B       		.byte	0x1b
 2200 0786 F8       		.byte	0xf8
 2201 0787 16       		.byte	0x16
 2202 0788 40580000 		.long	0x5840
 2203 078c 03       		.uleb128 0x3
 2204 078d 1B       		.byte	0x1b
 2205 078e F9       		.byte	0xf9
 2206 078f 16       		.byte	0x16
 2207 0790 97580000 		.long	0x5897
 2208 0794 03       		.uleb128 0x3
 2209 0795 1B       		.byte	0x1b
 2210 0796 FA       		.byte	0xfa
 2211 0797 16       		.byte	0x16
 2212 0798 57580000 		.long	0x5857
 2213 079c 03       		.uleb128 0x3
 2214 079d 1B       		.byte	0x1b
 2215 079e FB       		.byte	0xfb
 2216 079f 16       		.byte	0x16
 2217 07a0 77580000 		.long	0x5877
 2218 07a4 03       		.uleb128 0x3
 2219 07a5 1B       		.byte	0x1b
 2220 07a6 FC       		.byte	0xfc
 2221 07a7 16       		.byte	0x16
 2222 07a8 B2580000 		.long	0x58b2
 2223 07ac 18       		.uleb128 0x18
 2224 07ad 00000000 		.long	.LASF49
 2225 07b1 10       		.byte	0x10
 2226 07b2 1C01     		.value	0x11c
 2227 07b4 1D       		.byte	0x1d
 2228 07b5 F1580000 		.long	0x58f1
 2229 07b9 33       		.uleb128 0x33
 2230 07ba 00000000 		.long	.LASF50
 2231 07be 1C       		.byte	0x1c
 2232 07bf 30       		.byte	0x30
 2233 07c0 0B       		.byte	0xb
 2234 07c1 03       		.uleb128 0x3
 2235 07c2 1D       		.byte	0x1d
 2236 07c3 62       		.byte	0x62
 2237 07c4 0B       		.byte	0xb
 2238 07c5 3A460000 		.long	0x463a
 2239 07c9 03       		.uleb128 0x3
 2240 07ca 1D       		.byte	0x1d
 2241 07cb 63       		.byte	0x63
 2242 07cc 0B       		.byte	0xb
 2243 07cd 83590000 		.long	0x5983
GAS LISTING x64lin/../common/event.s 			page 180


 2244 07d1 03       		.uleb128 0x3
 2245 07d2 1D       		.byte	0x1d
 2246 07d3 65       		.byte	0x65
 2247 07d4 0B       		.byte	0xb
 2248 07d5 99590000 		.long	0x5999
 2249 07d9 03       		.uleb128 0x3
 2250 07da 1D       		.byte	0x1d
 2251 07db 66       		.byte	0x66
 2252 07dc 0B       		.byte	0xb
 2253 07dd AB590000 		.long	0x59ab
 2254 07e1 03       		.uleb128 0x3
 2255 07e2 1D       		.byte	0x1d
 2256 07e3 67       		.byte	0x67
 2257 07e4 0B       		.byte	0xb
 2258 07e5 C1590000 		.long	0x59c1
 2259 07e9 03       		.uleb128 0x3
 2260 07ea 1D       		.byte	0x1d
 2261 07eb 68       		.byte	0x68
 2262 07ec 0B       		.byte	0xb
 2263 07ed D8590000 		.long	0x59d8
 2264 07f1 03       		.uleb128 0x3
 2265 07f2 1D       		.byte	0x1d
 2266 07f3 69       		.byte	0x69
 2267 07f4 0B       		.byte	0xb
 2268 07f5 EF590000 		.long	0x59ef
 2269 07f9 03       		.uleb128 0x3
 2270 07fa 1D       		.byte	0x1d
 2271 07fb 6A       		.byte	0x6a
 2272 07fc 0B       		.byte	0xb
 2273 07fd 055A0000 		.long	0x5a05
 2274 0801 03       		.uleb128 0x3
 2275 0802 1D       		.byte	0x1d
 2276 0803 6B       		.byte	0x6b
 2277 0804 0B       		.byte	0xb
 2278 0805 1C5A0000 		.long	0x5a1c
 2279 0809 03       		.uleb128 0x3
 2280 080a 1D       		.byte	0x1d
 2281 080b 6C       		.byte	0x6c
 2282 080c 0B       		.byte	0xb
 2283 080d 3D5A0000 		.long	0x5a3d
 2284 0811 03       		.uleb128 0x3
 2285 0812 1D       		.byte	0x1d
 2286 0813 6D       		.byte	0x6d
 2287 0814 0B       		.byte	0xb
 2288 0815 5E5A0000 		.long	0x5a5e
 2289 0819 03       		.uleb128 0x3
 2290 081a 1D       		.byte	0x1d
 2291 081b 71       		.byte	0x71
 2292 081c 0B       		.byte	0xb
 2293 081d 7A5A0000 		.long	0x5a7a
 2294 0821 03       		.uleb128 0x3
 2295 0822 1D       		.byte	0x1d
 2296 0823 72       		.byte	0x72
 2297 0824 0B       		.byte	0xb
 2298 0825 A05A0000 		.long	0x5aa0
 2299 0829 03       		.uleb128 0x3
 2300 082a 1D       		.byte	0x1d
GAS LISTING x64lin/../common/event.s 			page 181


 2301 082b 74       		.byte	0x74
 2302 082c 0B       		.byte	0xb
 2303 082d C15A0000 		.long	0x5ac1
 2304 0831 03       		.uleb128 0x3
 2305 0832 1D       		.byte	0x1d
 2306 0833 75       		.byte	0x75
 2307 0834 0B       		.byte	0xb
 2308 0835 E25A0000 		.long	0x5ae2
 2309 0839 03       		.uleb128 0x3
 2310 083a 1D       		.byte	0x1d
 2311 083b 76       		.byte	0x76
 2312 083c 0B       		.byte	0xb
 2313 083d 035B0000 		.long	0x5b03
 2314 0841 03       		.uleb128 0x3
 2315 0842 1D       		.byte	0x1d
 2316 0843 78       		.byte	0x78
 2317 0844 0B       		.byte	0xb
 2318 0845 1A5B0000 		.long	0x5b1a
 2319 0849 03       		.uleb128 0x3
 2320 084a 1D       		.byte	0x1d
 2321 084b 79       		.byte	0x79
 2322 084c 0B       		.byte	0xb
 2323 084d 315B0000 		.long	0x5b31
 2324 0851 03       		.uleb128 0x3
 2325 0852 1D       		.byte	0x1d
 2326 0853 7E       		.byte	0x7e
 2327 0854 0B       		.byte	0xb
 2328 0855 3D5B0000 		.long	0x5b3d
 2329 0859 03       		.uleb128 0x3
 2330 085a 1D       		.byte	0x1d
 2331 085b 83       		.byte	0x83
 2332 085c 0B       		.byte	0xb
 2333 085d 4F5B0000 		.long	0x5b4f
 2334 0861 03       		.uleb128 0x3
 2335 0862 1D       		.byte	0x1d
 2336 0863 84       		.byte	0x84
 2337 0864 0B       		.byte	0xb
 2338 0865 655B0000 		.long	0x5b65
 2339 0869 03       		.uleb128 0x3
 2340 086a 1D       		.byte	0x1d
 2341 086b 85       		.byte	0x85
 2342 086c 0B       		.byte	0xb
 2343 086d 805B0000 		.long	0x5b80
 2344 0871 03       		.uleb128 0x3
 2345 0872 1D       		.byte	0x1d
 2346 0873 87       		.byte	0x87
 2347 0874 0B       		.byte	0xb
 2348 0875 925B0000 		.long	0x5b92
 2349 0879 03       		.uleb128 0x3
 2350 087a 1D       		.byte	0x1d
 2351 087b 88       		.byte	0x88
 2352 087c 0B       		.byte	0xb
 2353 087d A95B0000 		.long	0x5ba9
 2354 0881 03       		.uleb128 0x3
 2355 0882 1D       		.byte	0x1d
 2356 0883 8B       		.byte	0x8b
 2357 0884 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 182


 2358 0885 CF5B0000 		.long	0x5bcf
 2359 0889 03       		.uleb128 0x3
 2360 088a 1D       		.byte	0x1d
 2361 088b 8D       		.byte	0x8d
 2362 088c 0B       		.byte	0xb
 2363 088d DB5B0000 		.long	0x5bdb
 2364 0891 03       		.uleb128 0x3
 2365 0892 1D       		.byte	0x1d
 2366 0893 8F       		.byte	0x8f
 2367 0894 0B       		.byte	0xb
 2368 0895 F15B0000 		.long	0x5bf1
 2369 0899 59       		.uleb128 0x59
 2370 089a 00000000 		.long	.LASF51
 2371 089e 10       		.byte	0x10
 2372 089f 2E01     		.value	0x12e
 2373 08a1 41       		.byte	0x41
 2374 08a2 16       		.uleb128 0x16
 2375 08a3 00000000 		.long	.LASF52
 2376 08a7 01       		.byte	0x1
 2377 08a8 1E       		.byte	0x1e
 2378 08a9 33       		.byte	0x33
 2379 08aa 0A       		.byte	0xa
 2380 08ab C6080000 		.long	0x8c6
 2381 08af 4D       		.uleb128 0x4d
 2382 08b0 00000000 		.long	.LASF52
 2383 08b4 1E       		.byte	0x1e
 2384 08b5 33       		.byte	0x33
 2385 08b6 25       		.byte	0x25
 2386 08b7 00000000 		.long	.LASF53
 2387 08bb BF080000 		.long	0x8bf
 2388 08bf 02       		.uleb128 0x2
 2389 08c0 0D5C0000 		.long	0x5c0d
 2390 08c4 00       		.byte	0
 2391 08c5 00       		.byte	0
 2392 08c6 63       		.uleb128 0x63
 2393 08c7 00000000 		.long	.LASF55
 2394 08cb 1E       		.byte	0x1e
 2395 08cc 48       		.byte	0x48
 2396 08cd 16       		.uleb128 0x16
 2397 08ce 00000000 		.long	.LASF56
 2398 08d2 01       		.byte	0x1
 2399 08d3 1E       		.byte	0x1e
 2400 08d4 4A       		.byte	0x4a
 2401 08d5 0A       		.byte	0xa
 2402 08d6 17090000 		.long	0x917
 2403 08da 16       		.uleb128 0x16
 2404 08db 00000000 		.long	.LASF57
 2405 08df 01       		.byte	0x1
 2406 08e0 1E       		.byte	0x1e
 2407 08e1 4C       		.byte	0x4c
 2408 08e2 0C       		.byte	0xc
 2409 08e3 04090000 		.long	0x904
 2410 08e7 8401     		.uleb128 0x84
 2411 08e9 00000000 		.long	.LASF73
 2412 08ed 1E       		.byte	0x1e
 2413 08ee 4C       		.byte	0x4c
 2414 08ef 23       		.byte	0x23
GAS LISTING x64lin/../common/event.s 			page 183


 2415 08f0 00000000 		.long	.LASF672
 2416 08f4 F8080000 		.long	0x8f8
 2417 08f8 02       		.uleb128 0x2
 2418 08f9 125C0000 		.long	0x5c12
 2419 08fd 01       		.uleb128 0x1
 2420 08fe 29510000 		.long	0x5129
 2421 0902 00       		.byte	0
 2422 0903 00       		.byte	0
 2423 0904 30       		.uleb128 0x30
 2424 0905 C6080000 		.long	0x8c6
 2425 0909 05       		.uleb128 0x5
 2426 090a 00000000 		.long	.LASF59
 2427 090e 1E       		.byte	0x1e
 2428 090f 4C       		.byte	0x4c
 2429 0910 40       		.byte	0x40
 2430 0911 DA080000 		.long	0x8da
 2431 0915 00       		.byte	0
 2432 0916 00       		.byte	0
 2433 0917 3D       		.uleb128 0x3d
 2434 0918 00000000 		.long	.LASF58
 2435 091c 1F       		.byte	0x1f
 2436 091d 3F       		.byte	0x3f
 2437 091e 0D       		.byte	0xd
 2438 091f F80A0000 		.long	0xaf8
 2439 0923 23       		.uleb128 0x23
 2440 0924 00000000 		.long	.LASF61
 2441 0928 08       		.byte	0x8
 2442 0929 1F       		.byte	0x1f
 2443 092a 5A       		.byte	0x5a
 2444 092b 0B       		.byte	0xb
 2445 092c EA0A0000 		.long	0xaea
 2446 0930 05       		.uleb128 0x5
 2447 0931 00000000 		.long	.LASF60
 2448 0935 1F       		.byte	0x1f
 2449 0936 5C       		.byte	0x5c
 2450 0937 0D       		.byte	0xd
 2451 0938 14440000 		.long	0x4414
 2452 093c 00       		.byte	0
 2453 093d 8501     		.uleb128 0x85
 2454 093f 00000000 		.long	.LASF61
 2455 0943 1F       		.byte	0x1f
 2456 0944 5E       		.byte	0x5e
 2457 0945 10       		.byte	0x10
 2458 0946 00000000 		.long	.LASF62
 2459 094a 52090000 		.long	0x952
 2460 094e 5D090000 		.long	0x95d
 2461 0952 02       		.uleb128 0x2
 2462 0953 175C0000 		.long	0x5c17
 2463 0957 01       		.uleb128 0x1
 2464 0958 14440000 		.long	0x4414
 2465 095c 00       		.byte	0
 2466 095d 29       		.uleb128 0x29
 2467 095e 00000000 		.long	.LASF63
 2468 0962 1F       		.byte	0x1f
 2469 0963 60       		.byte	0x60
 2470 0964 0C       		.byte	0xc
 2471 0965 00000000 		.long	.LASF65
GAS LISTING x64lin/../common/event.s 			page 184


 2472 0969 71090000 		.long	0x971
 2473 096d 77090000 		.long	0x977
 2474 0971 02       		.uleb128 0x2
 2475 0972 175C0000 		.long	0x5c17
 2476 0976 00       		.byte	0
 2477 0977 29       		.uleb128 0x29
 2478 0978 00000000 		.long	.LASF64
 2479 097c 1F       		.byte	0x1f
 2480 097d 61       		.byte	0x61
 2481 097e 0C       		.byte	0xc
 2482 097f 00000000 		.long	.LASF66
 2483 0983 8B090000 		.long	0x98b
 2484 0987 91090000 		.long	0x991
 2485 098b 02       		.uleb128 0x2
 2486 098c 175C0000 		.long	0x5c17
 2487 0990 00       		.byte	0
 2488 0991 24       		.uleb128 0x24
 2489 0992 00000000 		.long	.LASF67
 2490 0996 1F       		.byte	0x1f
 2491 0997 63       		.byte	0x63
 2492 0998 0D       		.byte	0xd
 2493 0999 00000000 		.long	.LASF68
 2494 099d 14440000 		.long	0x4414
 2495 09a1 A9090000 		.long	0x9a9
 2496 09a5 AF090000 		.long	0x9af
 2497 09a9 02       		.uleb128 0x2
 2498 09aa 1C5C0000 		.long	0x5c1c
 2499 09ae 00       		.byte	0
 2500 09af 0D       		.uleb128 0xd
 2501 09b0 00000000 		.long	.LASF61
 2502 09b4 1F       		.byte	0x1f
 2503 09b5 6B       		.byte	0x6b
 2504 09b6 07       		.byte	0x7
 2505 09b7 00000000 		.long	.LASF69
 2506 09bb 01       		.byte	0x1
 2507 09bc C4090000 		.long	0x9c4
 2508 09c0 CA090000 		.long	0x9ca
 2509 09c4 02       		.uleb128 0x2
 2510 09c5 175C0000 		.long	0x5c17
 2511 09c9 00       		.byte	0
 2512 09ca 0D       		.uleb128 0xd
 2513 09cb 00000000 		.long	.LASF61
 2514 09cf 1F       		.byte	0x1f
 2515 09d0 6D       		.byte	0x6d
 2516 09d1 07       		.byte	0x7
 2517 09d2 00000000 		.long	.LASF70
 2518 09d6 01       		.byte	0x1
 2519 09d7 DF090000 		.long	0x9df
 2520 09db EA090000 		.long	0x9ea
 2521 09df 02       		.uleb128 0x2
 2522 09e0 175C0000 		.long	0x5c17
 2523 09e4 01       		.uleb128 0x1
 2524 09e5 215C0000 		.long	0x5c21
 2525 09e9 00       		.byte	0
 2526 09ea 0D       		.uleb128 0xd
 2527 09eb 00000000 		.long	.LASF61
 2528 09ef 1F       		.byte	0x1f
GAS LISTING x64lin/../common/event.s 			page 185


 2529 09f0 70       		.byte	0x70
 2530 09f1 07       		.byte	0x7
 2531 09f2 00000000 		.long	.LASF71
 2532 09f6 01       		.byte	0x1
 2533 09f7 FF090000 		.long	0x9ff
 2534 09fb 0A0A0000 		.long	0xa0a
 2535 09ff 02       		.uleb128 0x2
 2536 0a00 175C0000 		.long	0x5c17
 2537 0a04 01       		.uleb128 0x1
 2538 0a05 AC070000 		.long	0x7ac
 2539 0a09 00       		.byte	0
 2540 0a0a 0D       		.uleb128 0xd
 2541 0a0b 00000000 		.long	.LASF61
 2542 0a0f 1F       		.byte	0x1f
 2543 0a10 74       		.byte	0x74
 2544 0a11 07       		.byte	0x7
 2545 0a12 00000000 		.long	.LASF72
 2546 0a16 01       		.byte	0x1
 2547 0a17 1F0A0000 		.long	0xa1f
 2548 0a1b 2A0A0000 		.long	0xa2a
 2549 0a1f 02       		.uleb128 0x2
 2550 0a20 175C0000 		.long	0x5c17
 2551 0a24 01       		.uleb128 0x1
 2552 0a25 265C0000 		.long	0x5c26
 2553 0a29 00       		.byte	0
 2554 0a2a 17       		.uleb128 0x17
 2555 0a2b 00000000 		.long	.LASF73
 2556 0a2f 1F       		.byte	0x1f
 2557 0a30 81       		.byte	0x81
 2558 0a31 07       		.byte	0x7
 2559 0a32 00000000 		.long	.LASF74
 2560 0a36 2B5C0000 		.long	0x5c2b
 2561 0a3a 01       		.byte	0x1
 2562 0a3b 430A0000 		.long	0xa43
 2563 0a3f 4E0A0000 		.long	0xa4e
 2564 0a43 02       		.uleb128 0x2
 2565 0a44 175C0000 		.long	0x5c17
 2566 0a48 01       		.uleb128 0x1
 2567 0a49 215C0000 		.long	0x5c21
 2568 0a4d 00       		.byte	0
 2569 0a4e 17       		.uleb128 0x17
 2570 0a4f 00000000 		.long	.LASF73
 2571 0a53 1F       		.byte	0x1f
 2572 0a54 85       		.byte	0x85
 2573 0a55 07       		.byte	0x7
 2574 0a56 00000000 		.long	.LASF75
 2575 0a5a 2B5C0000 		.long	0x5c2b
 2576 0a5e 01       		.byte	0x1
 2577 0a5f 670A0000 		.long	0xa67
 2578 0a63 720A0000 		.long	0xa72
 2579 0a67 02       		.uleb128 0x2
 2580 0a68 175C0000 		.long	0x5c17
 2581 0a6c 01       		.uleb128 0x1
 2582 0a6d 265C0000 		.long	0x5c26
 2583 0a71 00       		.byte	0
 2584 0a72 0D       		.uleb128 0xd
 2585 0a73 00000000 		.long	.LASF76
GAS LISTING x64lin/../common/event.s 			page 186


 2586 0a77 1F       		.byte	0x1f
 2587 0a78 8C       		.byte	0x8c
 2588 0a79 07       		.byte	0x7
 2589 0a7a 00000000 		.long	.LASF77
 2590 0a7e 01       		.byte	0x1
 2591 0a7f 870A0000 		.long	0xa87
 2592 0a83 920A0000 		.long	0xa92
 2593 0a87 02       		.uleb128 0x2
 2594 0a88 175C0000 		.long	0x5c17
 2595 0a8c 02       		.uleb128 0x2
 2596 0a8d 4C430000 		.long	0x434c
 2597 0a91 00       		.byte	0
 2598 0a92 0D       		.uleb128 0xd
 2599 0a93 00000000 		.long	.LASF78
 2600 0a97 1F       		.byte	0x1f
 2601 0a98 8F       		.byte	0x8f
 2602 0a99 07       		.byte	0x7
 2603 0a9a 00000000 		.long	.LASF79
 2604 0a9e 01       		.byte	0x1
 2605 0a9f A70A0000 		.long	0xaa7
 2606 0aa3 B20A0000 		.long	0xab2
 2607 0aa7 02       		.uleb128 0x2
 2608 0aa8 175C0000 		.long	0x5c17
 2609 0aac 01       		.uleb128 0x1
 2610 0aad 2B5C0000 		.long	0x5c2b
 2611 0ab1 00       		.byte	0
 2612 0ab2 64       		.uleb128 0x64
 2613 0ab3 00000000 		.long	.LASF93
 2614 0ab7 1F       		.byte	0x1f
 2615 0ab8 9B       		.byte	0x9b
 2616 0ab9 00000000 		.long	.LASF94
 2617 0abd 783F0000 		.long	0x3f78
 2618 0ac1 C90A0000 		.long	0xac9
 2619 0ac5 CF0A0000 		.long	0xacf
 2620 0ac9 02       		.uleb128 0x2
 2621 0aca 1C5C0000 		.long	0x5c1c
 2622 0ace 00       		.byte	0
 2623 0acf 5A       		.uleb128 0x5a
 2624 0ad0 00000000 		.long	.LASF80
 2625 0ad4 1F       		.byte	0x1f
 2626 0ad5 B0       		.byte	0xb0
 2627 0ad6 07       		.byte	0x7
 2628 0ad7 00000000 		.long	.LASF81
 2629 0adb 305C0000 		.long	0x5c30
 2630 0adf E30A0000 		.long	0xae3
 2631 0ae3 02       		.uleb128 0x2
 2632 0ae4 1C5C0000 		.long	0x5c1c
 2633 0ae8 00       		.byte	0
 2634 0ae9 00       		.byte	0
 2635 0aea 08       		.uleb128 0x8
 2636 0aeb 23090000 		.long	0x923
 2637 0aef 03       		.uleb128 0x3
 2638 0af0 1F       		.byte	0x1f
 2639 0af1 54       		.byte	0x54
 2640 0af2 10       		.byte	0x10
 2641 0af3 000B0000 		.long	0xb00
 2642 0af7 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 187


 2643 0af8 03       		.uleb128 0x3
 2644 0af9 1F       		.byte	0x1f
 2645 0afa 44       		.byte	0x44
 2646 0afb 1A       		.byte	0x1a
 2647 0afc 23090000 		.long	0x923
 2648 0b00 5B       		.uleb128 0x5b
 2649 0b01 00000000 		.long	.LASF82
 2650 0b05 1F       		.byte	0x1f
 2651 0b06 50       		.byte	0x50
 2652 0b07 08       		.byte	0x8
 2653 0b08 00000000 		.long	.LASF83
 2654 0b0c 160B0000 		.long	0xb16
 2655 0b10 01       		.uleb128 0x1
 2656 0b11 23090000 		.long	0x923
 2657 0b15 00       		.byte	0
 2658 0b16 4E       		.uleb128 0x4e
 2659 0b17 00000000 		.long	.LASF483
 2660 0b1b 08       		.uleb128 0x8
 2661 0b1c 160B0000 		.long	0xb16
 2662 0b20 65       		.uleb128 0x65
 2663 0b21 5F563200 		.string	"_V2"
 2664 0b25 24       		.byte	0x24
 2665 0b26 5C02     		.value	0x25c
 2666 0b28 14       		.byte	0x14
 2667 0b29 03       		.uleb128 0x3
 2668 0b2a 20       		.byte	0x20
 2669 0b2b 52       		.byte	0x52
 2670 0b2c 0B       		.byte	0xb
 2671 0b2d 415C0000 		.long	0x5c41
 2672 0b31 03       		.uleb128 0x3
 2673 0b32 20       		.byte	0x20
 2674 0b33 53       		.byte	0x53
 2675 0b34 0B       		.byte	0xb
 2676 0b35 355C0000 		.long	0x5c35
 2677 0b39 03       		.uleb128 0x3
 2678 0b3a 20       		.byte	0x20
 2679 0b3b 54       		.byte	0x54
 2680 0b3c 0B       		.byte	0xb
 2681 0b3d 17440000 		.long	0x4417
 2682 0b41 03       		.uleb128 0x3
 2683 0b42 20       		.byte	0x20
 2684 0b43 5C       		.byte	0x5c
 2685 0b44 0B       		.byte	0xb
 2686 0b45 525C0000 		.long	0x5c52
 2687 0b49 03       		.uleb128 0x3
 2688 0b4a 20       		.byte	0x20
 2689 0b4b 65       		.byte	0x65
 2690 0b4c 0B       		.byte	0xb
 2691 0b4d 6D5C0000 		.long	0x5c6d
 2692 0b51 03       		.uleb128 0x3
 2693 0b52 20       		.byte	0x20
 2694 0b53 68       		.byte	0x68
 2695 0b54 0B       		.byte	0xb
 2696 0b55 885C0000 		.long	0x5c88
 2697 0b59 03       		.uleb128 0x3
 2698 0b5a 20       		.byte	0x20
 2699 0b5b 69       		.byte	0x69
GAS LISTING x64lin/../common/event.s 			page 188


 2700 0b5c 0B       		.byte	0xb
 2701 0b5d 9E5C0000 		.long	0x5c9e
 2702 0b61 03       		.uleb128 0x3
 2703 0b62 21       		.byte	0x21
 2704 0b63 5F       		.byte	0x5f
 2705 0b64 14       		.byte	0x14
 2706 0b65 07400000 		.long	0x4007
 2707 0b69 03       		.uleb128 0x3
 2708 0b6a 21       		.byte	0x21
 2709 0b6b 60       		.byte	0x60
 2710 0b6c 14       		.byte	0x14
 2711 0b6d B45C0000 		.long	0x5cb4
 2712 0b71 03       		.uleb128 0x3
 2713 0b72 21       		.byte	0x21
 2714 0b73 61       		.byte	0x61
 2715 0b74 14       		.byte	0x14
 2716 0b75 1A400000 		.long	0x401a
 2717 0b79 03       		.uleb128 0x3
 2718 0b7a 21       		.byte	0x21
 2719 0b7b 62       		.byte	0x62
 2720 0b7c 14       		.byte	0x14
 2721 0b7d 20400000 		.long	0x4020
 2722 0b81 03       		.uleb128 0x3
 2723 0b82 21       		.byte	0x21
 2724 0b83 63       		.byte	0x63
 2725 0b84 14       		.byte	0x14
 2726 0b85 26400000 		.long	0x4026
 2727 0b89 23       		.uleb128 0x23
 2728 0b8a 00000000 		.long	.LASF84
 2729 0b8e 28       		.byte	0x28
 2730 0b8f 02       		.byte	0x2
 2731 0b90 39       		.byte	0x39
 2732 0b91 09       		.byte	0x9
 2733 0b92 0B0C0000 		.long	0xc0b
 2734 0b96 27       		.uleb128 0x27
 2735 0b97 00000000 		.long	.LASF102
 2736 0b9b 02       		.byte	0x2
 2737 0b9c 3C       		.byte	0x3c
 2738 0b9d 1F       		.byte	0x1f
 2739 0b9e CD580000 		.long	0x58cd
 2740 0ba2 02       		.byte	0x2
 2741 0ba3 66       		.uleb128 0x66
 2742 0ba4 00000000 		.long	.LASF123
 2743 0ba8 3F       		.byte	0x3f
 2744 0ba9 13       		.byte	0x13
 2745 0baa 960B0000 		.long	0xb96
 2746 0bae 4F       		.uleb128 0x4f
 2747 0baf 00000000 		.long	.LASF84
 2748 0bb3 02       		.byte	0x2
 2749 0bb4 41       		.byte	0x41
 2750 0bb5 0F       		.byte	0xf
 2751 0bb6 00000000 		.long	.LASF85
 2752 0bba 02       		.byte	0x2
 2753 0bbb C30B0000 		.long	0xbc3
 2754 0bbf C90B0000 		.long	0xbc9
 2755 0bc3 02       		.uleb128 0x2
 2756 0bc4 BE5C0000 		.long	0x5cbe
GAS LISTING x64lin/../common/event.s 			page 189


 2757 0bc8 00       		.byte	0
 2758 0bc9 3E       		.uleb128 0x3e
 2759 0bca 00000000 		.long	.LASF84
 2760 0bce 02       		.byte	0x2
 2761 0bcf 4E       		.byte	0x4e
 2762 0bd0 05       		.byte	0x5
 2763 0bd1 00000000 		.long	.LASF86
 2764 0bd5 02       		.byte	0x2
 2765 0bd6 DE0B0000 		.long	0xbde
 2766 0bda E90B0000 		.long	0xbe9
 2767 0bde 02       		.uleb128 0x2
 2768 0bdf BE5C0000 		.long	0x5cbe
 2769 0be3 01       		.uleb128 0x1
 2770 0be4 C35C0000 		.long	0x5cc3
 2771 0be8 00       		.byte	0
 2772 0be9 8601     		.uleb128 0x86
 2773 0beb 00000000 		.long	.LASF73
 2774 0bef 02       		.byte	0x2
 2775 0bf0 4F       		.byte	0x4f
 2776 0bf1 13       		.byte	0x13
 2777 0bf2 00000000 		.long	.LASF87
 2778 0bf6 C85C0000 		.long	0x5cc8
 2779 0bfa 02       		.byte	0x2
 2780 0bfb FF0B0000 		.long	0xbff
 2781 0bff 02       		.uleb128 0x2
 2782 0c00 BE5C0000 		.long	0x5cbe
 2783 0c04 01       		.uleb128 0x1
 2784 0c05 C35C0000 		.long	0x5cc3
 2785 0c09 00       		.byte	0
 2786 0c0a 00       		.byte	0
 2787 0c0b 08       		.uleb128 0x8
 2788 0c0c 890B0000 		.long	0xb89
 2789 0c10 23       		.uleb128 0x23
 2790 0c11 00000000 		.long	.LASF88
 2791 0c15 28       		.byte	0x28
 2792 0c16 02       		.byte	0x2
 2793 0c17 53       		.byte	0x53
 2794 0c18 09       		.byte	0x9
 2795 0c19 1D0D0000 		.long	0xd1d
 2796 0c1d 30       		.uleb128 0x30
 2797 0c1e 890B0000 		.long	0xb89
 2798 0c22 4F       		.uleb128 0x4f
 2799 0c23 00000000 		.long	.LASF88
 2800 0c27 02       		.byte	0x2
 2801 0c28 5B       		.byte	0x5b
 2802 0c29 05       		.byte	0x5
 2803 0c2a 00000000 		.long	.LASF89
 2804 0c2e 01       		.byte	0x1
 2805 0c2f 370C0000 		.long	0xc37
 2806 0c33 3D0C0000 		.long	0xc3d
 2807 0c37 02       		.uleb128 0x2
 2808 0c38 CD5C0000 		.long	0x5ccd
 2809 0c3c 00       		.byte	0
 2810 0c3d 4F       		.uleb128 0x4f
 2811 0c3e 00000000 		.long	.LASF90
 2812 0c42 02       		.byte	0x2
 2813 0c43 5C       		.byte	0x5c
GAS LISTING x64lin/../common/event.s 			page 190


 2814 0c44 05       		.byte	0x5
 2815 0c45 00000000 		.long	.LASF91
 2816 0c49 01       		.byte	0x1
 2817 0c4a 520C0000 		.long	0xc52
 2818 0c4e 5D0C0000 		.long	0xc5d
 2819 0c52 02       		.uleb128 0x2
 2820 0c53 CD5C0000 		.long	0x5ccd
 2821 0c57 02       		.uleb128 0x2
 2822 0c58 4C430000 		.long	0x434c
 2823 0c5c 00       		.byte	0
 2824 0c5d 3E       		.uleb128 0x3e
 2825 0c5e 00000000 		.long	.LASF88
 2826 0c62 02       		.byte	0x2
 2827 0c63 5E       		.byte	0x5e
 2828 0c64 05       		.byte	0x5
 2829 0c65 00000000 		.long	.LASF92
 2830 0c69 01       		.byte	0x1
 2831 0c6a 720C0000 		.long	0xc72
 2832 0c6e 7D0C0000 		.long	0xc7d
 2833 0c72 02       		.uleb128 0x2
 2834 0c73 CD5C0000 		.long	0x5ccd
 2835 0c77 01       		.uleb128 0x1
 2836 0c78 D75C0000 		.long	0x5cd7
 2837 0c7c 00       		.byte	0
 2838 0c7d 47       		.uleb128 0x47
 2839 0c7e 00000000 		.long	.LASF73
 2840 0c82 02       		.byte	0x2
 2841 0c83 5F       		.byte	0x5f
 2842 0c84 0C       		.byte	0xc
 2843 0c85 00000000 		.long	.LASF95
 2844 0c89 DC5C0000 		.long	0x5cdc
 2845 0c8d 950C0000 		.long	0xc95
 2846 0c91 A00C0000 		.long	0xca0
 2847 0c95 02       		.uleb128 0x2
 2848 0c96 CD5C0000 		.long	0x5ccd
 2849 0c9a 01       		.uleb128 0x1
 2850 0c9b D75C0000 		.long	0x5cd7
 2851 0c9f 00       		.byte	0
 2852 0ca0 0D       		.uleb128 0xd
 2853 0ca1 00000000 		.long	.LASF96
 2854 0ca5 02       		.byte	0x2
 2855 0ca6 62       		.byte	0x62
 2856 0ca7 05       		.byte	0x5
 2857 0ca8 00000000 		.long	.LASF97
 2858 0cac 01       		.byte	0x1
 2859 0cad B50C0000 		.long	0xcb5
 2860 0cb1 BB0C0000 		.long	0xcbb
 2861 0cb5 02       		.uleb128 0x2
 2862 0cb6 CD5C0000 		.long	0x5ccd
 2863 0cba 00       		.byte	0
 2864 0cbb 17       		.uleb128 0x17
 2865 0cbc 00000000 		.long	.LASF98
 2866 0cc0 02       		.byte	0x2
 2867 0cc1 6C       		.byte	0x6c
 2868 0cc2 05       		.byte	0x5
 2869 0cc3 00000000 		.long	.LASF99
 2870 0cc7 783F0000 		.long	0x3f78
GAS LISTING x64lin/../common/event.s 			page 191


 2871 0ccb 01       		.byte	0x1
 2872 0ccc D40C0000 		.long	0xcd4
 2873 0cd0 DA0C0000 		.long	0xcda
 2874 0cd4 02       		.uleb128 0x2
 2875 0cd5 CD5C0000 		.long	0x5ccd
 2876 0cd9 00       		.byte	0
 2877 0cda 0D       		.uleb128 0xd
 2878 0cdb 00000000 		.long	.LASF100
 2879 0cdf 02       		.byte	0x2
 2880 0ce0 73       		.byte	0x73
 2881 0ce1 05       		.byte	0x5
 2882 0ce2 00000000 		.long	.LASF101
 2883 0ce6 01       		.byte	0x1
 2884 0ce7 EF0C0000 		.long	0xcef
 2885 0ceb F50C0000 		.long	0xcf5
 2886 0cef 02       		.uleb128 0x2
 2887 0cf0 CD5C0000 		.long	0x5ccd
 2888 0cf4 00       		.byte	0
 2889 0cf5 27       		.uleb128 0x27
 2890 0cf6 00000000 		.long	.LASF103
 2891 0cfa 02       		.byte	0x2
 2892 0cfb 56       		.byte	0x56
 2893 0cfc 1C       		.byte	0x1c
 2894 0cfd E15C0000 		.long	0x5ce1
 2895 0d01 01       		.byte	0x1
 2896 0d02 5A       		.uleb128 0x5a
 2897 0d03 00000000 		.long	.LASF104
 2898 0d07 02       		.byte	0x2
 2899 0d08 7A       		.byte	0x7a
 2900 0d09 05       		.byte	0x5
 2901 0d0a 00000000 		.long	.LASF105
 2902 0d0e F50C0000 		.long	0xcf5
 2903 0d12 160D0000 		.long	0xd16
 2904 0d16 02       		.uleb128 0x2
 2905 0d17 CD5C0000 		.long	0x5ccd
 2906 0d1b 00       		.byte	0
 2907 0d1c 00       		.byte	0
 2908 0d1d 08       		.uleb128 0x8
 2909 0d1e 100C0000 		.long	0xc10
 2910 0d22 23       		.uleb128 0x23
 2911 0d23 00000000 		.long	.LASF106
 2912 0d27 30       		.byte	0x30
 2913 0d28 02       		.byte	0x2
 2914 0d29 7F       		.byte	0x7f
 2915 0d2a 09       		.byte	0x9
 2916 0d2b 890E0000 		.long	0xe89
 2917 0d2f 0D       		.uleb128 0xd
 2918 0d30 00000000 		.long	.LASF106
 2919 0d34 02       		.byte	0x2
 2920 0d35 84       		.byte	0x84
 2921 0d36 05       		.byte	0x5
 2922 0d37 00000000 		.long	.LASF107
 2923 0d3b 01       		.byte	0x1
 2924 0d3c 440D0000 		.long	0xd44
 2925 0d40 4A0D0000 		.long	0xd4a
 2926 0d44 02       		.uleb128 0x2
 2927 0d45 E65C0000 		.long	0x5ce6
GAS LISTING x64lin/../common/event.s 			page 192


 2928 0d49 00       		.byte	0
 2929 0d4a 0D       		.uleb128 0xd
 2930 0d4b 00000000 		.long	.LASF108
 2931 0d4f 02       		.byte	0x2
 2932 0d50 8B       		.byte	0x8b
 2933 0d51 05       		.byte	0x5
 2934 0d52 00000000 		.long	.LASF109
 2935 0d56 01       		.byte	0x1
 2936 0d57 5F0D0000 		.long	0xd5f
 2937 0d5b 6A0D0000 		.long	0xd6a
 2938 0d5f 02       		.uleb128 0x2
 2939 0d60 E65C0000 		.long	0x5ce6
 2940 0d64 02       		.uleb128 0x2
 2941 0d65 4C430000 		.long	0x434c
 2942 0d69 00       		.byte	0
 2943 0d6a 3E       		.uleb128 0x3e
 2944 0d6b 00000000 		.long	.LASF106
 2945 0d6f 02       		.byte	0x2
 2946 0d70 91       		.byte	0x91
 2947 0d71 05       		.byte	0x5
 2948 0d72 00000000 		.long	.LASF110
 2949 0d76 01       		.byte	0x1
 2950 0d77 7F0D0000 		.long	0xd7f
 2951 0d7b 8A0D0000 		.long	0xd8a
 2952 0d7f 02       		.uleb128 0x2
 2953 0d80 E65C0000 		.long	0x5ce6
 2954 0d84 01       		.uleb128 0x1
 2955 0d85 EB5C0000 		.long	0x5ceb
 2956 0d89 00       		.byte	0
 2957 0d8a 47       		.uleb128 0x47
 2958 0d8b 00000000 		.long	.LASF73
 2959 0d8f 02       		.byte	0x2
 2960 0d90 92       		.byte	0x92
 2961 0d91 10       		.byte	0x10
 2962 0d92 00000000 		.long	.LASF111
 2963 0d96 F05C0000 		.long	0x5cf0
 2964 0d9a A20D0000 		.long	0xda2
 2965 0d9e AD0D0000 		.long	0xdad
 2966 0da2 02       		.uleb128 0x2
 2967 0da3 E65C0000 		.long	0x5ce6
 2968 0da7 01       		.uleb128 0x1
 2969 0da8 EB5C0000 		.long	0x5ceb
 2970 0dac 00       		.byte	0
 2971 0dad 17       		.uleb128 0x17
 2972 0dae 00000000 		.long	.LASF104
 2973 0db2 02       		.byte	0x2
 2974 0db3 94       		.byte	0x94
 2975 0db4 17       		.byte	0x17
 2976 0db5 00000000 		.long	.LASF112
 2977 0db9 F55C0000 		.long	0x5cf5
 2978 0dbd 01       		.byte	0x1
 2979 0dbe C60D0000 		.long	0xdc6
 2980 0dc2 CC0D0000 		.long	0xdcc
 2981 0dc6 02       		.uleb128 0x2
 2982 0dc7 E65C0000 		.long	0x5ce6
 2983 0dcb 00       		.byte	0
 2984 0dcc 0D       		.uleb128 0xd
GAS LISTING x64lin/../common/event.s 			page 193


 2985 0dcd 00000000 		.long	.LASF113
 2986 0dd1 02       		.byte	0x2
 2987 0dd2 98       		.byte	0x98
 2988 0dd3 05       		.byte	0x5
 2989 0dd4 00000000 		.long	.LASF114
 2990 0dd8 01       		.byte	0x1
 2991 0dd9 E10D0000 		.long	0xde1
 2992 0ddd EC0D0000 		.long	0xdec
 2993 0de1 02       		.uleb128 0x2
 2994 0de2 E65C0000 		.long	0x5ce6
 2995 0de6 01       		.uleb128 0x1
 2996 0de7 DC5C0000 		.long	0x5cdc
 2997 0deb 00       		.byte	0
 2998 0dec 0D       		.uleb128 0xd
 2999 0ded 00000000 		.long	.LASF115
 3000 0df1 02       		.byte	0x2
 3001 0df2 A0       		.byte	0xa0
 3002 0df3 05       		.byte	0x5
 3003 0df4 00000000 		.long	.LASF116
 3004 0df8 01       		.byte	0x1
 3005 0df9 010E0000 		.long	0xe01
 3006 0dfd 110E0000 		.long	0xe11
 3007 0e01 02       		.uleb128 0x2
 3008 0e02 E65C0000 		.long	0x5ce6
 3009 0e06 01       		.uleb128 0x1
 3010 0e07 DC5C0000 		.long	0x5cdc
 3011 0e0b 01       		.uleb128 0x1
 3012 0e0c FA5C0000 		.long	0x5cfa
 3013 0e10 00       		.byte	0
 3014 0e11 06       		.uleb128 0x6
 3015 0e12 00000000 		.long	.LASF117
 3016 0e16 02       		.byte	0x2
 3017 0e17 81       		.byte	0x81
 3018 0e18 0B       		.byte	0xb
 3019 0e19 E5580000 		.long	0x58e5
 3020 0e1d 0D       		.uleb128 0xd
 3021 0e1e 00000000 		.long	.LASF115
 3022 0e22 02       		.byte	0x2
 3023 0e23 A7       		.byte	0xa7
 3024 0e24 05       		.byte	0x5
 3025 0e25 00000000 		.long	.LASF118
 3026 0e29 01       		.byte	0x1
 3027 0e2a 320E0000 		.long	0xe32
 3028 0e2e 470E0000 		.long	0xe47
 3029 0e32 02       		.uleb128 0x2
 3030 0e33 E65C0000 		.long	0x5ce6
 3031 0e37 01       		.uleb128 0x1
 3032 0e38 DC5C0000 		.long	0x5cdc
 3033 0e3c 01       		.uleb128 0x1
 3034 0e3d 47530000 		.long	0x5347
 3035 0e41 01       		.uleb128 0x1
 3036 0e42 FA5C0000 		.long	0x5cfa
 3037 0e46 00       		.byte	0
 3038 0e47 0D       		.uleb128 0xd
 3039 0e48 00000000 		.long	.LASF119
 3040 0e4c 02       		.byte	0x2
 3041 0e4d AF       		.byte	0xaf
GAS LISTING x64lin/../common/event.s 			page 194


 3042 0e4e 05       		.byte	0x5
 3043 0e4f 00000000 		.long	.LASF120
 3044 0e53 01       		.byte	0x1
 3045 0e54 5C0E0000 		.long	0xe5c
 3046 0e58 620E0000 		.long	0xe62
 3047 0e5c 02       		.uleb128 0x2
 3048 0e5d E65C0000 		.long	0x5ce6
 3049 0e61 00       		.byte	0
 3050 0e62 0D       		.uleb128 0xd
 3051 0e63 00000000 		.long	.LASF121
 3052 0e67 02       		.byte	0x2
 3053 0e68 B6       		.byte	0xb6
 3054 0e69 05       		.byte	0x5
 3055 0e6a 00000000 		.long	.LASF122
 3056 0e6e 01       		.byte	0x1
 3057 0e6f 770E0000 		.long	0xe77
 3058 0e73 7D0E0000 		.long	0xe7d
 3059 0e77 02       		.uleb128 0x2
 3060 0e78 E65C0000 		.long	0x5ce6
 3061 0e7c 00       		.byte	0
 3062 0e7d 66       		.uleb128 0x66
 3063 0e7e 00000000 		.long	.LASF124
 3064 0e82 BE       		.byte	0xbe
 3065 0e83 16       		.byte	0x16
 3066 0e84 D9580000 		.long	0x58d9
 3067 0e88 00       		.byte	0
 3068 0e89 08       		.uleb128 0x8
 3069 0e8a 220D0000 		.long	0xd22
 3070 0e8e 16       		.uleb128 0x16
 3071 0e8f 00000000 		.long	.LASF125
 3072 0e93 01       		.byte	0x1
 3073 0e94 02       		.byte	0x2
 3074 0e95 C7       		.byte	0xc7
 3075 0e96 0A       		.byte	0xa
 3076 0e97 B20E0000 		.long	0xeb2
 3077 0e9b 4D       		.uleb128 0x4d
 3078 0e9c 00000000 		.long	.LASF125
 3079 0ea0 02       		.byte	0x2
 3080 0ea1 C7       		.byte	0xc7
 3081 0ea2 22       		.byte	0x22
 3082 0ea3 00000000 		.long	.LASF126
 3083 0ea7 AB0E0000 		.long	0xeab
 3084 0eab 02       		.uleb128 0x2
 3085 0eac FF5C0000 		.long	0x5cff
 3086 0eb0 00       		.byte	0
 3087 0eb1 00       		.byte	0
 3088 0eb2 16       		.uleb128 0x16
 3089 0eb3 00000000 		.long	.LASF127
 3090 0eb7 01       		.byte	0x1
 3091 0eb8 02       		.byte	0x2
 3092 0eb9 CA       		.byte	0xca
 3093 0eba 0A       		.byte	0xa
 3094 0ebb D60E0000 		.long	0xed6
 3095 0ebf 4D       		.uleb128 0x4d
 3096 0ec0 00000000 		.long	.LASF127
 3097 0ec4 02       		.byte	0x2
 3098 0ec5 CA       		.byte	0xca
GAS LISTING x64lin/../common/event.s 			page 195


 3099 0ec6 23       		.byte	0x23
 3100 0ec7 00000000 		.long	.LASF128
 3101 0ecb CF0E0000 		.long	0xecf
 3102 0ecf 02       		.uleb128 0x2
 3103 0ed0 045D0000 		.long	0x5d04
 3104 0ed4 00       		.byte	0
 3105 0ed5 00       		.byte	0
 3106 0ed6 16       		.uleb128 0x16
 3107 0ed7 00000000 		.long	.LASF129
 3108 0edb 01       		.byte	0x1
 3109 0edc 02       		.byte	0x2
 3110 0edd CE       		.byte	0xce
 3111 0ede 0A       		.byte	0xa
 3112 0edf FA0E0000 		.long	0xefa
 3113 0ee3 4D       		.uleb128 0x4d
 3114 0ee4 00000000 		.long	.LASF129
 3115 0ee8 02       		.byte	0x2
 3116 0ee9 CE       		.byte	0xce
 3117 0eea 22       		.byte	0x22
 3118 0eeb 00000000 		.long	.LASF130
 3119 0eef F30E0000 		.long	0xef3
 3120 0ef3 02       		.uleb128 0x2
 3121 0ef4 095D0000 		.long	0x5d09
 3122 0ef8 00       		.byte	0
 3123 0ef9 00       		.byte	0
 3124 0efa 03       		.uleb128 0x3
 3125 0efb 22       		.byte	0x22
 3126 0efc 3C       		.byte	0x3c
 3127 0efd 0B       		.byte	0xb
 3128 0efe 3B530000 		.long	0x533b
 3129 0f02 03       		.uleb128 0x3
 3130 0f03 22       		.byte	0x22
 3131 0f04 3D       		.byte	0x3d
 3132 0f05 0B       		.byte	0xb
 3133 0f06 53530000 		.long	0x5353
 3134 0f0a 03       		.uleb128 0x3
 3135 0f0b 22       		.byte	0x22
 3136 0f0c 3E       		.byte	0x3e
 3137 0f0d 0B       		.byte	0xb
 3138 0f0e 2D4A0000 		.long	0x4a2d
 3139 0f12 03       		.uleb128 0x3
 3140 0f13 22       		.byte	0x22
 3141 0f14 40       		.byte	0x40
 3142 0f15 0B       		.byte	0xb
 3143 0f16 795E0000 		.long	0x5e79
 3144 0f1a 03       		.uleb128 0x3
 3145 0f1b 22       		.byte	0x22
 3146 0f1c 41       		.byte	0x41
 3147 0f1d 0B       		.byte	0xb
 3148 0f1e 855E0000 		.long	0x5e85
 3149 0f22 03       		.uleb128 0x3
 3150 0f23 22       		.byte	0x22
 3151 0f24 42       		.byte	0x42
 3152 0f25 0B       		.byte	0xb
 3153 0f26 A05E0000 		.long	0x5ea0
 3154 0f2a 03       		.uleb128 0x3
 3155 0f2b 22       		.byte	0x22
GAS LISTING x64lin/../common/event.s 			page 196


 3156 0f2c 43       		.byte	0x43
 3157 0f2d 0B       		.byte	0xb
 3158 0f2e BB5E0000 		.long	0x5ebb
 3159 0f32 03       		.uleb128 0x3
 3160 0f33 22       		.byte	0x22
 3161 0f34 44       		.byte	0x44
 3162 0f35 0B       		.byte	0xb
 3163 0f36 D65E0000 		.long	0x5ed6
 3164 0f3a 03       		.uleb128 0x3
 3165 0f3b 22       		.byte	0x22
 3166 0f3c 45       		.byte	0x45
 3167 0f3d 0B       		.byte	0xb
 3168 0f3e EC5E0000 		.long	0x5eec
 3169 0f42 03       		.uleb128 0x3
 3170 0f43 22       		.byte	0x22
 3171 0f44 46       		.byte	0x46
 3172 0f45 0B       		.byte	0xb
 3173 0f46 075F0000 		.long	0x5f07
 3174 0f4a 03       		.uleb128 0x3
 3175 0f4b 22       		.byte	0x22
 3176 0f4c 47       		.byte	0x47
 3177 0f4d 0B       		.byte	0xb
 3178 0f4e 1D5F0000 		.long	0x5f1d
 3179 0f52 03       		.uleb128 0x3
 3180 0f53 22       		.byte	0x22
 3181 0f54 4F       		.byte	0x4f
 3182 0f55 0B       		.byte	0xb
 3183 0f56 64530000 		.long	0x5364
 3184 0f5a 03       		.uleb128 0x3
 3185 0f5b 22       		.byte	0x22
 3186 0f5c 50       		.byte	0x50
 3187 0f5d 0B       		.byte	0xb
 3188 0f5e 335F0000 		.long	0x5f33
 3189 0f62 3D       		.uleb128 0x3d
 3190 0f63 00000000 		.long	.LASF131
 3191 0f67 23       		.byte	0x23
 3192 0f68 46       		.byte	0x46
 3193 0f69 0D       		.byte	0xd
 3194 0f6a 8B0F0000 		.long	0xf8b
 3195 0f6e 65       		.uleb128 0x65
 3196 0f6f 5F563200 		.string	"_V2"
 3197 0f73 23       		.byte	0x23
 3198 0f74 5D04     		.value	0x45d
 3199 0f76 16       		.byte	0x16
 3200 0f77 3C       		.uleb128 0x3c
 3201 0f78 00000000 		.long	.LASF21
 3202 0f7c 23       		.byte	0x23
 3203 0f7d 9101     		.value	0x191
 3204 0f7f 0F       		.byte	0xf
 3205 0f80 8701     		.uleb128 0x87
 3206 0f82 23       		.byte	0x23
 3207 0f83 E90C     		.value	0xce9
 3208 0f85 1F       		.byte	0x1f
 3209 0f86 990F0000 		.long	0xf99
 3210 0f8a 00       		.byte	0
 3211 0f8b 8801     		.uleb128 0x88
 3212 0f8d 00000000 		.long	.LASF1135
GAS LISTING x64lin/../common/event.s 			page 197


 3213 0f91 56       		.byte	0x56
 3214 0f92 F902     		.value	0x2f9
 3215 0f94 14       		.byte	0x14
 3216 0f95 A30F0000 		.long	0xfa3
 3217 0f99 59       		.uleb128 0x59
 3218 0f9a 00000000 		.long	.LASF132
 3219 0f9e 23       		.byte	0x23
 3220 0f9f 830C     		.value	0xc83
 3221 0fa1 14       		.byte	0x14
 3222 0fa2 00       		.byte	0
 3223 0fa3 33       		.uleb128 0x33
 3224 0fa4 00000000 		.long	.LASF133
 3225 0fa8 25       		.byte	0x25
 3226 0fa9 2E       		.byte	0x2e
 3227 0faa 0B       		.byte	0xb
 3228 0fab 33       		.uleb128 0x33
 3229 0fac 00000000 		.long	.LASF134
 3230 0fb0 23       		.byte	0x23
 3231 0fb1 36       		.byte	0x36
 3232 0fb2 0D       		.byte	0xd
 3233 0fb3 23       		.uleb128 0x23
 3234 0fb4 00000000 		.long	.LASF135
 3235 0fb8 30       		.byte	0x30
 3236 0fb9 26       		.byte	0x26
 3237 0fba 44       		.byte	0x44
 3238 0fbb 09       		.byte	0x9
 3239 0fbc C9100000 		.long	0x10c9
 3240 0fc0 05       		.uleb128 0x5
 3241 0fc1 00000000 		.long	.LASF124
 3242 0fc5 26       		.byte	0x26
 3243 0fc6 4E       		.byte	0x4e
 3244 0fc7 0F       		.byte	0xf
 3245 0fc8 220D0000 		.long	0xd22
 3246 0fcc 00       		.byte	0
 3247 0fcd 0D       		.uleb128 0xd
 3248 0fce 00000000 		.long	.LASF135
 3249 0fd2 26       		.byte	0x26
 3250 0fd3 53       		.byte	0x53
 3251 0fd4 05       		.byte	0x5
 3252 0fd5 00000000 		.long	.LASF136
 3253 0fd9 01       		.byte	0x1
 3254 0fda E20F0000 		.long	0xfe2
 3255 0fde E80F0000 		.long	0xfe8
 3256 0fe2 02       		.uleb128 0x2
 3257 0fe3 545F0000 		.long	0x5f54
 3258 0fe7 00       		.byte	0
 3259 0fe8 0D       		.uleb128 0xd
 3260 0fe9 00000000 		.long	.LASF137
 3261 0fed 26       		.byte	0x26
 3262 0fee 54       		.byte	0x54
 3263 0fef 05       		.byte	0x5
 3264 0ff0 00000000 		.long	.LASF138
 3265 0ff4 01       		.byte	0x1
 3266 0ff5 FD0F0000 		.long	0xffd
 3267 0ff9 08100000 		.long	0x1008
 3268 0ffd 02       		.uleb128 0x2
 3269 0ffe 545F0000 		.long	0x5f54
GAS LISTING x64lin/../common/event.s 			page 198


 3270 1002 02       		.uleb128 0x2
 3271 1003 4C430000 		.long	0x434c
 3272 1007 00       		.byte	0
 3273 1008 3E       		.uleb128 0x3e
 3274 1009 00000000 		.long	.LASF135
 3275 100d 26       		.byte	0x26
 3276 100e 56       		.byte	0x56
 3277 100f 05       		.byte	0x5
 3278 1010 00000000 		.long	.LASF139
 3279 1014 01       		.byte	0x1
 3280 1015 1D100000 		.long	0x101d
 3281 1019 28100000 		.long	0x1028
 3282 101d 02       		.uleb128 0x2
 3283 101e 545F0000 		.long	0x5f54
 3284 1022 01       		.uleb128 0x1
 3285 1023 595F0000 		.long	0x5f59
 3286 1027 00       		.byte	0
 3287 1028 47       		.uleb128 0x47
 3288 1029 00000000 		.long	.LASF73
 3289 102d 26       		.byte	0x26
 3290 102e 57       		.byte	0x57
 3291 102f 19       		.byte	0x19
 3292 1030 00000000 		.long	.LASF140
 3293 1034 5E5F0000 		.long	0x5f5e
 3294 1038 40100000 		.long	0x1040
 3295 103c 4B100000 		.long	0x104b
 3296 1040 02       		.uleb128 0x2
 3297 1041 545F0000 		.long	0x5f54
 3298 1045 01       		.uleb128 0x1
 3299 1046 595F0000 		.long	0x5f59
 3300 104a 00       		.byte	0
 3301 104b 0D       		.uleb128 0xd
 3302 104c 00000000 		.long	.LASF119
 3303 1050 26       		.byte	0x26
 3304 1051 5A       		.byte	0x5a
 3305 1052 05       		.byte	0x5
 3306 1053 00000000 		.long	.LASF141
 3307 1057 01       		.byte	0x1
 3308 1058 60100000 		.long	0x1060
 3309 105c 66100000 		.long	0x1066
 3310 1060 02       		.uleb128 0x2
 3311 1061 545F0000 		.long	0x5f54
 3312 1065 00       		.byte	0
 3313 1066 0D       		.uleb128 0xd
 3314 1067 00000000 		.long	.LASF121
 3315 106b 26       		.byte	0x26
 3316 106c 5D       		.byte	0x5d
 3317 106d 05       		.byte	0x5
 3318 106e 00000000 		.long	.LASF142
 3319 1072 01       		.byte	0x1
 3320 1073 7B100000 		.long	0x107b
 3321 1077 81100000 		.long	0x1081
 3322 107b 02       		.uleb128 0x2
 3323 107c 545F0000 		.long	0x5f54
 3324 1080 00       		.byte	0
 3325 1081 0D       		.uleb128 0xd
 3326 1082 00000000 		.long	.LASF113
GAS LISTING x64lin/../common/event.s 			page 199


 3327 1086 26       		.byte	0x26
 3328 1087 60       		.byte	0x60
 3329 1088 05       		.byte	0x5
 3330 1089 00000000 		.long	.LASF143
 3331 108d 01       		.byte	0x1
 3332 108e 96100000 		.long	0x1096
 3333 1092 A1100000 		.long	0x10a1
 3334 1096 02       		.uleb128 0x2
 3335 1097 545F0000 		.long	0x5f54
 3336 109b 01       		.uleb128 0x1
 3337 109c 635F0000 		.long	0x5f63
 3338 10a0 00       		.byte	0
 3339 10a1 27       		.uleb128 0x27
 3340 10a2 00000000 		.long	.LASF103
 3341 10a6 26       		.byte	0x26
 3342 10a7 51       		.byte	0x51
 3343 10a8 1F       		.byte	0x1f
 3344 10a9 F55C0000 		.long	0x5cf5
 3345 10ad 01       		.byte	0x1
 3346 10ae 5A       		.uleb128 0x5a
 3347 10af 00000000 		.long	.LASF104
 3348 10b3 26       		.byte	0x26
 3349 10b4 B6       		.byte	0xb6
 3350 10b5 05       		.byte	0x5
 3351 10b6 00000000 		.long	.LASF144
 3352 10ba A1100000 		.long	0x10a1
 3353 10be C2100000 		.long	0x10c2
 3354 10c2 02       		.uleb128 0x2
 3355 10c3 545F0000 		.long	0x5f54
 3356 10c7 00       		.byte	0
 3357 10c8 00       		.byte	0
 3358 10c9 08       		.uleb128 0x8
 3359 10ca B30F0000 		.long	0xfb3
 3360 10ce 23       		.uleb128 0x23
 3361 10cf 00000000 		.long	.LASF145
 3362 10d3 10       		.byte	0x10
 3363 10d4 27       		.byte	0x27
 3364 10d5 39       		.byte	0x39
 3365 10d6 0B       		.byte	0xb
 3366 10d7 4B130000 		.long	0x134b
 3367 10db 0D       		.uleb128 0xd
 3368 10dc 00000000 		.long	.LASF146
 3369 10e0 27       		.byte	0x27
 3370 10e1 3E       		.byte	0x3e
 3371 10e2 07       		.byte	0x7
 3372 10e3 00000000 		.long	.LASF147
 3373 10e7 01       		.byte	0x1
 3374 10e8 F0100000 		.long	0x10f0
 3375 10ec F6100000 		.long	0x10f6
 3376 10f0 02       		.uleb128 0x2
 3377 10f1 685F0000 		.long	0x5f68
 3378 10f5 00       		.byte	0
 3379 10f6 50       		.uleb128 0x50
 3380 10f7 00000000 		.long	.LASF146
 3381 10fb 27       		.byte	0x27
 3382 10fc 42       		.byte	0x42
 3383 10fd 10       		.byte	0x10
GAS LISTING x64lin/../common/event.s 			page 200


 3384 10fe 00000000 		.long	.LASF148
 3385 1102 0A110000 		.long	0x110a
 3386 1106 15110000 		.long	0x1115
 3387 110a 02       		.uleb128 0x2
 3388 110b 685F0000 		.long	0x5f68
 3389 110f 01       		.uleb128 0x1
 3390 1110 6D5F0000 		.long	0x5f6d
 3391 1114 00       		.byte	0
 3392 1115 27       		.uleb128 0x27
 3393 1116 00000000 		.long	.LASF149
 3394 111a 27       		.byte	0x27
 3395 111b 3C       		.byte	0x3c
 3396 111c 16       		.byte	0x16
 3397 111d 100C0000 		.long	0xc10
 3398 1121 01       		.byte	0x1
 3399 1122 0D       		.uleb128 0xd
 3400 1123 00000000 		.long	.LASF146
 3401 1127 27       		.byte	0x27
 3402 1128 49       		.byte	0x49
 3403 1129 07       		.byte	0x7
 3404 112a 00000000 		.long	.LASF150
 3405 112e 01       		.byte	0x1
 3406 112f 37110000 		.long	0x1137
 3407 1133 47110000 		.long	0x1147
 3408 1137 02       		.uleb128 0x2
 3409 1138 685F0000 		.long	0x5f68
 3410 113c 01       		.uleb128 0x1
 3411 113d 6D5F0000 		.long	0x5f6d
 3412 1141 01       		.uleb128 0x1
 3413 1142 8E0E0000 		.long	0xe8e
 3414 1146 00       		.byte	0
 3415 1147 0D       		.uleb128 0xd
 3416 1148 00000000 		.long	.LASF146
 3417 114c 27       		.byte	0x27
 3418 114d 4D       		.byte	0x4d
 3419 114e 07       		.byte	0x7
 3420 114f 00000000 		.long	.LASF151
 3421 1153 01       		.byte	0x1
 3422 1154 5C110000 		.long	0x115c
 3423 1158 6C110000 		.long	0x116c
 3424 115c 02       		.uleb128 0x2
 3425 115d 685F0000 		.long	0x5f68
 3426 1161 01       		.uleb128 0x1
 3427 1162 6D5F0000 		.long	0x5f6d
 3428 1166 01       		.uleb128 0x1
 3429 1167 B20E0000 		.long	0xeb2
 3430 116b 00       		.byte	0
 3431 116c 0D       		.uleb128 0xd
 3432 116d 00000000 		.long	.LASF146
 3433 1171 27       		.byte	0x27
 3434 1172 51       		.byte	0x51
 3435 1173 07       		.byte	0x7
 3436 1174 00000000 		.long	.LASF152
 3437 1178 01       		.byte	0x1
 3438 1179 81110000 		.long	0x1181
 3439 117d 91110000 		.long	0x1191
 3440 1181 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 201


 3441 1182 685F0000 		.long	0x5f68
 3442 1186 01       		.uleb128 0x1
 3443 1187 6D5F0000 		.long	0x5f6d
 3444 118b 01       		.uleb128 0x1
 3445 118c D60E0000 		.long	0xed6
 3446 1190 00       		.byte	0
 3447 1191 0D       		.uleb128 0xd
 3448 1192 00000000 		.long	.LASF153
 3449 1196 27       		.byte	0x27
 3450 1197 65       		.byte	0x65
 3451 1198 07       		.byte	0x7
 3452 1199 00000000 		.long	.LASF154
 3453 119d 01       		.byte	0x1
 3454 119e A6110000 		.long	0x11a6
 3455 11a2 B1110000 		.long	0x11b1
 3456 11a6 02       		.uleb128 0x2
 3457 11a7 685F0000 		.long	0x5f68
 3458 11ab 02       		.uleb128 0x2
 3459 11ac 4C430000 		.long	0x434c
 3460 11b0 00       		.byte	0
 3461 11b1 3E       		.uleb128 0x3e
 3462 11b2 00000000 		.long	.LASF146
 3463 11b6 27       		.byte	0x27
 3464 11b7 6B       		.byte	0x6b
 3465 11b8 07       		.byte	0x7
 3466 11b9 00000000 		.long	.LASF155
 3467 11bd 01       		.byte	0x1
 3468 11be C6110000 		.long	0x11c6
 3469 11c2 D1110000 		.long	0x11d1
 3470 11c6 02       		.uleb128 0x2
 3471 11c7 685F0000 		.long	0x5f68
 3472 11cb 01       		.uleb128 0x1
 3473 11cc 725F0000 		.long	0x5f72
 3474 11d0 00       		.byte	0
 3475 11d1 47       		.uleb128 0x47
 3476 11d2 00000000 		.long	.LASF73
 3477 11d6 27       		.byte	0x27
 3478 11d7 6C       		.byte	0x6c
 3479 11d8 14       		.byte	0x14
 3480 11d9 00000000 		.long	.LASF156
 3481 11dd 635F0000 		.long	0x5f63
 3482 11e1 E9110000 		.long	0x11e9
 3483 11e5 F4110000 		.long	0x11f4
 3484 11e9 02       		.uleb128 0x2
 3485 11ea 685F0000 		.long	0x5f68
 3486 11ee 01       		.uleb128 0x1
 3487 11ef 725F0000 		.long	0x5f72
 3488 11f3 00       		.byte	0
 3489 11f4 0D       		.uleb128 0xd
 3490 11f5 00000000 		.long	.LASF146
 3491 11f9 27       		.byte	0x27
 3492 11fa 6E       		.byte	0x6e
 3493 11fb 07       		.byte	0x7
 3494 11fc 00000000 		.long	.LASF157
 3495 1200 01       		.byte	0x1
 3496 1201 09120000 		.long	0x1209
 3497 1205 14120000 		.long	0x1214
GAS LISTING x64lin/../common/event.s 			page 202


 3498 1209 02       		.uleb128 0x2
 3499 120a 685F0000 		.long	0x5f68
 3500 120e 01       		.uleb128 0x1
 3501 120f 775F0000 		.long	0x5f77
 3502 1213 00       		.byte	0
 3503 1214 17       		.uleb128 0x17
 3504 1215 00000000 		.long	.LASF73
 3505 1219 27       		.byte	0x27
 3506 121a 75       		.byte	0x75
 3507 121b 14       		.byte	0x14
 3508 121c 00000000 		.long	.LASF158
 3509 1220 635F0000 		.long	0x5f63
 3510 1224 01       		.byte	0x1
 3511 1225 2D120000 		.long	0x122d
 3512 1229 38120000 		.long	0x1238
 3513 122d 02       		.uleb128 0x2
 3514 122e 685F0000 		.long	0x5f68
 3515 1232 01       		.uleb128 0x1
 3516 1233 775F0000 		.long	0x5f77
 3517 1237 00       		.byte	0
 3518 1238 0D       		.uleb128 0xd
 3519 1239 00000000 		.long	.LASF96
 3520 123d 27       		.byte	0x27
 3521 123e 83       		.byte	0x83
 3522 123f 07       		.byte	0x7
 3523 1240 00000000 		.long	.LASF159
 3524 1244 01       		.byte	0x1
 3525 1245 4D120000 		.long	0x124d
 3526 1249 53120000 		.long	0x1253
 3527 124d 02       		.uleb128 0x2
 3528 124e 685F0000 		.long	0x5f68
 3529 1252 00       		.byte	0
 3530 1253 17       		.uleb128 0x17
 3531 1254 00000000 		.long	.LASF98
 3532 1258 27       		.byte	0x27
 3533 1259 91       		.byte	0x91
 3534 125a 07       		.byte	0x7
 3535 125b 00000000 		.long	.LASF160
 3536 125f 783F0000 		.long	0x3f78
 3537 1263 01       		.byte	0x1
 3538 1264 6C120000 		.long	0x126c
 3539 1268 72120000 		.long	0x1272
 3540 126c 02       		.uleb128 0x2
 3541 126d 685F0000 		.long	0x5f68
 3542 1271 00       		.byte	0
 3543 1272 0D       		.uleb128 0xd
 3544 1273 00000000 		.long	.LASF100
 3545 1277 27       		.byte	0x27
 3546 1278 BD       		.byte	0xbd
 3547 1279 07       		.byte	0x7
 3548 127a 00000000 		.long	.LASF161
 3549 127e 01       		.byte	0x1
 3550 127f 87120000 		.long	0x1287
 3551 1283 8D120000 		.long	0x128d
 3552 1287 02       		.uleb128 0x2
 3553 1288 685F0000 		.long	0x5f68
 3554 128c 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 203


 3555 128d 0D       		.uleb128 0xd
 3556 128e 00000000 		.long	.LASF78
 3557 1292 27       		.byte	0x27
 3558 1293 C9       		.byte	0xc9
 3559 1294 07       		.byte	0x7
 3560 1295 00000000 		.long	.LASF162
 3561 1299 01       		.byte	0x1
 3562 129a A2120000 		.long	0x12a2
 3563 129e AD120000 		.long	0x12ad
 3564 12a2 02       		.uleb128 0x2
 3565 12a3 685F0000 		.long	0x5f68
 3566 12a7 01       		.uleb128 0x1
 3567 12a8 635F0000 		.long	0x5f63
 3568 12ac 00       		.byte	0
 3569 12ad 17       		.uleb128 0x17
 3570 12ae 00000000 		.long	.LASF163
 3571 12b2 27       		.byte	0x27
 3572 12b3 D0       		.byte	0xd0
 3573 12b4 07       		.byte	0x7
 3574 12b5 00000000 		.long	.LASF164
 3575 12b9 7C5F0000 		.long	0x5f7c
 3576 12bd 01       		.byte	0x1
 3577 12be C6120000 		.long	0x12c6
 3578 12c2 CC120000 		.long	0x12cc
 3579 12c6 02       		.uleb128 0x2
 3580 12c7 685F0000 		.long	0x5f68
 3581 12cb 00       		.byte	0
 3582 12cc 17       		.uleb128 0x17
 3583 12cd 00000000 		.long	.LASF165
 3584 12d1 27       		.byte	0x27
 3585 12d2 D9       		.byte	0xd9
 3586 12d3 07       		.byte	0x7
 3587 12d4 00000000 		.long	.LASF166
 3588 12d8 783F0000 		.long	0x3f78
 3589 12dc 01       		.byte	0x1
 3590 12dd E5120000 		.long	0x12e5
 3591 12e1 EB120000 		.long	0x12eb
 3592 12e5 02       		.uleb128 0x2
 3593 12e6 815F0000 		.long	0x5f81
 3594 12ea 00       		.byte	0
 3595 12eb 64       		.uleb128 0x64
 3596 12ec 00000000 		.long	.LASF93
 3597 12f0 27       		.byte	0x27
 3598 12f1 DC       		.byte	0xdc
 3599 12f2 00000000 		.long	.LASF167
 3600 12f6 783F0000 		.long	0x3f78
 3601 12fa 02130000 		.long	0x1302
 3602 12fe 08130000 		.long	0x1308
 3603 1302 02       		.uleb128 0x2
 3604 1303 815F0000 		.long	0x5f81
 3605 1307 00       		.byte	0
 3606 1308 17       		.uleb128 0x17
 3607 1309 00000000 		.long	.LASF88
 3608 130d 27       		.byte	0x27
 3609 130e E0       		.byte	0xe0
 3610 130f 07       		.byte	0x7
 3611 1310 00000000 		.long	.LASF168
GAS LISTING x64lin/../common/event.s 			page 204


 3612 1314 7C5F0000 		.long	0x5f7c
 3613 1318 01       		.byte	0x1
 3614 1319 21130000 		.long	0x1321
 3615 131d 27130000 		.long	0x1327
 3616 1321 02       		.uleb128 0x2
 3617 1322 815F0000 		.long	0x5f81
 3618 1326 00       		.byte	0
 3619 1327 05       		.uleb128 0x5
 3620 1328 00000000 		.long	.LASF169
 3621 132c 27       		.byte	0x27
 3622 132d E4       		.byte	0xe4
 3623 132e 13       		.byte	0x13
 3624 132f 7C5F0000 		.long	0x5f7c
 3625 1333 00       		.byte	0
 3626 1334 05       		.uleb128 0x5
 3627 1335 00000000 		.long	.LASF170
 3628 1339 27       		.byte	0x27
 3629 133a E5       		.byte	0xe5
 3630 133b 0C       		.byte	0xc
 3631 133c 783F0000 		.long	0x3f78
 3632 1340 08       		.byte	0x8
 3633 1341 12       		.uleb128 0x12
 3634 1342 00000000 		.long	.LASF171
 3635 1346 100C0000 		.long	0xc10
 3636 134a 00       		.byte	0
 3637 134b 08       		.uleb128 0x8
 3638 134c CE100000 		.long	0x10ce
 3639 1350 23       		.uleb128 0x23
 3640 1351 00000000 		.long	.LASF172
 3641 1355 08       		.byte	0x8
 3642 1356 02       		.byte	0x2
 3643 1357 DF       		.byte	0xdf
 3644 1358 0B       		.byte	0xb
 3645 1359 28140000 		.long	0x1428
 3646 135d 50       		.uleb128 0x50
 3647 135e 00000000 		.long	.LASF173
 3648 1362 02       		.byte	0x2
 3649 1363 E4       		.byte	0xe4
 3650 1364 10       		.byte	0x10
 3651 1365 00000000 		.long	.LASF174
 3652 1369 71130000 		.long	0x1371
 3653 136d 7C130000 		.long	0x137c
 3654 1371 02       		.uleb128 0x2
 3655 1372 865F0000 		.long	0x5f86
 3656 1376 01       		.uleb128 0x1
 3657 1377 905F0000 		.long	0x5f90
 3658 137b 00       		.byte	0
 3659 137c 27       		.uleb128 0x27
 3660 137d 00000000 		.long	.LASF149
 3661 1381 02       		.byte	0x2
 3662 1382 E2       		.byte	0xe2
 3663 1383 16       		.byte	0x16
 3664 1384 100C0000 		.long	0xc10
 3665 1388 01       		.byte	0x1
 3666 1389 0D       		.uleb128 0xd
 3667 138a 00000000 		.long	.LASF173
 3668 138e 02       		.byte	0x2
GAS LISTING x64lin/../common/event.s 			page 205


 3669 138f E7       		.byte	0xe7
 3670 1390 07       		.byte	0x7
 3671 1391 00000000 		.long	.LASF175
 3672 1395 01       		.byte	0x1
 3673 1396 9E130000 		.long	0x139e
 3674 139a AE130000 		.long	0x13ae
 3675 139e 02       		.uleb128 0x2
 3676 139f 865F0000 		.long	0x5f86
 3677 13a3 01       		.uleb128 0x1
 3678 13a4 905F0000 		.long	0x5f90
 3679 13a8 01       		.uleb128 0x1
 3680 13a9 D60E0000 		.long	0xed6
 3681 13ad 00       		.byte	0
 3682 13ae 0D       		.uleb128 0xd
 3683 13af 00000000 		.long	.LASF176
 3684 13b3 02       		.byte	0x2
 3685 13b4 EA       		.byte	0xea
 3686 13b5 07       		.byte	0x7
 3687 13b6 00000000 		.long	.LASF177
 3688 13ba 01       		.byte	0x1
 3689 13bb C3130000 		.long	0x13c3
 3690 13bf CE130000 		.long	0x13ce
 3691 13c3 02       		.uleb128 0x2
 3692 13c4 865F0000 		.long	0x5f86
 3693 13c8 02       		.uleb128 0x2
 3694 13c9 4C430000 		.long	0x434c
 3695 13cd 00       		.byte	0
 3696 13ce 3E       		.uleb128 0x3e
 3697 13cf 00000000 		.long	.LASF173
 3698 13d3 02       		.byte	0x2
 3699 13d4 ED       		.byte	0xed
 3700 13d5 07       		.byte	0x7
 3701 13d6 00000000 		.long	.LASF178
 3702 13da 01       		.byte	0x1
 3703 13db E3130000 		.long	0x13e3
 3704 13df EE130000 		.long	0x13ee
 3705 13e3 02       		.uleb128 0x2
 3706 13e4 865F0000 		.long	0x5f86
 3707 13e8 01       		.uleb128 0x1
 3708 13e9 955F0000 		.long	0x5f95
 3709 13ed 00       		.byte	0
 3710 13ee 47       		.uleb128 0x47
 3711 13ef 00000000 		.long	.LASF73
 3712 13f3 02       		.byte	0x2
 3713 13f4 EE       		.byte	0xee
 3714 13f5 13       		.byte	0x13
 3715 13f6 00000000 		.long	.LASF179
 3716 13fa 9A5F0000 		.long	0x5f9a
 3717 13fe 06140000 		.long	0x1406
 3718 1402 11140000 		.long	0x1411
 3719 1406 02       		.uleb128 0x2
 3720 1407 865F0000 		.long	0x5f86
 3721 140b 01       		.uleb128 0x1
 3722 140c 955F0000 		.long	0x5f95
 3723 1410 00       		.byte	0
 3724 1411 05       		.uleb128 0x5
 3725 1412 00000000 		.long	.LASF169
GAS LISTING x64lin/../common/event.s 			page 206


 3726 1416 02       		.byte	0x2
 3727 1417 F1       		.byte	0xf1
 3728 1418 13       		.byte	0x13
 3729 1419 905F0000 		.long	0x5f90
 3730 141d 00       		.byte	0
 3731 141e 12       		.uleb128 0x12
 3732 141f 00000000 		.long	.LASF171
 3733 1423 100C0000 		.long	0xc10
 3734 1427 00       		.byte	0
 3735 1428 08       		.uleb128 0x8
 3736 1429 50130000 		.long	0x1350
 3737 142d 23       		.uleb128 0x23
 3738 142e 00000000 		.long	.LASF180
 3739 1432 08       		.byte	0x8
 3740 1433 09       		.byte	0x9
 3741 1434 F2       		.byte	0xf2
 3742 1435 0B       		.byte	0xb
 3743 1436 70160000 		.long	0x1670
 3744 143a 05       		.uleb128 0x5
 3745 143b 00000000 		.long	.LASF181
 3746 143f 09       		.byte	0x9
 3747 1440 F8       		.byte	0xf8
 3748 1441 21       		.byte	0x21
 3749 1442 B5380000 		.long	0x38b5
 3750 1446 00       		.byte	0
 3751 1447 48       		.uleb128 0x48
 3752 1448 00000000 		.long	.LASF182
 3753 144c 09       		.byte	0x9
 3754 144d 4701     		.value	0x147
 3755 144f 07       		.byte	0x7
 3756 1450 00000000 		.long	.LASF184
 3757 1454 5C140000 		.long	0x145c
 3758 1458 67140000 		.long	0x1467
 3759 145c 02       		.uleb128 0x2
 3760 145d E65F0000 		.long	0x5fe6
 3761 1461 01       		.uleb128 0x1
 3762 1462 C1620000 		.long	0x62c1
 3763 1466 00       		.byte	0
 3764 1467 0B       		.uleb128 0xb
 3765 1468 00000000 		.long	.LASF183
 3766 146c 09       		.byte	0x9
 3767 146d 6301     		.value	0x163
 3768 146f 07       		.byte	0x7
 3769 1470 00000000 		.long	.LASF199
 3770 1474 01       		.byte	0x1
 3771 1475 7D140000 		.long	0x147d
 3772 1479 88140000 		.long	0x1488
 3773 147d 02       		.uleb128 0x2
 3774 147e E65F0000 		.long	0x5fe6
 3775 1482 02       		.uleb128 0x2
 3776 1483 4C430000 		.long	0x434c
 3777 1487 00       		.byte	0
 3778 1488 8901     		.uleb128 0x89
 3779 148a 00000000 		.long	.LASF73
 3780 148e 09       		.byte	0x9
 3781 148f 7301     		.value	0x173
 3782 1491 13       		.byte	0x13
GAS LISTING x64lin/../common/event.s 			page 207


 3783 1492 00000000 		.long	.LASF195
 3784 1496 81600000 		.long	0x6081
 3785 149a 01       		.byte	0x1
 3786 149b 01       		.byte	0x1
 3787 149c A4140000 		.long	0x14a4
 3788 14a0 AF140000 		.long	0x14af
 3789 14a4 02       		.uleb128 0x2
 3790 14a5 E65F0000 		.long	0x5fe6
 3791 14a9 01       		.uleb128 0x1
 3792 14aa C1620000 		.long	0x62c1
 3793 14ae 00       		.byte	0
 3794 14af 0F       		.uleb128 0xf
 3795 14b0 00000000 		.long	.LASF73
 3796 14b4 09       		.byte	0x9
 3797 14b5 8B01     		.value	0x18b
 3798 14b7 07       		.byte	0x7
 3799 14b8 00000000 		.long	.LASF185
 3800 14bc 81600000 		.long	0x6081
 3801 14c0 01       		.byte	0x1
 3802 14c1 C9140000 		.long	0x14c9
 3803 14c5 D4140000 		.long	0x14d4
 3804 14c9 02       		.uleb128 0x2
 3805 14ca E65F0000 		.long	0x5fe6
 3806 14ce 01       		.uleb128 0x1
 3807 14cf AC070000 		.long	0x7ac
 3808 14d3 00       		.byte	0
 3809 14d4 0F       		.uleb128 0xf
 3810 14d5 00000000 		.long	.LASF186
 3811 14d9 09       		.byte	0x9
 3812 14da 9501     		.value	0x195
 3813 14dc 07       		.byte	0x7
 3814 14dd 00000000 		.long	.LASF187
 3815 14e1 28390000 		.long	0x3928
 3816 14e5 01       		.byte	0x1
 3817 14e6 EE140000 		.long	0x14ee
 3818 14ea F4140000 		.long	0x14f4
 3819 14ee 02       		.uleb128 0x2
 3820 14ef 18600000 		.long	0x6018
 3821 14f3 00       		.byte	0
 3822 14f4 27       		.uleb128 0x27
 3823 14f5 00000000 		.long	.LASF188
 3824 14f9 09       		.byte	0x9
 3825 14fa FB       		.byte	0xfb
 3826 14fb 0D       		.byte	0xd
 3827 14fc AE310000 		.long	0x31ae
 3828 1500 01       		.byte	0x1
 3829 1501 0F       		.uleb128 0xf
 3830 1502 00000000 		.long	.LASF189
 3831 1506 09       		.byte	0x9
 3832 1507 9D01     		.value	0x19d
 3833 1509 07       		.byte	0x7
 3834 150a 00000000 		.long	.LASF190
 3835 150e F4140000 		.long	0x14f4
 3836 1512 01       		.byte	0x1
 3837 1513 1B150000 		.long	0x151b
 3838 1517 21150000 		.long	0x1521
 3839 151b 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 208


 3840 151c 18600000 		.long	0x6018
 3841 1520 00       		.byte	0
 3842 1521 49       		.uleb128 0x49
 3843 1522 67657400 		.string	"get"
 3844 1526 09       		.byte	0x9
 3845 1527 A501     		.value	0x1a5
 3846 1529 00000000 		.long	.LASF362
 3847 152d F4140000 		.long	0x14f4
 3848 1531 39150000 		.long	0x1539
 3849 1535 3F150000 		.long	0x153f
 3850 1539 02       		.uleb128 0x2
 3851 153a 18600000 		.long	0x6018
 3852 153e 00       		.byte	0
 3853 153f 27       		.uleb128 0x27
 3854 1540 00000000 		.long	.LASF191
 3855 1544 09       		.byte	0x9
 3856 1545 FD       		.byte	0xfd
 3857 1546 0D       		.byte	0xd
 3858 1547 E5300000 		.long	0x30e5
 3859 154b 01       		.byte	0x1
 3860 154c 08       		.uleb128 0x8
 3861 154d 3F150000 		.long	0x153f
 3862 1551 0F       		.uleb128 0xf
 3863 1552 00000000 		.long	.LASF192
 3864 1556 09       		.byte	0x9
 3865 1557 AA01     		.value	0x1aa
 3866 1559 07       		.byte	0x7
 3867 155a 00000000 		.long	.LASF193
 3868 155e C6620000 		.long	0x62c6
 3869 1562 01       		.byte	0x1
 3870 1563 6B150000 		.long	0x156b
 3871 1567 71150000 		.long	0x1571
 3872 156b 02       		.uleb128 0x2
 3873 156c E65F0000 		.long	0x5fe6
 3874 1570 00       		.byte	0
 3875 1571 0F       		.uleb128 0xf
 3876 1572 00000000 		.long	.LASF192
 3877 1576 09       		.byte	0x9
 3878 1577 AF01     		.value	0x1af
 3879 1579 07       		.byte	0x7
 3880 157a 00000000 		.long	.LASF194
 3881 157e CB620000 		.long	0x62cb
 3882 1582 01       		.byte	0x1
 3883 1583 8B150000 		.long	0x158b
 3884 1587 91150000 		.long	0x1591
 3885 158b 02       		.uleb128 0x2
 3886 158c 18600000 		.long	0x6018
 3887 1590 00       		.byte	0
 3888 1591 8A01     		.uleb128 0x8a
 3889 1593 00000000 		.long	.LASF93
 3890 1597 09       		.byte	0x9
 3891 1598 B301     		.value	0x1b3
 3892 159a 10       		.byte	0x10
 3893 159b 00000000 		.long	.LASF196
 3894 159f 783F0000 		.long	0x3f78
 3895 15a3 01       		.byte	0x1
 3896 15a4 AC150000 		.long	0x15ac
GAS LISTING x64lin/../common/event.s 			page 209


 3897 15a8 B2150000 		.long	0x15b2
 3898 15ac 02       		.uleb128 0x2
 3899 15ad 18600000 		.long	0x6018
 3900 15b1 00       		.byte	0
 3901 15b2 0F       		.uleb128 0xf
 3902 15b3 00000000 		.long	.LASF163
 3903 15b7 09       		.byte	0x9
 3904 15b8 BA01     		.value	0x1ba
 3905 15ba 07       		.byte	0x7
 3906 15bb 00000000 		.long	.LASF197
 3907 15bf F4140000 		.long	0x14f4
 3908 15c3 01       		.byte	0x1
 3909 15c4 CC150000 		.long	0x15cc
 3910 15c8 D2150000 		.long	0x15d2
 3911 15cc 02       		.uleb128 0x2
 3912 15cd E65F0000 		.long	0x5fe6
 3913 15d1 00       		.byte	0
 3914 15d2 0B       		.uleb128 0xb
 3915 15d3 00000000 		.long	.LASF198
 3916 15d7 09       		.byte	0x9
 3917 15d8 C401     		.value	0x1c4
 3918 15da 07       		.byte	0x7
 3919 15db 00000000 		.long	.LASF200
 3920 15df 01       		.byte	0x1
 3921 15e0 E8150000 		.long	0x15e8
 3922 15e4 F3150000 		.long	0x15f3
 3923 15e8 02       		.uleb128 0x2
 3924 15e9 E65F0000 		.long	0x5fe6
 3925 15ed 01       		.uleb128 0x1
 3926 15ee F4140000 		.long	0x14f4
 3927 15f2 00       		.byte	0
 3928 15f3 0B       		.uleb128 0xb
 3929 15f4 00000000 		.long	.LASF78
 3930 15f8 09       		.byte	0x9
 3931 15f9 CD01     		.value	0x1cd
 3932 15fb 07       		.byte	0x7
 3933 15fc 00000000 		.long	.LASF201
 3934 1600 01       		.byte	0x1
 3935 1601 09160000 		.long	0x1609
 3936 1605 14160000 		.long	0x1614
 3937 1609 02       		.uleb128 0x2
 3938 160a E65F0000 		.long	0x5fe6
 3939 160e 01       		.uleb128 0x1
 3940 160f 81600000 		.long	0x6081
 3941 1613 00       		.byte	0
 3942 1614 8B01     		.uleb128 0x8b
 3943 1616 00000000 		.long	.LASF182
 3944 161a 09       		.byte	0x9
 3945 161b D401     		.value	0x1d4
 3946 161d 07       		.byte	0x7
 3947 161e 00000000 		.long	.LASF202
 3948 1622 01       		.byte	0x1
 3949 1623 2B160000 		.long	0x162b
 3950 1627 36160000 		.long	0x1636
 3951 162b 02       		.uleb128 0x2
 3952 162c E65F0000 		.long	0x5fe6
 3953 1630 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 210


 3954 1631 D0620000 		.long	0x62d0
 3955 1635 00       		.byte	0
 3956 1636 8C01     		.uleb128 0x8c
 3957 1638 00000000 		.long	.LASF73
 3958 163c 09       		.byte	0x9
 3959 163d D501     		.value	0x1d5
 3960 163f 13       		.byte	0x13
 3961 1640 00000000 		.long	.LASF203
 3962 1644 81600000 		.long	0x6081
 3963 1648 01       		.byte	0x1
 3964 1649 51160000 		.long	0x1651
 3965 164d 5C160000 		.long	0x165c
 3966 1651 02       		.uleb128 0x2
 3967 1652 E65F0000 		.long	0x5fe6
 3968 1656 01       		.uleb128 0x1
 3969 1657 D0620000 		.long	0x62d0
 3970 165b 00       		.byte	0
 3971 165c 0A       		.uleb128 0xa
 3972 165d 5F547000 		.string	"_Tp"
 3973 1661 74610000 		.long	0x6174
 3974 1665 8D01     		.uleb128 0x8d
 3975 1667 5F447000 		.string	"_Dp"
 3976 166b E5300000 		.long	0x30e5
 3977 166f 00       		.byte	0
 3978 1670 08       		.uleb128 0x8
 3979 1671 2D140000 		.long	0x142d
 3980 1675 23       		.uleb128 0x23
 3981 1676 00000000 		.long	.LASF204
 3982 167a 01       		.byte	0x1
 3983 167b 0C       		.byte	0xc
 3984 167c 7C       		.byte	0x7c
 3985 167d 0B       		.byte	0xb
 3986 167e 48170000 		.long	0x1748
 3987 1682 3F       		.uleb128 0x3f
 3988 1683 40400000 		.long	0x4040
 3989 1687 01       		.byte	0x1
 3990 1688 0D       		.uleb128 0xd
 3991 1689 00000000 		.long	.LASF205
 3992 168d 0C       		.byte	0xc
 3993 168e 9C       		.byte	0x9c
 3994 168f 07       		.byte	0x7
 3995 1690 00000000 		.long	.LASF206
 3996 1694 01       		.byte	0x1
 3997 1695 9D160000 		.long	0x169d
 3998 1699 A3160000 		.long	0x16a3
 3999 169d 02       		.uleb128 0x2
 4000 169e FA5F0000 		.long	0x5ffa
 4001 16a2 00       		.byte	0
 4002 16a3 0D       		.uleb128 0xd
 4003 16a4 00000000 		.long	.LASF205
 4004 16a8 0C       		.byte	0xc
 4005 16a9 9F       		.byte	0x9f
 4006 16aa 07       		.byte	0x7
 4007 16ab 00000000 		.long	.LASF207
 4008 16af 01       		.byte	0x1
 4009 16b0 B8160000 		.long	0x16b8
 4010 16b4 C3160000 		.long	0x16c3
GAS LISTING x64lin/../common/event.s 			page 211


 4011 16b8 02       		.uleb128 0x2
 4012 16b9 FA5F0000 		.long	0x5ffa
 4013 16bd 01       		.uleb128 0x1
 4014 16be 04600000 		.long	0x6004
 4015 16c2 00       		.byte	0
 4016 16c3 67       		.uleb128 0x67
 4017 16c4 00000000 		.long	.LASF73
 4018 16c8 A4       		.byte	0xa4
 4019 16c9 00000000 		.long	.LASF208
 4020 16cd 09600000 		.long	0x6009
 4021 16d1 D9160000 		.long	0x16d9
 4022 16d5 E4160000 		.long	0x16e4
 4023 16d9 02       		.uleb128 0x2
 4024 16da FA5F0000 		.long	0x5ffa
 4025 16de 01       		.uleb128 0x1
 4026 16df 04600000 		.long	0x6004
 4027 16e3 00       		.byte	0
 4028 16e4 0D       		.uleb128 0xd
 4029 16e5 00000000 		.long	.LASF209
 4030 16e9 0C       		.byte	0xc
 4031 16ea AE       		.byte	0xae
 4032 16eb 07       		.byte	0x7
 4033 16ec 00000000 		.long	.LASF210
 4034 16f0 01       		.byte	0x1
 4035 16f1 F9160000 		.long	0x16f9
 4036 16f5 04170000 		.long	0x1704
 4037 16f9 02       		.uleb128 0x2
 4038 16fa FA5F0000 		.long	0x5ffa
 4039 16fe 02       		.uleb128 0x2
 4040 16ff 4C430000 		.long	0x434c
 4041 1703 00       		.byte	0
 4042 1704 17       		.uleb128 0x17
 4043 1705 00000000 		.long	.LASF211
 4044 1709 0C       		.byte	0xc
 4045 170a B3       		.byte	0xb3
 4046 170b 07       		.byte	0x7
 4047 170c 00000000 		.long	.LASF212
 4048 1710 E65F0000 		.long	0x5fe6
 4049 1714 01       		.byte	0x1
 4050 1715 1D170000 		.long	0x171d
 4051 1719 28170000 		.long	0x1728
 4052 171d 02       		.uleb128 0x2
 4053 171e FA5F0000 		.long	0x5ffa
 4054 1722 01       		.uleb128 0x1
 4055 1723 21010000 		.long	0x121
 4056 1727 00       		.byte	0
 4057 1728 68       		.uleb128 0x68
 4058 1729 00000000 		.long	.LASF213
 4059 172d BE       		.byte	0xbe
 4060 172e 07       		.byte	0x7
 4061 172f 00000000 		.long	.LASF214
 4062 1733 37170000 		.long	0x1737
 4063 1737 02       		.uleb128 0x2
 4064 1738 FA5F0000 		.long	0x5ffa
 4065 173c 01       		.uleb128 0x1
 4066 173d E65F0000 		.long	0x5fe6
 4067 1741 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 212


 4068 1742 21010000 		.long	0x121
 4069 1746 00       		.byte	0
 4070 1747 00       		.byte	0
 4071 1748 08       		.uleb128 0x8
 4072 1749 75160000 		.long	0x1675
 4073 174d 25       		.uleb128 0x25
 4074 174e 00000000 		.long	.LASF215
 4075 1752 01       		.byte	0x1
 4076 1753 07       		.byte	0x7
 4077 1754 9B01     		.value	0x19b
 4078 1756 89180000 		.long	0x1889
 4079 175a 18       		.uleb128 0x18
 4080 175b 00000000 		.long	.LASF188
 4081 175f 07       		.byte	0x7
 4082 1760 A401     		.value	0x1a4
 4083 1762 0D       		.byte	0xd
 4084 1763 E65F0000 		.long	0x5fe6
 4085 1767 14       		.uleb128 0x14
 4086 1768 00000000 		.long	.LASF211
 4087 176c 07       		.byte	0x7
 4088 176d CF01     		.value	0x1cf
 4089 176f 07       		.byte	0x7
 4090 1770 00000000 		.long	.LASF216
 4091 1774 5A170000 		.long	0x175a
 4092 1778 87170000 		.long	0x1787
 4093 177c 01       		.uleb128 0x1
 4094 177d 0E600000 		.long	0x600e
 4095 1781 01       		.uleb128 0x1
 4096 1782 99170000 		.long	0x1799
 4097 1786 00       		.byte	0
 4098 1787 18       		.uleb128 0x18
 4099 1788 00000000 		.long	.LASF217
 4100 178c 07       		.byte	0x7
 4101 178d 9E01     		.value	0x19e
 4102 178f 0D       		.byte	0xd
 4103 1790 75160000 		.long	0x1675
 4104 1794 08       		.uleb128 0x8
 4105 1795 87170000 		.long	0x1787
 4106 1799 18       		.uleb128 0x18
 4107 179a 00000000 		.long	.LASF218
 4108 179e 07       		.byte	0x7
 4109 179f B301     		.value	0x1b3
 4110 17a1 0D       		.byte	0xd
 4111 17a2 21010000 		.long	0x121
 4112 17a6 14       		.uleb128 0x14
 4113 17a7 00000000 		.long	.LASF211
 4114 17ab 07       		.byte	0x7
 4115 17ac DD01     		.value	0x1dd
 4116 17ae 07       		.byte	0x7
 4117 17af 00000000 		.long	.LASF219
 4118 17b3 5A170000 		.long	0x175a
 4119 17b7 CB170000 		.long	0x17cb
 4120 17bb 01       		.uleb128 0x1
 4121 17bc 0E600000 		.long	0x600e
 4122 17c0 01       		.uleb128 0x1
 4123 17c1 99170000 		.long	0x1799
 4124 17c5 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 213


 4125 17c6 CB170000 		.long	0x17cb
 4126 17ca 00       		.byte	0
 4127 17cb 18       		.uleb128 0x18
 4128 17cc 00000000 		.long	.LASF220
 4129 17d0 07       		.byte	0x7
 4130 17d1 AD01     		.value	0x1ad
 4131 17d3 0D       		.byte	0xd
 4132 17d4 29510000 		.long	0x5129
 4133 17d8 69       		.uleb128 0x69
 4134 17d9 00000000 		.long	.LASF213
 4135 17dd 00000000 		.long	.LASF292
 4136 17e1 F5170000 		.long	0x17f5
 4137 17e5 01       		.uleb128 0x1
 4138 17e6 0E600000 		.long	0x600e
 4139 17ea 01       		.uleb128 0x1
 4140 17eb 5A170000 		.long	0x175a
 4141 17ef 01       		.uleb128 0x1
 4142 17f0 99170000 		.long	0x1799
 4143 17f4 00       		.byte	0
 4144 17f5 14       		.uleb128 0x14
 4145 17f6 00000000 		.long	.LASF221
 4146 17fa 07       		.byte	0x7
 4147 17fb 2302     		.value	0x223
 4148 17fd 07       		.byte	0x7
 4149 17fe 00000000 		.long	.LASF222
 4150 1802 99170000 		.long	0x1799
 4151 1806 10180000 		.long	0x1810
 4152 180a 01       		.uleb128 0x1
 4153 180b 13600000 		.long	0x6013
 4154 180f 00       		.byte	0
 4155 1810 14       		.uleb128 0x14
 4156 1811 00000000 		.long	.LASF223
 4157 1815 07       		.byte	0x7
 4158 1816 3202     		.value	0x232
 4159 1818 07       		.byte	0x7
 4160 1819 00000000 		.long	.LASF224
 4161 181d 87170000 		.long	0x1787
 4162 1821 2B180000 		.long	0x182b
 4163 1825 01       		.uleb128 0x1
 4164 1826 13600000 		.long	0x6013
 4165 182a 00       		.byte	0
 4166 182b 18       		.uleb128 0x18
 4167 182c 00000000 		.long	.LASF8
 4168 1830 07       		.byte	0x7
 4169 1831 A101     		.value	0x1a1
 4170 1833 0D       		.byte	0xd
 4171 1834 2D140000 		.long	0x142d
 4172 1838 18       		.uleb128 0x18
 4173 1839 00000000 		.long	.LASF225
 4174 183d 07       		.byte	0x7
 4175 183e C201     		.value	0x1c2
 4176 1840 08       		.byte	0x8
 4177 1841 75160000 		.long	0x1675
 4178 1845 18       		.uleb128 0x18
 4179 1846 00000000 		.long	.LASF225
 4180 184a 07       		.byte	0x7
 4181 184b C201     		.value	0x1c2
GAS LISTING x64lin/../common/event.s 			page 214


 4182 184d 08       		.byte	0x8
 4183 184e 89180000 		.long	0x1889
 4184 1852 8E01     		.uleb128 0x8e
 4185 1854 00000000 		.long	.LASF969
 4186 1858 07       		.byte	0x7
 4187 1859 FF01     		.value	0x1ff
 4188 185b 02       		.byte	0x2
 4189 185c 00000000 		.long	.LASF1136
 4190 1860 0A       		.uleb128 0xa
 4191 1861 5F557000 		.string	"_Up"
 4192 1865 2D140000 		.long	0x142d
 4193 1869 2A       		.uleb128 0x2a
 4194 186a 00000000 		.long	.LASF480
 4195 186e 78180000 		.long	0x1878
 4196 1872 21       		.uleb128 0x21
 4197 1873 2D140000 		.long	0x142d
 4198 1877 00       		.byte	0
 4199 1878 01       		.uleb128 0x1
 4200 1879 0E600000 		.long	0x600e
 4201 187d 01       		.uleb128 0x1
 4202 187e E65F0000 		.long	0x5fe6
 4203 1882 01       		.uleb128 0x1
 4204 1883 C1620000 		.long	0x62c1
 4205 1887 00       		.byte	0
 4206 1888 00       		.byte	0
 4207 1889 23       		.uleb128 0x23
 4208 188a 00000000 		.long	.LASF226
 4209 188e 01       		.byte	0x1
 4210 188f 0C       		.byte	0xc
 4211 1890 7C       		.byte	0x7c
 4212 1891 0B       		.byte	0xb
 4213 1892 85190000 		.long	0x1985
 4214 1896 3F       		.uleb128 0x3f
 4215 1897 4C420000 		.long	0x424c
 4216 189b 01       		.byte	0x1
 4217 189c 0D       		.uleb128 0xd
 4218 189d 00000000 		.long	.LASF205
 4219 18a1 0C       		.byte	0xc
 4220 18a2 9C       		.byte	0x9c
 4221 18a3 07       		.byte	0x7
 4222 18a4 00000000 		.long	.LASF227
 4223 18a8 01       		.byte	0x1
 4224 18a9 B1180000 		.long	0x18b1
 4225 18ad B7180000 		.long	0x18b7
 4226 18b1 02       		.uleb128 0x2
 4227 18b2 4A600000 		.long	0x604a
 4228 18b6 00       		.byte	0
 4229 18b7 0D       		.uleb128 0xd
 4230 18b8 00000000 		.long	.LASF205
 4231 18bc 0C       		.byte	0xc
 4232 18bd 9F       		.byte	0x9f
 4233 18be 07       		.byte	0x7
 4234 18bf 00000000 		.long	.LASF228
 4235 18c3 01       		.byte	0x1
 4236 18c4 CC180000 		.long	0x18cc
 4237 18c8 D7180000 		.long	0x18d7
 4238 18cc 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 215


 4239 18cd 4A600000 		.long	0x604a
 4240 18d1 01       		.uleb128 0x1
 4241 18d2 54600000 		.long	0x6054
 4242 18d6 00       		.byte	0
 4243 18d7 67       		.uleb128 0x67
 4244 18d8 00000000 		.long	.LASF73
 4245 18dc A4       		.byte	0xa4
 4246 18dd 00000000 		.long	.LASF229
 4247 18e1 59600000 		.long	0x6059
 4248 18e5 ED180000 		.long	0x18ed
 4249 18e9 F8180000 		.long	0x18f8
 4250 18ed 02       		.uleb128 0x2
 4251 18ee 4A600000 		.long	0x604a
 4252 18f2 01       		.uleb128 0x1
 4253 18f3 54600000 		.long	0x6054
 4254 18f7 00       		.byte	0
 4255 18f8 0D       		.uleb128 0xd
 4256 18f9 00000000 		.long	.LASF209
 4257 18fd 0C       		.byte	0xc
 4258 18fe AE       		.byte	0xae
 4259 18ff 07       		.byte	0x7
 4260 1900 00000000 		.long	.LASF230
 4261 1904 01       		.byte	0x1
 4262 1905 0D190000 		.long	0x190d
 4263 1909 18190000 		.long	0x1918
 4264 190d 02       		.uleb128 0x2
 4265 190e 4A600000 		.long	0x604a
 4266 1912 02       		.uleb128 0x2
 4267 1913 4C430000 		.long	0x434c
 4268 1917 00       		.byte	0
 4269 1918 17       		.uleb128 0x17
 4270 1919 00000000 		.long	.LASF211
 4271 191d 0C       		.byte	0xc
 4272 191e B3       		.byte	0xb3
 4273 191f 07       		.byte	0x7
 4274 1920 00000000 		.long	.LASF231
 4275 1924 36600000 		.long	0x6036
 4276 1928 01       		.byte	0x1
 4277 1929 31190000 		.long	0x1931
 4278 192d 3C190000 		.long	0x193c
 4279 1931 02       		.uleb128 0x2
 4280 1932 4A600000 		.long	0x604a
 4281 1936 01       		.uleb128 0x1
 4282 1937 21010000 		.long	0x121
 4283 193b 00       		.byte	0
 4284 193c 0D       		.uleb128 0xd
 4285 193d 00000000 		.long	.LASF213
 4286 1941 0C       		.byte	0xc
 4287 1942 BE       		.byte	0xbe
 4288 1943 07       		.byte	0x7
 4289 1944 00000000 		.long	.LASF232
 4290 1948 01       		.byte	0x1
 4291 1949 51190000 		.long	0x1951
 4292 194d 61190000 		.long	0x1961
 4293 1951 02       		.uleb128 0x2
 4294 1952 4A600000 		.long	0x604a
 4295 1956 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 216


 4296 1957 36600000 		.long	0x6036
 4297 195b 01       		.uleb128 0x1
 4298 195c 21010000 		.long	0x121
 4299 1960 00       		.byte	0
 4300 1961 68       		.uleb128 0x68
 4301 1962 00000000 		.long	.LASF233
 4302 1966 A9       		.byte	0xa9
 4303 1967 02       		.byte	0x2
 4304 1968 00000000 		.long	.LASF234
 4305 196c 79190000 		.long	0x1979
 4306 1970 12       		.uleb128 0x12
 4307 1971 00000000 		.long	.LASF235
 4308 1975 2D140000 		.long	0x142d
 4309 1979 02       		.uleb128 0x2
 4310 197a 4A600000 		.long	0x604a
 4311 197e 01       		.uleb128 0x1
 4312 197f 04600000 		.long	0x6004
 4313 1983 00       		.byte	0
 4314 1984 00       		.byte	0
 4315 1985 08       		.uleb128 0x8
 4316 1986 89180000 		.long	0x1889
 4317 198a 25       		.uleb128 0x25
 4318 198b 00000000 		.long	.LASF236
 4319 198f 01       		.byte	0x1
 4320 1990 0F       		.byte	0xf
 4321 1991 B108     		.value	0x8b1
 4322 1993 A5190000 		.long	0x19a5
 4323 1997 18       		.uleb128 0x18
 4324 1998 00000000 		.long	.LASF237
 4325 199c 0F       		.byte	0xf
 4326 199d B208     		.value	0x8b2
 4327 199f 18       		.byte	0x18
 4328 19a0 2D140000 		.long	0x142d
 4329 19a4 00       		.byte	0
 4330 19a5 16       		.uleb128 0x16
 4331 19a6 00000000 		.long	.LASF238
 4332 19aa 01       		.byte	0x1
 4333 19ab 28       		.byte	0x28
 4334 19ac 83       		.byte	0x83
 4335 19ad 0C       		.byte	0xc
 4336 19ae FA190000 		.long	0x19fa
 4337 19b2 06       		.uleb128 0x6
 4338 19b3 00000000 		.long	.LASF188
 4339 19b7 28       		.byte	0x28
 4340 19b8 86       		.byte	0x86
 4341 19b9 14       		.byte	0x14
 4342 19ba E65F0000 		.long	0x5fe6
 4343 19be 1A       		.uleb128 0x1a
 4344 19bf 00000000 		.long	.LASF239
 4345 19c3 28       		.byte	0x28
 4346 19c4 95       		.byte	0x95
 4347 19c5 07       		.byte	0x7
 4348 19c6 00000000 		.long	.LASF240
 4349 19ca B2190000 		.long	0x19b2
 4350 19ce D8190000 		.long	0x19d8
 4351 19d2 01       		.uleb128 0x1
 4352 19d3 5E600000 		.long	0x605e
GAS LISTING x64lin/../common/event.s 			page 217


 4353 19d7 00       		.byte	0
 4354 19d8 06       		.uleb128 0x6
 4355 19d9 00000000 		.long	.LASF241
 4356 19dd 28       		.byte	0x28
 4357 19de 8D       		.byte	0x8d
 4358 19df 0F       		.byte	0xf
 4359 19e0 E65F0000 		.long	0x5fe6
 4360 19e4 06       		.uleb128 0x6
 4361 19e5 00000000 		.long	.LASF241
 4362 19e9 28       		.byte	0x28
 4363 19ea 8D       		.byte	0x8d
 4364 19eb 0F       		.byte	0xf
 4365 19ec 36600000 		.long	0x6036
 4366 19f0 12       		.uleb128 0x12
 4367 19f1 00000000 		.long	.LASF242
 4368 19f5 E65F0000 		.long	0x5fe6
 4369 19f9 00       		.byte	0
 4370 19fa 06       		.uleb128 0x6
 4371 19fb 00000000 		.long	.LASF243
 4372 19ff 28       		.byte	0x28
 4373 1a00 3E       		.byte	0x3e
 4374 1a01 0B       		.byte	0xb
 4375 1a02 97190000 		.long	0x1997
 4376 1a06 16       		.uleb128 0x16
 4377 1a07 00000000 		.long	.LASF244
 4378 1a0b 20       		.byte	0x20
 4379 1a0c 05       		.byte	0x5
 4380 1a0d 71       		.byte	0x71
 4381 1a0e 0C       		.byte	0xc
 4382 1a0f BD1C0000 		.long	0x1cbd
 4383 1a13 40       		.uleb128 0x40
 4384 1a14 00000000 		.long	.LASF337
 4385 1a18 05       		.byte	0x5
 4386 1a19 83       		.byte	0x83
 4387 1a1a 15       		.byte	0x15
 4388 1a1b 00000000 		.long	.LASF600
 4389 1a1f 21010000 		.long	0x121
 4390 1a23 06       		.uleb128 0x6
 4391 1a24 00000000 		.long	.LASF245
 4392 1a28 05       		.byte	0x5
 4393 1a29 7F       		.byte	0x7f
 4394 1a2a 27       		.byte	0x27
 4395 1a2b C21C0000 		.long	0x1cc2
 4396 1a2f 05       		.uleb128 0x5
 4397 1a30 00000000 		.long	.LASF246
 4398 1a34 05       		.byte	0x5
 4399 1a35 8E       		.byte	0x8e
 4400 1a36 14       		.byte	0x14
 4401 1a37 231A0000 		.long	0x1a23
 4402 1a3b 00       		.byte	0
 4403 1a3c 05       		.uleb128 0x5
 4404 1a3d 00000000 		.long	.LASF247
 4405 1a41 05       		.byte	0x5
 4406 1a42 8F       		.byte	0x8f
 4407 1a43 14       		.byte	0x14
 4408 1a44 231A0000 		.long	0x1a23
 4409 1a48 08       		.byte	0x8
GAS LISTING x64lin/../common/event.s 			page 218


 4410 1a49 05       		.uleb128 0x5
 4411 1a4a 00000000 		.long	.LASF248
 4412 1a4e 05       		.byte	0x5
 4413 1a4f 90       		.byte	0x90
 4414 1a50 14       		.byte	0x14
 4415 1a51 231A0000 		.long	0x1a23
 4416 1a55 10       		.byte	0x10
 4417 1a56 06       		.uleb128 0x6
 4418 1a57 00000000 		.long	.LASF249
 4419 1a5b 05       		.byte	0x5
 4420 1a5c 80       		.byte	0x80
 4421 1a5d 30       		.byte	0x30
 4422 1a5e CE1C0000 		.long	0x1cce
 4423 1a62 05       		.uleb128 0x5
 4424 1a63 00000000 		.long	.LASF250
 4425 1a67 05       		.byte	0x5
 4426 1a68 91       		.byte	0x91
 4427 1a69 14       		.byte	0x14
 4428 1a6a 561A0000 		.long	0x1a56
 4429 1a6e 18       		.byte	0x18
 4430 1a6f 29       		.uleb128 0x29
 4431 1a70 00000000 		.long	.LASF251
 4432 1a74 05       		.byte	0x5
 4433 1a75 93       		.byte	0x93
 4434 1a76 07       		.byte	0x7
 4435 1a77 00000000 		.long	.LASF252
 4436 1a7b 831A0000 		.long	0x1a83
 4437 1a7f 931A0000 		.long	0x1a93
 4438 1a83 02       		.uleb128 0x2
 4439 1a84 63600000 		.long	0x6063
 4440 1a88 01       		.uleb128 0x1
 4441 1a89 231A0000 		.long	0x1a23
 4442 1a8d 01       		.uleb128 0x1
 4443 1a8e 561A0000 		.long	0x1a56
 4444 1a92 00       		.byte	0
 4445 1a93 29       		.uleb128 0x29
 4446 1a94 00000000 		.long	.LASF251
 4447 1a98 05       		.byte	0x5
 4448 1a99 97       		.byte	0x97
 4449 1a9a 07       		.byte	0x7
 4450 1a9b 00000000 		.long	.LASF253
 4451 1a9f A71A0000 		.long	0x1aa7
 4452 1aa3 AD1A0000 		.long	0x1aad
 4453 1aa7 02       		.uleb128 0x2
 4454 1aa8 63600000 		.long	0x6063
 4455 1aac 00       		.byte	0
 4456 1aad 29       		.uleb128 0x29
 4457 1aae 00000000 		.long	.LASF251
 4458 1ab2 05       		.byte	0x5
 4459 1ab3 A8       		.byte	0xa8
 4460 1ab4 07       		.byte	0x7
 4461 1ab5 00000000 		.long	.LASF254
 4462 1ab9 C11A0000 		.long	0x1ac1
 4463 1abd CC1A0000 		.long	0x1acc
 4464 1ac1 02       		.uleb128 0x2
 4465 1ac2 63600000 		.long	0x6063
 4466 1ac6 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 219


 4467 1ac7 6D600000 		.long	0x606d
 4468 1acb 00       		.byte	0
 4469 1acc 6A       		.uleb128 0x6a
 4470 1acd 00000000 		.long	.LASF73
 4471 1ad1 05       		.byte	0x5
 4472 1ad2 AC       		.byte	0xac
 4473 1ad3 00000000 		.long	.LASF255
 4474 1ad7 72600000 		.long	0x6072
 4475 1adb E31A0000 		.long	0x1ae3
 4476 1adf EE1A0000 		.long	0x1aee
 4477 1ae3 02       		.uleb128 0x2
 4478 1ae4 63600000 		.long	0x6063
 4479 1ae8 01       		.uleb128 0x1
 4480 1ae9 6D600000 		.long	0x606d
 4481 1aed 00       		.byte	0
 4482 1aee 06       		.uleb128 0x6
 4483 1aef 00000000 		.long	.LASF256
 4484 1af3 05       		.byte	0x5
 4485 1af4 7D       		.byte	0x7d
 4486 1af5 1B       		.byte	0x1b
 4487 1af6 FA1A0000 		.long	0x1afa
 4488 1afa 27       		.uleb128 0x27
 4489 1afb 00000000 		.long	.LASF257
 4490 1aff 05       		.byte	0x5
 4491 1b00 7B       		.byte	0x7b
 4492 1b01 08       		.byte	0x8
 4493 1b02 061A0000 		.long	0x1a06
 4494 1b06 03       		.byte	0x3
 4495 1b07 24       		.uleb128 0x24
 4496 1b08 00000000 		.long	.LASF258
 4497 1b0c 05       		.byte	0x5
 4498 1b0d B0       		.byte	0xb0
 4499 1b0e 07       		.byte	0x7
 4500 1b0f 00000000 		.long	.LASF259
 4501 1b13 EE1A0000 		.long	0x1aee
 4502 1b17 1F1B0000 		.long	0x1b1f
 4503 1b1b 251B0000 		.long	0x1b25
 4504 1b1f 02       		.uleb128 0x2
 4505 1b20 77600000 		.long	0x6077
 4506 1b24 00       		.byte	0
 4507 1b25 06       		.uleb128 0x6
 4508 1b26 00000000 		.long	.LASF260
 4509 1b2a 05       		.byte	0x5
 4510 1b2b 89       		.byte	0x89
 4511 1b2c 14       		.byte	0x14
 4512 1b2d 81600000 		.long	0x6081
 4513 1b31 24       		.uleb128 0x24
 4514 1b32 00000000 		.long	.LASF186
 4515 1b36 05       		.byte	0x5
 4516 1b37 B4       		.byte	0xb4
 4517 1b38 07       		.byte	0x7
 4518 1b39 00000000 		.long	.LASF261
 4519 1b3d 251B0000 		.long	0x1b25
 4520 1b41 491B0000 		.long	0x1b49
 4521 1b45 4F1B0000 		.long	0x1b4f
 4522 1b49 02       		.uleb128 0x2
 4523 1b4a 77600000 		.long	0x6077
GAS LISTING x64lin/../common/event.s 			page 220


 4524 1b4e 00       		.byte	0
 4525 1b4f 06       		.uleb128 0x6
 4526 1b50 00000000 		.long	.LASF188
 4527 1b54 05       		.byte	0x5
 4528 1b55 88       		.byte	0x88
 4529 1b56 14       		.byte	0x14
 4530 1b57 E65F0000 		.long	0x5fe6
 4531 1b5b 24       		.uleb128 0x24
 4532 1b5c 00000000 		.long	.LASF189
 4533 1b60 05       		.byte	0x5
 4534 1b61 B8       		.byte	0xb8
 4535 1b62 07       		.byte	0x7
 4536 1b63 00000000 		.long	.LASF262
 4537 1b67 4F1B0000 		.long	0x1b4f
 4538 1b6b 731B0000 		.long	0x1b73
 4539 1b6f 791B0000 		.long	0x1b79
 4540 1b73 02       		.uleb128 0x2
 4541 1b74 77600000 		.long	0x6077
 4542 1b78 00       		.byte	0
 4543 1b79 06       		.uleb128 0x6
 4544 1b7a 00000000 		.long	.LASF263
 4545 1b7e 05       		.byte	0x5
 4546 1b7f 8C       		.byte	0x8c
 4547 1b80 1F       		.byte	0x1f
 4548 1b81 061A0000 		.long	0x1a06
 4549 1b85 08       		.uleb128 0x8
 4550 1b86 791B0000 		.long	0x1b79
 4551 1b8a 24       		.uleb128 0x24
 4552 1b8b 00000000 		.long	.LASF264
 4553 1b8f 05       		.byte	0x5
 4554 1b90 BC       		.byte	0xbc
 4555 1b91 07       		.byte	0x7
 4556 1b92 00000000 		.long	.LASF265
 4557 1b96 86600000 		.long	0x6086
 4558 1b9a A21B0000 		.long	0x1ba2
 4559 1b9e A81B0000 		.long	0x1ba8
 4560 1ba2 02       		.uleb128 0x2
 4561 1ba3 63600000 		.long	0x6063
 4562 1ba7 00       		.byte	0
 4563 1ba8 24       		.uleb128 0x24
 4564 1ba9 00000000 		.long	.LASF264
 4565 1bad 05       		.byte	0x5
 4566 1bae C8       		.byte	0xc8
 4567 1baf 07       		.byte	0x7
 4568 1bb0 00000000 		.long	.LASF266
 4569 1bb4 791B0000 		.long	0x1b79
 4570 1bb8 C01B0000 		.long	0x1bc0
 4571 1bbc CB1B0000 		.long	0x1bcb
 4572 1bc0 02       		.uleb128 0x2
 4573 1bc1 63600000 		.long	0x6063
 4574 1bc5 01       		.uleb128 0x1
 4575 1bc6 4C430000 		.long	0x434c
 4576 1bca 00       		.byte	0
 4577 1bcb 24       		.uleb128 0x24
 4578 1bcc 00000000 		.long	.LASF267
 4579 1bd0 05       		.byte	0x5
 4580 1bd1 D0       		.byte	0xd0
GAS LISTING x64lin/../common/event.s 			page 221


 4581 1bd2 07       		.byte	0x7
 4582 1bd3 00000000 		.long	.LASF268
 4583 1bd7 86600000 		.long	0x6086
 4584 1bdb E31B0000 		.long	0x1be3
 4585 1bdf E91B0000 		.long	0x1be9
 4586 1be3 02       		.uleb128 0x2
 4587 1be4 63600000 		.long	0x6063
 4588 1be8 00       		.byte	0
 4589 1be9 24       		.uleb128 0x24
 4590 1bea 00000000 		.long	.LASF267
 4591 1bee 05       		.byte	0x5
 4592 1bef DC       		.byte	0xdc
 4593 1bf0 07       		.byte	0x7
 4594 1bf1 00000000 		.long	.LASF269
 4595 1bf5 791B0000 		.long	0x1b79
 4596 1bf9 011C0000 		.long	0x1c01
 4597 1bfd 0C1C0000 		.long	0x1c0c
 4598 1c01 02       		.uleb128 0x2
 4599 1c02 63600000 		.long	0x6063
 4600 1c06 01       		.uleb128 0x1
 4601 1c07 4C430000 		.long	0x434c
 4602 1c0b 00       		.byte	0
 4603 1c0c 24       		.uleb128 0x24
 4604 1c0d 00000000 		.long	.LASF270
 4605 1c11 05       		.byte	0x5
 4606 1c12 E4       		.byte	0xe4
 4607 1c13 07       		.byte	0x7
 4608 1c14 00000000 		.long	.LASF271
 4609 1c18 86600000 		.long	0x6086
 4610 1c1c 241C0000 		.long	0x1c24
 4611 1c20 2F1C0000 		.long	0x1c2f
 4612 1c24 02       		.uleb128 0x2
 4613 1c25 63600000 		.long	0x6063
 4614 1c29 01       		.uleb128 0x1
 4615 1c2a 2F1C0000 		.long	0x1c2f
 4616 1c2e 00       		.byte	0
 4617 1c2f 06       		.uleb128 0x6
 4618 1c30 00000000 		.long	.LASF272
 4619 1c34 05       		.byte	0x5
 4620 1c35 8B       		.byte	0x8b
 4621 1c36 19       		.byte	0x19
 4622 1c37 3D050000 		.long	0x53d
 4623 1c3b 24       		.uleb128 0x24
 4624 1c3c 00000000 		.long	.LASF273
 4625 1c40 05       		.byte	0x5
 4626 1c41 F7       		.byte	0xf7
 4627 1c42 07       		.byte	0x7
 4628 1c43 00000000 		.long	.LASF274
 4629 1c47 86600000 		.long	0x6086
 4630 1c4b 531C0000 		.long	0x1c53
 4631 1c4f 5E1C0000 		.long	0x1c5e
 4632 1c53 02       		.uleb128 0x2
 4633 1c54 63600000 		.long	0x6063
 4634 1c58 01       		.uleb128 0x1
 4635 1c59 2F1C0000 		.long	0x1c2f
 4636 1c5d 00       		.byte	0
 4637 1c5e 24       		.uleb128 0x24
GAS LISTING x64lin/../common/event.s 			page 222


 4638 1c5f 00000000 		.long	.LASF275
 4639 1c63 05       		.byte	0x5
 4640 1c64 FB       		.byte	0xfb
 4641 1c65 07       		.byte	0x7
 4642 1c66 00000000 		.long	.LASF276
 4643 1c6a 251B0000 		.long	0x1b25
 4644 1c6e 761C0000 		.long	0x1c76
 4645 1c72 811C0000 		.long	0x1c81
 4646 1c76 02       		.uleb128 0x2
 4647 1c77 77600000 		.long	0x6077
 4648 1c7b 01       		.uleb128 0x1
 4649 1c7c 2F1C0000 		.long	0x1c2f
 4650 1c80 00       		.byte	0
 4651 1c81 2E       		.uleb128 0x2e
 4652 1c82 00000000 		.long	.LASF277
 4653 1c86 05       		.byte	0x5
 4654 1c87 0401     		.value	0x104
 4655 1c89 07       		.byte	0x7
 4656 1c8a 00000000 		.long	.LASF278
 4657 1c8e 961C0000 		.long	0x1c96
 4658 1c92 A11C0000 		.long	0x1ca1
 4659 1c96 02       		.uleb128 0x2
 4660 1c97 63600000 		.long	0x6063
 4661 1c9b 01       		.uleb128 0x1
 4662 1c9c 561A0000 		.long	0x1a56
 4663 1ca0 00       		.byte	0
 4664 1ca1 0A       		.uleb128 0xa
 4665 1ca2 5F547000 		.string	"_Tp"
 4666 1ca6 2D140000 		.long	0x142d
 4667 1caa 12       		.uleb128 0x12
 4668 1cab 00000000 		.long	.LASF279
 4669 1caf 81600000 		.long	0x6081
 4670 1cb3 12       		.uleb128 0x12
 4671 1cb4 00000000 		.long	.LASF242
 4672 1cb8 E65F0000 		.long	0x5fe6
 4673 1cbc 00       		.byte	0
 4674 1cbd 08       		.uleb128 0x8
 4675 1cbe 061A0000 		.long	0x1a06
 4676 1cc2 06       		.uleb128 0x6
 4677 1cc3 00000000 		.long	.LASF280
 4678 1cc7 28       		.byte	0x28
 4679 1cc8 9B       		.byte	0x9b
 4680 1cc9 0B       		.byte	0xb
 4681 1cca D8190000 		.long	0x19d8
 4682 1cce 06       		.uleb128 0x6
 4683 1ccf 00000000 		.long	.LASF280
 4684 1cd3 28       		.byte	0x28
 4685 1cd4 9B       		.byte	0x9b
 4686 1cd5 0B       		.byte	0xb
 4687 1cd6 E4190000 		.long	0x19e4
 4688 1cda 51       		.uleb128 0x51
 4689 1cdb 00000000 		.long	.LASF994
 4690 1cdf 5C       		.uleb128 0x5c
 4691 1ce0 00000000 		.long	.LASF281
 4692 1ce4 50       		.byte	0x50
 4693 1ce5 05       		.byte	0x5
 4694 1ce6 9901     		.value	0x199
GAS LISTING x64lin/../common/event.s 			page 223


 4695 1ce8 96210000 		.long	0x2196
 4696 1cec 6B       		.uleb128 0x6b
 4697 1ced 00000000 		.long	.LASF286
 4698 1cf1 50       		.byte	0x50
 4699 1cf2 E801     		.value	0x1e8
 4700 1cf4 C81D0000 		.long	0x1dc8
 4701 1cf8 52       		.uleb128 0x52
 4702 1cf9 00000000 		.long	.LASF282
 4703 1cfd EA01     		.value	0x1ea
 4704 1cff 0F       		.byte	0xf
 4705 1d00 CD1D0000 		.long	0x1dcd
 4706 1d04 00       		.byte	0
 4707 1d05 52       		.uleb128 0x52
 4708 1d06 00000000 		.long	.LASF283
 4709 1d0a EB01     		.value	0x1eb
 4710 1d0c 09       		.byte	0x9
 4711 1d0d 21010000 		.long	0x121
 4712 1d11 08       		.byte	0x8
 4713 1d12 52       		.uleb128 0x52
 4714 1d13 00000000 		.long	.LASF284
 4715 1d17 EC01     		.value	0x1ec
 4716 1d19 0B       		.byte	0xb
 4717 1d1a DA1D0000 		.long	0x1dda
 4718 1d1e 10       		.byte	0x10
 4719 1d1f 52       		.uleb128 0x52
 4720 1d20 00000000 		.long	.LASF285
 4721 1d24 ED01     		.value	0x1ed
 4722 1d26 0B       		.byte	0xb
 4723 1d27 DA1D0000 		.long	0x1dda
 4724 1d2b 30       		.byte	0x30
 4725 1d2c 2E       		.uleb128 0x2e
 4726 1d2d 00000000 		.long	.LASF286
 4727 1d31 05       		.byte	0x5
 4728 1d32 EF01     		.value	0x1ef
 4729 1d34 02       		.byte	0x2
 4730 1d35 00000000 		.long	.LASF287
 4731 1d39 411D0000 		.long	0x1d41
 4732 1d3d 471D0000 		.long	0x1d47
 4733 1d41 02       		.uleb128 0x2
 4734 1d42 8B600000 		.long	0x608b
 4735 1d46 00       		.byte	0
 4736 1d47 4A       		.uleb128 0x4a
 4737 1d48 00000000 		.long	.LASF286
 4738 1d4c 05       		.byte	0x5
 4739 1d4d F401     		.value	0x1f4
 4740 1d4f 02       		.byte	0x2
 4741 1d50 00000000 		.long	.LASF288
 4742 1d54 5C1D0000 		.long	0x1d5c
 4743 1d58 671D0000 		.long	0x1d67
 4744 1d5c 02       		.uleb128 0x2
 4745 1d5d 8B600000 		.long	0x608b
 4746 1d61 01       		.uleb128 0x1
 4747 1d62 90600000 		.long	0x6090
 4748 1d66 00       		.byte	0
 4749 1d67 8F01     		.uleb128 0x8f
 4750 1d69 00000000 		.long	.LASF73
 4751 1d6d 05       		.byte	0x5
GAS LISTING x64lin/../common/event.s 			page 224


 4752 1d6e F601     		.value	0x1f6
 4753 1d70 02       		.byte	0x2
 4754 1d71 00000000 		.long	.LASF289
 4755 1d75 95600000 		.long	0x6095
 4756 1d79 01       		.byte	0x1
 4757 1d7a 821D0000 		.long	0x1d82
 4758 1d7e 8D1D0000 		.long	0x1d8d
 4759 1d82 02       		.uleb128 0x2
 4760 1d83 8B600000 		.long	0x608b
 4761 1d87 01       		.uleb128 0x1
 4762 1d88 90600000 		.long	0x6090
 4763 1d8c 00       		.byte	0
 4764 1d8d 2E       		.uleb128 0x2e
 4765 1d8e 00000000 		.long	.LASF286
 4766 1d92 05       		.byte	0x5
 4767 1d93 F801     		.value	0x1f8
 4768 1d95 02       		.byte	0x2
 4769 1d96 00000000 		.long	.LASF290
 4770 1d9a A21D0000 		.long	0x1da2
 4771 1d9e AD1D0000 		.long	0x1dad
 4772 1da2 02       		.uleb128 0x2
 4773 1da3 8B600000 		.long	0x608b
 4774 1da7 01       		.uleb128 0x1
 4775 1da8 9A600000 		.long	0x609a
 4776 1dac 00       		.byte	0
 4777 1dad 6C       		.uleb128 0x6c
 4778 1dae 00000000 		.long	.LASF291
 4779 1db2 FE01     		.value	0x1fe
 4780 1db4 00000000 		.long	.LASF293
 4781 1db8 BC1D0000 		.long	0x1dbc
 4782 1dbc 02       		.uleb128 0x2
 4783 1dbd 8B600000 		.long	0x608b
 4784 1dc1 01       		.uleb128 0x1
 4785 1dc2 95600000 		.long	0x6095
 4786 1dc6 00       		.byte	0
 4787 1dc7 00       		.byte	0
 4788 1dc8 08       		.uleb128 0x8
 4789 1dc9 EC1C0000 		.long	0x1cec
 4790 1dcd 26       		.uleb128 0x26
 4791 1dce 00000000 		.long	.LASF249
 4792 1dd2 E601     		.value	0x1e6
 4793 1dd4 2F       		.byte	0x2f
 4794 1dd5 561A0000 		.long	0x1a56
 4795 1dd9 02       		.byte	0x2
 4796 1dda 26       		.uleb128 0x26
 4797 1ddb 00000000 		.long	.LASF256
 4798 1ddf B201     		.value	0x1b2
 4799 1de1 30       		.byte	0x30
 4800 1de2 061A0000 		.long	0x1a06
 4801 1de6 02       		.byte	0x2
 4802 1de7 6B       		.uleb128 0x6b
 4803 1de8 00000000 		.long	.LASF294
 4804 1dec 50       		.byte	0x50
 4805 1ded 0902     		.value	0x209
 4806 1def 981E0000 		.long	0x1e98
 4807 1df3 30       		.uleb128 0x30
 4808 1df4 75160000 		.long	0x1675
GAS LISTING x64lin/../common/event.s 			page 225


 4809 1df8 30       		.uleb128 0x30
 4810 1df9 EC1C0000 		.long	0x1cec
 4811 1dfd 2E       		.uleb128 0x2e
 4812 1dfe 00000000 		.long	.LASF294
 4813 1e02 05       		.byte	0x5
 4814 1e03 0C02     		.value	0x20c
 4815 1e05 02       		.byte	0x2
 4816 1e06 00000000 		.long	.LASF295
 4817 1e0a 121E0000 		.long	0x1e12
 4818 1e0e 181E0000 		.long	0x1e18
 4819 1e12 02       		.uleb128 0x2
 4820 1e13 9F600000 		.long	0x609f
 4821 1e17 00       		.byte	0
 4822 1e18 2E       		.uleb128 0x2e
 4823 1e19 00000000 		.long	.LASF294
 4824 1e1d 05       		.byte	0x5
 4825 1e1e 1102     		.value	0x211
 4826 1e20 02       		.byte	0x2
 4827 1e21 00000000 		.long	.LASF296
 4828 1e25 2D1E0000 		.long	0x1e2d
 4829 1e29 381E0000 		.long	0x1e38
 4830 1e2d 02       		.uleb128 0x2
 4831 1e2e 9F600000 		.long	0x609f
 4832 1e32 01       		.uleb128 0x1
 4833 1e33 A4600000 		.long	0x60a4
 4834 1e37 00       		.byte	0
 4835 1e38 4A       		.uleb128 0x4a
 4836 1e39 00000000 		.long	.LASF294
 4837 1e3d 05       		.byte	0x5
 4838 1e3e 1602     		.value	0x216
 4839 1e40 02       		.byte	0x2
 4840 1e41 00000000 		.long	.LASF297
 4841 1e45 4D1E0000 		.long	0x1e4d
 4842 1e49 581E0000 		.long	0x1e58
 4843 1e4d 02       		.uleb128 0x2
 4844 1e4e 9F600000 		.long	0x609f
 4845 1e52 01       		.uleb128 0x1
 4846 1e53 A9600000 		.long	0x60a9
 4847 1e57 00       		.byte	0
 4848 1e58 2E       		.uleb128 0x2e
 4849 1e59 00000000 		.long	.LASF294
 4850 1e5d 05       		.byte	0x5
 4851 1e5e 1802     		.value	0x218
 4852 1e60 02       		.byte	0x2
 4853 1e61 00000000 		.long	.LASF298
 4854 1e65 6D1E0000 		.long	0x1e6d
 4855 1e69 781E0000 		.long	0x1e78
 4856 1e6d 02       		.uleb128 0x2
 4857 1e6e 9F600000 		.long	0x609f
 4858 1e72 01       		.uleb128 0x1
 4859 1e73 AE600000 		.long	0x60ae
 4860 1e77 00       		.byte	0
 4861 1e78 6C       		.uleb128 0x6c
 4862 1e79 00000000 		.long	.LASF294
 4863 1e7d 1C02     		.value	0x21c
 4864 1e7f 00000000 		.long	.LASF299
 4865 1e83 871E0000 		.long	0x1e87
GAS LISTING x64lin/../common/event.s 			page 226


 4866 1e87 02       		.uleb128 0x2
 4867 1e88 9F600000 		.long	0x609f
 4868 1e8c 01       		.uleb128 0x1
 4869 1e8d A9600000 		.long	0x60a9
 4870 1e91 01       		.uleb128 0x1
 4871 1e92 AE600000 		.long	0x60ae
 4872 1e96 00       		.byte	0
 4873 1e97 00       		.byte	0
 4874 1e98 26       		.uleb128 0x26
 4875 1e99 00000000 		.long	.LASF300
 4876 1e9d 9D01     		.value	0x19d
 4877 1e9f 15       		.byte	0x15
 4878 1ea0 09420000 		.long	0x4209
 4879 1ea4 02       		.byte	0x2
 4880 1ea5 08       		.uleb128 0x8
 4881 1ea6 981E0000 		.long	0x1e98
 4882 1eaa 26       		.uleb128 0x26
 4883 1eab 00000000 		.long	.LASF217
 4884 1eaf AC01     		.value	0x1ac
 4885 1eb1 16       		.byte	0x16
 4886 1eb2 75160000 		.long	0x1675
 4887 1eb6 02       		.byte	0x2
 4888 1eb7 08       		.uleb128 0x8
 4889 1eb8 AA1E0000 		.long	0x1eaa
 4890 1ebc 0F       		.uleb128 0xf
 4891 1ebd 00000000 		.long	.LASF301
 4892 1ec1 05       		.byte	0x5
 4893 1ec2 AF01     		.value	0x1af
 4894 1ec4 07       		.byte	0x7
 4895 1ec5 00000000 		.long	.LASF302
 4896 1ec9 AA1E0000 		.long	0x1eaa
 4897 1ecd 02       		.byte	0x2
 4898 1ece D61E0000 		.long	0x1ed6
 4899 1ed2 DC1E0000 		.long	0x1edc
 4900 1ed6 02       		.uleb128 0x2
 4901 1ed7 B3600000 		.long	0x60b3
 4902 1edb 00       		.byte	0
 4903 1edc 0B       		.uleb128 0xb
 4904 1edd 00000000 		.long	.LASF303
 4905 1ee1 05       		.byte	0x5
 4906 1ee2 B501     		.value	0x1b5
 4907 1ee4 07       		.byte	0x7
 4908 1ee5 00000000 		.long	.LASF304
 4909 1ee9 02       		.byte	0x2
 4910 1eea F21E0000 		.long	0x1ef2
 4911 1eee F81E0000 		.long	0x1ef8
 4912 1ef2 02       		.uleb128 0x2
 4913 1ef3 BD600000 		.long	0x60bd
 4914 1ef7 00       		.byte	0
 4915 1ef8 0B       		.uleb128 0xb
 4916 1ef9 00000000 		.long	.LASF303
 4917 1efd 05       		.byte	0x5
 4918 1efe B901     		.value	0x1b9
 4919 1f00 07       		.byte	0x7
 4920 1f01 00000000 		.long	.LASF305
 4921 1f05 02       		.byte	0x2
 4922 1f06 0E1F0000 		.long	0x1f0e
GAS LISTING x64lin/../common/event.s 			page 227


 4923 1f0a 191F0000 		.long	0x1f19
 4924 1f0e 02       		.uleb128 0x2
 4925 1f0f BD600000 		.long	0x60bd
 4926 1f13 01       		.uleb128 0x1
 4927 1f14 21010000 		.long	0x121
 4928 1f18 00       		.byte	0
 4929 1f19 0B       		.uleb128 0xb
 4930 1f1a 00000000 		.long	.LASF303
 4931 1f1e 05       		.byte	0x5
 4932 1f1f BD01     		.value	0x1bd
 4933 1f21 07       		.byte	0x7
 4934 1f22 00000000 		.long	.LASF306
 4935 1f26 02       		.byte	0x2
 4936 1f27 2F1F0000 		.long	0x1f2f
 4937 1f2b 3F1F0000 		.long	0x1f3f
 4938 1f2f 02       		.uleb128 0x2
 4939 1f30 BD600000 		.long	0x60bd
 4940 1f34 01       		.uleb128 0x1
 4941 1f35 C7600000 		.long	0x60c7
 4942 1f39 01       		.uleb128 0x1
 4943 1f3a 21010000 		.long	0x121
 4944 1f3e 00       		.byte	0
 4945 1f3f 0B       		.uleb128 0xb
 4946 1f40 00000000 		.long	.LASF303
 4947 1f44 05       		.byte	0x5
 4948 1f45 C101     		.value	0x1c1
 4949 1f47 07       		.byte	0x7
 4950 1f48 00000000 		.long	.LASF307
 4951 1f4c 02       		.byte	0x2
 4952 1f4d 551F0000 		.long	0x1f55
 4953 1f51 601F0000 		.long	0x1f60
 4954 1f55 02       		.uleb128 0x2
 4955 1f56 BD600000 		.long	0x60bd
 4956 1f5a 01       		.uleb128 0x1
 4957 1f5b C7600000 		.long	0x60c7
 4958 1f5f 00       		.byte	0
 4959 1f60 0B       		.uleb128 0xb
 4960 1f61 00000000 		.long	.LASF303
 4961 1f65 05       		.byte	0x5
 4962 1f66 C601     		.value	0x1c6
 4963 1f68 07       		.byte	0x7
 4964 1f69 00000000 		.long	.LASF308
 4965 1f6d 02       		.byte	0x2
 4966 1f6e 761F0000 		.long	0x1f76
 4967 1f72 811F0000 		.long	0x1f81
 4968 1f76 02       		.uleb128 0x2
 4969 1f77 BD600000 		.long	0x60bd
 4970 1f7b 01       		.uleb128 0x1
 4971 1f7c CC600000 		.long	0x60cc
 4972 1f80 00       		.byte	0
 4973 1f81 0B       		.uleb128 0xb
 4974 1f82 00000000 		.long	.LASF303
 4975 1f86 05       		.byte	0x5
 4976 1f87 CE01     		.value	0x1ce
 4977 1f89 07       		.byte	0x7
 4978 1f8a 00000000 		.long	.LASF309
 4979 1f8e 02       		.byte	0x2
GAS LISTING x64lin/../common/event.s 			page 228


 4980 1f8f 971F0000 		.long	0x1f97
 4981 1f93 A71F0000 		.long	0x1fa7
 4982 1f97 02       		.uleb128 0x2
 4983 1f98 BD600000 		.long	0x60bd
 4984 1f9c 01       		.uleb128 0x1
 4985 1f9d CC600000 		.long	0x60cc
 4986 1fa1 01       		.uleb128 0x1
 4987 1fa2 C7600000 		.long	0x60c7
 4988 1fa6 00       		.byte	0
 4989 1fa7 0B       		.uleb128 0xb
 4990 1fa8 00000000 		.long	.LASF303
 4991 1fac 05       		.byte	0x5
 4992 1fad D201     		.value	0x1d2
 4993 1faf 07       		.byte	0x7
 4994 1fb0 00000000 		.long	.LASF310
 4995 1fb4 02       		.byte	0x2
 4996 1fb5 BD1F0000 		.long	0x1fbd
 4997 1fb9 D21F0000 		.long	0x1fd2
 4998 1fbd 02       		.uleb128 0x2
 4999 1fbe BD600000 		.long	0x60bd
 5000 1fc2 01       		.uleb128 0x1
 5001 1fc3 CC600000 		.long	0x60cc
 5002 1fc7 01       		.uleb128 0x1
 5003 1fc8 C7600000 		.long	0x60c7
 5004 1fcc 01       		.uleb128 0x1
 5005 1fcd 21010000 		.long	0x121
 5006 1fd1 00       		.byte	0
 5007 1fd2 0B       		.uleb128 0xb
 5008 1fd3 00000000 		.long	.LASF311
 5009 1fd7 05       		.byte	0x5
 5010 1fd8 5402     		.value	0x254
 5011 1fda 05       		.byte	0x5
 5012 1fdb 00000000 		.long	.LASF312
 5013 1fdf 02       		.byte	0x2
 5014 1fe0 E81F0000 		.long	0x1fe8
 5015 1fe4 F31F0000 		.long	0x1ff3
 5016 1fe8 02       		.uleb128 0x2
 5017 1fe9 BD600000 		.long	0x60bd
 5018 1fed 02       		.uleb128 0x2
 5019 1fee 4C430000 		.long	0x434c
 5020 1ff2 00       		.byte	0
 5021 1ff3 0F       		.uleb128 0xf
 5022 1ff4 00000000 		.long	.LASF313
 5023 1ff8 05       		.byte	0x5
 5024 1ff9 2302     		.value	0x223
 5025 1ffb 07       		.byte	0x7
 5026 1ffc 00000000 		.long	.LASF314
 5027 2000 D1600000 		.long	0x60d1
 5028 2004 02       		.byte	0x2
 5029 2005 0D200000 		.long	0x200d
 5030 2009 13200000 		.long	0x2013
 5031 200d 02       		.uleb128 0x2
 5032 200e BD600000 		.long	0x60bd
 5033 2012 00       		.byte	0
 5034 2013 0F       		.uleb128 0xf
 5035 2014 00000000 		.long	.LASF313
 5036 2018 05       		.byte	0x5
GAS LISTING x64lin/../common/event.s 			page 229


 5037 2019 2702     		.value	0x227
 5038 201b 07       		.byte	0x7
 5039 201c 00000000 		.long	.LASF315
 5040 2020 A4600000 		.long	0x60a4
 5041 2024 02       		.byte	0x2
 5042 2025 2D200000 		.long	0x202d
 5043 2029 33200000 		.long	0x2033
 5044 202d 02       		.uleb128 0x2
 5045 202e B3600000 		.long	0x60b3
 5046 2032 00       		.byte	0
 5047 2033 26       		.uleb128 0x26
 5048 2034 00000000 		.long	.LASF316
 5049 2038 A901     		.value	0x1a9
 5050 203a 02       		.byte	0x2
 5051 203b 2C420000 		.long	0x422c
 5052 203f 02       		.byte	0x2
 5053 2040 0F       		.uleb128 0xf
 5054 2041 00000000 		.long	.LASF317
 5055 2045 05       		.byte	0x5
 5056 2046 2B02     		.value	0x22b
 5057 2048 07       		.byte	0x7
 5058 2049 00000000 		.long	.LASF318
 5059 204d 33200000 		.long	0x2033
 5060 2051 02       		.byte	0x2
 5061 2052 5A200000 		.long	0x205a
 5062 2056 60200000 		.long	0x2060
 5063 205a 02       		.uleb128 0x2
 5064 205b B3600000 		.long	0x60b3
 5065 205f 00       		.byte	0
 5066 2060 26       		.uleb128 0x26
 5067 2061 00000000 		.long	.LASF242
 5068 2065 A401     		.value	0x1a4
 5069 2067 2F       		.byte	0x2f
 5070 2068 D8410000 		.long	0x41d8
 5071 206c 02       		.byte	0x2
 5072 206d 0F       		.uleb128 0xf
 5073 206e 00000000 		.long	.LASF319
 5074 2072 05       		.byte	0x5
 5075 2073 2F02     		.value	0x22f
 5076 2075 07       		.byte	0x7
 5077 2076 00000000 		.long	.LASF320
 5078 207a 60200000 		.long	0x2060
 5079 207e 02       		.byte	0x2
 5080 207f 87200000 		.long	0x2087
 5081 2083 8D200000 		.long	0x208d
 5082 2087 02       		.uleb128 0x2
 5083 2088 BD600000 		.long	0x60bd
 5084 208c 00       		.byte	0
 5085 208d 0B       		.uleb128 0xb
 5086 208e 00000000 		.long	.LASF321
 5087 2092 05       		.byte	0x5
 5088 2093 3602     		.value	0x236
 5089 2095 07       		.byte	0x7
 5090 2096 00000000 		.long	.LASF322
 5091 209a 02       		.byte	0x2
 5092 209b A3200000 		.long	0x20a3
 5093 209f AE200000 		.long	0x20ae
GAS LISTING x64lin/../common/event.s 			page 230


 5094 20a3 02       		.uleb128 0x2
 5095 20a4 BD600000 		.long	0x60bd
 5096 20a8 01       		.uleb128 0x1
 5097 20a9 60200000 		.long	0x2060
 5098 20ad 00       		.byte	0
 5099 20ae 0F       		.uleb128 0xf
 5100 20af 00000000 		.long	.LASF323
 5101 20b3 05       		.byte	0x5
 5102 20b4 3D02     		.value	0x23d
 5103 20b6 07       		.byte	0x7
 5104 20b7 00000000 		.long	.LASF324
 5105 20bb CD1D0000 		.long	0x1dcd
 5106 20bf 02       		.byte	0x2
 5107 20c0 C8200000 		.long	0x20c8
 5108 20c4 D3200000 		.long	0x20d3
 5109 20c8 02       		.uleb128 0x2
 5110 20c9 BD600000 		.long	0x60bd
 5111 20cd 01       		.uleb128 0x1
 5112 20ce 21010000 		.long	0x121
 5113 20d2 00       		.byte	0
 5114 20d3 0B       		.uleb128 0xb
 5115 20d4 00000000 		.long	.LASF325
 5116 20d8 05       		.byte	0x5
 5117 20d9 4402     		.value	0x244
 5118 20db 07       		.byte	0x7
 5119 20dc 00000000 		.long	.LASF326
 5120 20e0 02       		.byte	0x2
 5121 20e1 E9200000 		.long	0x20e9
 5122 20e5 F9200000 		.long	0x20f9
 5123 20e9 02       		.uleb128 0x2
 5124 20ea BD600000 		.long	0x60bd
 5125 20ee 01       		.uleb128 0x1
 5126 20ef CD1D0000 		.long	0x1dcd
 5127 20f3 01       		.uleb128 0x1
 5128 20f4 21010000 		.long	0x121
 5129 20f8 00       		.byte	0
 5130 20f9 0B       		.uleb128 0xb
 5131 20fa 00000000 		.long	.LASF327
 5132 20fe 05       		.byte	0x5
 5133 20ff 6902     		.value	0x269
 5134 2101 05       		.byte	0x5
 5135 2102 00000000 		.long	.LASF328
 5136 2106 02       		.byte	0x2
 5137 2107 0F210000 		.long	0x210f
 5138 210b 1A210000 		.long	0x211a
 5139 210f 02       		.uleb128 0x2
 5140 2110 BD600000 		.long	0x60bd
 5141 2114 01       		.uleb128 0x1
 5142 2115 21010000 		.long	0x121
 5143 2119 00       		.byte	0
 5144 211a 0B       		.uleb128 0xb
 5145 211b 00000000 		.long	.LASF329
 5146 211f 05       		.byte	0x5
 5147 2120 9002     		.value	0x290
 5148 2122 05       		.byte	0x5
 5149 2123 00000000 		.long	.LASF330
 5150 2127 02       		.byte	0x2
GAS LISTING x64lin/../common/event.s 			page 231


 5151 2128 30210000 		.long	0x2130
 5152 212c 40210000 		.long	0x2140
 5153 2130 02       		.uleb128 0x2
 5154 2131 BD600000 		.long	0x60bd
 5155 2135 01       		.uleb128 0x1
 5156 2136 CD1D0000 		.long	0x1dcd
 5157 213a 01       		.uleb128 0x1
 5158 213b CD1D0000 		.long	0x1dcd
 5159 213f 00       		.byte	0
 5160 2140 0B       		.uleb128 0xb
 5161 2141 00000000 		.long	.LASF331
 5162 2145 05       		.byte	0x5
 5163 2146 A202     		.value	0x2a2
 5164 2148 05       		.byte	0x5
 5165 2149 00000000 		.long	.LASF332
 5166 214d 02       		.byte	0x2
 5167 214e 56210000 		.long	0x2156
 5168 2152 66210000 		.long	0x2166
 5169 2156 02       		.uleb128 0x2
 5170 2157 BD600000 		.long	0x60bd
 5171 215b 01       		.uleb128 0x1
 5172 215c CD1D0000 		.long	0x1dcd
 5173 2160 01       		.uleb128 0x1
 5174 2161 CD1D0000 		.long	0x1dcd
 5175 2165 00       		.byte	0
 5176 2166 9001     		.uleb128 0x90
 5177 2168 00000000 		.long	.LASF333
 5178 216c 05       		.byte	0x5
 5179 216d 5002     		.value	0x250
 5180 216f 13       		.byte	0x13
 5181 2170 E71D0000 		.long	0x1de7
 5182 2174 00       		.byte	0
 5183 2175 02       		.byte	0x2
 5184 2176 26       		.uleb128 0x26
 5185 2177 00000000 		.long	.LASF334
 5186 217b B301     		.value	0x1b3
 5187 217d 3C       		.byte	0x3c
 5188 217e DA1C0000 		.long	0x1cda
 5189 2182 02       		.byte	0x2
 5190 2183 0A       		.uleb128 0xa
 5191 2184 5F547000 		.string	"_Tp"
 5192 2188 2D140000 		.long	0x142d
 5193 218c 12       		.uleb128 0x12
 5194 218d 00000000 		.long	.LASF335
 5195 2191 75160000 		.long	0x1675
 5196 2195 00       		.byte	0
 5197 2196 08       		.uleb128 0x8
 5198 2197 DF1C0000 		.long	0x1cdf
 5199 219b 5C       		.uleb128 0x5c
 5200 219c 00000000 		.long	.LASF336
 5201 21a0 50       		.byte	0x50
 5202 21a1 05       		.byte	0x5
 5203 21a2 FF02     		.value	0x2ff
 5204 21a4 ED2E0000 		.long	0x2eed
 5205 21a8 1B       		.uleb128 0x1b
 5206 21a9 05       		.byte	0x5
 5207 21aa FF02     		.value	0x2ff
GAS LISTING x64lin/../common/event.s 			page 232


 5208 21ac 0B       		.byte	0xb
 5209 21ad F9200000 		.long	0x20f9
 5210 21b1 1B       		.uleb128 0x1b
 5211 21b2 05       		.byte	0x5
 5212 21b3 FF02     		.value	0x2ff
 5213 21b5 0B       		.byte	0xb
 5214 21b6 1A210000 		.long	0x211a
 5215 21ba 1B       		.uleb128 0x1b
 5216 21bb 05       		.byte	0x5
 5217 21bc FF02     		.value	0x2ff
 5218 21be 0B       		.byte	0xb
 5219 21bf 40210000 		.long	0x2140
 5220 21c3 1B       		.uleb128 0x1b
 5221 21c4 05       		.byte	0x5
 5222 21c5 FF02     		.value	0x2ff
 5223 21c7 0B       		.byte	0xb
 5224 21c8 6D200000 		.long	0x206d
 5225 21cc 1B       		.uleb128 0x1b
 5226 21cd 05       		.byte	0x5
 5227 21ce FF02     		.value	0x2ff
 5228 21d0 0B       		.byte	0xb
 5229 21d1 8D200000 		.long	0x208d
 5230 21d5 1B       		.uleb128 0x1b
 5231 21d6 05       		.byte	0x5
 5232 21d7 FF02     		.value	0x2ff
 5233 21d9 0B       		.byte	0xb
 5234 21da AE200000 		.long	0x20ae
 5235 21de 1B       		.uleb128 0x1b
 5236 21df 05       		.byte	0x5
 5237 21e0 FF02     		.value	0x2ff
 5238 21e2 0B       		.byte	0xb
 5239 21e3 D3200000 		.long	0x20d3
 5240 21e7 1B       		.uleb128 0x1b
 5241 21e8 05       		.byte	0x5
 5242 21e9 FF02     		.value	0x2ff
 5243 21eb 0B       		.byte	0xb
 5244 21ec 13200000 		.long	0x2013
 5245 21f0 1B       		.uleb128 0x1b
 5246 21f1 05       		.byte	0x5
 5247 21f2 FF02     		.value	0x2ff
 5248 21f4 0B       		.byte	0xb
 5249 21f5 F31F0000 		.long	0x1ff3
 5250 21f9 1B       		.uleb128 0x1b
 5251 21fa 05       		.byte	0x5
 5252 21fb FF02     		.value	0x2ff
 5253 21fd 0B       		.byte	0xb
 5254 21fe 66210000 		.long	0x2166
 5255 2202 3F       		.uleb128 0x3f
 5256 2203 DF1C0000 		.long	0x1cdf
 5257 2207 02       		.byte	0x2
 5258 2208 5D       		.uleb128 0x5d
 5259 2209 00000000 		.long	.LASF337
 5260 220d 05       		.byte	0x5
 5261 220e 2703     		.value	0x327
 5262 2210 15       		.byte	0x15
 5263 2211 00000000 		.long	.LASF571
 5264 2215 21010000 		.long	0x121
GAS LISTING x64lin/../common/event.s 			page 233


 5265 2219 48       		.uleb128 0x48
 5266 221a 00000000 		.long	.LASF338
 5267 221e 05       		.byte	0x5
 5268 221f 4203     		.value	0x342
 5269 2221 07       		.byte	0x7
 5270 2222 00000000 		.long	.LASF339
 5271 2226 2E220000 		.long	0x222e
 5272 222a 34220000 		.long	0x2234
 5273 222e 02       		.uleb128 0x2
 5274 222f D6600000 		.long	0x60d6
 5275 2233 00       		.byte	0
 5276 2234 6D       		.uleb128 0x6d
 5277 2235 00000000 		.long	.LASF338
 5278 2239 4C03     		.value	0x34c
 5279 223b 00000000 		.long	.LASF340
 5280 223f 47220000 		.long	0x2247
 5281 2243 52220000 		.long	0x2252
 5282 2247 02       		.uleb128 0x2
 5283 2248 D6600000 		.long	0x60d6
 5284 224c 01       		.uleb128 0x1
 5285 224d E0600000 		.long	0x60e0
 5286 2251 00       		.byte	0
 5287 2252 26       		.uleb128 0x26
 5288 2253 00000000 		.long	.LASF217
 5289 2257 2403     		.value	0x324
 5290 2259 16       		.byte	0x16
 5291 225a 75160000 		.long	0x1675
 5292 225e 01       		.byte	0x1
 5293 225f 08       		.uleb128 0x8
 5294 2260 52220000 		.long	0x2252
 5295 2264 6D       		.uleb128 0x6d
 5296 2265 00000000 		.long	.LASF338
 5297 2269 5903     		.value	0x359
 5298 226b 00000000 		.long	.LASF341
 5299 226f 77220000 		.long	0x2277
 5300 2273 87220000 		.long	0x2287
 5301 2277 02       		.uleb128 0x2
 5302 2278 D6600000 		.long	0x60d6
 5303 227c 01       		.uleb128 0x1
 5304 227d 87220000 		.long	0x2287
 5305 2281 01       		.uleb128 0x1
 5306 2282 E0600000 		.long	0x60e0
 5307 2286 00       		.byte	0
 5308 2287 26       		.uleb128 0x26
 5309 2288 00000000 		.long	.LASF218
 5310 228c 2203     		.value	0x322
 5311 228e 16       		.byte	0x16
 5312 228f 21010000 		.long	0x121
 5313 2293 01       		.byte	0x1
 5314 2294 08       		.uleb128 0x8
 5315 2295 87220000 		.long	0x2287
 5316 2299 0B       		.uleb128 0xb
 5317 229a 00000000 		.long	.LASF338
 5318 229e 05       		.byte	0x5
 5319 229f 6503     		.value	0x365
 5320 22a1 07       		.byte	0x7
 5321 22a2 00000000 		.long	.LASF342
GAS LISTING x64lin/../common/event.s 			page 234


 5322 22a6 01       		.byte	0x1
 5323 22a7 AF220000 		.long	0x22af
 5324 22ab C4220000 		.long	0x22c4
 5325 22af 02       		.uleb128 0x2
 5326 22b0 D6600000 		.long	0x60d6
 5327 22b4 01       		.uleb128 0x1
 5328 22b5 87220000 		.long	0x2287
 5329 22b9 01       		.uleb128 0x1
 5330 22ba E5600000 		.long	0x60e5
 5331 22be 01       		.uleb128 0x1
 5332 22bf E0600000 		.long	0x60e0
 5333 22c3 00       		.byte	0
 5334 22c4 26       		.uleb128 0x26
 5335 22c5 00000000 		.long	.LASF8
 5336 22c9 1903     		.value	0x319
 5337 22cb 13       		.byte	0x13
 5338 22cc 2D140000 		.long	0x142d
 5339 22d0 01       		.byte	0x1
 5340 22d1 08       		.uleb128 0x8
 5341 22d2 C4220000 		.long	0x22c4
 5342 22d6 0B       		.uleb128 0xb
 5343 22d7 00000000 		.long	.LASF338
 5344 22db 05       		.byte	0x5
 5345 22dc 8003     		.value	0x380
 5346 22de 07       		.byte	0x7
 5347 22df 00000000 		.long	.LASF343
 5348 22e3 01       		.byte	0x1
 5349 22e4 EC220000 		.long	0x22ec
 5350 22e8 F7220000 		.long	0x22f7
 5351 22ec 02       		.uleb128 0x2
 5352 22ed D6600000 		.long	0x60d6
 5353 22f1 01       		.uleb128 0x1
 5354 22f2 EA600000 		.long	0x60ea
 5355 22f6 00       		.byte	0
 5356 22f7 48       		.uleb128 0x48
 5357 22f8 00000000 		.long	.LASF338
 5358 22fc 05       		.byte	0x5
 5359 22fd 9003     		.value	0x390
 5360 22ff 07       		.byte	0x7
 5361 2300 00000000 		.long	.LASF344
 5362 2304 0C230000 		.long	0x230c
 5363 2308 17230000 		.long	0x2317
 5364 230c 02       		.uleb128 0x2
 5365 230d D6600000 		.long	0x60d6
 5366 2311 01       		.uleb128 0x1
 5367 2312 EF600000 		.long	0x60ef
 5368 2316 00       		.byte	0
 5369 2317 0B       		.uleb128 0xb
 5370 2318 00000000 		.long	.LASF338
 5371 231c 05       		.byte	0x5
 5372 231d 9303     		.value	0x393
 5373 231f 07       		.byte	0x7
 5374 2320 00000000 		.long	.LASF345
 5375 2324 01       		.byte	0x1
 5376 2325 2D230000 		.long	0x232d
 5377 2329 3D230000 		.long	0x233d
 5378 232d 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 235


 5379 232e D6600000 		.long	0x60d6
 5380 2332 01       		.uleb128 0x1
 5381 2333 EA600000 		.long	0x60ea
 5382 2337 01       		.uleb128 0x1
 5383 2338 E0600000 		.long	0x60e0
 5384 233c 00       		.byte	0
 5385 233d 0B       		.uleb128 0xb
 5386 233e 00000000 		.long	.LASF338
 5387 2342 05       		.byte	0x5
 5388 2343 9A03     		.value	0x39a
 5389 2345 07       		.byte	0x7
 5390 2346 00000000 		.long	.LASF346
 5391 234a 01       		.byte	0x1
 5392 234b 53230000 		.long	0x2353
 5393 234f 63230000 		.long	0x2363
 5394 2353 02       		.uleb128 0x2
 5395 2354 D6600000 		.long	0x60d6
 5396 2358 01       		.uleb128 0x1
 5397 2359 EF600000 		.long	0x60ef
 5398 235d 01       		.uleb128 0x1
 5399 235e E0600000 		.long	0x60e0
 5400 2362 00       		.byte	0
 5401 2363 2E       		.uleb128 0x2e
 5402 2364 00000000 		.long	.LASF338
 5403 2368 05       		.byte	0x5
 5404 2369 9F03     		.value	0x39f
 5405 236b 07       		.byte	0x7
 5406 236c 00000000 		.long	.LASF347
 5407 2370 78230000 		.long	0x2378
 5408 2374 8D230000 		.long	0x238d
 5409 2378 02       		.uleb128 0x2
 5410 2379 D6600000 		.long	0x60d6
 5411 237d 01       		.uleb128 0x1
 5412 237e EF600000 		.long	0x60ef
 5413 2382 01       		.uleb128 0x1
 5414 2383 E0600000 		.long	0x60e0
 5415 2387 01       		.uleb128 0x1
 5416 2388 88060000 		.long	0x688
 5417 238c 00       		.byte	0
 5418 238d 2E       		.uleb128 0x2e
 5419 238e 00000000 		.long	.LASF338
 5420 2392 05       		.byte	0x5
 5421 2393 A303     		.value	0x3a3
 5422 2395 07       		.byte	0x7
 5423 2396 00000000 		.long	.LASF348
 5424 239a A2230000 		.long	0x23a2
 5425 239e B7230000 		.long	0x23b7
 5426 23a2 02       		.uleb128 0x2
 5427 23a3 D6600000 		.long	0x60d6
 5428 23a7 01       		.uleb128 0x1
 5429 23a8 EF600000 		.long	0x60ef
 5430 23ac 01       		.uleb128 0x1
 5431 23ad E0600000 		.long	0x60e0
 5432 23b1 01       		.uleb128 0x1
 5433 23b2 15010000 		.long	0x115
 5434 23b6 00       		.byte	0
 5435 23b7 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 236


 5436 23b8 00000000 		.long	.LASF338
 5437 23bc 05       		.byte	0x5
 5438 23bd BB03     		.value	0x3bb
 5439 23bf 07       		.byte	0x7
 5440 23c0 00000000 		.long	.LASF349
 5441 23c4 01       		.byte	0x1
 5442 23c5 CD230000 		.long	0x23cd
 5443 23c9 DD230000 		.long	0x23dd
 5444 23cd 02       		.uleb128 0x2
 5445 23ce D6600000 		.long	0x60d6
 5446 23d2 01       		.uleb128 0x1
 5447 23d3 F22E0000 		.long	0x2ef2
 5448 23d7 01       		.uleb128 0x1
 5449 23d8 E0600000 		.long	0x60e0
 5450 23dc 00       		.byte	0
 5451 23dd 0B       		.uleb128 0xb
 5452 23de 00000000 		.long	.LASF350
 5453 23e2 05       		.byte	0x5
 5454 23e3 EE03     		.value	0x3ee
 5455 23e5 07       		.byte	0x7
 5456 23e6 00000000 		.long	.LASF351
 5457 23ea 01       		.byte	0x1
 5458 23eb F3230000 		.long	0x23f3
 5459 23ef FE230000 		.long	0x23fe
 5460 23f3 02       		.uleb128 0x2
 5461 23f4 D6600000 		.long	0x60d6
 5462 23f8 02       		.uleb128 0x2
 5463 23f9 4C430000 		.long	0x434c
 5464 23fd 00       		.byte	0
 5465 23fe 17       		.uleb128 0x17
 5466 23ff 00000000 		.long	.LASF73
 5467 2403 06       		.byte	0x6
 5468 2404 5F       		.byte	0x5f
 5469 2405 05       		.byte	0x5
 5470 2406 00000000 		.long	.LASF352
 5471 240a F4600000 		.long	0x60f4
 5472 240e 01       		.byte	0x1
 5473 240f 17240000 		.long	0x2417
 5474 2413 22240000 		.long	0x2422
 5475 2417 02       		.uleb128 0x2
 5476 2418 D6600000 		.long	0x60d6
 5477 241c 01       		.uleb128 0x1
 5478 241d EA600000 		.long	0x60ea
 5479 2421 00       		.byte	0
 5480 2422 0F       		.uleb128 0xf
 5481 2423 00000000 		.long	.LASF73
 5482 2427 05       		.byte	0x5
 5483 2428 0704     		.value	0x407
 5484 242a 07       		.byte	0x7
 5485 242b 00000000 		.long	.LASF353
 5486 242f F4600000 		.long	0x60f4
 5487 2433 01       		.byte	0x1
 5488 2434 3C240000 		.long	0x243c
 5489 2438 47240000 		.long	0x2447
 5490 243c 02       		.uleb128 0x2
 5491 243d D6600000 		.long	0x60d6
 5492 2441 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 237


 5493 2442 EF600000 		.long	0x60ef
 5494 2446 00       		.byte	0
 5495 2447 0F       		.uleb128 0xf
 5496 2448 00000000 		.long	.LASF73
 5497 244c 05       		.byte	0x5
 5498 244d 1A04     		.value	0x41a
 5499 244f 07       		.byte	0x7
 5500 2450 00000000 		.long	.LASF354
 5501 2454 F4600000 		.long	0x60f4
 5502 2458 01       		.byte	0x1
 5503 2459 61240000 		.long	0x2461
 5504 245d 6C240000 		.long	0x246c
 5505 2461 02       		.uleb128 0x2
 5506 2462 D6600000 		.long	0x60d6
 5507 2466 01       		.uleb128 0x1
 5508 2467 F22E0000 		.long	0x2ef2
 5509 246b 00       		.byte	0
 5510 246c 0B       		.uleb128 0xb
 5511 246d 00000000 		.long	.LASF355
 5512 2471 05       		.byte	0x5
 5513 2472 2D04     		.value	0x42d
 5514 2474 07       		.byte	0x7
 5515 2475 00000000 		.long	.LASF356
 5516 2479 01       		.byte	0x1
 5517 247a 82240000 		.long	0x2482
 5518 247e 92240000 		.long	0x2492
 5519 2482 02       		.uleb128 0x2
 5520 2483 D6600000 		.long	0x60d6
 5521 2487 01       		.uleb128 0x1
 5522 2488 87220000 		.long	0x2287
 5523 248c 01       		.uleb128 0x1
 5524 248d E5600000 		.long	0x60e5
 5525 2491 00       		.byte	0
 5526 2492 0B       		.uleb128 0xb
 5527 2493 00000000 		.long	.LASF355
 5528 2497 05       		.byte	0x5
 5529 2498 5904     		.value	0x459
 5530 249a 07       		.byte	0x7
 5531 249b 00000000 		.long	.LASF357
 5532 249f 01       		.byte	0x1
 5533 24a0 A8240000 		.long	0x24a8
 5534 24a4 B3240000 		.long	0x24b3
 5535 24a8 02       		.uleb128 0x2
 5536 24a9 D6600000 		.long	0x60d6
 5537 24ad 01       		.uleb128 0x1
 5538 24ae F22E0000 		.long	0x2ef2
 5539 24b2 00       		.byte	0
 5540 24b3 0F       		.uleb128 0xf
 5541 24b4 00000000 		.long	.LASF301
 5542 24b8 05       		.byte	0x5
 5543 24b9 5F04     		.value	0x45f
 5544 24bb 07       		.byte	0x7
 5545 24bc 00000000 		.long	.LASF358
 5546 24c0 52220000 		.long	0x2252
 5547 24c4 01       		.byte	0x1
 5548 24c5 CD240000 		.long	0x24cd
 5549 24c9 D3240000 		.long	0x24d3
GAS LISTING x64lin/../common/event.s 			page 238


 5550 24cd 02       		.uleb128 0x2
 5551 24ce F9600000 		.long	0x60f9
 5552 24d2 00       		.byte	0
 5553 24d3 26       		.uleb128 0x26
 5554 24d4 00000000 		.long	.LASF256
 5555 24d8 1E03     		.value	0x31e
 5556 24da 28       		.byte	0x28
 5557 24db DA1D0000 		.long	0x1dda
 5558 24df 01       		.byte	0x1
 5559 24e0 0F       		.uleb128 0xf
 5560 24e1 00000000 		.long	.LASF359
 5561 24e5 05       		.byte	0x5
 5562 24e6 6804     		.value	0x468
 5563 24e8 07       		.byte	0x7
 5564 24e9 00000000 		.long	.LASF360
 5565 24ed D3240000 		.long	0x24d3
 5566 24f1 01       		.byte	0x1
 5567 24f2 FA240000 		.long	0x24fa
 5568 24f6 00250000 		.long	0x2500
 5569 24fa 02       		.uleb128 0x2
 5570 24fb D6600000 		.long	0x60d6
 5571 24ff 00       		.byte	0
 5572 2500 26       		.uleb128 0x26
 5573 2501 00000000 		.long	.LASF334
 5574 2505 1F03     		.value	0x31f
 5575 2507 2E       		.byte	0x2e
 5576 2508 76210000 		.long	0x2176
 5577 250c 01       		.byte	0x1
 5578 250d 0F       		.uleb128 0xf
 5579 250e 00000000 		.long	.LASF359
 5580 2512 05       		.byte	0x5
 5581 2513 7004     		.value	0x470
 5582 2515 07       		.byte	0x7
 5583 2516 00000000 		.long	.LASF361
 5584 251a 00250000 		.long	0x2500
 5585 251e 01       		.byte	0x1
 5586 251f 27250000 		.long	0x2527
 5587 2523 2D250000 		.long	0x252d
 5588 2527 02       		.uleb128 0x2
 5589 2528 F9600000 		.long	0x60f9
 5590 252c 00       		.byte	0
 5591 252d 49       		.uleb128 0x49
 5592 252e 656E6400 		.string	"end"
 5593 2532 05       		.byte	0x5
 5594 2533 7904     		.value	0x479
 5595 2535 00000000 		.long	.LASF363
 5596 2539 D3240000 		.long	0x24d3
 5597 253d 45250000 		.long	0x2545
 5598 2541 4B250000 		.long	0x254b
 5599 2545 02       		.uleb128 0x2
 5600 2546 D6600000 		.long	0x60d6
 5601 254a 00       		.byte	0
 5602 254b 49       		.uleb128 0x49
 5603 254c 656E6400 		.string	"end"
 5604 2550 05       		.byte	0x5
 5605 2551 8204     		.value	0x482
 5606 2553 00000000 		.long	.LASF364
GAS LISTING x64lin/../common/event.s 			page 239


 5607 2557 00250000 		.long	0x2500
 5608 255b 63250000 		.long	0x2563
 5609 255f 69250000 		.long	0x2569
 5610 2563 02       		.uleb128 0x2
 5611 2564 F9600000 		.long	0x60f9
 5612 2568 00       		.byte	0
 5613 2569 26       		.uleb128 0x26
 5614 256a 00000000 		.long	.LASF365
 5615 256e 2103     		.value	0x321
 5616 2570 2F       		.byte	0x2f
 5617 2571 F72E0000 		.long	0x2ef7
 5618 2575 01       		.byte	0x1
 5619 2576 0F       		.uleb128 0xf
 5620 2577 00000000 		.long	.LASF366
 5621 257b 05       		.byte	0x5
 5622 257c 8B04     		.value	0x48b
 5623 257e 07       		.byte	0x7
 5624 257f 00000000 		.long	.LASF367
 5625 2583 69250000 		.long	0x2569
 5626 2587 01       		.byte	0x1
 5627 2588 90250000 		.long	0x2590
 5628 258c 96250000 		.long	0x2596
 5629 2590 02       		.uleb128 0x2
 5630 2591 D6600000 		.long	0x60d6
 5631 2595 00       		.byte	0
 5632 2596 26       		.uleb128 0x26
 5633 2597 00000000 		.long	.LASF368
 5634 259b 2003     		.value	0x320
 5635 259d 35       		.byte	0x35
 5636 259e FC2E0000 		.long	0x2efc
 5637 25a2 01       		.byte	0x1
 5638 25a3 0F       		.uleb128 0xf
 5639 25a4 00000000 		.long	.LASF366
 5640 25a8 05       		.byte	0x5
 5641 25a9 9404     		.value	0x494
 5642 25ab 07       		.byte	0x7
 5643 25ac 00000000 		.long	.LASF369
 5644 25b0 96250000 		.long	0x2596
 5645 25b4 01       		.byte	0x1
 5646 25b5 BD250000 		.long	0x25bd
 5647 25b9 C3250000 		.long	0x25c3
 5648 25bd 02       		.uleb128 0x2
 5649 25be F9600000 		.long	0x60f9
 5650 25c2 00       		.byte	0
 5651 25c3 0F       		.uleb128 0xf
 5652 25c4 00000000 		.long	.LASF370
 5653 25c8 05       		.byte	0x5
 5654 25c9 9D04     		.value	0x49d
 5655 25cb 07       		.byte	0x7
 5656 25cc 00000000 		.long	.LASF371
 5657 25d0 69250000 		.long	0x2569
 5658 25d4 01       		.byte	0x1
 5659 25d5 DD250000 		.long	0x25dd
 5660 25d9 E3250000 		.long	0x25e3
 5661 25dd 02       		.uleb128 0x2
 5662 25de D6600000 		.long	0x60d6
 5663 25e2 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 240


 5664 25e3 0F       		.uleb128 0xf
 5665 25e4 00000000 		.long	.LASF370
 5666 25e8 05       		.byte	0x5
 5667 25e9 A604     		.value	0x4a6
 5668 25eb 07       		.byte	0x7
 5669 25ec 00000000 		.long	.LASF372
 5670 25f0 96250000 		.long	0x2596
 5671 25f4 01       		.byte	0x1
 5672 25f5 FD250000 		.long	0x25fd
 5673 25f9 03260000 		.long	0x2603
 5674 25fd 02       		.uleb128 0x2
 5675 25fe F9600000 		.long	0x60f9
 5676 2602 00       		.byte	0
 5677 2603 0F       		.uleb128 0xf
 5678 2604 00000000 		.long	.LASF373
 5679 2608 05       		.byte	0x5
 5680 2609 AF04     		.value	0x4af
 5681 260b 07       		.byte	0x7
 5682 260c 00000000 		.long	.LASF374
 5683 2610 00250000 		.long	0x2500
 5684 2614 01       		.byte	0x1
 5685 2615 1D260000 		.long	0x261d
 5686 2619 23260000 		.long	0x2623
 5687 261d 02       		.uleb128 0x2
 5688 261e F9600000 		.long	0x60f9
 5689 2622 00       		.byte	0
 5690 2623 0F       		.uleb128 0xf
 5691 2624 00000000 		.long	.LASF375
 5692 2628 05       		.byte	0x5
 5693 2629 B804     		.value	0x4b8
 5694 262b 07       		.byte	0x7
 5695 262c 00000000 		.long	.LASF376
 5696 2630 00250000 		.long	0x2500
 5697 2634 01       		.byte	0x1
 5698 2635 3D260000 		.long	0x263d
 5699 2639 43260000 		.long	0x2643
 5700 263d 02       		.uleb128 0x2
 5701 263e F9600000 		.long	0x60f9
 5702 2642 00       		.byte	0
 5703 2643 0F       		.uleb128 0xf
 5704 2644 00000000 		.long	.LASF377
 5705 2648 05       		.byte	0x5
 5706 2649 C104     		.value	0x4c1
 5707 264b 07       		.byte	0x7
 5708 264c 00000000 		.long	.LASF378
 5709 2650 96250000 		.long	0x2596
 5710 2654 01       		.byte	0x1
 5711 2655 5D260000 		.long	0x265d
 5712 2659 63260000 		.long	0x2663
 5713 265d 02       		.uleb128 0x2
 5714 265e F9600000 		.long	0x60f9
 5715 2662 00       		.byte	0
 5716 2663 0F       		.uleb128 0xf
 5717 2664 00000000 		.long	.LASF379
 5718 2668 05       		.byte	0x5
 5719 2669 CA04     		.value	0x4ca
 5720 266b 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 241


 5721 266c 00000000 		.long	.LASF380
 5722 2670 96250000 		.long	0x2596
 5723 2674 01       		.byte	0x1
 5724 2675 7D260000 		.long	0x267d
 5725 2679 83260000 		.long	0x2683
 5726 267d 02       		.uleb128 0x2
 5727 267e F9600000 		.long	0x60f9
 5728 2682 00       		.byte	0
 5729 2683 0F       		.uleb128 0xf
 5730 2684 00000000 		.long	.LASF381
 5731 2688 05       		.byte	0x5
 5732 2689 D104     		.value	0x4d1
 5733 268b 07       		.byte	0x7
 5734 268c 00000000 		.long	.LASF382
 5735 2690 87220000 		.long	0x2287
 5736 2694 01       		.byte	0x1
 5737 2695 9D260000 		.long	0x269d
 5738 2699 A3260000 		.long	0x26a3
 5739 269d 02       		.uleb128 0x2
 5740 269e F9600000 		.long	0x60f9
 5741 26a2 00       		.byte	0
 5742 26a3 0F       		.uleb128 0xf
 5743 26a4 00000000 		.long	.LASF221
 5744 26a8 05       		.byte	0x5
 5745 26a9 D604     		.value	0x4d6
 5746 26ab 07       		.byte	0x7
 5747 26ac 00000000 		.long	.LASF383
 5748 26b0 87220000 		.long	0x2287
 5749 26b4 01       		.byte	0x1
 5750 26b5 BD260000 		.long	0x26bd
 5751 26b9 C3260000 		.long	0x26c3
 5752 26bd 02       		.uleb128 0x2
 5753 26be F9600000 		.long	0x60f9
 5754 26c2 00       		.byte	0
 5755 26c3 0B       		.uleb128 0xb
 5756 26c4 00000000 		.long	.LASF384
 5757 26c8 05       		.byte	0x5
 5758 26c9 E404     		.value	0x4e4
 5759 26cb 07       		.byte	0x7
 5760 26cc 00000000 		.long	.LASF385
 5761 26d0 01       		.byte	0x1
 5762 26d1 D9260000 		.long	0x26d9
 5763 26d5 E4260000 		.long	0x26e4
 5764 26d9 02       		.uleb128 0x2
 5765 26da D6600000 		.long	0x60d6
 5766 26de 01       		.uleb128 0x1
 5767 26df 87220000 		.long	0x2287
 5768 26e3 00       		.byte	0
 5769 26e4 0B       		.uleb128 0xb
 5770 26e5 00000000 		.long	.LASF384
 5771 26e9 05       		.byte	0x5
 5772 26ea FA04     		.value	0x4fa
 5773 26ec 07       		.byte	0x7
 5774 26ed 00000000 		.long	.LASF386
 5775 26f1 01       		.byte	0x1
 5776 26f2 FA260000 		.long	0x26fa
 5777 26f6 0A270000 		.long	0x270a
GAS LISTING x64lin/../common/event.s 			page 242


 5778 26fa 02       		.uleb128 0x2
 5779 26fb D6600000 		.long	0x60d6
 5780 26ff 01       		.uleb128 0x1
 5781 2700 87220000 		.long	0x2287
 5782 2704 01       		.uleb128 0x1
 5783 2705 E5600000 		.long	0x60e5
 5784 2709 00       		.byte	0
 5785 270a 0B       		.uleb128 0xb
 5786 270b 00000000 		.long	.LASF387
 5787 270f 05       		.byte	0x5
 5788 2710 1605     		.value	0x516
 5789 2712 07       		.byte	0x7
 5790 2713 00000000 		.long	.LASF388
 5791 2717 01       		.byte	0x1
 5792 2718 20270000 		.long	0x2720
 5793 271c 26270000 		.long	0x2726
 5794 2720 02       		.uleb128 0x2
 5795 2721 D6600000 		.long	0x60d6
 5796 2725 00       		.byte	0
 5797 2726 0F       		.uleb128 0xf
 5798 2727 00000000 		.long	.LASF389
 5799 272b 05       		.byte	0x5
 5800 272c 1F05     		.value	0x51f
 5801 272e 07       		.byte	0x7
 5802 272f 00000000 		.long	.LASF390
 5803 2733 783F0000 		.long	0x3f78
 5804 2737 01       		.byte	0x1
 5805 2738 40270000 		.long	0x2740
 5806 273c 46270000 		.long	0x2746
 5807 2740 02       		.uleb128 0x2
 5808 2741 F9600000 		.long	0x60f9
 5809 2745 00       		.byte	0
 5810 2746 26       		.uleb128 0x26
 5811 2747 00000000 		.long	.LASF260
 5812 274b 1C03     		.value	0x31c
 5813 274d 31       		.byte	0x31
 5814 274e E4410000 		.long	0x41e4
 5815 2752 01       		.byte	0x1
 5816 2753 0F       		.uleb128 0xf
 5817 2754 00000000 		.long	.LASF275
 5818 2758 05       		.byte	0x5
 5819 2759 2F05     		.value	0x52f
 5820 275b 07       		.byte	0x7
 5821 275c 00000000 		.long	.LASF391
 5822 2760 46270000 		.long	0x2746
 5823 2764 01       		.byte	0x1
 5824 2765 6D270000 		.long	0x276d
 5825 2769 78270000 		.long	0x2778
 5826 276d 02       		.uleb128 0x2
 5827 276e D6600000 		.long	0x60d6
 5828 2772 01       		.uleb128 0x1
 5829 2773 87220000 		.long	0x2287
 5830 2777 00       		.byte	0
 5831 2778 26       		.uleb128 0x26
 5832 2779 00000000 		.long	.LASF392
 5833 277d 1D03     		.value	0x31d
 5834 277f 37       		.byte	0x37
GAS LISTING x64lin/../common/event.s 			page 243


 5835 2780 F0410000 		.long	0x41f0
 5836 2784 01       		.byte	0x1
 5837 2785 0F       		.uleb128 0xf
 5838 2786 00000000 		.long	.LASF275
 5839 278a 05       		.byte	0x5
 5840 278b 4105     		.value	0x541
 5841 278d 07       		.byte	0x7
 5842 278e 00000000 		.long	.LASF393
 5843 2792 78270000 		.long	0x2778
 5844 2796 01       		.byte	0x1
 5845 2797 9F270000 		.long	0x279f
 5846 279b AA270000 		.long	0x27aa
 5847 279f 02       		.uleb128 0x2
 5848 27a0 F9600000 		.long	0x60f9
 5849 27a4 01       		.uleb128 0x1
 5850 27a5 87220000 		.long	0x2287
 5851 27a9 00       		.byte	0
 5852 27aa 0B       		.uleb128 0xb
 5853 27ab 00000000 		.long	.LASF394
 5854 27af 05       		.byte	0x5
 5855 27b0 4A05     		.value	0x54a
 5856 27b2 07       		.byte	0x7
 5857 27b3 00000000 		.long	.LASF395
 5858 27b7 02       		.byte	0x2
 5859 27b8 C0270000 		.long	0x27c0
 5860 27bc CB270000 		.long	0x27cb
 5861 27c0 02       		.uleb128 0x2
 5862 27c1 F9600000 		.long	0x60f9
 5863 27c5 01       		.uleb128 0x1
 5864 27c6 87220000 		.long	0x2287
 5865 27ca 00       		.byte	0
 5866 27cb 49       		.uleb128 0x49
 5867 27cc 617400   		.string	"at"
 5868 27cf 05       		.byte	0x5
 5869 27d0 6005     		.value	0x560
 5870 27d2 00000000 		.long	.LASF396
 5871 27d6 46270000 		.long	0x2746
 5872 27da E2270000 		.long	0x27e2
 5873 27de ED270000 		.long	0x27ed
 5874 27e2 02       		.uleb128 0x2
 5875 27e3 D6600000 		.long	0x60d6
 5876 27e7 01       		.uleb128 0x1
 5877 27e8 87220000 		.long	0x2287
 5878 27ec 00       		.byte	0
 5879 27ed 49       		.uleb128 0x49
 5880 27ee 617400   		.string	"at"
 5881 27f1 05       		.byte	0x5
 5882 27f2 7205     		.value	0x572
 5883 27f4 00000000 		.long	.LASF397
 5884 27f8 78270000 		.long	0x2778
 5885 27fc 04280000 		.long	0x2804
 5886 2800 0F280000 		.long	0x280f
 5887 2804 02       		.uleb128 0x2
 5888 2805 F9600000 		.long	0x60f9
 5889 2809 01       		.uleb128 0x1
 5890 280a 87220000 		.long	0x2287
 5891 280e 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 244


 5892 280f 0F       		.uleb128 0xf
 5893 2810 00000000 		.long	.LASF398
 5894 2814 05       		.byte	0x5
 5895 2815 7D05     		.value	0x57d
 5896 2817 07       		.byte	0x7
 5897 2818 00000000 		.long	.LASF399
 5898 281c 46270000 		.long	0x2746
 5899 2820 01       		.byte	0x1
 5900 2821 29280000 		.long	0x2829
 5901 2825 2F280000 		.long	0x282f
 5902 2829 02       		.uleb128 0x2
 5903 282a D6600000 		.long	0x60d6
 5904 282e 00       		.byte	0
 5905 282f 0F       		.uleb128 0xf
 5906 2830 00000000 		.long	.LASF398
 5907 2834 05       		.byte	0x5
 5908 2835 8805     		.value	0x588
 5909 2837 07       		.byte	0x7
 5910 2838 00000000 		.long	.LASF400
 5911 283c 78270000 		.long	0x2778
 5912 2840 01       		.byte	0x1
 5913 2841 49280000 		.long	0x2849
 5914 2845 4F280000 		.long	0x284f
 5915 2849 02       		.uleb128 0x2
 5916 284a F9600000 		.long	0x60f9
 5917 284e 00       		.byte	0
 5918 284f 0F       		.uleb128 0xf
 5919 2850 00000000 		.long	.LASF401
 5920 2854 05       		.byte	0x5
 5921 2855 9305     		.value	0x593
 5922 2857 07       		.byte	0x7
 5923 2858 00000000 		.long	.LASF402
 5924 285c 46270000 		.long	0x2746
 5925 2860 01       		.byte	0x1
 5926 2861 69280000 		.long	0x2869
 5927 2865 6F280000 		.long	0x286f
 5928 2869 02       		.uleb128 0x2
 5929 286a D6600000 		.long	0x60d6
 5930 286e 00       		.byte	0
 5931 286f 0F       		.uleb128 0xf
 5932 2870 00000000 		.long	.LASF401
 5933 2874 05       		.byte	0x5
 5934 2875 A005     		.value	0x5a0
 5935 2877 07       		.byte	0x7
 5936 2878 00000000 		.long	.LASF403
 5937 287c 78270000 		.long	0x2778
 5938 2880 01       		.byte	0x1
 5939 2881 89280000 		.long	0x2889
 5940 2885 8F280000 		.long	0x288f
 5941 2889 02       		.uleb128 0x2
 5942 288a F9600000 		.long	0x60f9
 5943 288e 00       		.byte	0
 5944 288f 0B       		.uleb128 0xb
 5945 2890 00000000 		.long	.LASF404
 5946 2894 05       		.byte	0x5
 5947 2895 B305     		.value	0x5b3
 5948 2897 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 245


 5949 2898 00000000 		.long	.LASF405
 5950 289c 01       		.byte	0x1
 5951 289d A5280000 		.long	0x28a5
 5952 28a1 B0280000 		.long	0x28b0
 5953 28a5 02       		.uleb128 0x2
 5954 28a6 D6600000 		.long	0x60d6
 5955 28aa 01       		.uleb128 0x1
 5956 28ab E5600000 		.long	0x60e5
 5957 28af 00       		.byte	0
 5958 28b0 0B       		.uleb128 0xb
 5959 28b1 00000000 		.long	.LASF404
 5960 28b5 05       		.byte	0x5
 5961 28b6 C205     		.value	0x5c2
 5962 28b8 07       		.byte	0x7
 5963 28b9 00000000 		.long	.LASF406
 5964 28bd 01       		.byte	0x1
 5965 28be C6280000 		.long	0x28c6
 5966 28c2 D1280000 		.long	0x28d1
 5967 28c6 02       		.uleb128 0x2
 5968 28c7 D6600000 		.long	0x60d6
 5969 28cb 01       		.uleb128 0x1
 5970 28cc 03610000 		.long	0x6103
 5971 28d0 00       		.byte	0
 5972 28d1 0B       		.uleb128 0xb
 5973 28d2 00000000 		.long	.LASF407
 5974 28d6 05       		.byte	0x5
 5975 28d7 D805     		.value	0x5d8
 5976 28d9 07       		.byte	0x7
 5977 28da 00000000 		.long	.LASF408
 5978 28de 01       		.byte	0x1
 5979 28df E7280000 		.long	0x28e7
 5980 28e3 F2280000 		.long	0x28f2
 5981 28e7 02       		.uleb128 0x2
 5982 28e8 D6600000 		.long	0x60d6
 5983 28ec 01       		.uleb128 0x1
 5984 28ed E5600000 		.long	0x60e5
 5985 28f1 00       		.byte	0
 5986 28f2 0B       		.uleb128 0xb
 5987 28f3 00000000 		.long	.LASF407
 5988 28f7 05       		.byte	0x5
 5989 28f8 E705     		.value	0x5e7
 5990 28fa 07       		.byte	0x7
 5991 28fb 00000000 		.long	.LASF409
 5992 28ff 01       		.byte	0x1
 5993 2900 08290000 		.long	0x2908
 5994 2904 13290000 		.long	0x2913
 5995 2908 02       		.uleb128 0x2
 5996 2909 D6600000 		.long	0x60d6
 5997 290d 01       		.uleb128 0x1
 5998 290e 03610000 		.long	0x6103
 5999 2912 00       		.byte	0
 6000 2913 0B       		.uleb128 0xb
 6001 2914 00000000 		.long	.LASF410
 6002 2918 05       		.byte	0x5
 6003 2919 FC05     		.value	0x5fc
 6004 291b 07       		.byte	0x7
 6005 291c 00000000 		.long	.LASF411
GAS LISTING x64lin/../common/event.s 			page 246


 6006 2920 01       		.byte	0x1
 6007 2921 29290000 		.long	0x2929
 6008 2925 2F290000 		.long	0x292f
 6009 2929 02       		.uleb128 0x2
 6010 292a D6600000 		.long	0x60d6
 6011 292e 00       		.byte	0
 6012 292f 0B       		.uleb128 0xb
 6013 2930 00000000 		.long	.LASF412
 6014 2934 05       		.byte	0x5
 6015 2935 1306     		.value	0x613
 6016 2937 07       		.byte	0x7
 6017 2938 00000000 		.long	.LASF413
 6018 293c 01       		.byte	0x1
 6019 293d 45290000 		.long	0x2945
 6020 2941 4B290000 		.long	0x294b
 6021 2945 02       		.uleb128 0x2
 6022 2946 D6600000 		.long	0x60d6
 6023 294a 00       		.byte	0
 6024 294b 17       		.uleb128 0x17
 6025 294c 00000000 		.long	.LASF414
 6026 2950 06       		.byte	0x6
 6027 2951 D2       		.byte	0xd2
 6028 2952 05       		.byte	0x5
 6029 2953 00000000 		.long	.LASF415
 6030 2957 D3240000 		.long	0x24d3
 6031 295b 01       		.byte	0x1
 6032 295c 64290000 		.long	0x2964
 6033 2960 74290000 		.long	0x2974
 6034 2964 02       		.uleb128 0x2
 6035 2965 D6600000 		.long	0x60d6
 6036 2969 01       		.uleb128 0x1
 6037 296a 00250000 		.long	0x2500
 6038 296e 01       		.uleb128 0x1
 6039 296f E5600000 		.long	0x60e5
 6040 2973 00       		.byte	0
 6041 2974 0F       		.uleb128 0xf
 6042 2975 00000000 		.long	.LASF414
 6043 2979 05       		.byte	0x5
 6044 297a 5306     		.value	0x653
 6045 297c 07       		.byte	0x7
 6046 297d 00000000 		.long	.LASF416
 6047 2981 D3240000 		.long	0x24d3
 6048 2985 01       		.byte	0x1
 6049 2986 8E290000 		.long	0x298e
 6050 298a 9E290000 		.long	0x299e
 6051 298e 02       		.uleb128 0x2
 6052 298f D6600000 		.long	0x60d6
 6053 2993 01       		.uleb128 0x1
 6054 2994 00250000 		.long	0x2500
 6055 2998 01       		.uleb128 0x1
 6056 2999 03610000 		.long	0x6103
 6057 299d 00       		.byte	0
 6058 299e 0F       		.uleb128 0xf
 6059 299f 00000000 		.long	.LASF414
 6060 29a3 05       		.byte	0x5
 6061 29a4 6106     		.value	0x661
 6062 29a6 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 247


 6063 29a7 00000000 		.long	.LASF417
 6064 29ab D3240000 		.long	0x24d3
 6065 29af 01       		.byte	0x1
 6066 29b0 B8290000 		.long	0x29b8
 6067 29b4 C8290000 		.long	0x29c8
 6068 29b8 02       		.uleb128 0x2
 6069 29b9 D6600000 		.long	0x60d6
 6070 29bd 01       		.uleb128 0x1
 6071 29be 00250000 		.long	0x2500
 6072 29c2 01       		.uleb128 0x1
 6073 29c3 F22E0000 		.long	0x2ef2
 6074 29c7 00       		.byte	0
 6075 29c8 0F       		.uleb128 0xf
 6076 29c9 00000000 		.long	.LASF414
 6077 29cd 05       		.byte	0x5
 6078 29ce 7406     		.value	0x674
 6079 29d0 07       		.byte	0x7
 6080 29d1 00000000 		.long	.LASF418
 6081 29d5 D3240000 		.long	0x24d3
 6082 29d9 01       		.byte	0x1
 6083 29da E2290000 		.long	0x29e2
 6084 29de F7290000 		.long	0x29f7
 6085 29e2 02       		.uleb128 0x2
 6086 29e3 D6600000 		.long	0x60d6
 6087 29e7 01       		.uleb128 0x1
 6088 29e8 00250000 		.long	0x2500
 6089 29ec 01       		.uleb128 0x1
 6090 29ed 87220000 		.long	0x2287
 6091 29f1 01       		.uleb128 0x1
 6092 29f2 E5600000 		.long	0x60e5
 6093 29f6 00       		.byte	0
 6094 29f7 0F       		.uleb128 0xf
 6095 29f8 00000000 		.long	.LASF419
 6096 29fc 05       		.byte	0x5
 6097 29fd C506     		.value	0x6c5
 6098 29ff 07       		.byte	0x7
 6099 2a00 00000000 		.long	.LASF420
 6100 2a04 D3240000 		.long	0x24d3
 6101 2a08 01       		.byte	0x1
 6102 2a09 112A0000 		.long	0x2a11
 6103 2a0d 1C2A0000 		.long	0x2a1c
 6104 2a11 02       		.uleb128 0x2
 6105 2a12 D6600000 		.long	0x60d6
 6106 2a16 01       		.uleb128 0x1
 6107 2a17 00250000 		.long	0x2500
 6108 2a1b 00       		.byte	0
 6109 2a1c 0F       		.uleb128 0xf
 6110 2a1d 00000000 		.long	.LASF419
 6111 2a21 05       		.byte	0x5
 6112 2a22 DD06     		.value	0x6dd
 6113 2a24 07       		.byte	0x7
 6114 2a25 00000000 		.long	.LASF421
 6115 2a29 D3240000 		.long	0x24d3
 6116 2a2d 01       		.byte	0x1
 6117 2a2e 362A0000 		.long	0x2a36
 6118 2a32 462A0000 		.long	0x2a46
 6119 2a36 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 248


 6120 2a37 D6600000 		.long	0x60d6
 6121 2a3b 01       		.uleb128 0x1
 6122 2a3c 00250000 		.long	0x2500
 6123 2a40 01       		.uleb128 0x1
 6124 2a41 00250000 		.long	0x2500
 6125 2a45 00       		.byte	0
 6126 2a46 0B       		.uleb128 0xb
 6127 2a47 00000000 		.long	.LASF78
 6128 2a4b 05       		.byte	0x5
 6129 2a4c EF06     		.value	0x6ef
 6130 2a4e 07       		.byte	0x7
 6131 2a4f 00000000 		.long	.LASF422
 6132 2a53 01       		.byte	0x1
 6133 2a54 5C2A0000 		.long	0x2a5c
 6134 2a58 672A0000 		.long	0x2a67
 6135 2a5c 02       		.uleb128 0x2
 6136 2a5d D6600000 		.long	0x60d6
 6137 2a61 01       		.uleb128 0x1
 6138 2a62 F4600000 		.long	0x60f4
 6139 2a66 00       		.byte	0
 6140 2a67 0B       		.uleb128 0xb
 6141 2a68 00000000 		.long	.LASF423
 6142 2a6c 05       		.byte	0x5
 6143 2a6d 0107     		.value	0x701
 6144 2a6f 07       		.byte	0x7
 6145 2a70 00000000 		.long	.LASF424
 6146 2a74 01       		.byte	0x1
 6147 2a75 7D2A0000 		.long	0x2a7d
 6148 2a79 832A0000 		.long	0x2a83
 6149 2a7d 02       		.uleb128 0x2
 6150 2a7e D6600000 		.long	0x60d6
 6151 2a82 00       		.byte	0
 6152 2a83 6E       		.uleb128 0x6e
 6153 2a84 00000000 		.long	.LASF425
 6154 2a88 2107     		.value	0x721
 6155 2a8a 00000000 		.long	.LASF426
 6156 2a8e 21010000 		.long	0x121
 6157 2a92 A12A0000 		.long	0x2aa1
 6158 2a96 01       		.uleb128 0x1
 6159 2a97 21010000 		.long	0x121
 6160 2a9b 01       		.uleb128 0x1
 6161 2a9c E0600000 		.long	0x60e0
 6162 2aa0 00       		.byte	0
 6163 2aa1 6E       		.uleb128 0x6e
 6164 2aa2 00000000 		.long	.LASF427
 6165 2aa6 2A07     		.value	0x72a
 6166 2aa8 00000000 		.long	.LASF428
 6167 2aac 87220000 		.long	0x2287
 6168 2ab0 BA2A0000 		.long	0x2aba
 6169 2ab4 01       		.uleb128 0x1
 6170 2ab5 08610000 		.long	0x6108
 6171 2ab9 00       		.byte	0
 6172 2aba 18       		.uleb128 0x18
 6173 2abb 00000000 		.long	.LASF300
 6174 2abf 05       		.byte	0x5
 6175 2ac0 1403     		.value	0x314
 6176 2ac2 2E       		.byte	0x2e
GAS LISTING x64lin/../common/event.s 			page 249


 6177 2ac3 981E0000 		.long	0x1e98
 6178 2ac7 08       		.uleb128 0x8
 6179 2ac8 BA2A0000 		.long	0x2aba
 6180 2acc 0B       		.uleb128 0xb
 6181 2acd 00000000 		.long	.LASF429
 6182 2ad1 06       		.byte	0x6
 6183 2ad2 8901     		.value	0x189
 6184 2ad4 05       		.byte	0x5
 6185 2ad5 00000000 		.long	.LASF430
 6186 2ad9 02       		.byte	0x2
 6187 2ada E22A0000 		.long	0x2ae2
 6188 2ade ED2A0000 		.long	0x2aed
 6189 2ae2 02       		.uleb128 0x2
 6190 2ae3 D6600000 		.long	0x60d6
 6191 2ae7 01       		.uleb128 0x1
 6192 2ae8 E5600000 		.long	0x60e5
 6193 2aec 00       		.byte	0
 6194 2aed 0D       		.uleb128 0xd
 6195 2aee 00000000 		.long	.LASF431
 6196 2af2 06       		.byte	0x6
 6197 2af3 45       		.byte	0x45
 6198 2af4 05       		.byte	0x5
 6199 2af5 00000000 		.long	.LASF432
 6200 2af9 02       		.byte	0x2
 6201 2afa 022B0000 		.long	0x2b02
 6202 2afe 082B0000 		.long	0x2b08
 6203 2b02 02       		.uleb128 0x2
 6204 2b03 D6600000 		.long	0x60d6
 6205 2b07 00       		.byte	0
 6206 2b08 0B       		.uleb128 0xb
 6207 2b09 00000000 		.long	.LASF433
 6208 2b0d 05       		.byte	0x5
 6209 2b0e 8D07     		.value	0x78d
 6210 2b10 07       		.byte	0x7
 6211 2b11 00000000 		.long	.LASF434
 6212 2b15 02       		.byte	0x2
 6213 2b16 1E2B0000 		.long	0x2b1e
 6214 2b1a 2E2B0000 		.long	0x2b2e
 6215 2b1e 02       		.uleb128 0x2
 6216 2b1f D6600000 		.long	0x60d6
 6217 2b23 01       		.uleb128 0x1
 6218 2b24 87220000 		.long	0x2287
 6219 2b28 01       		.uleb128 0x1
 6220 2b29 E5600000 		.long	0x60e5
 6221 2b2d 00       		.byte	0
 6222 2b2e 0B       		.uleb128 0xb
 6223 2b2f 00000000 		.long	.LASF435
 6224 2b33 06       		.byte	0x6
 6225 2b34 3002     		.value	0x230
 6226 2b36 0A       		.byte	0xa
 6227 2b37 00000000 		.long	.LASF436
 6228 2b3b 02       		.byte	0x2
 6229 2b3c 442B0000 		.long	0x2b44
 6230 2b40 4A2B0000 		.long	0x2b4a
 6231 2b44 02       		.uleb128 0x2
 6232 2b45 D6600000 		.long	0x60d6
 6233 2b49 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 250


 6234 2b4a 0B       		.uleb128 0xb
 6235 2b4b 00000000 		.long	.LASF437
 6236 2b4f 06       		.byte	0x6
 6237 2b50 4002     		.value	0x240
 6238 2b52 0A       		.byte	0xa
 6239 2b53 00000000 		.long	.LASF438
 6240 2b57 02       		.byte	0x2
 6241 2b58 602B0000 		.long	0x2b60
 6242 2b5c 662B0000 		.long	0x2b66
 6243 2b60 02       		.uleb128 0x2
 6244 2b61 D6600000 		.long	0x60d6
 6245 2b65 00       		.byte	0
 6246 2b66 0B       		.uleb128 0xb
 6247 2b67 00000000 		.long	.LASF439
 6248 2b6b 06       		.byte	0x6
 6249 2b6c 3301     		.value	0x133
 6250 2b6e 05       		.byte	0x5
 6251 2b6f 00000000 		.long	.LASF440
 6252 2b73 02       		.byte	0x2
 6253 2b74 7C2B0000 		.long	0x2b7c
 6254 2b78 912B0000 		.long	0x2b91
 6255 2b7c 02       		.uleb128 0x2
 6256 2b7d D6600000 		.long	0x60d6
 6257 2b81 01       		.uleb128 0x1
 6258 2b82 D3240000 		.long	0x24d3
 6259 2b86 01       		.uleb128 0x1
 6260 2b87 87220000 		.long	0x2287
 6261 2b8b 01       		.uleb128 0x1
 6262 2b8c E5600000 		.long	0x60e5
 6263 2b90 00       		.byte	0
 6264 2b91 0B       		.uleb128 0xb
 6265 2b92 00000000 		.long	.LASF441
 6266 2b96 06       		.byte	0x6
 6267 2b97 AD02     		.value	0x2ad
 6268 2b99 05       		.byte	0x5
 6269 2b9a 00000000 		.long	.LASF442
 6270 2b9e 02       		.byte	0x2
 6271 2b9f A72B0000 		.long	0x2ba7
 6272 2ba3 BC2B0000 		.long	0x2bbc
 6273 2ba7 02       		.uleb128 0x2
 6274 2ba8 D6600000 		.long	0x60d6
 6275 2bac 01       		.uleb128 0x1
 6276 2bad D3240000 		.long	0x24d3
 6277 2bb1 01       		.uleb128 0x1
 6278 2bb2 87220000 		.long	0x2287
 6279 2bb6 01       		.uleb128 0x1
 6280 2bb7 E5600000 		.long	0x60e5
 6281 2bbb 00       		.byte	0
 6282 2bbc 0B       		.uleb128 0xb
 6283 2bbd 00000000 		.long	.LASF443
 6284 2bc1 06       		.byte	0x6
 6285 2bc2 5B03     		.value	0x35b
 6286 2bc4 06       		.byte	0x6
 6287 2bc5 00000000 		.long	.LASF444
 6288 2bc9 02       		.byte	0x2
 6289 2bca D22B0000 		.long	0x2bd2
 6290 2bce E22B0000 		.long	0x2be2
GAS LISTING x64lin/../common/event.s 			page 251


 6291 2bd2 02       		.uleb128 0x2
 6292 2bd3 D6600000 		.long	0x60d6
 6293 2bd7 01       		.uleb128 0x1
 6294 2bd8 D3240000 		.long	0x24d3
 6295 2bdc 01       		.uleb128 0x1
 6296 2bdd D3240000 		.long	0x24d3
 6297 2be1 00       		.byte	0
 6298 2be2 0B       		.uleb128 0xb
 6299 2be3 00000000 		.long	.LASF445
 6300 2be7 05       		.byte	0x5
 6301 2be8 FD07     		.value	0x7fd
 6302 2bea 07       		.byte	0x7
 6303 2beb 00000000 		.long	.LASF446
 6304 2bef 02       		.byte	0x2
 6305 2bf0 F82B0000 		.long	0x2bf8
 6306 2bf4 0D2C0000 		.long	0x2c0d
 6307 2bf8 02       		.uleb128 0x2
 6308 2bf9 D6600000 		.long	0x60d6
 6309 2bfd 01       		.uleb128 0x1
 6310 2bfe D3240000 		.long	0x24d3
 6311 2c02 01       		.uleb128 0x1
 6312 2c03 D3240000 		.long	0x24d3
 6313 2c07 01       		.uleb128 0x1
 6314 2c08 04600000 		.long	0x6004
 6315 2c0c 00       		.byte	0
 6316 2c0d 0B       		.uleb128 0xb
 6317 2c0e 00000000 		.long	.LASF447
 6318 2c12 05       		.byte	0x5
 6319 2c13 0608     		.value	0x806
 6320 2c15 07       		.byte	0x7
 6321 2c16 00000000 		.long	.LASF448
 6322 2c1a 02       		.byte	0x2
 6323 2c1b 232C0000 		.long	0x2c23
 6324 2c1f 2E2C0000 		.long	0x2c2e
 6325 2c23 02       		.uleb128 0x2
 6326 2c24 D6600000 		.long	0x60d6
 6327 2c28 01       		.uleb128 0x1
 6328 2c29 D3240000 		.long	0x24d3
 6329 2c2d 00       		.byte	0
 6330 2c2e 0B       		.uleb128 0xb
 6331 2c2f 00000000 		.long	.LASF449
 6332 2c33 05       		.byte	0x5
 6333 2c34 1008     		.value	0x810
 6334 2c36 07       		.byte	0x7
 6335 2c37 00000000 		.long	.LASF450
 6336 2c3b 02       		.byte	0x2
 6337 2c3c 442C0000 		.long	0x2c44
 6338 2c40 4F2C0000 		.long	0x2c4f
 6339 2c44 02       		.uleb128 0x2
 6340 2c45 D6600000 		.long	0x60d6
 6341 2c49 01       		.uleb128 0x1
 6342 2c4a D3240000 		.long	0x24d3
 6343 2c4e 00       		.byte	0
 6344 2c4f 17       		.uleb128 0x17
 6345 2c50 00000000 		.long	.LASF451
 6346 2c54 06       		.byte	0x6
 6347 2c55 EB       		.byte	0xeb
GAS LISTING x64lin/../common/event.s 			page 252


 6348 2c56 05       		.byte	0x5
 6349 2c57 00000000 		.long	.LASF452
 6350 2c5b D3240000 		.long	0x24d3
 6351 2c5f 02       		.byte	0x2
 6352 2c60 682C0000 		.long	0x2c68
 6353 2c64 732C0000 		.long	0x2c73
 6354 2c68 02       		.uleb128 0x2
 6355 2c69 D6600000 		.long	0x60d6
 6356 2c6d 01       		.uleb128 0x1
 6357 2c6e D3240000 		.long	0x24d3
 6358 2c72 00       		.byte	0
 6359 2c73 0F       		.uleb128 0xf
 6360 2c74 00000000 		.long	.LASF451
 6361 2c78 06       		.byte	0x6
 6362 2c79 0201     		.value	0x102
 6363 2c7b 05       		.byte	0x5
 6364 2c7c 00000000 		.long	.LASF453
 6365 2c80 D3240000 		.long	0x24d3
 6366 2c84 02       		.byte	0x2
 6367 2c85 8D2C0000 		.long	0x2c8d
 6368 2c89 9D2C0000 		.long	0x2c9d
 6369 2c8d 02       		.uleb128 0x2
 6370 2c8e D6600000 		.long	0x60d6
 6371 2c92 01       		.uleb128 0x1
 6372 2c93 D3240000 		.long	0x24d3
 6373 2c97 01       		.uleb128 0x1
 6374 2c98 D3240000 		.long	0x24d3
 6375 2c9c 00       		.byte	0
 6376 2c9d 0B       		.uleb128 0xb
 6377 2c9e 00000000 		.long	.LASF454
 6378 2ca2 06       		.byte	0x6
 6379 2ca3 5E01     		.value	0x15e
 6380 2ca5 05       		.byte	0x5
 6381 2ca6 00000000 		.long	.LASF455
 6382 2caa 02       		.byte	0x2
 6383 2cab B32C0000 		.long	0x2cb3
 6384 2caf BE2C0000 		.long	0x2cbe
 6385 2cb3 02       		.uleb128 0x2
 6386 2cb4 D6600000 		.long	0x60d6
 6387 2cb8 01       		.uleb128 0x1
 6388 2cb9 87220000 		.long	0x2287
 6389 2cbd 00       		.byte	0
 6390 2cbe 0F       		.uleb128 0xf
 6391 2cbf 00000000 		.long	.LASF456
 6392 2cc3 06       		.byte	0x6
 6393 2cc4 7601     		.value	0x176
 6394 2cc6 05       		.byte	0x5
 6395 2cc7 00000000 		.long	.LASF457
 6396 2ccb 783F0000 		.long	0x3f78
 6397 2ccf 02       		.byte	0x2
 6398 2cd0 D82C0000 		.long	0x2cd8
 6399 2cd4 DE2C0000 		.long	0x2cde
 6400 2cd8 02       		.uleb128 0x2
 6401 2cd9 D6600000 		.long	0x60d6
 6402 2cdd 00       		.byte	0
 6403 2cde 0F       		.uleb128 0xf
 6404 2cdf 00000000 		.long	.LASF458
GAS LISTING x64lin/../common/event.s 			page 253


 6405 2ce3 05       		.byte	0x5
 6406 2ce4 2A08     		.value	0x82a
 6407 2ce6 07       		.byte	0x7
 6408 2ce7 00000000 		.long	.LASF459
 6409 2ceb D3240000 		.long	0x24d3
 6410 2cef 02       		.byte	0x2
 6411 2cf0 F82C0000 		.long	0x2cf8
 6412 2cf4 032D0000 		.long	0x2d03
 6413 2cf8 02       		.uleb128 0x2
 6414 2cf9 D6600000 		.long	0x60d6
 6415 2cfd 01       		.uleb128 0x1
 6416 2cfe 87220000 		.long	0x2287
 6417 2d02 00       		.byte	0
 6418 2d03 0F       		.uleb128 0xf
 6419 2d04 00000000 		.long	.LASF460
 6420 2d08 05       		.byte	0x5
 6421 2d09 3408     		.value	0x834
 6422 2d0b 07       		.byte	0x7
 6423 2d0c 00000000 		.long	.LASF461
 6424 2d10 D3240000 		.long	0x24d3
 6425 2d14 02       		.byte	0x2
 6426 2d15 1D2D0000 		.long	0x2d1d
 6427 2d19 282D0000 		.long	0x2d28
 6428 2d1d 02       		.uleb128 0x2
 6429 2d1e D6600000 		.long	0x60d6
 6430 2d22 01       		.uleb128 0x1
 6431 2d23 87220000 		.long	0x2287
 6432 2d27 00       		.byte	0
 6433 2d28 0B       		.uleb128 0xb
 6434 2d29 00000000 		.long	.LASF462
 6435 2d2d 06       		.byte	0x6
 6436 2d2e 7103     		.value	0x371
 6437 2d30 05       		.byte	0x5
 6438 2d31 00000000 		.long	.LASF463
 6439 2d35 02       		.byte	0x2
 6440 2d36 3E2D0000 		.long	0x2d3e
 6441 2d3a 492D0000 		.long	0x2d49
 6442 2d3e 02       		.uleb128 0x2
 6443 2d3f D6600000 		.long	0x60d6
 6444 2d43 01       		.uleb128 0x1
 6445 2d44 87220000 		.long	0x2287
 6446 2d48 00       		.byte	0
 6447 2d49 0B       		.uleb128 0xb
 6448 2d4a 00000000 		.long	.LASF464
 6449 2d4e 06       		.byte	0x6
 6450 2d4f 8A03     		.value	0x38a
 6451 2d51 05       		.byte	0x5
 6452 2d52 00000000 		.long	.LASF465
 6453 2d56 02       		.byte	0x2
 6454 2d57 5F2D0000 		.long	0x2d5f
 6455 2d5b 6A2D0000 		.long	0x2d6a
 6456 2d5f 02       		.uleb128 0x2
 6457 2d60 D6600000 		.long	0x60d6
 6458 2d64 01       		.uleb128 0x1
 6459 2d65 87220000 		.long	0x2287
 6460 2d69 00       		.byte	0
 6461 2d6a 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 254


 6462 2d6b 00000000 		.long	.LASF466
 6463 2d6f 05       		.byte	0x5
 6464 2d70 4E08     		.value	0x84e
 6465 2d72 07       		.byte	0x7
 6466 2d73 00000000 		.long	.LASF467
 6467 2d77 02       		.byte	0x2
 6468 2d78 802D0000 		.long	0x2d80
 6469 2d7c 8B2D0000 		.long	0x2d8b
 6470 2d80 02       		.uleb128 0x2
 6471 2d81 D6600000 		.long	0x60d6
 6472 2d85 01       		.uleb128 0x1
 6473 2d86 87220000 		.long	0x2287
 6474 2d8a 00       		.byte	0
 6475 2d8b 0B       		.uleb128 0xb
 6476 2d8c 00000000 		.long	.LASF468
 6477 2d90 05       		.byte	0x5
 6478 2d91 5608     		.value	0x856
 6479 2d93 07       		.byte	0x7
 6480 2d94 00000000 		.long	.LASF469
 6481 2d98 02       		.byte	0x2
 6482 2d99 A12D0000 		.long	0x2da1
 6483 2d9d AC2D0000 		.long	0x2dac
 6484 2da1 02       		.uleb128 0x2
 6485 2da2 D6600000 		.long	0x60d6
 6486 2da6 01       		.uleb128 0x1
 6487 2da7 87220000 		.long	0x2287
 6488 2dab 00       		.byte	0
 6489 2dac 0B       		.uleb128 0xb
 6490 2dad 00000000 		.long	.LASF470
 6491 2db1 06       		.byte	0x6
 6492 2db2 A303     		.value	0x3a3
 6493 2db4 05       		.byte	0x5
 6494 2db5 00000000 		.long	.LASF471
 6495 2db9 02       		.byte	0x2
 6496 2dba C22D0000 		.long	0x2dc2
 6497 2dbe D22D0000 		.long	0x2dd2
 6498 2dc2 02       		.uleb128 0x2
 6499 2dc3 D6600000 		.long	0x60d6
 6500 2dc7 01       		.uleb128 0x1
 6501 2dc8 87220000 		.long	0x2287
 6502 2dcc 01       		.uleb128 0x1
 6503 2dcd 783F0000 		.long	0x3f78
 6504 2dd1 00       		.byte	0
 6505 2dd2 0B       		.uleb128 0xb
 6506 2dd3 00000000 		.long	.LASF472
 6507 2dd7 05       		.byte	0x5
 6508 2dd8 6508     		.value	0x865
 6509 2dda 07       		.byte	0x7
 6510 2ddb 00000000 		.long	.LASF473
 6511 2ddf 02       		.byte	0x2
 6512 2de0 E82D0000 		.long	0x2de8
 6513 2de4 F82D0000 		.long	0x2df8
 6514 2de8 02       		.uleb128 0x2
 6515 2de9 D6600000 		.long	0x60d6
 6516 2ded 01       		.uleb128 0x1
 6517 2dee EF600000 		.long	0x60ef
 6518 2df2 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 255


 6519 2df3 88060000 		.long	0x688
 6520 2df7 00       		.byte	0
 6521 2df8 0B       		.uleb128 0xb
 6522 2df9 00000000 		.long	.LASF472
 6523 2dfd 05       		.byte	0x5
 6524 2dfe 7008     		.value	0x870
 6525 2e00 07       		.byte	0x7
 6526 2e01 00000000 		.long	.LASF474
 6527 2e05 02       		.byte	0x2
 6528 2e06 0E2E0000 		.long	0x2e0e
 6529 2e0a 1E2E0000 		.long	0x2e1e
 6530 2e0e 02       		.uleb128 0x2
 6531 2e0f D6600000 		.long	0x60d6
 6532 2e13 01       		.uleb128 0x1
 6533 2e14 EF600000 		.long	0x60ef
 6534 2e18 01       		.uleb128 0x1
 6535 2e19 15010000 		.long	0x115
 6536 2e1d 00       		.byte	0
 6537 2e1e 0B       		.uleb128 0xb
 6538 2e1f 00000000 		.long	.LASF475
 6539 2e23 05       		.byte	0x5
 6540 2e24 8E08     		.value	0x88e
 6541 2e26 07       		.byte	0x7
 6542 2e27 00000000 		.long	.LASF476
 6543 2e2b 02       		.byte	0x2
 6544 2e2c 342E0000 		.long	0x2e34
 6545 2e30 442E0000 		.long	0x2e44
 6546 2e34 02       		.uleb128 0x2
 6547 2e35 D6600000 		.long	0x60d6
 6548 2e39 01       		.uleb128 0x1
 6549 2e3a EF600000 		.long	0x60ef
 6550 2e3e 01       		.uleb128 0x1
 6551 2e3f 88060000 		.long	0x688
 6552 2e43 00       		.byte	0
 6553 2e44 0B       		.uleb128 0xb
 6554 2e45 00000000 		.long	.LASF475
 6555 2e49 05       		.byte	0x5
 6556 2e4a 9C08     		.value	0x89c
 6557 2e4c 07       		.byte	0x7
 6558 2e4d 00000000 		.long	.LASF477
 6559 2e51 02       		.byte	0x2
 6560 2e52 5A2E0000 		.long	0x2e5a
 6561 2e56 6A2E0000 		.long	0x2e6a
 6562 2e5a 02       		.uleb128 0x2
 6563 2e5b D6600000 		.long	0x60d6
 6564 2e5f 01       		.uleb128 0x1
 6565 2e60 EF600000 		.long	0x60ef
 6566 2e64 01       		.uleb128 0x1
 6567 2e65 15010000 		.long	0x115
 6568 2e69 00       		.byte	0
 6569 2e6a 18       		.uleb128 0x18
 6570 2e6b 00000000 		.long	.LASF249
 6571 2e6f 05       		.byte	0x5
 6572 2e70 1603     		.value	0x316
 6573 2e72 2C       		.byte	0x2c
 6574 2e73 CD1D0000 		.long	0x1dcd
 6575 2e77 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 256


 6576 2e78 00000000 		.long	.LASF478
 6577 2e7c 06       		.byte	0x6
 6578 2e7d E401     		.value	0x1e4
 6579 2e7f 07       		.byte	0x7
 6580 2e80 00000000 		.long	.LASF479
 6581 2e84 02       		.byte	0x2
 6582 2e85 9C2E0000 		.long	0x2e9c
 6583 2e89 A72E0000 		.long	0x2ea7
 6584 2e8d 2A       		.uleb128 0x2a
 6585 2e8e 00000000 		.long	.LASF480
 6586 2e92 9C2E0000 		.long	0x2e9c
 6587 2e96 21       		.uleb128 0x21
 6588 2e97 2D140000 		.long	0x142d
 6589 2e9b 00       		.byte	0
 6590 2e9c 02       		.uleb128 0x2
 6591 2e9d D6600000 		.long	0x60d6
 6592 2ea1 01       		.uleb128 0x1
 6593 2ea2 C1620000 		.long	0x62c1
 6594 2ea6 00       		.byte	0
 6595 2ea7 17       		.uleb128 0x17
 6596 2ea8 00000000 		.long	.LASF481
 6597 2eac 06       		.byte	0x6
 6598 2ead A4       		.byte	0xa4
 6599 2eae 07       		.byte	0x7
 6600 2eaf 00000000 		.long	.LASF482
 6601 2eb3 46270000 		.long	0x2746
 6602 2eb7 01       		.byte	0x1
 6603 2eb8 CF2E0000 		.long	0x2ecf
 6604 2ebc DA2E0000 		.long	0x2eda
 6605 2ec0 2A       		.uleb128 0x2a
 6606 2ec1 00000000 		.long	.LASF480
 6607 2ec5 CF2E0000 		.long	0x2ecf
 6608 2ec9 21       		.uleb128 0x21
 6609 2eca 2D140000 		.long	0x142d
 6610 2ece 00       		.byte	0
 6611 2ecf 02       		.uleb128 0x2
 6612 2ed0 D6600000 		.long	0x60d6
 6613 2ed4 01       		.uleb128 0x1
 6614 2ed5 C1620000 		.long	0x62c1
 6615 2ed9 00       		.byte	0
 6616 2eda 0A       		.uleb128 0xa
 6617 2edb 5F547000 		.string	"_Tp"
 6618 2edf 2D140000 		.long	0x142d
 6619 2ee3 12       		.uleb128 0x12
 6620 2ee4 00000000 		.long	.LASF335
 6621 2ee8 75160000 		.long	0x1675
 6622 2eec 00       		.byte	0
 6623 2eed 08       		.uleb128 0x8
 6624 2eee 9B210000 		.long	0x219b
 6625 2ef2 4E       		.uleb128 0x4e
 6626 2ef3 00000000 		.long	.LASF484
 6627 2ef7 4E       		.uleb128 0x4e
 6628 2ef8 00000000 		.long	.LASF485
 6629 2efc 4E       		.uleb128 0x4e
 6630 2efd 00000000 		.long	.LASF486
 6631 2f01 23       		.uleb128 0x23
 6632 2f02 00000000 		.long	.LASF487
GAS LISTING x64lin/../common/event.s 			page 257


 6633 2f06 50       		.byte	0x50
 6634 2f07 04       		.byte	0x4
 6635 2f08 60       		.byte	0x60
 6636 2f09 0B       		.byte	0xb
 6637 2f0a E0300000 		.long	0x30e0
 6638 2f0e 9101     		.uleb128 0x91
 6639 2f10 6300     		.string	"c"
 6640 2f12 04       		.byte	0x4
 6641 2f13 99       		.byte	0x99
 6642 2f14 11       		.byte	0x11
 6643 2f15 9B210000 		.long	0x219b
 6644 2f19 00       		.byte	0
 6645 2f1a 02       		.byte	0x2
 6646 2f1b 50       		.uleb128 0x50
 6647 2f1c 00000000 		.long	.LASF488
 6648 2f20 04       		.byte	0x4
 6649 2f21 AA       		.byte	0xaa
 6650 2f22 07       		.byte	0x7
 6651 2f23 00000000 		.long	.LASF489
 6652 2f27 2F2F0000 		.long	0x2f2f
 6653 2f2b 3A2F0000 		.long	0x2f3a
 6654 2f2f 02       		.uleb128 0x2
 6655 2f30 0D610000 		.long	0x610d
 6656 2f34 01       		.uleb128 0x1
 6657 2f35 EA600000 		.long	0x60ea
 6658 2f39 00       		.byte	0
 6659 2f3a 50       		.uleb128 0x50
 6660 2f3b 00000000 		.long	.LASF488
 6661 2f3f 04       		.byte	0x4
 6662 2f40 AE       		.byte	0xae
 6663 2f41 07       		.byte	0x7
 6664 2f42 00000000 		.long	.LASF490
 6665 2f46 4E2F0000 		.long	0x2f4e
 6666 2f4a 592F0000 		.long	0x2f59
 6667 2f4e 02       		.uleb128 0x2
 6668 2f4f 0D610000 		.long	0x610d
 6669 2f53 01       		.uleb128 0x1
 6670 2f54 EF600000 		.long	0x60ef
 6671 2f58 00       		.byte	0
 6672 2f59 17       		.uleb128 0x17
 6673 2f5a 00000000 		.long	.LASF389
 6674 2f5e 04       		.byte	0x4
 6675 2f5f CB       		.byte	0xcb
 6676 2f60 07       		.byte	0x7
 6677 2f61 00000000 		.long	.LASF491
 6678 2f65 783F0000 		.long	0x3f78
 6679 2f69 01       		.byte	0x1
 6680 2f6a 722F0000 		.long	0x2f72
 6681 2f6e 782F0000 		.long	0x2f78
 6682 2f72 02       		.uleb128 0x2
 6683 2f73 17610000 		.long	0x6117
 6684 2f77 00       		.byte	0
 6685 2f78 27       		.uleb128 0x27
 6686 2f79 00000000 		.long	.LASF218
 6687 2f7d 04       		.byte	0x4
 6688 2f7e 8D       		.byte	0x8d
 6689 2f7f 2D       		.byte	0x2d
GAS LISTING x64lin/../common/event.s 			page 258


 6690 2f80 87220000 		.long	0x2287
 6691 2f84 01       		.byte	0x1
 6692 2f85 17       		.uleb128 0x17
 6693 2f86 00000000 		.long	.LASF381
 6694 2f8a 04       		.byte	0x4
 6695 2f8b D0       		.byte	0xd0
 6696 2f8c 07       		.byte	0x7
 6697 2f8d 00000000 		.long	.LASF492
 6698 2f91 782F0000 		.long	0x2f78
 6699 2f95 01       		.byte	0x1
 6700 2f96 9E2F0000 		.long	0x2f9e
 6701 2f9a A42F0000 		.long	0x2fa4
 6702 2f9e 02       		.uleb128 0x2
 6703 2f9f 17610000 		.long	0x6117
 6704 2fa3 00       		.byte	0
 6705 2fa4 27       		.uleb128 0x27
 6706 2fa5 00000000 		.long	.LASF260
 6707 2fa9 04       		.byte	0x4
 6708 2faa 8B       		.byte	0x8b
 6709 2fab 2D       		.byte	0x2d
 6710 2fac 46270000 		.long	0x2746
 6711 2fb0 01       		.byte	0x1
 6712 2fb1 17       		.uleb128 0x17
 6713 2fb2 00000000 		.long	.LASF398
 6714 2fb6 04       		.byte	0x4
 6715 2fb7 D8       		.byte	0xd8
 6716 2fb8 07       		.byte	0x7
 6717 2fb9 00000000 		.long	.LASF493
 6718 2fbd A42F0000 		.long	0x2fa4
 6719 2fc1 01       		.byte	0x1
 6720 2fc2 CA2F0000 		.long	0x2fca
 6721 2fc6 D02F0000 		.long	0x2fd0
 6722 2fca 02       		.uleb128 0x2
 6723 2fcb 0D610000 		.long	0x610d
 6724 2fcf 00       		.byte	0
 6725 2fd0 27       		.uleb128 0x27
 6726 2fd1 00000000 		.long	.LASF392
 6727 2fd5 04       		.byte	0x4
 6728 2fd6 8C       		.byte	0x8c
 6729 2fd7 33       		.byte	0x33
 6730 2fd8 78270000 		.long	0x2778
 6731 2fdc 01       		.byte	0x1
 6732 2fdd 17       		.uleb128 0x17
 6733 2fde 00000000 		.long	.LASF398
 6734 2fe2 04       		.byte	0x4
 6735 2fe3 E3       		.byte	0xe3
 6736 2fe4 07       		.byte	0x7
 6737 2fe5 00000000 		.long	.LASF494
 6738 2fe9 D02F0000 		.long	0x2fd0
 6739 2fed 01       		.byte	0x1
 6740 2fee F62F0000 		.long	0x2ff6
 6741 2ff2 FC2F0000 		.long	0x2ffc
 6742 2ff6 02       		.uleb128 0x2
 6743 2ff7 17610000 		.long	0x6117
 6744 2ffb 00       		.byte	0
 6745 2ffc 17       		.uleb128 0x17
 6746 2ffd 00000000 		.long	.LASF401
GAS LISTING x64lin/../common/event.s 			page 259


 6747 3001 04       		.byte	0x4
 6748 3002 EE       		.byte	0xee
 6749 3003 07       		.byte	0x7
 6750 3004 00000000 		.long	.LASF495
 6751 3008 A42F0000 		.long	0x2fa4
 6752 300c 01       		.byte	0x1
 6753 300d 15300000 		.long	0x3015
 6754 3011 1B300000 		.long	0x301b
 6755 3015 02       		.uleb128 0x2
 6756 3016 0D610000 		.long	0x610d
 6757 301a 00       		.byte	0
 6758 301b 17       		.uleb128 0x17
 6759 301c 00000000 		.long	.LASF401
 6760 3020 04       		.byte	0x4
 6761 3021 F9       		.byte	0xf9
 6762 3022 07       		.byte	0x7
 6763 3023 00000000 		.long	.LASF496
 6764 3027 D02F0000 		.long	0x2fd0
 6765 302b 01       		.byte	0x1
 6766 302c 34300000 		.long	0x3034
 6767 3030 3A300000 		.long	0x303a
 6768 3034 02       		.uleb128 0x2
 6769 3035 17610000 		.long	0x6117
 6770 3039 00       		.byte	0
 6771 303a 0B       		.uleb128 0xb
 6772 303b 00000000 		.long	.LASF497
 6773 303f 04       		.byte	0x4
 6774 3040 0901     		.value	0x109
 6775 3042 07       		.byte	0x7
 6776 3043 00000000 		.long	.LASF498
 6777 3047 01       		.byte	0x1
 6778 3048 50300000 		.long	0x3050
 6779 304c 5B300000 		.long	0x305b
 6780 3050 02       		.uleb128 0x2
 6781 3051 0D610000 		.long	0x610d
 6782 3055 01       		.uleb128 0x1
 6783 3056 1C610000 		.long	0x611c
 6784 305a 00       		.byte	0
 6785 305b 27       		.uleb128 0x27
 6786 305c 00000000 		.long	.LASF8
 6787 3060 04       		.byte	0x4
 6788 3061 8A       		.byte	0x8a
 6789 3062 2E       		.byte	0x2e
 6790 3063 C4220000 		.long	0x22c4
 6791 3067 01       		.byte	0x1
 6792 3068 08       		.uleb128 0x8
 6793 3069 5B300000 		.long	0x305b
 6794 306d 0B       		.uleb128 0xb
 6795 306e 00000000 		.long	.LASF497
 6796 3072 04       		.byte	0x4
 6797 3073 0E01     		.value	0x10e
 6798 3075 07       		.byte	0x7
 6799 3076 00000000 		.long	.LASF499
 6800 307a 01       		.byte	0x1
 6801 307b 83300000 		.long	0x3083
 6802 307f 8E300000 		.long	0x308e
 6803 3083 02       		.uleb128 0x2
GAS LISTING x64lin/../common/event.s 			page 260


 6804 3084 0D610000 		.long	0x610d
 6805 3088 01       		.uleb128 0x1
 6806 3089 21610000 		.long	0x6121
 6807 308d 00       		.byte	0
 6808 308e 9201     		.uleb128 0x92
 6809 3090 706F7000 		.string	"pop"
 6810 3094 04       		.byte	0x4
 6811 3095 2A01     		.value	0x12a
 6812 3097 07       		.byte	0x7
 6813 3098 00000000 		.long	.LASF1137
 6814 309c 01       		.byte	0x1
 6815 309d A5300000 		.long	0x30a5
 6816 30a1 AB300000 		.long	0x30ab
 6817 30a5 02       		.uleb128 0x2
 6818 30a6 0D610000 		.long	0x610d
 6819 30aa 00       		.byte	0
 6820 30ab 0B       		.uleb128 0xb
 6821 30ac 00000000 		.long	.LASF78
 6822 30b0 04       		.byte	0x4
 6823 30b1 3201     		.value	0x132
 6824 30b3 07       		.byte	0x7
 6825 30b4 00000000 		.long	.LASF500
 6826 30b8 01       		.byte	0x1
 6827 30b9 C1300000 		.long	0x30c1
 6828 30bd CC300000 		.long	0x30cc
 6829 30c1 02       		.uleb128 0x2
 6830 30c2 0D610000 		.long	0x610d
 6831 30c6 01       		.uleb128 0x1
 6832 30c7 26610000 		.long	0x6126
 6833 30cb 00       		.byte	0
 6834 30cc 0A       		.uleb128 0xa
 6835 30cd 5F547000 		.string	"_Tp"
 6836 30d1 2D140000 		.long	0x142d
 6837 30d5 9301     		.uleb128 0x93
 6838 30d7 00000000 		.long	.LASF501
 6839 30db 9B210000 		.long	0x219b
 6840 30df 00       		.byte	0
 6841 30e0 08       		.uleb128 0x8
 6842 30e1 012F0000 		.long	0x2f01
 6843 30e5 16       		.uleb128 0x16
 6844 30e6 00000000 		.long	.LASF502
 6845 30ea 01       		.byte	0x1
 6846 30eb 09       		.byte	0x9
 6847 30ec 3F       		.byte	0x3f
 6848 30ed 0C       		.byte	0xc
 6849 30ee 35310000 		.long	0x3135
 6850 30f2 41       		.uleb128 0x41
 6851 30f3 00000000 		.long	.LASF503
 6852 30f7 09       		.byte	0x9
 6853 30f8 42       		.byte	0x42
 6854 30f9 11       		.byte	0x11
 6855 30fa 00000000 		.long	.LASF504
 6856 30fe 06310000 		.long	0x3106
 6857 3102 0C310000 		.long	0x310c
 6858 3106 02       		.uleb128 0x2
 6859 3107 60610000 		.long	0x6160
 6860 310b 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 261


 6861 310c 29       		.uleb128 0x29
 6862 310d 00000000 		.long	.LASF3
 6863 3111 09       		.byte	0x9
 6864 3112 4F       		.byte	0x4f
 6865 3113 07       		.byte	0x7
 6866 3114 00000000 		.long	.LASF505
 6867 3118 20310000 		.long	0x3120
 6868 311c 2B310000 		.long	0x312b
 6869 3120 02       		.uleb128 0x2
 6870 3121 65610000 		.long	0x6165
 6871 3125 01       		.uleb128 0x1
 6872 3126 6A610000 		.long	0x616a
 6873 312a 00       		.byte	0
 6874 312b 0A       		.uleb128 0xa
 6875 312c 5F547000 		.string	"_Tp"
 6876 3130 74610000 		.long	0x6174
 6877 3134 00       		.byte	0
 6878 3135 08       		.uleb128 0x8
 6879 3136 E5300000 		.long	0x30e5
 6880 313a 23       		.uleb128 0x23
 6881 313b 00000000 		.long	.LASF506
 6882 313f 08       		.byte	0x8
 6883 3140 09       		.byte	0x9
 6884 3141 80       		.byte	0x80
 6885 3142 0B       		.byte	0xb
 6886 3143 FA320000 		.long	0x32fa
 6887 3147 16       		.uleb128 0x16
 6888 3148 00000000 		.long	.LASF507
 6889 314c 01       		.byte	0x1
 6890 314d 09       		.byte	0x9
 6891 314e 83       		.byte	0x83
 6892 314f 09       		.byte	0x9
 6893 3150 73310000 		.long	0x3173
 6894 3154 06       		.uleb128 0x6
 6895 3155 00000000 		.long	.LASF237
 6896 3159 09       		.byte	0x9
 6897 315a 85       		.byte	0x85
 6898 315b 0A       		.byte	0xa
 6899 315c 6A610000 		.long	0x616a
 6900 3160 0A       		.uleb128 0xa
 6901 3161 5F557000 		.string	"_Up"
 6902 3165 74610000 		.long	0x6174
 6903 3169 0A       		.uleb128 0xa
 6904 316a 5F457000 		.string	"_Ep"
 6905 316e E5300000 		.long	0x30e5
 6906 3172 00       		.byte	0
 6907 3173 4F       		.uleb128 0x4f
 6908 3174 00000000 		.long	.LASF508
 6909 3178 09       		.byte	0x9
 6910 3179 9A       		.byte	0x9a
 6911 317a 07       		.byte	0x7
 6912 317b 00000000 		.long	.LASF509
 6913 317f 01       		.byte	0x1
 6914 3180 88310000 		.long	0x3188
 6915 3184 8E310000 		.long	0x318e
 6916 3188 02       		.uleb128 0x2
 6917 3189 8A620000 		.long	0x628a
GAS LISTING x64lin/../common/event.s 			page 262


 6918 318d 00       		.byte	0
 6919 318e 0D       		.uleb128 0xd
 6920 318f 00000000 		.long	.LASF508
 6921 3193 09       		.byte	0x9
 6922 3194 9B       		.byte	0x9b
 6923 3195 07       		.byte	0x7
 6924 3196 00000000 		.long	.LASF510
 6925 319a 01       		.byte	0x1
 6926 319b A3310000 		.long	0x31a3
 6927 319f AE310000 		.long	0x31ae
 6928 31a3 02       		.uleb128 0x2
 6929 31a4 8A620000 		.long	0x628a
 6930 31a8 01       		.uleb128 0x1
 6931 31a9 AE310000 		.long	0x31ae
 6932 31ad 00       		.byte	0
 6933 31ae 27       		.uleb128 0x27
 6934 31af 00000000 		.long	.LASF188
 6935 31b3 09       		.byte	0x9
 6936 31b4 94       		.byte	0x94
 6937 31b5 0D       		.byte	0xd
 6938 31b6 54310000 		.long	0x3154
 6939 31ba 01       		.byte	0x1
 6940 31bb 0D       		.uleb128 0xd
 6941 31bc 00000000 		.long	.LASF508
 6942 31c0 09       		.byte	0x9
 6943 31c1 A1       		.byte	0xa1
 6944 31c2 07       		.byte	0x7
 6945 31c3 00000000 		.long	.LASF511
 6946 31c7 01       		.byte	0x1
 6947 31c8 D0310000 		.long	0x31d0
 6948 31cc DB310000 		.long	0x31db
 6949 31d0 02       		.uleb128 0x2
 6950 31d1 8A620000 		.long	0x628a
 6951 31d5 01       		.uleb128 0x1
 6952 31d6 94620000 		.long	0x6294
 6953 31da 00       		.byte	0
 6954 31db 17       		.uleb128 0x17
 6955 31dc 00000000 		.long	.LASF73
 6956 31e0 09       		.byte	0x9
 6957 31e1 A5       		.byte	0xa5
 6958 31e2 18       		.byte	0x18
 6959 31e3 00000000 		.long	.LASF512
 6960 31e7 99620000 		.long	0x6299
 6961 31eb 01       		.byte	0x1
 6962 31ec F4310000 		.long	0x31f4
 6963 31f0 FF310000 		.long	0x31ff
 6964 31f4 02       		.uleb128 0x2
 6965 31f5 8A620000 		.long	0x628a
 6966 31f9 01       		.uleb128 0x1
 6967 31fa 94620000 		.long	0x6294
 6968 31fe 00       		.byte	0
 6969 31ff 17       		.uleb128 0x17
 6970 3200 00000000 		.long	.LASF513
 6971 3204 09       		.byte	0x9
 6972 3205 AC       		.byte	0xac
 6973 3206 10       		.byte	0x10
 6974 3207 00000000 		.long	.LASF514
GAS LISTING x64lin/../common/event.s 			page 263


 6975 320b 9E620000 		.long	0x629e
 6976 320f 01       		.byte	0x1
 6977 3210 18320000 		.long	0x3218
 6978 3214 1E320000 		.long	0x321e
 6979 3218 02       		.uleb128 0x2
 6980 3219 8A620000 		.long	0x628a
 6981 321d 00       		.byte	0
 6982 321e 17       		.uleb128 0x17
 6983 321f 00000000 		.long	.LASF513
 6984 3223 09       		.byte	0x9
 6985 3224 AD       		.byte	0xad
 6986 3225 0F       		.byte	0xf
 6987 3226 00000000 		.long	.LASF515
 6988 322a AE310000 		.long	0x31ae
 6989 322e 01       		.byte	0x1
 6990 322f 37320000 		.long	0x3237
 6991 3233 3D320000 		.long	0x323d
 6992 3237 02       		.uleb128 0x2
 6993 3238 A3620000 		.long	0x62a3
 6994 323c 00       		.byte	0
 6995 323d 17       		.uleb128 0x17
 6996 323e 00000000 		.long	.LASF516
 6997 3242 09       		.byte	0x9
 6998 3243 AE       		.byte	0xae
 6999 3244 0C       		.byte	0xc
 7000 3245 00000000 		.long	.LASF517
 7001 3249 0D620000 		.long	0x620d
 7002 324d 01       		.byte	0x1
 7003 324e 56320000 		.long	0x3256
 7004 3252 5C320000 		.long	0x325c
 7005 3256 02       		.uleb128 0x2
 7006 3257 8A620000 		.long	0x628a
 7007 325b 00       		.byte	0
 7008 325c 17       		.uleb128 0x17
 7009 325d 00000000 		.long	.LASF516
 7010 3261 09       		.byte	0x9
 7011 3262 AF       		.byte	0xaf
 7012 3263 12       		.byte	0x12
 7013 3264 00000000 		.long	.LASF518
 7014 3268 FE610000 		.long	0x61fe
 7015 326c 01       		.byte	0x1
 7016 326d 75320000 		.long	0x3275
 7017 3271 7B320000 		.long	0x327b
 7018 3275 02       		.uleb128 0x2
 7019 3276 A3620000 		.long	0x62a3
 7020 327a 00       		.byte	0
 7021 327b 0D       		.uleb128 0xd
 7022 327c 00000000 		.long	.LASF198
 7023 3280 09       		.byte	0x9
 7024 3281 B1       		.byte	0xb1
 7025 3282 0C       		.byte	0xc
 7026 3283 00000000 		.long	.LASF519
 7027 3287 01       		.byte	0x1
 7028 3288 90320000 		.long	0x3290
 7029 328c 9B320000 		.long	0x329b
 7030 3290 02       		.uleb128 0x2
 7031 3291 8A620000 		.long	0x628a
GAS LISTING x64lin/../common/event.s 			page 264


 7032 3295 01       		.uleb128 0x1
 7033 3296 AE310000 		.long	0x31ae
 7034 329a 00       		.byte	0
 7035 329b 17       		.uleb128 0x17
 7036 329c 00000000 		.long	.LASF163
 7037 32a0 09       		.byte	0x9
 7038 32a1 B9       		.byte	0xb9
 7039 32a2 0F       		.byte	0xf
 7040 32a3 00000000 		.long	.LASF520
 7041 32a7 AE310000 		.long	0x31ae
 7042 32ab 01       		.byte	0x1
 7043 32ac B4320000 		.long	0x32b4
 7044 32b0 BA320000 		.long	0x32ba
 7045 32b4 02       		.uleb128 0x2
 7046 32b5 8A620000 		.long	0x628a
 7047 32b9 00       		.byte	0
 7048 32ba 0D       		.uleb128 0xd
 7049 32bb 00000000 		.long	.LASF78
 7050 32bf 09       		.byte	0x9
 7051 32c0 C1       		.byte	0xc1
 7052 32c1 07       		.byte	0x7
 7053 32c2 00000000 		.long	.LASF521
 7054 32c6 01       		.byte	0x1
 7055 32c7 CF320000 		.long	0x32cf
 7056 32cb DA320000 		.long	0x32da
 7057 32cf 02       		.uleb128 0x2
 7058 32d0 8A620000 		.long	0x628a
 7059 32d4 01       		.uleb128 0x1
 7060 32d5 99620000 		.long	0x6299
 7061 32d9 00       		.byte	0
 7062 32da 05       		.uleb128 0x5
 7063 32db 00000000 		.long	.LASF181
 7064 32df 09       		.byte	0x9
 7065 32e0 C9       		.byte	0xc9
 7066 32e1 1B       		.byte	0x1b
 7067 32e2 B5370000 		.long	0x37b5
 7068 32e6 00       		.byte	0
 7069 32e7 0A       		.uleb128 0xa
 7070 32e8 5F547000 		.string	"_Tp"
 7071 32ec 74610000 		.long	0x6174
 7072 32f0 0A       		.uleb128 0xa
 7073 32f1 5F447000 		.string	"_Dp"
 7074 32f5 E5300000 		.long	0x30e5
 7075 32f9 00       		.byte	0
 7076 32fa 08       		.uleb128 0x8
 7077 32fb 3A310000 		.long	0x313a
 7078 32ff 16       		.uleb128 0x16
 7079 3300 00000000 		.long	.LASF522
 7080 3304 01       		.byte	0x1
 7081 3305 0B       		.byte	0xb
 7082 3306 4E       		.byte	0x4e
 7083 3307 0C       		.byte	0xc
 7084 3308 FC330000 		.long	0x33fc
 7085 330c 29       		.uleb128 0x29
 7086 330d 00000000 		.long	.LASF523
 7087 3311 0B       		.byte	0xb
 7088 3312 50       		.byte	0x50
GAS LISTING x64lin/../common/event.s 			page 265


 7089 3313 11       		.byte	0x11
 7090 3314 00000000 		.long	.LASF524
 7091 3318 20330000 		.long	0x3320
 7092 331c 26330000 		.long	0x3326
 7093 3320 02       		.uleb128 0x2
 7094 3321 F9610000 		.long	0x61f9
 7095 3325 00       		.byte	0
 7096 3326 29       		.uleb128 0x29
 7097 3327 00000000 		.long	.LASF523
 7098 332b 0B       		.byte	0xb
 7099 332c 53       		.byte	0x53
 7100 332d 11       		.byte	0x11
 7101 332e 00000000 		.long	.LASF525
 7102 3332 3A330000 		.long	0x333a
 7103 3336 45330000 		.long	0x3345
 7104 333a 02       		.uleb128 0x2
 7105 333b F9610000 		.long	0x61f9
 7106 333f 01       		.uleb128 0x1
 7107 3340 FE610000 		.long	0x61fe
 7108 3344 00       		.byte	0
 7109 3345 41       		.uleb128 0x41
 7110 3346 00000000 		.long	.LASF523
 7111 334a 0B       		.byte	0xb
 7112 334b 56       		.byte	0x56
 7113 334c 11       		.byte	0x11
 7114 334d 00000000 		.long	.LASF526
 7115 3351 59330000 		.long	0x3359
 7116 3355 64330000 		.long	0x3364
 7117 3359 02       		.uleb128 0x2
 7118 335a F9610000 		.long	0x61f9
 7119 335e 01       		.uleb128 0x1
 7120 335f 03620000 		.long	0x6203
 7121 3363 00       		.byte	0
 7122 3364 41       		.uleb128 0x41
 7123 3365 00000000 		.long	.LASF523
 7124 3369 0B       		.byte	0xb
 7125 336a 57       		.byte	0x57
 7126 336b 11       		.byte	0x11
 7127 336c 00000000 		.long	.LASF527
 7128 3370 78330000 		.long	0x3378
 7129 3374 83330000 		.long	0x3383
 7130 3378 02       		.uleb128 0x2
 7131 3379 F9610000 		.long	0x61f9
 7132 337d 01       		.uleb128 0x1
 7133 337e 08620000 		.long	0x6208
 7134 3382 00       		.byte	0
 7135 3383 29       		.uleb128 0x29
 7136 3384 00000000 		.long	.LASF523
 7137 3388 0B       		.byte	0xb
 7138 3389 5E       		.byte	0x5e
 7139 338a 07       		.byte	0x7
 7140 338b 00000000 		.long	.LASF528
 7141 338f 97330000 		.long	0x3397
 7142 3393 A7330000 		.long	0x33a7
 7143 3397 02       		.uleb128 0x2
 7144 3398 F9610000 		.long	0x61f9
 7145 339c 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 266


 7146 339d A2080000 		.long	0x8a2
 7147 33a1 01       		.uleb128 0x1
 7148 33a2 CD080000 		.long	0x8cd
 7149 33a6 00       		.byte	0
 7150 33a7 1A       		.uleb128 0x1a
 7151 33a8 00000000 		.long	.LASF529
 7152 33ac 0B       		.byte	0xb
 7153 33ad 7C       		.byte	0x7c
 7154 33ae 07       		.byte	0x7
 7155 33af 00000000 		.long	.LASF530
 7156 33b3 0D620000 		.long	0x620d
 7157 33b7 C1330000 		.long	0x33c1
 7158 33bb 01       		.uleb128 0x1
 7159 33bc 12620000 		.long	0x6212
 7160 33c0 00       		.byte	0
 7161 33c1 1A       		.uleb128 0x1a
 7162 33c2 00000000 		.long	.LASF529
 7163 33c6 0B       		.byte	0xb
 7164 33c7 7F       		.byte	0x7f
 7165 33c8 07       		.byte	0x7
 7166 33c9 00000000 		.long	.LASF531
 7167 33cd FE610000 		.long	0x61fe
 7168 33d1 DB330000 		.long	0x33db
 7169 33d5 01       		.uleb128 0x1
 7170 33d6 03620000 		.long	0x6203
 7171 33da 00       		.byte	0
 7172 33db 05       		.uleb128 0x5
 7173 33dc 00000000 		.long	.LASF532
 7174 33e0 0B       		.byte	0xb
 7175 33e1 81       		.byte	0x81
 7176 33e2 27       		.byte	0x27
 7177 33e3 E5300000 		.long	0x30e5
 7178 33e7 00       		.byte	0
 7179 33e8 19       		.uleb128 0x19
 7180 33e9 00000000 		.long	.LASF533
 7181 33ed 2B430000 		.long	0x432b
 7182 33f1 01       		.byte	0x1
 7183 33f2 12       		.uleb128 0x12
 7184 33f3 00000000 		.long	.LASF534
 7185 33f7 E5300000 		.long	0x30e5
 7186 33fb 00       		.byte	0
 7187 33fc 08       		.uleb128 0x8
 7188 33fd FF320000 		.long	0x32ff
 7189 3401 25       		.uleb128 0x25
 7190 3402 00000000 		.long	.LASF535
 7191 3406 01       		.byte	0x1
 7192 3407 0B       		.byte	0xb
 7193 3408 A001     		.value	0x1a0
 7194 340a 1C350000 		.long	0x351c
 7195 340e 3F       		.uleb128 0x3f
 7196 340f FF320000 		.long	0x32ff
 7197 3413 03       		.byte	0x3
 7198 3414 14       		.uleb128 0x14
 7199 3415 00000000 		.long	.LASF529
 7200 3419 0B       		.byte	0xb
 7201 341a A801     		.value	0x1a8
 7202 341c 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 267


 7203 341d 00000000 		.long	.LASF536
 7204 3421 0D620000 		.long	0x620d
 7205 3425 2F340000 		.long	0x342f
 7206 3429 01       		.uleb128 0x1
 7207 342a 17620000 		.long	0x6217
 7208 342e 00       		.byte	0
 7209 342f 14       		.uleb128 0x14
 7210 3430 00000000 		.long	.LASF529
 7211 3434 0B       		.byte	0xb
 7212 3435 AB01     		.value	0x1ab
 7213 3437 07       		.byte	0x7
 7214 3438 00000000 		.long	.LASF537
 7215 343c FE610000 		.long	0x61fe
 7216 3440 4A340000 		.long	0x344a
 7217 3444 01       		.uleb128 0x1
 7218 3445 1C620000 		.long	0x621c
 7219 3449 00       		.byte	0
 7220 344a 2E       		.uleb128 0x2e
 7221 344b 00000000 		.long	.LASF538
 7222 344f 0B       		.byte	0xb
 7223 3450 AE01     		.value	0x1ae
 7224 3452 07       		.byte	0x7
 7225 3453 00000000 		.long	.LASF539
 7226 3457 5F340000 		.long	0x345f
 7227 345b 65340000 		.long	0x3465
 7228 345f 02       		.uleb128 0x2
 7229 3460 21620000 		.long	0x6221
 7230 3464 00       		.byte	0
 7231 3465 6F       		.uleb128 0x6f
 7232 3466 00000000 		.long	.LASF538
 7233 346a B201     		.value	0x1b2
 7234 346c 00000000 		.long	.LASF540
 7235 3470 78340000 		.long	0x3478
 7236 3474 83340000 		.long	0x3483
 7237 3478 02       		.uleb128 0x2
 7238 3479 21620000 		.long	0x6221
 7239 347d 01       		.uleb128 0x1
 7240 347e FE610000 		.long	0x61fe
 7241 3482 00       		.byte	0
 7242 3483 4A       		.uleb128 0x4a
 7243 3484 00000000 		.long	.LASF538
 7244 3488 0B       		.byte	0xb
 7245 3489 BC01     		.value	0x1bc
 7246 348b 11       		.byte	0x11
 7247 348c 00000000 		.long	.LASF541
 7248 3490 98340000 		.long	0x3498
 7249 3494 A3340000 		.long	0x34a3
 7250 3498 02       		.uleb128 0x2
 7251 3499 21620000 		.long	0x6221
 7252 349d 01       		.uleb128 0x1
 7253 349e 1C620000 		.long	0x621c
 7254 34a2 00       		.byte	0
 7255 34a3 70       		.uleb128 0x70
 7256 34a4 00000000 		.long	.LASF73
 7257 34a8 C001     		.value	0x1c0
 7258 34aa 00000000 		.long	.LASF542
 7259 34ae 17620000 		.long	0x6217
GAS LISTING x64lin/../common/event.s 			page 268


 7260 34b2 BA340000 		.long	0x34ba
 7261 34b6 C5340000 		.long	0x34c5
 7262 34ba 02       		.uleb128 0x2
 7263 34bb 21620000 		.long	0x6221
 7264 34bf 01       		.uleb128 0x1
 7265 34c0 1C620000 		.long	0x621c
 7266 34c4 00       		.byte	0
 7267 34c5 2E       		.uleb128 0x2e
 7268 34c6 00000000 		.long	.LASF538
 7269 34ca 0B       		.byte	0xb
 7270 34cb C601     		.value	0x1c6
 7271 34cd 07       		.byte	0x7
 7272 34ce 00000000 		.long	.LASF543
 7273 34d2 DA340000 		.long	0x34da
 7274 34d6 E5340000 		.long	0x34e5
 7275 34da 02       		.uleb128 0x2
 7276 34db 21620000 		.long	0x6221
 7277 34df 01       		.uleb128 0x1
 7278 34e0 2B620000 		.long	0x622b
 7279 34e4 00       		.byte	0
 7280 34e5 0B       		.uleb128 0xb
 7281 34e6 00000000 		.long	.LASF544
 7282 34ea 0B       		.byte	0xb
 7283 34eb 2002     		.value	0x220
 7284 34ed 07       		.byte	0x7
 7285 34ee 00000000 		.long	.LASF545
 7286 34f2 02       		.byte	0x2
 7287 34f3 FB340000 		.long	0x34fb
 7288 34f7 06350000 		.long	0x3506
 7289 34fb 02       		.uleb128 0x2
 7290 34fc 21620000 		.long	0x6221
 7291 3500 01       		.uleb128 0x1
 7292 3501 17620000 		.long	0x6217
 7293 3505 00       		.byte	0
 7294 3506 19       		.uleb128 0x19
 7295 3507 00000000 		.long	.LASF533
 7296 350b 2B430000 		.long	0x432b
 7297 350f 01       		.byte	0x1
 7298 3510 5E       		.uleb128 0x5e
 7299 3511 00000000 		.long	.LASF567
 7300 3515 21       		.uleb128 0x21
 7301 3516 E5300000 		.long	0x30e5
 7302 351a 00       		.byte	0
 7303 351b 00       		.byte	0
 7304 351c 08       		.uleb128 0x8
 7305 351d 01340000 		.long	0x3401
 7306 3521 16       		.uleb128 0x16
 7307 3522 00000000 		.long	.LASF546
 7308 3526 08       		.byte	0x8
 7309 3527 0B       		.byte	0xb
 7310 3528 BB       		.byte	0xbb
 7311 3529 0C       		.byte	0xc
 7312 352a 1E360000 		.long	0x361e
 7313 352e 29       		.uleb128 0x29
 7314 352f 00000000 		.long	.LASF523
 7315 3533 0B       		.byte	0xb
 7316 3534 BD       		.byte	0xbd
GAS LISTING x64lin/../common/event.s 			page 269


 7317 3535 11       		.byte	0x11
 7318 3536 00000000 		.long	.LASF547
 7319 353a 42350000 		.long	0x3542
 7320 353e 48350000 		.long	0x3548
 7321 3542 02       		.uleb128 0x2
 7322 3543 30620000 		.long	0x6230
 7323 3547 00       		.byte	0
 7324 3548 29       		.uleb128 0x29
 7325 3549 00000000 		.long	.LASF523
 7326 354d 0B       		.byte	0xb
 7327 354e C0       		.byte	0xc0
 7328 354f 11       		.byte	0x11
 7329 3550 00000000 		.long	.LASF548
 7330 3554 5C350000 		.long	0x355c
 7331 3558 67350000 		.long	0x3567
 7332 355c 02       		.uleb128 0x2
 7333 355d 30620000 		.long	0x6230
 7334 3561 01       		.uleb128 0x1
 7335 3562 35620000 		.long	0x6235
 7336 3566 00       		.byte	0
 7337 3567 41       		.uleb128 0x41
 7338 3568 00000000 		.long	.LASF523
 7339 356c 0B       		.byte	0xb
 7340 356d C3       		.byte	0xc3
 7341 356e 11       		.byte	0x11
 7342 356f 00000000 		.long	.LASF549
 7343 3573 7B350000 		.long	0x357b
 7344 3577 86350000 		.long	0x3586
 7345 357b 02       		.uleb128 0x2
 7346 357c 30620000 		.long	0x6230
 7347 3580 01       		.uleb128 0x1
 7348 3581 3A620000 		.long	0x623a
 7349 3585 00       		.byte	0
 7350 3586 41       		.uleb128 0x41
 7351 3587 00000000 		.long	.LASF523
 7352 358b 0B       		.byte	0xb
 7353 358c C4       		.byte	0xc4
 7354 358d 11       		.byte	0x11
 7355 358e 00000000 		.long	.LASF550
 7356 3592 9A350000 		.long	0x359a
 7357 3596 A5350000 		.long	0x35a5
 7358 359a 02       		.uleb128 0x2
 7359 359b 30620000 		.long	0x6230
 7360 359f 01       		.uleb128 0x1
 7361 35a0 3F620000 		.long	0x623f
 7362 35a4 00       		.byte	0
 7363 35a5 29       		.uleb128 0x29
 7364 35a6 00000000 		.long	.LASF523
 7365 35aa 0B       		.byte	0xb
 7366 35ab CB       		.byte	0xcb
 7367 35ac 07       		.byte	0x7
 7368 35ad 00000000 		.long	.LASF551
 7369 35b1 B9350000 		.long	0x35b9
 7370 35b5 C9350000 		.long	0x35c9
 7371 35b9 02       		.uleb128 0x2
 7372 35ba 30620000 		.long	0x6230
 7373 35be 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 270


 7374 35bf A2080000 		.long	0x8a2
 7375 35c3 01       		.uleb128 0x1
 7376 35c4 CD080000 		.long	0x8cd
 7377 35c8 00       		.byte	0
 7378 35c9 1A       		.uleb128 0x1a
 7379 35ca 00000000 		.long	.LASF529
 7380 35ce 0B       		.byte	0xb
 7381 35cf E9       		.byte	0xe9
 7382 35d0 07       		.byte	0x7
 7383 35d1 00000000 		.long	.LASF552
 7384 35d5 44620000 		.long	0x6244
 7385 35d9 E3350000 		.long	0x35e3
 7386 35dd 01       		.uleb128 0x1
 7387 35de 49620000 		.long	0x6249
 7388 35e2 00       		.byte	0
 7389 35e3 1A       		.uleb128 0x1a
 7390 35e4 00000000 		.long	.LASF529
 7391 35e8 0B       		.byte	0xb
 7392 35e9 EC       		.byte	0xec
 7393 35ea 07       		.byte	0x7
 7394 35eb 00000000 		.long	.LASF553
 7395 35ef 35620000 		.long	0x6235
 7396 35f3 FD350000 		.long	0x35fd
 7397 35f7 01       		.uleb128 0x1
 7398 35f8 3A620000 		.long	0x623a
 7399 35fc 00       		.byte	0
 7400 35fd 05       		.uleb128 0x5
 7401 35fe 00000000 		.long	.LASF532
 7402 3602 0B       		.byte	0xb
 7403 3603 EE       		.byte	0xee
 7404 3604 0D       		.byte	0xd
 7405 3605 6A610000 		.long	0x616a
 7406 3609 00       		.byte	0
 7407 360a 19       		.uleb128 0x19
 7408 360b 00000000 		.long	.LASF533
 7409 360f 2B430000 		.long	0x432b
 7410 3613 00       		.byte	0
 7411 3614 12       		.uleb128 0x12
 7412 3615 00000000 		.long	.LASF534
 7413 3619 6A610000 		.long	0x616a
 7414 361d 00       		.byte	0
 7415 361e 08       		.uleb128 0x8
 7416 361f 21350000 		.long	0x3521
 7417 3623 25       		.uleb128 0x25
 7418 3624 00000000 		.long	.LASF554
 7419 3628 08       		.byte	0x8
 7420 3629 0B       		.byte	0xb
 7421 362a 0201     		.value	0x102
 7422 362c 95370000 		.long	0x3795
 7423 3630 30       		.uleb128 0x30
 7424 3631 01340000 		.long	0x3401
 7425 3635 3F       		.uleb128 0x3f
 7426 3636 21350000 		.long	0x3521
 7427 363a 03       		.byte	0x3
 7428 363b 14       		.uleb128 0x14
 7429 363c 00000000 		.long	.LASF529
 7430 3640 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 271


 7431 3641 0C01     		.value	0x10c
 7432 3643 07       		.byte	0x7
 7433 3644 00000000 		.long	.LASF555
 7434 3648 44620000 		.long	0x6244
 7435 364c 56360000 		.long	0x3656
 7436 3650 01       		.uleb128 0x1
 7437 3651 4E620000 		.long	0x624e
 7438 3655 00       		.byte	0
 7439 3656 14       		.uleb128 0x14
 7440 3657 00000000 		.long	.LASF529
 7441 365b 0B       		.byte	0xb
 7442 365c 0F01     		.value	0x10f
 7443 365e 07       		.byte	0x7
 7444 365f 00000000 		.long	.LASF556
 7445 3663 35620000 		.long	0x6235
 7446 3667 71360000 		.long	0x3671
 7447 366b 01       		.uleb128 0x1
 7448 366c 53620000 		.long	0x6253
 7449 3670 00       		.byte	0
 7450 3671 18       		.uleb128 0x18
 7451 3672 00000000 		.long	.LASF557
 7452 3676 0B       		.byte	0xb
 7453 3677 0801     		.value	0x108
 7454 3679 2F       		.byte	0x2f
 7455 367a 01340000 		.long	0x3401
 7456 367e 08       		.uleb128 0x8
 7457 367f 71360000 		.long	0x3671
 7458 3683 14       		.uleb128 0x14
 7459 3684 00000000 		.long	.LASF558
 7460 3688 0B       		.byte	0xb
 7461 3689 1201     		.value	0x112
 7462 368b 07       		.byte	0x7
 7463 368c 00000000 		.long	.LASF559
 7464 3690 58620000 		.long	0x6258
 7465 3694 9E360000 		.long	0x369e
 7466 3698 01       		.uleb128 0x1
 7467 3699 4E620000 		.long	0x624e
 7468 369d 00       		.byte	0
 7469 369e 14       		.uleb128 0x14
 7470 369f 00000000 		.long	.LASF558
 7471 36a3 0B       		.byte	0xb
 7472 36a4 1501     		.value	0x115
 7473 36a6 07       		.byte	0x7
 7474 36a7 00000000 		.long	.LASF560
 7475 36ab 5D620000 		.long	0x625d
 7476 36af B9360000 		.long	0x36b9
 7477 36b3 01       		.uleb128 0x1
 7478 36b4 53620000 		.long	0x6253
 7479 36b8 00       		.byte	0
 7480 36b9 2E       		.uleb128 0x2e
 7481 36ba 00000000 		.long	.LASF538
 7482 36be 0B       		.byte	0xb
 7483 36bf 1701     		.value	0x117
 7484 36c1 11       		.byte	0x11
 7485 36c2 00000000 		.long	.LASF561
 7486 36c6 CE360000 		.long	0x36ce
 7487 36ca D4360000 		.long	0x36d4
GAS LISTING x64lin/../common/event.s 			page 272


 7488 36ce 02       		.uleb128 0x2
 7489 36cf 62620000 		.long	0x6262
 7490 36d3 00       		.byte	0
 7491 36d4 6F       		.uleb128 0x6f
 7492 36d5 00000000 		.long	.LASF538
 7493 36d9 1B01     		.value	0x11b
 7494 36db 00000000 		.long	.LASF562
 7495 36df E7360000 		.long	0x36e7
 7496 36e3 F7360000 		.long	0x36f7
 7497 36e7 02       		.uleb128 0x2
 7498 36e8 62620000 		.long	0x6262
 7499 36ec 01       		.uleb128 0x1
 7500 36ed 35620000 		.long	0x6235
 7501 36f1 01       		.uleb128 0x1
 7502 36f2 FE610000 		.long	0x61fe
 7503 36f6 00       		.byte	0
 7504 36f7 4A       		.uleb128 0x4a
 7505 36f8 00000000 		.long	.LASF538
 7506 36fc 0B       		.byte	0xb
 7507 36fd 2701     		.value	0x127
 7508 36ff 11       		.byte	0x11
 7509 3700 00000000 		.long	.LASF563
 7510 3704 0C370000 		.long	0x370c
 7511 3708 17370000 		.long	0x3717
 7512 370c 02       		.uleb128 0x2
 7513 370d 62620000 		.long	0x6262
 7514 3711 01       		.uleb128 0x1
 7515 3712 53620000 		.long	0x6253
 7516 3716 00       		.byte	0
 7517 3717 70       		.uleb128 0x70
 7518 3718 00000000 		.long	.LASF73
 7519 371c 2B01     		.value	0x12b
 7520 371e 00000000 		.long	.LASF564
 7521 3722 4E620000 		.long	0x624e
 7522 3726 2E370000 		.long	0x372e
 7523 372a 39370000 		.long	0x3739
 7524 372e 02       		.uleb128 0x2
 7525 372f 62620000 		.long	0x6262
 7526 3733 01       		.uleb128 0x1
 7527 3734 53620000 		.long	0x6253
 7528 3738 00       		.byte	0
 7529 3739 4A       		.uleb128 0x4a
 7530 373a 00000000 		.long	.LASF538
 7531 373e 0B       		.byte	0xb
 7532 373f 2D01     		.value	0x12d
 7533 3741 07       		.byte	0x7
 7534 3742 00000000 		.long	.LASF565
 7535 3746 4E370000 		.long	0x374e
 7536 374a 59370000 		.long	0x3759
 7537 374e 02       		.uleb128 0x2
 7538 374f 62620000 		.long	0x6262
 7539 3753 01       		.uleb128 0x1
 7540 3754 6C620000 		.long	0x626c
 7541 3758 00       		.byte	0
 7542 3759 0B       		.uleb128 0xb
 7543 375a 00000000 		.long	.LASF544
 7544 375e 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 273


 7545 375f 9601     		.value	0x196
 7546 3761 07       		.byte	0x7
 7547 3762 00000000 		.long	.LASF566
 7548 3766 02       		.byte	0x2
 7549 3767 6F370000 		.long	0x376f
 7550 376b 7A370000 		.long	0x377a
 7551 376f 02       		.uleb128 0x2
 7552 3770 62620000 		.long	0x6262
 7553 3774 01       		.uleb128 0x1
 7554 3775 4E620000 		.long	0x624e
 7555 3779 00       		.byte	0
 7556 377a 19       		.uleb128 0x19
 7557 377b 00000000 		.long	.LASF533
 7558 377f 2B430000 		.long	0x432b
 7559 3783 00       		.byte	0
 7560 3784 5E       		.uleb128 0x5e
 7561 3785 00000000 		.long	.LASF567
 7562 3789 21       		.uleb128 0x21
 7563 378a 6A610000 		.long	0x616a
 7564 378e 21       		.uleb128 0x21
 7565 378f E5300000 		.long	0x30e5
 7566 3793 00       		.byte	0
 7567 3794 00       		.byte	0
 7568 3795 08       		.uleb128 0x8
 7569 3796 23360000 		.long	0x3623
 7570 379a 25       		.uleb128 0x25
 7571 379b 00000000 		.long	.LASF568
 7572 379f 01       		.byte	0x1
 7573 37a0 0F       		.byte	0xf
 7574 37a1 AC08     		.value	0x8ac
 7575 37a3 B5370000 		.long	0x37b5
 7576 37a7 18       		.uleb128 0x18
 7577 37a8 00000000 		.long	.LASF237
 7578 37ac 0F       		.byte	0xf
 7579 37ad AD08     		.value	0x8ad
 7580 37af 17       		.byte	0x17
 7581 37b0 71620000 		.long	0x6271
 7582 37b4 00       		.byte	0
 7583 37b5 5C       		.uleb128 0x5c
 7584 37b6 00000000 		.long	.LASF569
 7585 37ba 08       		.byte	0x8
 7586 37bb 0B       		.byte	0xb
 7587 37bc D503     		.value	0x3d5
 7588 37be 95380000 		.long	0x3895
 7589 37c2 3F       		.uleb128 0x3f
 7590 37c3 23360000 		.long	0x3623
 7591 37c7 01       		.byte	0x1
 7592 37c8 5D       		.uleb128 0x5d
 7593 37c9 00000000 		.long	.LASF570
 7594 37cd 0B       		.byte	0xb
 7595 37ce 0B04     		.value	0x40b
 7596 37d0 1D       		.byte	0x1d
 7597 37d1 00000000 		.long	.LASF572
 7598 37d5 783F0000 		.long	0x3f78
 7599 37d9 48       		.uleb128 0x48
 7600 37da 00000000 		.long	.LASF573
 7601 37de 0B       		.byte	0xb
GAS LISTING x64lin/../common/event.s 			page 274


 7602 37df 4004     		.value	0x440
 7603 37e1 11       		.byte	0x11
 7604 37e2 00000000 		.long	.LASF574
 7605 37e6 EE370000 		.long	0x37ee
 7606 37ea F9370000 		.long	0x37f9
 7607 37ee 02       		.uleb128 0x2
 7608 37ef 7B620000 		.long	0x627b
 7609 37f3 01       		.uleb128 0x1
 7610 37f4 71620000 		.long	0x6271
 7611 37f8 00       		.byte	0
 7612 37f9 48       		.uleb128 0x48
 7613 37fa 00000000 		.long	.LASF573
 7614 37fe 0B       		.byte	0xb
 7615 37ff 4204     		.value	0x442
 7616 3801 11       		.byte	0x11
 7617 3802 00000000 		.long	.LASF575
 7618 3806 0E380000 		.long	0x380e
 7619 380a 19380000 		.long	0x3819
 7620 380e 02       		.uleb128 0x2
 7621 380f 7B620000 		.long	0x627b
 7622 3813 01       		.uleb128 0x1
 7623 3814 76620000 		.long	0x6276
 7624 3818 00       		.byte	0
 7625 3819 0F       		.uleb128 0xf
 7626 381a 00000000 		.long	.LASF73
 7627 381e 0B       		.byte	0xb
 7628 381f F304     		.value	0x4f3
 7629 3821 07       		.byte	0x7
 7630 3822 00000000 		.long	.LASF576
 7631 3826 85620000 		.long	0x6285
 7632 382a 01       		.byte	0x1
 7633 382b 33380000 		.long	0x3833
 7634 382f 3E380000 		.long	0x383e
 7635 3833 02       		.uleb128 0x2
 7636 3834 7B620000 		.long	0x627b
 7637 3838 01       		.uleb128 0x1
 7638 3839 A7370000 		.long	0x37a7
 7639 383d 00       		.byte	0
 7640 383e 0F       		.uleb128 0xf
 7641 383f 00000000 		.long	.LASF73
 7642 3843 0B       		.byte	0xb
 7643 3844 FE04     		.value	0x4fe
 7644 3846 07       		.byte	0x7
 7645 3847 00000000 		.long	.LASF577
 7646 384b 85620000 		.long	0x6285
 7647 384f 01       		.byte	0x1
 7648 3850 58380000 		.long	0x3858
 7649 3854 63380000 		.long	0x3863
 7650 3858 02       		.uleb128 0x2
 7651 3859 7B620000 		.long	0x627b
 7652 385d 01       		.uleb128 0x1
 7653 385e A7380000 		.long	0x38a7
 7654 3862 00       		.byte	0
 7655 3863 0B       		.uleb128 0xb
 7656 3864 00000000 		.long	.LASF78
 7657 3868 0B       		.byte	0xb
 7658 3869 3305     		.value	0x533
GAS LISTING x64lin/../common/event.s 			page 275


 7659 386b 07       		.byte	0x7
 7660 386c 00000000 		.long	.LASF578
 7661 3870 01       		.byte	0x1
 7662 3871 79380000 		.long	0x3879
 7663 3875 84380000 		.long	0x3884
 7664 3879 02       		.uleb128 0x2
 7665 387a 7B620000 		.long	0x627b
 7666 387e 01       		.uleb128 0x1
 7667 387f 85620000 		.long	0x6285
 7668 3883 00       		.byte	0
 7669 3884 5E       		.uleb128 0x5e
 7670 3885 00000000 		.long	.LASF567
 7671 3889 21       		.uleb128 0x21
 7672 388a 6A610000 		.long	0x616a
 7673 388e 21       		.uleb128 0x21
 7674 388f E5300000 		.long	0x30e5
 7675 3893 00       		.byte	0
 7676 3894 00       		.byte	0
 7677 3895 08       		.uleb128 0x8
 7678 3896 B5370000 		.long	0x37b5
 7679 389a 25       		.uleb128 0x25
 7680 389b 00000000 		.long	.LASF579
 7681 389f 01       		.byte	0x1
 7682 38a0 0F       		.byte	0xf
 7683 38a1 AC08     		.value	0x8ac
 7684 38a3 B5380000 		.long	0x38b5
 7685 38a7 18       		.uleb128 0x18
 7686 38a8 00000000 		.long	.LASF237
 7687 38ac 0F       		.byte	0xf
 7688 38ad AD08     		.value	0x8ad
 7689 38af 17       		.byte	0x17
 7690 38b0 76620000 		.long	0x6276
 7691 38b4 00       		.byte	0
 7692 38b5 16       		.uleb128 0x16
 7693 38b6 00000000 		.long	.LASF580
 7694 38ba 08       		.byte	0x8
 7695 38bb 09       		.byte	0x9
 7696 38bc D0       		.byte	0xd0
 7697 38bd 0C       		.byte	0xc
 7698 38be 1B390000 		.long	0x391b
 7699 38c2 30       		.uleb128 0x30
 7700 38c3 3A310000 		.long	0x313a
 7701 38c7 41       		.uleb128 0x41
 7702 38c8 00000000 		.long	.LASF581
 7703 38cc 09       		.byte	0x9
 7704 38cd D3       		.byte	0xd3
 7705 38ce 07       		.byte	0x7
 7706 38cf 00000000 		.long	.LASF582
 7707 38d3 DB380000 		.long	0x38db
 7708 38d7 E6380000 		.long	0x38e6
 7709 38db 02       		.uleb128 0x2
 7710 38dc A8620000 		.long	0x62a8
 7711 38e0 01       		.uleb128 0x1
 7712 38e1 B2620000 		.long	0x62b2
 7713 38e5 00       		.byte	0
 7714 38e6 6A       		.uleb128 0x6a
 7715 38e7 00000000 		.long	.LASF73
GAS LISTING x64lin/../common/event.s 			page 276


 7716 38eb 09       		.byte	0x9
 7717 38ec D4       		.byte	0xd4
 7718 38ed 00000000 		.long	.LASF583
 7719 38f1 B7620000 		.long	0x62b7
 7720 38f5 FD380000 		.long	0x38fd
 7721 38f9 08390000 		.long	0x3908
 7722 38fd 02       		.uleb128 0x2
 7723 38fe A8620000 		.long	0x62a8
 7724 3902 01       		.uleb128 0x1
 7725 3903 B2620000 		.long	0x62b2
 7726 3907 00       		.byte	0
 7727 3908 0A       		.uleb128 0xa
 7728 3909 5F547000 		.string	"_Tp"
 7729 390d 74610000 		.long	0x6174
 7730 3911 0A       		.uleb128 0xa
 7731 3912 5F447000 		.string	"_Dp"
 7732 3916 E5300000 		.long	0x30e5
 7733 391a 00       		.byte	0
 7734 391b 25       		.uleb128 0x25
 7735 391c 00000000 		.long	.LASF584
 7736 3920 01       		.byte	0x1
 7737 3921 0F       		.byte	0xf
 7738 3922 4D06     		.value	0x64d
 7739 3924 3F390000 		.long	0x393f
 7740 3928 18       		.uleb128 0x18
 7741 3929 00000000 		.long	.LASF237
 7742 392d 0F       		.byte	0xf
 7743 392e 4E06     		.value	0x64e
 7744 3930 14       		.byte	0x14
 7745 3931 BC620000 		.long	0x62bc
 7746 3935 0A       		.uleb128 0xa
 7747 3936 5F547000 		.string	"_Tp"
 7748 393a 74610000 		.long	0x6174
 7749 393e 00       		.byte	0
 7750 393f 25       		.uleb128 0x25
 7751 3940 00000000 		.long	.LASF585
 7752 3944 01       		.byte	0x1
 7753 3945 0F       		.byte	0xf
 7754 3946 4106     		.value	0x641
 7755 3948 63390000 		.long	0x3963
 7756 394c 18       		.uleb128 0x18
 7757 394d 00000000 		.long	.LASF237
 7758 3951 0F       		.byte	0xf
 7759 3952 4206     		.value	0x642
 7760 3954 13       		.byte	0x13
 7761 3955 2D140000 		.long	0x142d
 7762 3959 0A       		.uleb128 0xa
 7763 395a 5F547000 		.string	"_Tp"
 7764 395e 81600000 		.long	0x6081
 7765 3962 00       		.byte	0
 7766 3963 25       		.uleb128 0x25
 7767 3964 00000000 		.long	.LASF586
 7768 3968 01       		.byte	0x1
 7769 3969 0F       		.byte	0xf
 7770 396a 3D06     		.value	0x63d
 7771 396c 87390000 		.long	0x3987
 7772 3970 18       		.uleb128 0x18
GAS LISTING x64lin/../common/event.s 			page 277


 7773 3971 00000000 		.long	.LASF237
 7774 3975 0F       		.byte	0xf
 7775 3976 3E06     		.value	0x63e
 7776 3978 13       		.byte	0x13
 7777 3979 2D140000 		.long	0x142d
 7778 397d 0A       		.uleb128 0xa
 7779 397e 5F547000 		.string	"_Tp"
 7780 3982 2D140000 		.long	0x142d
 7781 3986 00       		.byte	0
 7782 3987 25       		.uleb128 0x25
 7783 3988 00000000 		.long	.LASF587
 7784 398c 01       		.byte	0x1
 7785 398d 0F       		.byte	0xf
 7786 398e 4106     		.value	0x641
 7787 3990 AB390000 		.long	0x39ab
 7788 3994 18       		.uleb128 0x18
 7789 3995 00000000 		.long	.LASF237
 7790 3999 0F       		.byte	0xf
 7791 399a 4206     		.value	0x642
 7792 399c 13       		.byte	0x13
 7793 399d B5370000 		.long	0x37b5
 7794 39a1 0A       		.uleb128 0xa
 7795 39a2 5F547000 		.string	"_Tp"
 7796 39a6 85620000 		.long	0x6285
 7797 39aa 00       		.byte	0
 7798 39ab 25       		.uleb128 0x25
 7799 39ac 00000000 		.long	.LASF588
 7800 39b0 01       		.byte	0x1
 7801 39b1 0B       		.byte	0xb
 7802 39b2 5005     		.value	0x550
 7803 39b4 D9390000 		.long	0x39d9
 7804 39b8 18       		.uleb128 0x18
 7805 39b9 00000000 		.long	.LASF237
 7806 39bd 0B       		.byte	0xb
 7807 39be 5205     		.value	0x552
 7808 39c0 15       		.byte	0x15
 7809 39c1 6A610000 		.long	0x616a
 7810 39c5 38       		.uleb128 0x38
 7811 39c6 5F5F6900 		.string	"__i"
 7812 39ca 2B430000 		.long	0x432b
 7813 39ce 00       		.byte	0
 7814 39cf 0A       		.uleb128 0xa
 7815 39d0 5F547000 		.string	"_Tp"
 7816 39d4 B5370000 		.long	0x37b5
 7817 39d8 00       		.byte	0
 7818 39d9 16       		.uleb128 0x16
 7819 39da 00000000 		.long	.LASF589
 7820 39de 01       		.byte	0x1
 7821 39df 16       		.byte	0x16
 7822 39e0 C6       		.byte	0xc6
 7823 39e1 0C       		.byte	0xc
 7824 39e2 F3390000 		.long	0x39f3
 7825 39e6 06       		.uleb128 0x6
 7826 39e7 00000000 		.long	.LASF272
 7827 39eb 16       		.byte	0x16
 7828 39ec CB       		.byte	0xcb
 7829 39ed 0D       		.byte	0xd
GAS LISTING x64lin/../common/event.s 			page 278


 7830 39ee 3D050000 		.long	0x53d
 7831 39f2 00       		.byte	0
 7832 39f3 25       		.uleb128 0x25
 7833 39f4 00000000 		.long	.LASF590
 7834 39f8 01       		.byte	0x1
 7835 39f9 0E       		.byte	0xe
 7836 39fa D602     		.value	0x2d6
 7837 39fc 4C3A0000 		.long	0x3a4c
 7838 3a00 14       		.uleb128 0x14
 7839 3a01 00000000 		.long	.LASF591
 7840 3a05 0E       		.byte	0xe
 7841 3a06 DB02     		.value	0x2db
 7842 3a08 02       		.byte	0x2
 7843 3a09 00000000 		.long	.LASF592
 7844 3a0d 36600000 		.long	0x6036
 7845 3a11 2E3A0000 		.long	0x3a2e
 7846 3a15 0A       		.uleb128 0xa
 7847 3a16 5F547000 		.string	"_Tp"
 7848 3a1a E65F0000 		.long	0x5fe6
 7849 3a1e 01       		.uleb128 0x1
 7850 3a1f DF620000 		.long	0x62df
 7851 3a23 01       		.uleb128 0x1
 7852 3a24 DF620000 		.long	0x62df
 7853 3a28 01       		.uleb128 0x1
 7854 3a29 36600000 		.long	0x6036
 7855 3a2d 00       		.byte	0
 7856 3a2e 19       		.uleb128 0x19
 7857 3a2f 00000000 		.long	.LASF34
 7858 3a33 783F0000 		.long	0x3f78
 7859 3a37 00       		.byte	0
 7860 3a38 19       		.uleb128 0x19
 7861 3a39 00000000 		.long	.LASF35
 7862 3a3d 783F0000 		.long	0x3f78
 7863 3a41 01       		.byte	0x1
 7864 3a42 12       		.uleb128 0x12
 7865 3a43 00000000 		.long	.LASF36
 7866 3a47 FD010000 		.long	0x1fd
 7867 3a4b 00       		.byte	0
 7868 3a4c 25       		.uleb128 0x25
 7869 3a4d 00000000 		.long	.LASF593
 7870 3a51 01       		.byte	0x1
 7871 3a52 07       		.byte	0x7
 7872 3a53 9B01     		.value	0x19b
 7873 3a55 283B0000 		.long	0x3b28
 7874 3a59 18       		.uleb128 0x18
 7875 3a5a 00000000 		.long	.LASF188
 7876 3a5e 07       		.byte	0x7
 7877 3a5f A401     		.value	0x1a4
 7878 3a61 0D       		.byte	0xd
 7879 3a62 36600000 		.long	0x6036
 7880 3a66 14       		.uleb128 0x14
 7881 3a67 00000000 		.long	.LASF211
 7882 3a6b 07       		.byte	0x7
 7883 3a6c CF01     		.value	0x1cf
 7884 3a6e 07       		.byte	0x7
 7885 3a6f 00000000 		.long	.LASF594
 7886 3a73 593A0000 		.long	0x3a59
GAS LISTING x64lin/../common/event.s 			page 279


 7887 3a77 863A0000 		.long	0x3a86
 7888 3a7b 01       		.uleb128 0x1
 7889 3a7c D5620000 		.long	0x62d5
 7890 3a80 01       		.uleb128 0x1
 7891 3a81 983A0000 		.long	0x3a98
 7892 3a85 00       		.byte	0
 7893 3a86 18       		.uleb128 0x18
 7894 3a87 00000000 		.long	.LASF217
 7895 3a8b 07       		.byte	0x7
 7896 3a8c 9E01     		.value	0x19e
 7897 3a8e 0D       		.byte	0xd
 7898 3a8f 89180000 		.long	0x1889
 7899 3a93 08       		.uleb128 0x8
 7900 3a94 863A0000 		.long	0x3a86
 7901 3a98 18       		.uleb128 0x18
 7902 3a99 00000000 		.long	.LASF218
 7903 3a9d 07       		.byte	0x7
 7904 3a9e B301     		.value	0x1b3
 7905 3aa0 0D       		.byte	0xd
 7906 3aa1 21010000 		.long	0x121
 7907 3aa5 14       		.uleb128 0x14
 7908 3aa6 00000000 		.long	.LASF211
 7909 3aaa 07       		.byte	0x7
 7910 3aab DD01     		.value	0x1dd
 7911 3aad 07       		.byte	0x7
 7912 3aae 00000000 		.long	.LASF595
 7913 3ab2 593A0000 		.long	0x3a59
 7914 3ab6 CA3A0000 		.long	0x3aca
 7915 3aba 01       		.uleb128 0x1
 7916 3abb D5620000 		.long	0x62d5
 7917 3abf 01       		.uleb128 0x1
 7918 3ac0 983A0000 		.long	0x3a98
 7919 3ac4 01       		.uleb128 0x1
 7920 3ac5 CA3A0000 		.long	0x3aca
 7921 3ac9 00       		.byte	0
 7922 3aca 18       		.uleb128 0x18
 7923 3acb 00000000 		.long	.LASF220
 7924 3acf 07       		.byte	0x7
 7925 3ad0 AD01     		.value	0x1ad
 7926 3ad2 0D       		.byte	0xd
 7927 3ad3 29510000 		.long	0x5129
 7928 3ad7 69       		.uleb128 0x69
 7929 3ad8 00000000 		.long	.LASF213
 7930 3adc 00000000 		.long	.LASF596
 7931 3ae0 F43A0000 		.long	0x3af4
 7932 3ae4 01       		.uleb128 0x1
 7933 3ae5 D5620000 		.long	0x62d5
 7934 3ae9 01       		.uleb128 0x1
 7935 3aea 593A0000 		.long	0x3a59
 7936 3aee 01       		.uleb128 0x1
 7937 3aef 983A0000 		.long	0x3a98
 7938 3af3 00       		.byte	0
 7939 3af4 14       		.uleb128 0x14
 7940 3af5 00000000 		.long	.LASF221
 7941 3af9 07       		.byte	0x7
 7942 3afa 2302     		.value	0x223
 7943 3afc 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 280


 7944 3afd 00000000 		.long	.LASF597
 7945 3b01 983A0000 		.long	0x3a98
 7946 3b05 0F3B0000 		.long	0x3b0f
 7947 3b09 01       		.uleb128 0x1
 7948 3b0a DA620000 		.long	0x62da
 7949 3b0e 00       		.byte	0
 7950 3b0f 9401     		.uleb128 0x94
 7951 3b11 00000000 		.long	.LASF223
 7952 3b15 07       		.byte	0x7
 7953 3b16 3202     		.value	0x232
 7954 3b18 07       		.byte	0x7
 7955 3b19 00000000 		.long	.LASF598
 7956 3b1d 863A0000 		.long	0x3a86
 7957 3b21 01       		.uleb128 0x1
 7958 3b22 DA620000 		.long	0x62da
 7959 3b26 00       		.byte	0
 7960 3b27 00       		.byte	0
 7961 3b28 71       		.uleb128 0x71
 7962 3b29 00000000 		.long	.LASF599
 7963 3b2d 34       		.byte	0x34
 7964 3b2e 00000000 		.long	.LASF601
 7965 3b32 71       		.uleb128 0x71
 7966 3b33 00000000 		.long	.LASF602
 7967 3b37 37       		.byte	0x37
 7968 3b38 00000000 		.long	.LASF603
 7969 3b3c 5B       		.uleb128 0x5b
 7970 3b3d 00000000 		.long	.LASF604
 7971 3b41 29       		.byte	0x29
 7972 3b42 4B       		.byte	0x4b
 7973 3b43 03       		.byte	0x3
 7974 3b44 00000000 		.long	.LASF605
 7975 3b48 523B0000 		.long	0x3b52
 7976 3b4c 01       		.uleb128 0x1
 7977 3b4d 46460000 		.long	0x4646
 7978 3b51 00       		.byte	0
 7979 3b52 5B       		.uleb128 0x5b
 7980 3b53 00000000 		.long	.LASF606
 7981 3b57 29       		.byte	0x29
 7982 3b58 69       		.byte	0x69
 7983 3b59 03       		.byte	0x3
 7984 3b5a 00000000 		.long	.LASF607
 7985 3b5e 683B0000 		.long	0x3b68
 7986 3b62 01       		.uleb128 0x1
 7987 3b63 4C430000 		.long	0x434c
 7988 3b67 00       		.byte	0
 7989 3b68 1A       		.uleb128 0x1a
 7990 3b69 00000000 		.long	.LASF608
 7991 3b6d 0E       		.byte	0xe
 7992 3b6e FE       		.byte	0xfe
 7993 3b6f 05       		.byte	0x5
 7994 3b70 00000000 		.long	.LASF609
 7995 3b74 30660000 		.long	0x6630
 7996 3b78 903B0000 		.long	0x3b90
 7997 3b7c 0A       		.uleb128 0xa
 7998 3b7d 5F547000 		.string	"_Tp"
 7999 3b81 2B430000 		.long	0x432b
 8000 3b85 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 281


 8001 3b86 30660000 		.long	0x6630
 8002 3b8a 01       		.uleb128 0x1
 8003 3b8b 30660000 		.long	0x6630
 8004 3b8f 00       		.byte	0
 8005 3b90 06       		.uleb128 0x6
 8006 3b91 00000000 		.long	.LASF610
 8007 3b95 2A       		.byte	0x2a
 8008 3b96 76       		.byte	0x76
 8009 3b97 0B       		.byte	0xb
 8010 3b98 B8390000 		.long	0x39b8
 8011 3b9c 14       		.uleb128 0x14
 8012 3b9d 00000000 		.long	.LASF611
 8013 3ba1 0B       		.byte	0xb
 8014 3ba2 7105     		.value	0x571
 8015 3ba4 05       		.byte	0x5
 8016 3ba5 00000000 		.long	.LASF612
 8017 3ba9 60660000 		.long	0x6660
 8018 3bad D53B0000 		.long	0x3bd5
 8019 3bb1 38       		.uleb128 0x38
 8020 3bb2 5F5F6900 		.string	"__i"
 8021 3bb6 2B430000 		.long	0x432b
 8022 3bba 00       		.byte	0
 8023 3bbb 2A       		.uleb128 0x2a
 8024 3bbc 00000000 		.long	.LASF567
 8025 3bc0 CF3B0000 		.long	0x3bcf
 8026 3bc4 21       		.uleb128 0x21
 8027 3bc5 6A610000 		.long	0x616a
 8028 3bc9 21       		.uleb128 0x21
 8029 3bca E5300000 		.long	0x30e5
 8030 3bce 00       		.byte	0
 8031 3bcf 01       		.uleb128 0x1
 8032 3bd0 85620000 		.long	0x6285
 8033 3bd4 00       		.byte	0
 8034 3bd5 14       		.uleb128 0x14
 8035 3bd6 00000000 		.long	.LASF613
 8036 3bda 0B       		.byte	0xb
 8037 3bdb 6105     		.value	0x561
 8038 3bdd 05       		.byte	0x5
 8039 3bde 00000000 		.long	.LASF614
 8040 3be2 44620000 		.long	0x6244
 8041 3be6 123C0000 		.long	0x3c12
 8042 3bea 38       		.uleb128 0x38
 8043 3beb 5F5F6900 		.string	"__i"
 8044 3bef 2B430000 		.long	0x432b
 8045 3bf3 00       		.byte	0
 8046 3bf4 12       		.uleb128 0x12
 8047 3bf5 00000000 		.long	.LASF534
 8048 3bf9 6A610000 		.long	0x616a
 8049 3bfd 2A       		.uleb128 0x2a
 8050 3bfe 00000000 		.long	.LASF615
 8051 3c02 0C3C0000 		.long	0x3c0c
 8052 3c06 21       		.uleb128 0x21
 8053 3c07 E5300000 		.long	0x30e5
 8054 3c0b 00       		.byte	0
 8055 3c0c 01       		.uleb128 0x1
 8056 3c0d 4E620000 		.long	0x624e
 8057 3c11 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 282


 8058 3c12 14       		.uleb128 0x14
 8059 3c13 00000000 		.long	.LASF616
 8060 3c17 0E       		.byte	0xe
 8061 3c18 5003     		.value	0x350
 8062 3c1a 05       		.byte	0x5
 8063 3c1b 00000000 		.long	.LASF617
 8064 3c1f 36600000 		.long	0x6036
 8065 3c23 493C0000 		.long	0x3c49
 8066 3c27 12       		.uleb128 0x12
 8067 3c28 00000000 		.long	.LASF42
 8068 3c2c 36600000 		.long	0x6036
 8069 3c30 12       		.uleb128 0x12
 8070 3c31 00000000 		.long	.LASF43
 8071 3c35 36600000 		.long	0x6036
 8072 3c39 01       		.uleb128 0x1
 8073 3c3a 36600000 		.long	0x6036
 8074 3c3e 01       		.uleb128 0x1
 8075 3c3f 36600000 		.long	0x6036
 8076 3c43 01       		.uleb128 0x1
 8077 3c44 36600000 		.long	0x6036
 8078 3c48 00       		.byte	0
 8079 3c49 14       		.uleb128 0x14
 8080 3c4a 00000000 		.long	.LASF618
 8081 3c4e 0E       		.byte	0xe
 8082 3c4f 1C03     		.value	0x31c
 8083 3c51 05       		.byte	0x5
 8084 3c52 00000000 		.long	.LASF619
 8085 3c56 36600000 		.long	0x6036
 8086 3c5a 8A3C0000 		.long	0x3c8a
 8087 3c5e 19       		.uleb128 0x19
 8088 3c5f 00000000 		.long	.LASF34
 8089 3c63 783F0000 		.long	0x3f78
 8090 3c67 00       		.byte	0
 8091 3c68 0A       		.uleb128 0xa
 8092 3c69 5F494900 		.string	"_II"
 8093 3c6d 36600000 		.long	0x6036
 8094 3c71 0A       		.uleb128 0xa
 8095 3c72 5F4F4900 		.string	"_OI"
 8096 3c76 36600000 		.long	0x6036
 8097 3c7a 01       		.uleb128 0x1
 8098 3c7b 36600000 		.long	0x6036
 8099 3c7f 01       		.uleb128 0x1
 8100 3c80 36600000 		.long	0x6036
 8101 3c84 01       		.uleb128 0x1
 8102 3c85 36600000 		.long	0x6036
 8103 3c89 00       		.byte	0
 8104 3c8a 14       		.uleb128 0x14
 8105 3c8b 00000000 		.long	.LASF620
 8106 3c8f 0E       		.byte	0xe
 8107 3c90 0003     		.value	0x300
 8108 3c92 05       		.byte	0x5
 8109 3c93 00000000 		.long	.LASF621
 8110 3c97 36600000 		.long	0x6036
 8111 3c9b CB3C0000 		.long	0x3ccb
 8112 3c9f 19       		.uleb128 0x19
 8113 3ca0 00000000 		.long	.LASF34
 8114 3ca4 783F0000 		.long	0x3f78
GAS LISTING x64lin/../common/event.s 			page 283


 8115 3ca8 00       		.byte	0
 8116 3ca9 12       		.uleb128 0x12
 8117 3caa 00000000 		.long	.LASF42
 8118 3cae 36600000 		.long	0x6036
 8119 3cb2 12       		.uleb128 0x12
 8120 3cb3 00000000 		.long	.LASF43
 8121 3cb7 36600000 		.long	0x6036
 8122 3cbb 01       		.uleb128 0x1
 8123 3cbc 36600000 		.long	0x6036
 8124 3cc0 01       		.uleb128 0x1
 8125 3cc1 36600000 		.long	0x6036
 8126 3cc5 01       		.uleb128 0x1
 8127 3cc6 36600000 		.long	0x6036
 8128 3cca 00       		.byte	0
 8129 3ccb 14       		.uleb128 0x14
 8130 3ccc 00000000 		.long	.LASF622
 8131 3cd0 0E       		.byte	0xe
 8132 3cd1 EE02     		.value	0x2ee
 8133 3cd3 05       		.byte	0x5
 8134 3cd4 00000000 		.long	.LASF623
 8135 3cd8 36600000 		.long	0x6036
 8136 3cdc 0C3D0000 		.long	0x3d0c
 8137 3ce0 19       		.uleb128 0x19
 8138 3ce1 00000000 		.long	.LASF34
 8139 3ce5 783F0000 		.long	0x3f78
 8140 3ce9 00       		.byte	0
 8141 3cea 12       		.uleb128 0x12
 8142 3ceb 00000000 		.long	.LASF42
 8143 3cef 36600000 		.long	0x6036
 8144 3cf3 12       		.uleb128 0x12
 8145 3cf4 00000000 		.long	.LASF43
 8146 3cf8 36600000 		.long	0x6036
 8147 3cfc 01       		.uleb128 0x1
 8148 3cfd 36600000 		.long	0x6036
 8149 3d01 01       		.uleb128 0x1
 8150 3d02 36600000 		.long	0x6036
 8151 3d06 01       		.uleb128 0x1
 8152 3d07 36600000 		.long	0x6036
 8153 3d0b 00       		.byte	0
 8154 3d0c 14       		.uleb128 0x14
 8155 3d0d 00000000 		.long	.LASF624
 8156 3d11 0E       		.byte	0xe
 8157 3d12 6302     		.value	0x263
 8158 3d14 05       		.byte	0x5
 8159 3d15 00000000 		.long	.LASF625
 8160 3d19 36600000 		.long	0x6036
 8161 3d1d 433D0000 		.long	0x3d43
 8162 3d21 0A       		.uleb128 0xa
 8163 3d22 5F494900 		.string	"_II"
 8164 3d26 36600000 		.long	0x6036
 8165 3d2a 0A       		.uleb128 0xa
 8166 3d2b 5F4F4900 		.string	"_OI"
 8167 3d2f 36600000 		.long	0x6036
 8168 3d33 01       		.uleb128 0x1
 8169 3d34 36600000 		.long	0x6036
 8170 3d38 01       		.uleb128 0x1
 8171 3d39 36600000 		.long	0x6036
GAS LISTING x64lin/../common/event.s 			page 284


 8172 3d3d 01       		.uleb128 0x1
 8173 3d3e 36600000 		.long	0x6036
 8174 3d42 00       		.byte	0
 8175 3d43 14       		.uleb128 0x14
 8176 3d44 00000000 		.long	.LASF626
 8177 3d48 0E       		.byte	0xe
 8178 3d49 0F02     		.value	0x20f
 8179 3d4b 05       		.byte	0x5
 8180 3d4c 00000000 		.long	.LASF627
 8181 3d50 36600000 		.long	0x6036
 8182 3d54 843D0000 		.long	0x3d84
 8183 3d58 19       		.uleb128 0x19
 8184 3d59 00000000 		.long	.LASF34
 8185 3d5d 783F0000 		.long	0x3f78
 8186 3d61 00       		.byte	0
 8187 3d62 0A       		.uleb128 0xa
 8188 3d63 5F494900 		.string	"_II"
 8189 3d67 36600000 		.long	0x6036
 8190 3d6b 0A       		.uleb128 0xa
 8191 3d6c 5F4F4900 		.string	"_OI"
 8192 3d70 36600000 		.long	0x6036
 8193 3d74 01       		.uleb128 0x1
 8194 3d75 36600000 		.long	0x6036
 8195 3d79 01       		.uleb128 0x1
 8196 3d7a 36600000 		.long	0x6036
 8197 3d7e 01       		.uleb128 0x1
 8198 3d7f 36600000 		.long	0x6036
 8199 3d83 00       		.byte	0
 8200 3d84 14       		.uleb128 0x14
 8201 3d85 00000000 		.long	.LASF628
 8202 3d89 0E       		.byte	0xe
 8203 3d8a 4F01     		.value	0x14f
 8204 3d8c 05       		.byte	0x5
 8205 3d8d 00000000 		.long	.LASF629
 8206 3d91 36600000 		.long	0x6036
 8207 3d95 AD3D0000 		.long	0x3dad
 8208 3d99 12       		.uleb128 0x12
 8209 3d9a 00000000 		.long	.LASF630
 8210 3d9e 36600000 		.long	0x6036
 8211 3da2 01       		.uleb128 0x1
 8212 3da3 526A0000 		.long	0x6a52
 8213 3da7 01       		.uleb128 0x1
 8214 3da8 36600000 		.long	0x6036
 8215 3dac 00       		.byte	0
 8216 3dad 14       		.uleb128 0x14
 8217 3dae 00000000 		.long	.LASF631
 8218 3db2 0E       		.byte	0xe
 8219 3db3 0902     		.value	0x209
 8220 3db5 05       		.byte	0x5
 8221 3db6 00000000 		.long	.LASF632
 8222 3dba 36600000 		.long	0x6036
 8223 3dbe EE3D0000 		.long	0x3dee
 8224 3dc2 19       		.uleb128 0x19
 8225 3dc3 00000000 		.long	.LASF34
 8226 3dc7 783F0000 		.long	0x3f78
 8227 3dcb 00       		.byte	0
 8228 3dcc 0A       		.uleb128 0xa
GAS LISTING x64lin/../common/event.s 			page 285


 8229 3dcd 5F494900 		.string	"_II"
 8230 3dd1 36600000 		.long	0x6036
 8231 3dd5 0A       		.uleb128 0xa
 8232 3dd6 5F4F4900 		.string	"_OI"
 8233 3dda 36600000 		.long	0x6036
 8234 3dde 01       		.uleb128 0x1
 8235 3ddf 36600000 		.long	0x6036
 8236 3de3 01       		.uleb128 0x1
 8237 3de4 36600000 		.long	0x6036
 8238 3de8 01       		.uleb128 0x1
 8239 3de9 36600000 		.long	0x6036
 8240 3ded 00       		.byte	0
 8241 3dee 14       		.uleb128 0x14
 8242 3def 00000000 		.long	.LASF633
 8243 3df3 0E       		.byte	0xe
 8244 3df4 E601     		.value	0x1e6
 8245 3df6 05       		.byte	0x5
 8246 3df7 00000000 		.long	.LASF634
 8247 3dfb 36600000 		.long	0x6036
 8248 3dff 2F3E0000 		.long	0x3e2f
 8249 3e03 19       		.uleb128 0x19
 8250 3e04 00000000 		.long	.LASF34
 8251 3e08 783F0000 		.long	0x3f78
 8252 3e0c 00       		.byte	0
 8253 3e0d 0A       		.uleb128 0xa
 8254 3e0e 5F494900 		.string	"_II"
 8255 3e12 36600000 		.long	0x6036
 8256 3e16 0A       		.uleb128 0xa
 8257 3e17 5F4F4900 		.string	"_OI"
 8258 3e1b 36600000 		.long	0x6036
 8259 3e1f 01       		.uleb128 0x1
 8260 3e20 36600000 		.long	0x6036
 8261 3e24 01       		.uleb128 0x1
 8262 3e25 36600000 		.long	0x6036
 8263 3e29 01       		.uleb128 0x1
 8264 3e2a 36600000 		.long	0x6036
 8265 3e2e 00       		.byte	0
 8266 3e2f 14       		.uleb128 0x14
 8267 3e30 00000000 		.long	.LASF635
 8268 3e34 0E       		.byte	0xe
 8269 3e35 3901     		.value	0x139
 8270 3e37 05       		.byte	0x5
 8271 3e38 00000000 		.long	.LASF636
 8272 3e3c 36600000 		.long	0x6036
 8273 3e40 533E0000 		.long	0x3e53
 8274 3e44 12       		.uleb128 0x12
 8275 3e45 00000000 		.long	.LASF630
 8276 3e49 36600000 		.long	0x6036
 8277 3e4d 01       		.uleb128 0x1
 8278 3e4e 36600000 		.long	0x6036
 8279 3e52 00       		.byte	0
 8280 3e53 14       		.uleb128 0x14
 8281 3e54 00000000 		.long	.LASF637
 8282 3e58 2B       		.byte	0x2b
 8283 3e59 3002     		.value	0x230
 8284 3e5b 05       		.byte	0x5
 8285 3e5c 00000000 		.long	.LASF638
GAS LISTING x64lin/../common/event.s 			page 286


 8286 3e60 36600000 		.long	0x6036
 8287 3e64 773E0000 		.long	0x3e77
 8288 3e68 12       		.uleb128 0x12
 8289 3e69 00000000 		.long	.LASF630
 8290 3e6d 36600000 		.long	0x6036
 8291 3e71 01       		.uleb128 0x1
 8292 3e72 36600000 		.long	0x6036
 8293 3e76 00       		.byte	0
 8294 3e77 1A       		.uleb128 0x1a
 8295 3e78 00000000 		.long	.LASF639
 8296 3e7c 0E       		.byte	0xe
 8297 3e7d E6       		.byte	0xe6
 8298 3e7e 05       		.byte	0x5
 8299 3e7f 00000000 		.long	.LASF640
 8300 3e83 30660000 		.long	0x6630
 8301 3e87 9F3E0000 		.long	0x3e9f
 8302 3e8b 0A       		.uleb128 0xa
 8303 3e8c 5F547000 		.string	"_Tp"
 8304 3e90 2B430000 		.long	0x432b
 8305 3e94 01       		.uleb128 0x1
 8306 3e95 30660000 		.long	0x6630
 8307 3e99 01       		.uleb128 0x1
 8308 3e9a 30660000 		.long	0x6630
 8309 3e9e 00       		.byte	0
 8310 3e9f 14       		.uleb128 0x14
 8311 3ea0 00000000 		.long	.LASF641
 8312 3ea4 05       		.byte	0x5
 8313 3ea5 6101     		.value	0x161
 8314 3ea7 07       		.byte	0x7
 8315 3ea8 00000000 		.long	.LASF642
 8316 3eac 2F1C0000 		.long	0x1c2f
 8317 3eb0 BF3E0000 		.long	0x3ebf
 8318 3eb4 01       		.uleb128 0x1
 8319 3eb5 866C0000 		.long	0x6c86
 8320 3eb9 01       		.uleb128 0x1
 8321 3eba 866C0000 		.long	0x6c86
 8322 3ebe 00       		.byte	0
 8323 3ebf 1A       		.uleb128 0x1a
 8324 3ec0 00000000 		.long	.LASF643
 8325 3ec4 0A       		.byte	0xa
 8326 3ec5 68       		.byte	0x68
 8327 3ec6 05       		.byte	0x5
 8328 3ec7 00000000 		.long	.LASF644
 8329 3ecb E16D0000 		.long	0x6de1
 8330 3ecf E23E0000 		.long	0x3ee2
 8331 3ed3 0A       		.uleb128 0xa
 8332 3ed4 5F547000 		.string	"_Tp"
 8333 3ed8 85620000 		.long	0x6285
 8334 3edc 01       		.uleb128 0x1
 8335 3edd 85620000 		.long	0x6285
 8336 3ee1 00       		.byte	0
 8337 3ee2 1A       		.uleb128 0x1a
 8338 3ee3 00000000 		.long	.LASF645
 8339 3ee7 08       		.byte	0x8
 8340 3ee8 5E       		.byte	0x5e
 8341 3ee9 05       		.byte	0x5
 8342 3eea 00000000 		.long	.LASF646
GAS LISTING x64lin/../common/event.s 			page 287


 8343 3eee E65F0000 		.long	0x5fe6
 8344 3ef2 193F0000 		.long	0x3f19
 8345 3ef6 0A       		.uleb128 0xa
 8346 3ef7 5F547000 		.string	"_Tp"
 8347 3efb 2D140000 		.long	0x142d
 8348 3eff 2A       		.uleb128 0x2a
 8349 3f00 00000000 		.long	.LASF480
 8350 3f04 0E3F0000 		.long	0x3f0e
 8351 3f08 21       		.uleb128 0x21
 8352 3f09 2D140000 		.long	0x142d
 8353 3f0d 00       		.byte	0
 8354 3f0e 01       		.uleb128 0x1
 8355 3f0f E65F0000 		.long	0x5fe6
 8356 3f13 01       		.uleb128 0x1
 8357 3f14 C1620000 		.long	0x62c1
 8358 3f18 00       		.byte	0
 8359 3f19 1A       		.uleb128 0x1a
 8360 3f1a 00000000 		.long	.LASF647
 8361 3f1e 0A       		.byte	0xa
 8362 3f1f 4D       		.byte	0x4d
 8363 3f20 05       		.byte	0x5
 8364 3f21 00000000 		.long	.LASF648
 8365 3f25 C1620000 		.long	0x62c1
 8366 3f29 3C3F0000 		.long	0x3f3c
 8367 3f2d 0A       		.uleb128 0xa
 8368 3f2e 5F547000 		.string	"_Tp"
 8369 3f32 2D140000 		.long	0x142d
 8370 3f36 01       		.uleb128 0x1
 8371 3f37 32700000 		.long	0x7032
 8372 3f3b 00       		.byte	0
 8373 3f3c 1A       		.uleb128 0x1a
 8374 3f3d 00000000 		.long	.LASF649
 8375 3f41 0A       		.byte	0xa
 8376 3f42 68       		.byte	0x68
 8377 3f43 05       		.byte	0x5
 8378 3f44 00000000 		.long	.LASF650
 8379 3f48 4B840000 		.long	0x844b
 8380 3f4c 5F3F0000 		.long	0x3f5f
 8381 3f50 0A       		.uleb128 0xa
 8382 3f51 5F547000 		.string	"_Tp"
 8383 3f55 81600000 		.long	0x6081
 8384 3f59 01       		.uleb128 0x1
 8385 3f5a 81600000 		.long	0x6081
 8386 3f5e 00       		.byte	0
 8387 3f5f 5D       		.uleb128 0x5d
 8388 3f60 00000000 		.long	.LASF651
 8389 3f64 0F       		.byte	0xf
 8390 3f65 5B0D     		.value	0xd5b
 8391 3f67 03       		.byte	0x3
 8392 3f68 00000000 		.long	.LASF652
 8393 3f6c 783F0000 		.long	0x3f78
 8394 3f70 00       		.byte	0
 8395 3f71 1C       		.uleb128 0x1c
 8396 3f72 04       		.byte	0x4
 8397 3f73 07       		.byte	0x7
 8398 3f74 00000000 		.long	.LASF653
 8399 3f78 1C       		.uleb128 0x1c
GAS LISTING x64lin/../common/event.s 			page 288


 8400 3f79 01       		.byte	0x1
 8401 3f7a 02       		.byte	0x2
 8402 3f7b 00000000 		.long	.LASF654
 8403 3f7f 9501     		.uleb128 0x95
 8404 3f81 00000000 		.long	.LASF655
 8405 3f85 10       		.byte	0x10
 8406 3f86 3001     		.value	0x130
 8407 3f88 0B       		.byte	0xb
 8408 3f89 1D430000 		.long	0x431d
 8409 3f8d 33       		.uleb128 0x33
 8410 3f8e 00000000 		.long	.LASF656
 8411 3f92 2C       		.byte	0x2c
 8412 3f93 25       		.byte	0x25
 8413 3f94 0B       		.byte	0xb
 8414 3f95 03       		.uleb128 0x3
 8415 3f96 18       		.byte	0x18
 8416 3f97 FB       		.byte	0xfb
 8417 3f98 0B       		.byte	0xb
 8418 3f99 564E0000 		.long	0x4e56
 8419 3f9d 1B       		.uleb128 0x1b
 8420 3f9e 18       		.byte	0x18
 8421 3f9f 0401     		.value	0x104
 8422 3fa1 0B       		.byte	0xb
 8423 3fa2 724E0000 		.long	0x4e72
 8424 3fa6 1B       		.uleb128 0x1b
 8425 3fa7 18       		.byte	0x18
 8426 3fa8 0501     		.value	0x105
 8427 3faa 0B       		.byte	0xb
 8428 3fab 934E0000 		.long	0x4e93
 8429 3faf 03       		.uleb128 0x3
 8430 3fb0 1B       		.byte	0x1b
 8431 3fb1 C8       		.byte	0xc8
 8432 3fb2 0B       		.byte	0xb
 8433 3fb3 2F530000 		.long	0x532f
 8434 3fb7 03       		.uleb128 0x3
 8435 3fb8 1B       		.byte	0x1b
 8436 3fb9 D8       		.byte	0xd8
 8437 3fba 0B       		.byte	0xb
 8438 3fbb 24580000 		.long	0x5824
 8439 3fbf 03       		.uleb128 0x3
 8440 3fc0 1B       		.byte	0x1b
 8441 3fc1 E3       		.byte	0xe3
 8442 3fc2 0B       		.byte	0xb
 8443 3fc3 40580000 		.long	0x5840
 8444 3fc7 03       		.uleb128 0x3
 8445 3fc8 1B       		.byte	0x1b
 8446 3fc9 E4       		.byte	0xe4
 8447 3fca 0B       		.byte	0xb
 8448 3fcb 57580000 		.long	0x5857
 8449 3fcf 03       		.uleb128 0x3
 8450 3fd0 1B       		.byte	0x1b
 8451 3fd1 E5       		.byte	0xe5
 8452 3fd2 0B       		.byte	0xb
 8453 3fd3 77580000 		.long	0x5877
 8454 3fd7 03       		.uleb128 0x3
 8455 3fd8 1B       		.byte	0x1b
 8456 3fd9 E7       		.byte	0xe7
GAS LISTING x64lin/../common/event.s 			page 289


 8457 3fda 0B       		.byte	0xb
 8458 3fdb 97580000 		.long	0x5897
 8459 3fdf 03       		.uleb128 0x3
 8460 3fe0 1B       		.byte	0x1b
 8461 3fe1 E8       		.byte	0xe8
 8462 3fe2 0B       		.byte	0xb
 8463 3fe3 B2580000 		.long	0x58b2
 8464 3fe7 9601     		.uleb128 0x96
 8465 3fe9 64697600 		.string	"div"
 8466 3fed 1B       		.byte	0x1b
 8467 3fee D5       		.byte	0xd5
 8468 3fef 03       		.byte	0x3
 8469 3ff0 00000000 		.long	.LASF1138
 8470 3ff4 2F530000 		.long	0x532f
 8471 3ff8 07400000 		.long	0x4007
 8472 3ffc 01       		.uleb128 0x1
 8473 3ffd 60430000 		.long	0x4360
 8474 4001 01       		.uleb128 0x1
 8475 4002 60430000 		.long	0x4360
 8476 4006 00       		.byte	0
 8477 4007 9701     		.uleb128 0x97
 8478 4009 00000000 		.long	.LASF1139
 8479 400d 07       		.byte	0x7
 8480 400e 04       		.byte	0x4
 8481 400f 713F0000 		.long	0x3f71
 8482 4013 55       		.byte	0x55
 8483 4014 31       		.byte	0x31
 8484 4015 08       		.byte	0x8
 8485 4016 2D400000 		.long	0x402d
 8486 401a 34       		.uleb128 0x34
 8487 401b 00000000 		.long	.LASF657
 8488 401f 00       		.byte	0
 8489 4020 34       		.uleb128 0x34
 8490 4021 00000000 		.long	.LASF658
 8491 4025 01       		.byte	0x1
 8492 4026 34       		.uleb128 0x34
 8493 4027 00000000 		.long	.LASF659
 8494 402b 02       		.byte	0x2
 8495 402c 00       		.byte	0
 8496 402d 08       		.uleb128 0x8
 8497 402e 07400000 		.long	0x4007
 8498 4032 9801     		.uleb128 0x98
 8499 4034 00000000 		.long	.LASF1124
 8500 4038 55       		.byte	0x55
 8501 4039 35       		.byte	0x35
 8502 403a 1D       		.byte	0x1d
 8503 403b 2D400000 		.long	0x402d
 8504 403f 02       		.byte	0x2
 8505 4040 23       		.uleb128 0x23
 8506 4041 00000000 		.long	.LASF660
 8507 4045 01       		.byte	0x1
 8508 4046 0D       		.byte	0xd
 8509 4047 37       		.byte	0x37
 8510 4048 0B       		.byte	0xb
 8511 4049 0B410000 		.long	0x410b
 8512 404d 0D       		.uleb128 0xd
 8513 404e 00000000 		.long	.LASF661
GAS LISTING x64lin/../common/event.s 			page 290


 8514 4052 0D       		.byte	0xd
 8515 4053 4F       		.byte	0x4f
 8516 4054 07       		.byte	0x7
 8517 4055 00000000 		.long	.LASF662
 8518 4059 01       		.byte	0x1
 8519 405a 62400000 		.long	0x4062
 8520 405e 68400000 		.long	0x4068
 8521 4062 02       		.uleb128 0x2
 8522 4063 D75F0000 		.long	0x5fd7
 8523 4067 00       		.byte	0
 8524 4068 0D       		.uleb128 0xd
 8525 4069 00000000 		.long	.LASF661
 8526 406d 0D       		.byte	0xd
 8527 406e 52       		.byte	0x52
 8528 406f 07       		.byte	0x7
 8529 4070 00000000 		.long	.LASF663
 8530 4074 01       		.byte	0x1
 8531 4075 7D400000 		.long	0x407d
 8532 4079 88400000 		.long	0x4088
 8533 407d 02       		.uleb128 0x2
 8534 407e D75F0000 		.long	0x5fd7
 8535 4082 01       		.uleb128 0x1
 8536 4083 E15F0000 		.long	0x5fe1
 8537 4087 00       		.byte	0
 8538 4088 17       		.uleb128 0x17
 8539 4089 00000000 		.long	.LASF211
 8540 408d 0D       		.byte	0xd
 8541 408e 67       		.byte	0x67
 8542 408f 07       		.byte	0x7
 8543 4090 00000000 		.long	.LASF664
 8544 4094 E65F0000 		.long	0x5fe6
 8545 4098 01       		.byte	0x1
 8546 4099 A1400000 		.long	0x40a1
 8547 409d B1400000 		.long	0x40b1
 8548 40a1 02       		.uleb128 0x2
 8549 40a2 D75F0000 		.long	0x5fd7
 8550 40a6 01       		.uleb128 0x1
 8551 40a7 B1400000 		.long	0x40b1
 8552 40ab 01       		.uleb128 0x1
 8553 40ac 29510000 		.long	0x5129
 8554 40b0 00       		.byte	0
 8555 40b1 27       		.uleb128 0x27
 8556 40b2 00000000 		.long	.LASF218
 8557 40b6 0D       		.byte	0xd
 8558 40b7 3B       		.byte	0x3b
 8559 40b8 1B       		.byte	0x1b
 8560 40b9 21010000 		.long	0x121
 8561 40bd 01       		.byte	0x1
 8562 40be 0D       		.uleb128 0xd
 8563 40bf 00000000 		.long	.LASF213
 8564 40c3 0D       		.byte	0xd
 8565 40c4 84       		.byte	0x84
 8566 40c5 07       		.byte	0x7
 8567 40c6 00000000 		.long	.LASF665
 8568 40ca 01       		.byte	0x1
 8569 40cb D3400000 		.long	0x40d3
 8570 40cf E3400000 		.long	0x40e3
GAS LISTING x64lin/../common/event.s 			page 291


 8571 40d3 02       		.uleb128 0x2
 8572 40d4 D75F0000 		.long	0x5fd7
 8573 40d8 01       		.uleb128 0x1
 8574 40d9 E65F0000 		.long	0x5fe6
 8575 40dd 01       		.uleb128 0x1
 8576 40de B1400000 		.long	0x40b1
 8577 40e2 00       		.byte	0
 8578 40e3 24       		.uleb128 0x24
 8579 40e4 00000000 		.long	.LASF666
 8580 40e8 0D       		.byte	0xd
 8581 40e9 C5       		.byte	0xc5
 8582 40ea 07       		.byte	0x7
 8583 40eb 00000000 		.long	.LASF667
 8584 40ef B1400000 		.long	0x40b1
 8585 40f3 FB400000 		.long	0x40fb
 8586 40f7 01410000 		.long	0x4101
 8587 40fb 02       		.uleb128 0x2
 8588 40fc F05F0000 		.long	0x5ff0
 8589 4100 00       		.byte	0
 8590 4101 0A       		.uleb128 0xa
 8591 4102 5F547000 		.string	"_Tp"
 8592 4106 2D140000 		.long	0x142d
 8593 410a 00       		.byte	0
 8594 410b 08       		.uleb128 0x8
 8595 410c 40400000 		.long	0x4040
 8596 4110 16       		.uleb128 0x16
 8597 4111 00000000 		.long	.LASF668
 8598 4115 01       		.byte	0x1
 8599 4116 2D       		.byte	0x2d
 8600 4117 30       		.byte	0x30
 8601 4118 0A       		.byte	0xa
 8602 4119 4C420000 		.long	0x424c
 8603 411d 03       		.uleb128 0x3
 8604 411e 2D       		.byte	0x2d
 8605 411f 30       		.byte	0x30
 8606 4120 0A       		.byte	0xa
 8607 4121 A6170000 		.long	0x17a6
 8608 4125 03       		.uleb128 0x3
 8609 4126 2D       		.byte	0x2d
 8610 4127 30       		.byte	0x30
 8611 4128 0A       		.byte	0xa
 8612 4129 67170000 		.long	0x1767
 8613 412d 03       		.uleb128 0x3
 8614 412e 2D       		.byte	0x2d
 8615 412f 30       		.byte	0x30
 8616 4130 0A       		.byte	0xa
 8617 4131 D8170000 		.long	0x17d8
 8618 4135 03       		.uleb128 0x3
 8619 4136 2D       		.byte	0x2d
 8620 4137 30       		.byte	0x30
 8621 4138 0A       		.byte	0xa
 8622 4139 F5170000 		.long	0x17f5
 8623 413d 30       		.uleb128 0x30
 8624 413e 4D170000 		.long	0x174d
 8625 4142 1A       		.uleb128 0x1a
 8626 4143 00000000 		.long	.LASF669
 8627 4147 2D       		.byte	0x2d
GAS LISTING x64lin/../common/event.s 			page 292


 8628 4148 61       		.byte	0x61
 8629 4149 1D       		.byte	0x1d
 8630 414a 00000000 		.long	.LASF670
 8631 414e 75160000 		.long	0x1675
 8632 4152 5C410000 		.long	0x415c
 8633 4156 01       		.uleb128 0x1
 8634 4157 04600000 		.long	0x6004
 8635 415b 00       		.byte	0
 8636 415c 5F       		.uleb128 0x5f
 8637 415d 00000000 		.long	.LASF671
 8638 4161 2D       		.byte	0x2d
 8639 4162 64       		.byte	0x64
 8640 4163 1B       		.byte	0x1b
 8641 4164 00000000 		.long	.LASF673
 8642 4168 77410000 		.long	0x4177
 8643 416c 01       		.uleb128 0x1
 8644 416d 09600000 		.long	0x6009
 8645 4171 01       		.uleb128 0x1
 8646 4172 09600000 		.long	0x6009
 8647 4176 00       		.byte	0
 8648 4177 40       		.uleb128 0x40
 8649 4178 00000000 		.long	.LASF674
 8650 417c 2D       		.byte	0x2d
 8651 417d 67       		.byte	0x67
 8652 417e 1B       		.byte	0x1b
 8653 417f 00000000 		.long	.LASF675
 8654 4183 783F0000 		.long	0x3f78
 8655 4187 40       		.uleb128 0x40
 8656 4188 00000000 		.long	.LASF676
 8657 418c 2D       		.byte	0x2d
 8658 418d 6A       		.byte	0x6a
 8659 418e 1B       		.byte	0x1b
 8660 418f 00000000 		.long	.LASF677
 8661 4193 783F0000 		.long	0x3f78
 8662 4197 40       		.uleb128 0x40
 8663 4198 00000000 		.long	.LASF678
 8664 419c 2D       		.byte	0x2d
 8665 419d 6D       		.byte	0x6d
 8666 419e 1B       		.byte	0x1b
 8667 419f 00000000 		.long	.LASF679
 8668 41a3 783F0000 		.long	0x3f78
 8669 41a7 40       		.uleb128 0x40
 8670 41a8 00000000 		.long	.LASF680
 8671 41ac 2D       		.byte	0x2d
 8672 41ad 70       		.byte	0x70
 8673 41ae 1B       		.byte	0x1b
 8674 41af 00000000 		.long	.LASF681
 8675 41b3 783F0000 		.long	0x3f78
 8676 41b7 40       		.uleb128 0x40
 8677 41b8 00000000 		.long	.LASF682
 8678 41bc 2D       		.byte	0x2d
 8679 41bd 73       		.byte	0x73
 8680 41be 1B       		.byte	0x1b
 8681 41bf 00000000 		.long	.LASF683
 8682 41c3 783F0000 		.long	0x3f78
 8683 41c7 06       		.uleb128 0x6
 8684 41c8 00000000 		.long	.LASF8
GAS LISTING x64lin/../common/event.s 			page 293


 8685 41cc 2D       		.byte	0x2d
 8686 41cd 38       		.byte	0x38
 8687 41ce 2D       		.byte	0x2d
 8688 41cf 2B180000 		.long	0x182b
 8689 41d3 08       		.uleb128 0x8
 8690 41d4 C7410000 		.long	0x41c7
 8691 41d8 06       		.uleb128 0x6
 8692 41d9 00000000 		.long	.LASF188
 8693 41dd 2D       		.byte	0x2d
 8694 41de 39       		.byte	0x39
 8695 41df 2A       		.byte	0x2a
 8696 41e0 5A170000 		.long	0x175a
 8697 41e4 06       		.uleb128 0x6
 8698 41e5 00000000 		.long	.LASF260
 8699 41e9 2D       		.byte	0x2d
 8700 41ea 3E       		.byte	0x3e
 8701 41eb 19       		.byte	0x19
 8702 41ec 1D600000 		.long	0x601d
 8703 41f0 06       		.uleb128 0x6
 8704 41f1 00000000 		.long	.LASF392
 8705 41f5 2D       		.byte	0x2d
 8706 41f6 3F       		.byte	0x3f
 8707 41f7 1F       		.byte	0x1f
 8708 41f8 22600000 		.long	0x6022
 8709 41fc 16       		.uleb128 0x16
 8710 41fd 00000000 		.long	.LASF684
 8711 4201 01       		.byte	0x1
 8712 4202 2D       		.byte	0x2d
 8713 4203 77       		.byte	0x77
 8714 4204 0E       		.byte	0xe
 8715 4205 1F420000 		.long	0x421f
 8716 4209 06       		.uleb128 0x6
 8717 420a 00000000 		.long	.LASF685
 8718 420e 2D       		.byte	0x2d
 8719 420f 78       		.byte	0x78
 8720 4210 41       		.byte	0x41
 8721 4211 38180000 		.long	0x1838
 8722 4215 0A       		.uleb128 0xa
 8723 4216 5F547000 		.string	"_Tp"
 8724 421a 2D140000 		.long	0x142d
 8725 421e 00       		.byte	0
 8726 421f 16       		.uleb128 0x16
 8727 4220 00000000 		.long	.LASF686
 8728 4224 01       		.byte	0x1
 8729 4225 2D       		.byte	0x2d
 8730 4226 77       		.byte	0x77
 8731 4227 0E       		.byte	0xe
 8732 4228 42420000 		.long	0x4242
 8733 422c 06       		.uleb128 0x6
 8734 422d 00000000 		.long	.LASF685
 8735 4231 2D       		.byte	0x2d
 8736 4232 78       		.byte	0x78
 8737 4233 41       		.byte	0x41
 8738 4234 45180000 		.long	0x1845
 8739 4238 0A       		.uleb128 0xa
 8740 4239 5F547000 		.string	"_Tp"
 8741 423d E65F0000 		.long	0x5fe6
GAS LISTING x64lin/../common/event.s 			page 294


 8742 4241 00       		.byte	0
 8743 4242 12       		.uleb128 0x12
 8744 4243 00000000 		.long	.LASF335
 8745 4247 75160000 		.long	0x1675
 8746 424b 00       		.byte	0
 8747 424c 23       		.uleb128 0x23
 8748 424d 00000000 		.long	.LASF687
 8749 4251 01       		.byte	0x1
 8750 4252 0D       		.byte	0xd
 8751 4253 37       		.byte	0x37
 8752 4254 0B       		.byte	0xb
 8753 4255 17430000 		.long	0x4317
 8754 4259 0D       		.uleb128 0xd
 8755 425a 00000000 		.long	.LASF661
 8756 425e 0D       		.byte	0xd
 8757 425f 4F       		.byte	0x4f
 8758 4260 07       		.byte	0x7
 8759 4261 00000000 		.long	.LASF688
 8760 4265 01       		.byte	0x1
 8761 4266 6E420000 		.long	0x426e
 8762 426a 74420000 		.long	0x4274
 8763 426e 02       		.uleb128 0x2
 8764 426f 27600000 		.long	0x6027
 8765 4273 00       		.byte	0
 8766 4274 0D       		.uleb128 0xd
 8767 4275 00000000 		.long	.LASF661
 8768 4279 0D       		.byte	0xd
 8769 427a 52       		.byte	0x52
 8770 427b 07       		.byte	0x7
 8771 427c 00000000 		.long	.LASF689
 8772 4280 01       		.byte	0x1
 8773 4281 89420000 		.long	0x4289
 8774 4285 94420000 		.long	0x4294
 8775 4289 02       		.uleb128 0x2
 8776 428a 27600000 		.long	0x6027
 8777 428e 01       		.uleb128 0x1
 8778 428f 31600000 		.long	0x6031
 8779 4293 00       		.byte	0
 8780 4294 17       		.uleb128 0x17
 8781 4295 00000000 		.long	.LASF211
 8782 4299 0D       		.byte	0xd
 8783 429a 67       		.byte	0x67
 8784 429b 07       		.byte	0x7
 8785 429c 00000000 		.long	.LASF690
 8786 42a0 36600000 		.long	0x6036
 8787 42a4 01       		.byte	0x1
 8788 42a5 AD420000 		.long	0x42ad
 8789 42a9 BD420000 		.long	0x42bd
 8790 42ad 02       		.uleb128 0x2
 8791 42ae 27600000 		.long	0x6027
 8792 42b2 01       		.uleb128 0x1
 8793 42b3 BD420000 		.long	0x42bd
 8794 42b7 01       		.uleb128 0x1
 8795 42b8 29510000 		.long	0x5129
 8796 42bc 00       		.byte	0
 8797 42bd 27       		.uleb128 0x27
 8798 42be 00000000 		.long	.LASF218
GAS LISTING x64lin/../common/event.s 			page 295


 8799 42c2 0D       		.byte	0xd
 8800 42c3 3B       		.byte	0x3b
 8801 42c4 1B       		.byte	0x1b
 8802 42c5 21010000 		.long	0x121
 8803 42c9 01       		.byte	0x1
 8804 42ca 0D       		.uleb128 0xd
 8805 42cb 00000000 		.long	.LASF213
 8806 42cf 0D       		.byte	0xd
 8807 42d0 84       		.byte	0x84
 8808 42d1 07       		.byte	0x7
 8809 42d2 00000000 		.long	.LASF691
 8810 42d6 01       		.byte	0x1
 8811 42d7 DF420000 		.long	0x42df
 8812 42db EF420000 		.long	0x42ef
 8813 42df 02       		.uleb128 0x2
 8814 42e0 27600000 		.long	0x6027
 8815 42e4 01       		.uleb128 0x1
 8816 42e5 36600000 		.long	0x6036
 8817 42e9 01       		.uleb128 0x1
 8818 42ea BD420000 		.long	0x42bd
 8819 42ee 00       		.byte	0
 8820 42ef 24       		.uleb128 0x24
 8821 42f0 00000000 		.long	.LASF666
 8822 42f4 0D       		.byte	0xd
 8823 42f5 C5       		.byte	0xc5
 8824 42f6 07       		.byte	0x7
 8825 42f7 00000000 		.long	.LASF692
 8826 42fb BD420000 		.long	0x42bd
 8827 42ff 07430000 		.long	0x4307
 8828 4303 0D430000 		.long	0x430d
 8829 4307 02       		.uleb128 0x2
 8830 4308 40600000 		.long	0x6040
 8831 430c 00       		.byte	0
 8832 430d 0A       		.uleb128 0xa
 8833 430e 5F547000 		.string	"_Tp"
 8834 4312 E65F0000 		.long	0x5fe6
 8835 4316 00       		.byte	0
 8836 4317 08       		.uleb128 0x8
 8837 4318 4C420000 		.long	0x424c
 8838 431c 00       		.byte	0
 8839 431d 1C       		.uleb128 0x1c
 8840 431e 01       		.byte	0x1
 8841 431f 08       		.byte	0x8
 8842 4320 00000000 		.long	.LASF693
 8843 4324 1C       		.uleb128 0x1c
 8844 4325 02       		.byte	0x2
 8845 4326 07       		.byte	0x7
 8846 4327 00000000 		.long	.LASF694
 8847 432b 1C       		.uleb128 0x1c
 8848 432c 08       		.byte	0x8
 8849 432d 07       		.byte	0x7
 8850 432e 00000000 		.long	.LASF695
 8851 4332 08       		.uleb128 0x8
 8852 4333 2B430000 		.long	0x432b
 8853 4337 1C       		.uleb128 0x1c
 8854 4338 08       		.byte	0x8
 8855 4339 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 296


 8856 433a 00000000 		.long	.LASF696
 8857 433e 1C       		.uleb128 0x1c
 8858 433f 01       		.byte	0x1
 8859 4340 06       		.byte	0x6
 8860 4341 00000000 		.long	.LASF697
 8861 4345 1C       		.uleb128 0x1c
 8862 4346 02       		.byte	0x2
 8863 4347 05       		.byte	0x5
 8864 4348 00000000 		.long	.LASF698
 8865 434c 9901     		.uleb128 0x99
 8866 434e 04       		.byte	0x4
 8867 434f 05       		.byte	0x5
 8868 4350 696E7400 		.string	"int"
 8869 4354 08       		.uleb128 0x8
 8870 4355 4C430000 		.long	0x434c
 8871 4359 1C       		.uleb128 0x1c
 8872 435a 08       		.byte	0x8
 8873 435b 05       		.byte	0x5
 8874 435c 00000000 		.long	.LASF699
 8875 4360 1C       		.uleb128 0x1c
 8876 4361 08       		.byte	0x8
 8877 4362 05       		.byte	0x5
 8878 4363 00000000 		.long	.LASF700
 8879 4367 1C       		.uleb128 0x1c
 8880 4368 10       		.byte	0x10
 8881 4369 04       		.byte	0x4
 8882 436a 00000000 		.long	.LASF701
 8883 436e 1C       		.uleb128 0x1c
 8884 436f 08       		.byte	0x8
 8885 4370 04       		.byte	0x4
 8886 4371 00000000 		.long	.LASF702
 8887 4375 1C       		.uleb128 0x1c
 8888 4376 04       		.byte	0x4
 8889 4377 04       		.byte	0x4
 8890 4378 00000000 		.long	.LASF703
 8891 437c 07       		.uleb128 0x7
 8892 437d A2000000 		.long	0xa2
 8893 4381 07       		.uleb128 0x7
 8894 4382 10010000 		.long	0x110
 8895 4386 1C       		.uleb128 0x1c
 8896 4387 04       		.byte	0x4
 8897 4388 05       		.byte	0x5
 8898 4389 00000000 		.long	.LASF704
 8899 438d 08       		.uleb128 0x8
 8900 438e 86430000 		.long	0x4386
 8901 4392 1C       		.uleb128 0x1c
 8902 4393 01       		.byte	0x1
 8903 4394 07       		.byte	0x7
 8904 4395 00000000 		.long	.LASF705
 8905 4399 1C       		.uleb128 0x1c
 8906 439a 02       		.byte	0x2
 8907 439b 10       		.byte	0x10
 8908 439c 00000000 		.long	.LASF706
 8909 43a0 1C       		.uleb128 0x1c
 8910 43a1 04       		.byte	0x4
 8911 43a2 10       		.byte	0x10
 8912 43a3 00000000 		.long	.LASF707
GAS LISTING x64lin/../common/event.s 			page 297


 8913 43a7 1C       		.uleb128 0x1c
 8914 43a8 10       		.byte	0x10
 8915 43a9 05       		.byte	0x5
 8916 43aa 00000000 		.long	.LASF708
 8917 43ae 3D       		.uleb128 0x3d
 8918 43af 00000000 		.long	.LASF709
 8919 43b3 28       		.byte	0x28
 8920 43b4 27       		.byte	0x27
 8921 43b5 0B       		.byte	0xb
 8922 43b6 C4430000 		.long	0x43c4
 8923 43ba 9A01     		.uleb128 0x9a
 8924 43bc 17       		.byte	0x17
 8925 43bd 3A       		.byte	0x3a
 8926 43be 18       		.byte	0x18
 8927 43bf 1F020000 		.long	0x21f
 8928 43c3 00       		.byte	0
 8929 43c4 1C       		.uleb128 0x1c
 8930 43c5 20       		.byte	0x20
 8931 43c6 03       		.byte	0x3
 8932 43c7 00000000 		.long	.LASF710
 8933 43cb 1C       		.uleb128 0x1c
 8934 43cc 10       		.byte	0x10
 8935 43cd 04       		.byte	0x4
 8936 43ce 00000000 		.long	.LASF711
 8937 43d2 06       		.uleb128 0x6
 8938 43d3 00000000 		.long	.LASF13
 8939 43d7 2E       		.byte	0x2e
 8940 43d8 D1       		.byte	0xd1
 8941 43d9 1B       		.byte	0x1b
 8942 43da 2B430000 		.long	0x432b
 8943 43de 9B01     		.uleb128 0x9b
 8944 43e0 00000000 		.long	.LASF1140
 8945 43e4 18       		.byte	0x18
 8946 43e5 2F       		.byte	0x2f
 8947 43e6 00       		.byte	0
 8948 43e7 14440000 		.long	0x4414
 8949 43eb 53       		.uleb128 0x53
 8950 43ec 00000000 		.long	.LASF712
 8951 43f0 713F0000 		.long	0x3f71
 8952 43f4 00       		.byte	0
 8953 43f5 53       		.uleb128 0x53
 8954 43f6 00000000 		.long	.LASF713
 8955 43fa 713F0000 		.long	0x3f71
 8956 43fe 04       		.byte	0x4
 8957 43ff 53       		.uleb128 0x53
 8958 4400 00000000 		.long	.LASF714
 8959 4404 14440000 		.long	0x4414
 8960 4408 08       		.byte	0x8
 8961 4409 53       		.uleb128 0x53
 8962 440a 00000000 		.long	.LASF715
 8963 440e 14440000 		.long	0x4414
 8964 4412 10       		.byte	0x10
 8965 4413 00       		.byte	0
 8966 4414 9C01     		.uleb128 0x9c
 8967 4416 08       		.byte	0x8
 8968 4417 06       		.uleb128 0x6
 8969 4418 00000000 		.long	.LASF716
GAS LISTING x64lin/../common/event.s 			page 298


 8970 441c 30       		.byte	0x30
 8971 441d 14       		.byte	0x14
 8972 441e 16       		.byte	0x16
 8973 441f 713F0000 		.long	0x3f71
 8974 4423 54       		.uleb128 0x54
 8975 4424 08       		.byte	0x8
 8976 4425 31       		.byte	0x31
 8977 4426 0E       		.byte	0xe
 8978 4427 01       		.byte	0x1
 8979 4428 00000000 		.long	.LASF911
 8980 442c 6E440000 		.long	0x446e
 8981 4430 9D01     		.uleb128 0x9d
 8982 4432 04       		.byte	0x4
 8983 4433 31       		.byte	0x31
 8984 4434 11       		.byte	0x11
 8985 4435 03       		.byte	0x3
 8986 4436 53440000 		.long	0x4453
 8987 443a 31       		.uleb128 0x31
 8988 443b 00000000 		.long	.LASF717
 8989 443f 31       		.byte	0x31
 8990 4440 12       		.byte	0x12
 8991 4441 12       		.byte	0x12
 8992 4442 713F0000 		.long	0x3f71
 8993 4446 31       		.uleb128 0x31
 8994 4447 00000000 		.long	.LASF718
 8995 444b 31       		.byte	0x31
 8996 444c 13       		.byte	0x13
 8997 444d 0A       		.byte	0xa
 8998 444e 6E440000 		.long	0x446e
 8999 4452 00       		.byte	0
 9000 4453 05       		.uleb128 0x5
 9001 4454 00000000 		.long	.LASF719
 9002 4458 31       		.byte	0x31
 9003 4459 0F       		.byte	0xf
 9004 445a 07       		.byte	0x7
 9005 445b 4C430000 		.long	0x434c
 9006 445f 00       		.byte	0
 9007 4460 05       		.uleb128 0x5
 9008 4461 00000000 		.long	.LASF720
 9009 4465 31       		.byte	0x31
 9010 4466 14       		.byte	0x14
 9011 4467 05       		.byte	0x5
 9012 4468 30440000 		.long	0x4430
 9013 446c 04       		.byte	0x4
 9014 446d 00       		.byte	0
 9015 446e 42       		.uleb128 0x42
 9016 446f 7E440000 		.long	0x447e
 9017 4473 7E440000 		.long	0x447e
 9018 4477 43       		.uleb128 0x43
 9019 4478 2B430000 		.long	0x432b
 9020 447c 03       		.byte	0x3
 9021 447d 00       		.byte	0
 9022 447e 1C       		.uleb128 0x1c
 9023 447f 01       		.byte	0x1
 9024 4480 06       		.byte	0x6
 9025 4481 00000000 		.long	.LASF721
 9026 4485 08       		.uleb128 0x8
GAS LISTING x64lin/../common/event.s 			page 299


 9027 4486 7E440000 		.long	0x447e
 9028 448a 06       		.uleb128 0x6
 9029 448b 00000000 		.long	.LASF722
 9030 448f 31       		.byte	0x31
 9031 4490 15       		.byte	0x15
 9032 4491 03       		.byte	0x3
 9033 4492 23440000 		.long	0x4423
 9034 4496 06       		.uleb128 0x6
 9035 4497 00000000 		.long	.LASF723
 9036 449b 32       		.byte	0x32
 9037 449c 06       		.byte	0x6
 9038 449d 15       		.byte	0x15
 9039 449e 8A440000 		.long	0x448a
 9040 44a2 08       		.uleb128 0x8
 9041 44a3 96440000 		.long	0x4496
 9042 44a7 06       		.uleb128 0x6
 9043 44a8 00000000 		.long	.LASF724
 9044 44ac 33       		.byte	0x33
 9045 44ad 05       		.byte	0x5
 9046 44ae 19       		.byte	0x19
 9047 44af B3440000 		.long	0x44b3
 9048 44b3 16       		.uleb128 0x16
 9049 44b4 00000000 		.long	.LASF725
 9050 44b8 D8       		.byte	0xd8
 9051 44b9 34       		.byte	0x34
 9052 44ba 31       		.byte	0x31
 9053 44bb 08       		.byte	0x8
 9054 44bc 3A460000 		.long	0x463a
 9055 44c0 05       		.uleb128 0x5
 9056 44c1 00000000 		.long	.LASF726
 9057 44c5 34       		.byte	0x34
 9058 44c6 33       		.byte	0x33
 9059 44c7 07       		.byte	0x7
 9060 44c8 4C430000 		.long	0x434c
 9061 44cc 00       		.byte	0
 9062 44cd 05       		.uleb128 0x5
 9063 44ce 00000000 		.long	.LASF727
 9064 44d2 34       		.byte	0x34
 9065 44d3 36       		.byte	0x36
 9066 44d4 09       		.byte	0x9
 9067 44d5 76490000 		.long	0x4976
 9068 44d9 08       		.byte	0x8
 9069 44da 05       		.uleb128 0x5
 9070 44db 00000000 		.long	.LASF728
 9071 44df 34       		.byte	0x34
 9072 44e0 37       		.byte	0x37
 9073 44e1 09       		.byte	0x9
 9074 44e2 76490000 		.long	0x4976
 9075 44e6 10       		.byte	0x10
 9076 44e7 05       		.uleb128 0x5
 9077 44e8 00000000 		.long	.LASF729
 9078 44ec 34       		.byte	0x34
 9079 44ed 38       		.byte	0x38
 9080 44ee 09       		.byte	0x9
 9081 44ef 76490000 		.long	0x4976
 9082 44f3 18       		.byte	0x18
 9083 44f4 05       		.uleb128 0x5
GAS LISTING x64lin/../common/event.s 			page 300


 9084 44f5 00000000 		.long	.LASF730
 9085 44f9 34       		.byte	0x34
 9086 44fa 39       		.byte	0x39
 9087 44fb 09       		.byte	0x9
 9088 44fc 76490000 		.long	0x4976
 9089 4500 20       		.byte	0x20
 9090 4501 05       		.uleb128 0x5
 9091 4502 00000000 		.long	.LASF731
 9092 4506 34       		.byte	0x34
 9093 4507 3A       		.byte	0x3a
 9094 4508 09       		.byte	0x9
 9095 4509 76490000 		.long	0x4976
 9096 450d 28       		.byte	0x28
 9097 450e 05       		.uleb128 0x5
 9098 450f 00000000 		.long	.LASF732
 9099 4513 34       		.byte	0x34
 9100 4514 3B       		.byte	0x3b
 9101 4515 09       		.byte	0x9
 9102 4516 76490000 		.long	0x4976
 9103 451a 30       		.byte	0x30
 9104 451b 05       		.uleb128 0x5
 9105 451c 00000000 		.long	.LASF733
 9106 4520 34       		.byte	0x34
 9107 4521 3C       		.byte	0x3c
 9108 4522 09       		.byte	0x9
 9109 4523 76490000 		.long	0x4976
 9110 4527 38       		.byte	0x38
 9111 4528 05       		.uleb128 0x5
 9112 4529 00000000 		.long	.LASF734
 9113 452d 34       		.byte	0x34
 9114 452e 3D       		.byte	0x3d
 9115 452f 09       		.byte	0x9
 9116 4530 76490000 		.long	0x4976
 9117 4534 40       		.byte	0x40
 9118 4535 05       		.uleb128 0x5
 9119 4536 00000000 		.long	.LASF735
 9120 453a 34       		.byte	0x34
 9121 453b 40       		.byte	0x40
 9122 453c 09       		.byte	0x9
 9123 453d 76490000 		.long	0x4976
 9124 4541 48       		.byte	0x48
 9125 4542 05       		.uleb128 0x5
 9126 4543 00000000 		.long	.LASF736
 9127 4547 34       		.byte	0x34
 9128 4548 41       		.byte	0x41
 9129 4549 09       		.byte	0x9
 9130 454a 76490000 		.long	0x4976
 9131 454e 50       		.byte	0x50
 9132 454f 05       		.uleb128 0x5
 9133 4550 00000000 		.long	.LASF737
 9134 4554 34       		.byte	0x34
 9135 4555 42       		.byte	0x42
 9136 4556 09       		.byte	0x9
 9137 4557 76490000 		.long	0x4976
 9138 455b 58       		.byte	0x58
 9139 455c 05       		.uleb128 0x5
 9140 455d 00000000 		.long	.LASF738
GAS LISTING x64lin/../common/event.s 			page 301


 9141 4561 34       		.byte	0x34
 9142 4562 44       		.byte	0x44
 9143 4563 16       		.byte	0x16
 9144 4564 40590000 		.long	0x5940
 9145 4568 60       		.byte	0x60
 9146 4569 05       		.uleb128 0x5
 9147 456a 00000000 		.long	.LASF739
 9148 456e 34       		.byte	0x34
 9149 456f 46       		.byte	0x46
 9150 4570 14       		.byte	0x14
 9151 4571 45590000 		.long	0x5945
 9152 4575 68       		.byte	0x68
 9153 4576 05       		.uleb128 0x5
 9154 4577 00000000 		.long	.LASF740
 9155 457b 34       		.byte	0x34
 9156 457c 48       		.byte	0x48
 9157 457d 07       		.byte	0x7
 9158 457e 4C430000 		.long	0x434c
 9159 4582 70       		.byte	0x70
 9160 4583 05       		.uleb128 0x5
 9161 4584 00000000 		.long	.LASF741
 9162 4588 34       		.byte	0x34
 9163 4589 49       		.byte	0x49
 9164 458a 07       		.byte	0x7
 9165 458b 4C430000 		.long	0x434c
 9166 458f 74       		.byte	0x74
 9167 4590 05       		.uleb128 0x5
 9168 4591 00000000 		.long	.LASF742
 9169 4595 34       		.byte	0x34
 9170 4596 4A       		.byte	0x4a
 9171 4597 0B       		.byte	0xb
 9172 4598 914F0000 		.long	0x4f91
 9173 459c 78       		.byte	0x78
 9174 459d 05       		.uleb128 0x5
 9175 459e 00000000 		.long	.LASF743
 9176 45a2 34       		.byte	0x34
 9177 45a3 4D       		.byte	0x4d
 9178 45a4 12       		.byte	0x12
 9179 45a5 24430000 		.long	0x4324
 9180 45a9 80       		.byte	0x80
 9181 45aa 05       		.uleb128 0x5
 9182 45ab 00000000 		.long	.LASF744
 9183 45af 34       		.byte	0x34
 9184 45b0 4E       		.byte	0x4e
 9185 45b1 0F       		.byte	0xf
 9186 45b2 3E430000 		.long	0x433e
 9187 45b6 82       		.byte	0x82
 9188 45b7 05       		.uleb128 0x5
 9189 45b8 00000000 		.long	.LASF745
 9190 45bc 34       		.byte	0x34
 9191 45bd 4F       		.byte	0x4f
 9192 45be 08       		.byte	0x8
 9193 45bf 4A590000 		.long	0x594a
 9194 45c3 83       		.byte	0x83
 9195 45c4 05       		.uleb128 0x5
 9196 45c5 00000000 		.long	.LASF746
 9197 45c9 34       		.byte	0x34
GAS LISTING x64lin/../common/event.s 			page 302


 9198 45ca 51       		.byte	0x51
 9199 45cb 0F       		.byte	0xf
 9200 45cc 5A590000 		.long	0x595a
 9201 45d0 88       		.byte	0x88
 9202 45d1 05       		.uleb128 0x5
 9203 45d2 00000000 		.long	.LASF747
 9204 45d6 34       		.byte	0x34
 9205 45d7 59       		.byte	0x59
 9206 45d8 0D       		.byte	0xd
 9207 45d9 9D4F0000 		.long	0x4f9d
 9208 45dd 90       		.byte	0x90
 9209 45de 05       		.uleb128 0x5
 9210 45df 00000000 		.long	.LASF748
 9211 45e3 34       		.byte	0x34
 9212 45e4 5B       		.byte	0x5b
 9213 45e5 17       		.byte	0x17
 9214 45e6 64590000 		.long	0x5964
 9215 45ea 98       		.byte	0x98
 9216 45eb 05       		.uleb128 0x5
 9217 45ec 00000000 		.long	.LASF749
 9218 45f0 34       		.byte	0x34
 9219 45f1 5C       		.byte	0x5c
 9220 45f2 19       		.byte	0x19
 9221 45f3 6E590000 		.long	0x596e
 9222 45f7 A0       		.byte	0xa0
 9223 45f8 05       		.uleb128 0x5
 9224 45f9 00000000 		.long	.LASF750
 9225 45fd 34       		.byte	0x34
 9226 45fe 5D       		.byte	0x5d
 9227 45ff 14       		.byte	0x14
 9228 4600 45590000 		.long	0x5945
 9229 4604 A8       		.byte	0xa8
 9230 4605 05       		.uleb128 0x5
 9231 4606 00000000 		.long	.LASF751
 9232 460a 34       		.byte	0x34
 9233 460b 5E       		.byte	0x5e
 9234 460c 09       		.byte	0x9
 9235 460d 14440000 		.long	0x4414
 9236 4611 B0       		.byte	0xb0
 9237 4612 05       		.uleb128 0x5
 9238 4613 00000000 		.long	.LASF752
 9239 4617 34       		.byte	0x34
 9240 4618 5F       		.byte	0x5f
 9241 4619 0A       		.byte	0xa
 9242 461a D2430000 		.long	0x43d2
 9243 461e B8       		.byte	0xb8
 9244 461f 05       		.uleb128 0x5
 9245 4620 00000000 		.long	.LASF753
 9246 4624 34       		.byte	0x34
 9247 4625 60       		.byte	0x60
 9248 4626 07       		.byte	0x7
 9249 4627 4C430000 		.long	0x434c
 9250 462b C0       		.byte	0xc0
 9251 462c 05       		.uleb128 0x5
 9252 462d 00000000 		.long	.LASF754
 9253 4631 34       		.byte	0x34
 9254 4632 62       		.byte	0x62
GAS LISTING x64lin/../common/event.s 			page 303


 9255 4633 08       		.byte	0x8
 9256 4634 73590000 		.long	0x5973
 9257 4638 C4       		.byte	0xc4
 9258 4639 00       		.byte	0
 9259 463a 06       		.uleb128 0x6
 9260 463b 00000000 		.long	.LASF755
 9261 463f 35       		.byte	0x35
 9262 4640 07       		.byte	0x7
 9263 4641 19       		.byte	0x19
 9264 4642 B3440000 		.long	0x44b3
 9265 4646 07       		.uleb128 0x7
 9266 4647 85440000 		.long	0x4485
 9267 464b 0C       		.uleb128 0xc
 9268 464c 00000000 		.long	.LASF756
 9269 4650 36       		.byte	0x36
 9270 4651 3F01     		.value	0x13f
 9271 4653 1C       		.byte	0x1c
 9272 4654 17440000 		.long	0x4417
 9273 4658 62460000 		.long	0x4662
 9274 465c 01       		.uleb128 0x1
 9275 465d 4C430000 		.long	0x434c
 9276 4661 00       		.byte	0
 9277 4662 0C       		.uleb128 0xc
 9278 4663 00000000 		.long	.LASF757
 9279 4667 36       		.byte	0x36
 9280 4668 E802     		.value	0x2e8
 9281 466a 0F       		.byte	0xf
 9282 466b 17440000 		.long	0x4417
 9283 466f 79460000 		.long	0x4679
 9284 4673 01       		.uleb128 0x1
 9285 4674 79460000 		.long	0x4679
 9286 4678 00       		.byte	0
 9287 4679 07       		.uleb128 0x7
 9288 467a A7440000 		.long	0x44a7
 9289 467e 0C       		.uleb128 0xc
 9290 467f 00000000 		.long	.LASF758
 9291 4683 37       		.byte	0x37
 9292 4684 5701     		.value	0x157
 9293 4686 01       		.byte	0x1
 9294 4687 9F460000 		.long	0x469f
 9295 468b 9F460000 		.long	0x469f
 9296 468f 01       		.uleb128 0x1
 9297 4690 9F460000 		.long	0x469f
 9298 4694 01       		.uleb128 0x1
 9299 4695 4C430000 		.long	0x434c
 9300 4699 01       		.uleb128 0x1
 9301 469a 79460000 		.long	0x4679
 9302 469e 00       		.byte	0
 9303 469f 07       		.uleb128 0x7
 9304 46a0 86430000 		.long	0x4386
 9305 46a4 0C       		.uleb128 0xc
 9306 46a5 00000000 		.long	.LASF759
 9307 46a9 36       		.byte	0x36
 9308 46aa F602     		.value	0x2f6
 9309 46ac 0F       		.byte	0xf
 9310 46ad 17440000 		.long	0x4417
 9311 46b1 C0460000 		.long	0x46c0
GAS LISTING x64lin/../common/event.s 			page 304


 9312 46b5 01       		.uleb128 0x1
 9313 46b6 86430000 		.long	0x4386
 9314 46ba 01       		.uleb128 0x1
 9315 46bb 79460000 		.long	0x4679
 9316 46bf 00       		.byte	0
 9317 46c0 0C       		.uleb128 0xc
 9318 46c1 00000000 		.long	.LASF760
 9319 46c5 36       		.byte	0x36
 9320 46c6 0C03     		.value	0x30c
 9321 46c8 0C       		.byte	0xc
 9322 46c9 4C430000 		.long	0x434c
 9323 46cd DC460000 		.long	0x46dc
 9324 46d1 01       		.uleb128 0x1
 9325 46d2 DC460000 		.long	0x46dc
 9326 46d6 01       		.uleb128 0x1
 9327 46d7 79460000 		.long	0x4679
 9328 46db 00       		.byte	0
 9329 46dc 07       		.uleb128 0x7
 9330 46dd 8D430000 		.long	0x438d
 9331 46e1 0C       		.uleb128 0xc
 9332 46e2 00000000 		.long	.LASF761
 9333 46e6 36       		.byte	0x36
 9334 46e7 4C02     		.value	0x24c
 9335 46e9 0C       		.byte	0xc
 9336 46ea 4C430000 		.long	0x434c
 9337 46ee FD460000 		.long	0x46fd
 9338 46f2 01       		.uleb128 0x1
 9339 46f3 79460000 		.long	0x4679
 9340 46f7 01       		.uleb128 0x1
 9341 46f8 4C430000 		.long	0x434c
 9342 46fc 00       		.byte	0
 9343 46fd 0C       		.uleb128 0xc
 9344 46fe 00000000 		.long	.LASF762
 9345 4702 37       		.byte	0x37
 9346 4703 3001     		.value	0x130
 9347 4705 01       		.byte	0x1
 9348 4706 4C430000 		.long	0x434c
 9349 470a 1A470000 		.long	0x471a
 9350 470e 01       		.uleb128 0x1
 9351 470f 79460000 		.long	0x4679
 9352 4713 01       		.uleb128 0x1
 9353 4714 DC460000 		.long	0x46dc
 9354 4718 39       		.uleb128 0x39
 9355 4719 00       		.byte	0
 9356 471a 14       		.uleb128 0x14
 9357 471b 00000000 		.long	.LASF763
 9358 471f 36       		.byte	0x36
 9359 4720 9102     		.value	0x291
 9360 4722 0C       		.byte	0xc
 9361 4723 00000000 		.long	.LASF764
 9362 4727 4C430000 		.long	0x434c
 9363 472b 3B470000 		.long	0x473b
 9364 472f 01       		.uleb128 0x1
 9365 4730 79460000 		.long	0x4679
 9366 4734 01       		.uleb128 0x1
 9367 4735 DC460000 		.long	0x46dc
 9368 4739 39       		.uleb128 0x39
GAS LISTING x64lin/../common/event.s 			page 305


 9369 473a 00       		.byte	0
 9370 473b 0C       		.uleb128 0xc
 9371 473c 00000000 		.long	.LASF765
 9372 4740 36       		.byte	0x36
 9373 4741 E902     		.value	0x2e9
 9374 4743 0F       		.byte	0xf
 9375 4744 17440000 		.long	0x4417
 9376 4748 52470000 		.long	0x4752
 9377 474c 01       		.uleb128 0x1
 9378 474d 79460000 		.long	0x4679
 9379 4751 00       		.byte	0
 9380 4752 72       		.uleb128 0x72
 9381 4753 00000000 		.long	.LASF909
 9382 4757 36       		.byte	0x36
 9383 4758 EF02     		.value	0x2ef
 9384 475a 0F       		.byte	0xf
 9385 475b 17440000 		.long	0x4417
 9386 475f 0C       		.uleb128 0xc
 9387 4760 00000000 		.long	.LASF766
 9388 4764 36       		.byte	0x36
 9389 4765 4A01     		.value	0x14a
 9390 4767 1C       		.byte	0x1c
 9391 4768 D2430000 		.long	0x43d2
 9392 476c 80470000 		.long	0x4780
 9393 4770 01       		.uleb128 0x1
 9394 4771 46460000 		.long	0x4646
 9395 4775 01       		.uleb128 0x1
 9396 4776 D2430000 		.long	0x43d2
 9397 477a 01       		.uleb128 0x1
 9398 477b 80470000 		.long	0x4780
 9399 477f 00       		.byte	0
 9400 4780 07       		.uleb128 0x7
 9401 4781 96440000 		.long	0x4496
 9402 4785 0C       		.uleb128 0xc
 9403 4786 00000000 		.long	.LASF767
 9404 478a 36       		.byte	0x36
 9405 478b 2901     		.value	0x129
 9406 478d 0F       		.byte	0xf
 9407 478e D2430000 		.long	0x43d2
 9408 4792 AB470000 		.long	0x47ab
 9409 4796 01       		.uleb128 0x1
 9410 4797 9F460000 		.long	0x469f
 9411 479b 01       		.uleb128 0x1
 9412 479c 46460000 		.long	0x4646
 9413 47a0 01       		.uleb128 0x1
 9414 47a1 D2430000 		.long	0x43d2
 9415 47a5 01       		.uleb128 0x1
 9416 47a6 80470000 		.long	0x4780
 9417 47aa 00       		.byte	0
 9418 47ab 0C       		.uleb128 0xc
 9419 47ac 00000000 		.long	.LASF768
 9420 47b0 36       		.byte	0x36
 9421 47b1 2501     		.value	0x125
 9422 47b3 0C       		.byte	0xc
 9423 47b4 4C430000 		.long	0x434c
 9424 47b8 C2470000 		.long	0x47c2
 9425 47bc 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 306


 9426 47bd C2470000 		.long	0x47c2
 9427 47c1 00       		.byte	0
 9428 47c2 07       		.uleb128 0x7
 9429 47c3 A2440000 		.long	0x44a2
 9430 47c7 0C       		.uleb128 0xc
 9431 47c8 00000000 		.long	.LASF769
 9432 47cc 37       		.byte	0x37
 9433 47cd A901     		.value	0x1a9
 9434 47cf 1C       		.byte	0x1c
 9435 47d0 D2430000 		.long	0x43d2
 9436 47d4 ED470000 		.long	0x47ed
 9437 47d8 01       		.uleb128 0x1
 9438 47d9 9F460000 		.long	0x469f
 9439 47dd 01       		.uleb128 0x1
 9440 47de ED470000 		.long	0x47ed
 9441 47e2 01       		.uleb128 0x1
 9442 47e3 D2430000 		.long	0x43d2
 9443 47e7 01       		.uleb128 0x1
 9444 47e8 80470000 		.long	0x4780
 9445 47ec 00       		.byte	0
 9446 47ed 07       		.uleb128 0x7
 9447 47ee 46460000 		.long	0x4646
 9448 47f2 0C       		.uleb128 0xc
 9449 47f3 00000000 		.long	.LASF770
 9450 47f7 36       		.byte	0x36
 9451 47f8 F702     		.value	0x2f7
 9452 47fa 0F       		.byte	0xf
 9453 47fb 17440000 		.long	0x4417
 9454 47ff 0E480000 		.long	0x480e
 9455 4803 01       		.uleb128 0x1
 9456 4804 86430000 		.long	0x4386
 9457 4808 01       		.uleb128 0x1
 9458 4809 79460000 		.long	0x4679
 9459 480d 00       		.byte	0
 9460 480e 0C       		.uleb128 0xc
 9461 480f 00000000 		.long	.LASF771
 9462 4813 36       		.byte	0x36
 9463 4814 FD02     		.value	0x2fd
 9464 4816 0F       		.byte	0xf
 9465 4817 17440000 		.long	0x4417
 9466 481b 25480000 		.long	0x4825
 9467 481f 01       		.uleb128 0x1
 9468 4820 86430000 		.long	0x4386
 9469 4824 00       		.byte	0
 9470 4825 10       		.uleb128 0x10
 9471 4826 00000000 		.long	.LASF772
 9472 482a 37       		.byte	0x37
 9473 482b F3       		.byte	0xf3
 9474 482c 1C       		.byte	0x1c
 9475 482d 4C430000 		.long	0x434c
 9476 4831 46480000 		.long	0x4846
 9477 4835 01       		.uleb128 0x1
 9478 4836 9F460000 		.long	0x469f
 9479 483a 01       		.uleb128 0x1
 9480 483b D2430000 		.long	0x43d2
 9481 483f 01       		.uleb128 0x1
 9482 4840 DC460000 		.long	0x46dc
GAS LISTING x64lin/../common/event.s 			page 307


 9483 4844 39       		.uleb128 0x39
 9484 4845 00       		.byte	0
 9485 4846 14       		.uleb128 0x14
 9486 4847 00000000 		.long	.LASF773
 9487 484b 36       		.byte	0x36
 9488 484c 9802     		.value	0x298
 9489 484e 0C       		.byte	0xc
 9490 484f 00000000 		.long	.LASF774
 9491 4853 4C430000 		.long	0x434c
 9492 4857 67480000 		.long	0x4867
 9493 485b 01       		.uleb128 0x1
 9494 485c DC460000 		.long	0x46dc
 9495 4860 01       		.uleb128 0x1
 9496 4861 DC460000 		.long	0x46dc
 9497 4865 39       		.uleb128 0x39
 9498 4866 00       		.byte	0
 9499 4867 0C       		.uleb128 0xc
 9500 4868 00000000 		.long	.LASF775
 9501 486c 36       		.byte	0x36
 9502 486d 1403     		.value	0x314
 9503 486f 0F       		.byte	0xf
 9504 4870 17440000 		.long	0x4417
 9505 4874 83480000 		.long	0x4883
 9506 4878 01       		.uleb128 0x1
 9507 4879 17440000 		.long	0x4417
 9508 487d 01       		.uleb128 0x1
 9509 487e 79460000 		.long	0x4679
 9510 4882 00       		.byte	0
 9511 4883 0C       		.uleb128 0xc
 9512 4884 00000000 		.long	.LASF776
 9513 4888 37       		.byte	0x37
 9514 4889 4301     		.value	0x143
 9515 488b 01       		.byte	0x1
 9516 488c 4C430000 		.long	0x434c
 9517 4890 A4480000 		.long	0x48a4
 9518 4894 01       		.uleb128 0x1
 9519 4895 79460000 		.long	0x4679
 9520 4899 01       		.uleb128 0x1
 9521 489a DC460000 		.long	0x46dc
 9522 489e 01       		.uleb128 0x1
 9523 489f A4480000 		.long	0x48a4
 9524 48a3 00       		.byte	0
 9525 48a4 07       		.uleb128 0x7
 9526 48a5 DE430000 		.long	0x43de
 9527 48a9 14       		.uleb128 0x14
 9528 48aa 00000000 		.long	.LASF777
 9529 48ae 36       		.byte	0x36
 9530 48af C702     		.value	0x2c7
 9531 48b1 0C       		.byte	0xc
 9532 48b2 00000000 		.long	.LASF778
 9533 48b6 4C430000 		.long	0x434c
 9534 48ba CE480000 		.long	0x48ce
 9535 48be 01       		.uleb128 0x1
 9536 48bf 79460000 		.long	0x4679
 9537 48c3 01       		.uleb128 0x1
 9538 48c4 DC460000 		.long	0x46dc
 9539 48c8 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 308


 9540 48c9 A4480000 		.long	0x48a4
 9541 48cd 00       		.byte	0
 9542 48ce 0C       		.uleb128 0xc
 9543 48cf 00000000 		.long	.LASF779
 9544 48d3 37       		.byte	0x37
 9545 48d4 1101     		.value	0x111
 9546 48d6 1C       		.byte	0x1c
 9547 48d7 4C430000 		.long	0x434c
 9548 48db F4480000 		.long	0x48f4
 9549 48df 01       		.uleb128 0x1
 9550 48e0 9F460000 		.long	0x469f
 9551 48e4 01       		.uleb128 0x1
 9552 48e5 D2430000 		.long	0x43d2
 9553 48e9 01       		.uleb128 0x1
 9554 48ea DC460000 		.long	0x46dc
 9555 48ee 01       		.uleb128 0x1
 9556 48ef A4480000 		.long	0x48a4
 9557 48f3 00       		.byte	0
 9558 48f4 14       		.uleb128 0x14
 9559 48f5 00000000 		.long	.LASF780
 9560 48f9 36       		.byte	0x36
 9561 48fa CE02     		.value	0x2ce
 9562 48fc 0C       		.byte	0xc
 9563 48fd 00000000 		.long	.LASF781
 9564 4901 4C430000 		.long	0x434c
 9565 4905 19490000 		.long	0x4919
 9566 4909 01       		.uleb128 0x1
 9567 490a DC460000 		.long	0x46dc
 9568 490e 01       		.uleb128 0x1
 9569 490f DC460000 		.long	0x46dc
 9570 4913 01       		.uleb128 0x1
 9571 4914 A4480000 		.long	0x48a4
 9572 4918 00       		.byte	0
 9573 4919 0C       		.uleb128 0xc
 9574 491a 00000000 		.long	.LASF782
 9575 491e 37       		.byte	0x37
 9576 491f 3D01     		.value	0x13d
 9577 4921 01       		.byte	0x1
 9578 4922 4C430000 		.long	0x434c
 9579 4926 35490000 		.long	0x4935
 9580 492a 01       		.uleb128 0x1
 9581 492b DC460000 		.long	0x46dc
 9582 492f 01       		.uleb128 0x1
 9583 4930 A4480000 		.long	0x48a4
 9584 4934 00       		.byte	0
 9585 4935 14       		.uleb128 0x14
 9586 4936 00000000 		.long	.LASF783
 9587 493a 36       		.byte	0x36
 9588 493b CB02     		.value	0x2cb
 9589 493d 0C       		.byte	0xc
 9590 493e 00000000 		.long	.LASF784
 9591 4942 4C430000 		.long	0x434c
 9592 4946 55490000 		.long	0x4955
 9593 494a 01       		.uleb128 0x1
 9594 494b DC460000 		.long	0x46dc
 9595 494f 01       		.uleb128 0x1
 9596 4950 A4480000 		.long	0x48a4
GAS LISTING x64lin/../common/event.s 			page 309


 9597 4954 00       		.byte	0
 9598 4955 0C       		.uleb128 0xc
 9599 4956 00000000 		.long	.LASF785
 9600 495a 37       		.byte	0x37
 9601 495b 8601     		.value	0x186
 9602 495d 1C       		.byte	0x1c
 9603 495e D2430000 		.long	0x43d2
 9604 4962 76490000 		.long	0x4976
 9605 4966 01       		.uleb128 0x1
 9606 4967 76490000 		.long	0x4976
 9607 496b 01       		.uleb128 0x1
 9608 496c 86430000 		.long	0x4386
 9609 4970 01       		.uleb128 0x1
 9610 4971 80470000 		.long	0x4780
 9611 4975 00       		.byte	0
 9612 4976 07       		.uleb128 0x7
 9613 4977 7E440000 		.long	0x447e
 9614 497b 10       		.uleb128 0x10
 9615 497c 00000000 		.long	.LASF786
 9616 4980 37       		.byte	0x37
 9617 4981 CB       		.byte	0xcb
 9618 4982 1C       		.byte	0x1c
 9619 4983 9F460000 		.long	0x469f
 9620 4987 96490000 		.long	0x4996
 9621 498b 01       		.uleb128 0x1
 9622 498c 9F460000 		.long	0x469f
 9623 4990 01       		.uleb128 0x1
 9624 4991 DC460000 		.long	0x46dc
 9625 4995 00       		.byte	0
 9626 4996 10       		.uleb128 0x10
 9627 4997 00000000 		.long	.LASF787
 9628 499b 36       		.byte	0x36
 9629 499c 6A       		.byte	0x6a
 9630 499d 0C       		.byte	0xc
 9631 499e 4C430000 		.long	0x434c
 9632 49a2 B1490000 		.long	0x49b1
 9633 49a6 01       		.uleb128 0x1
 9634 49a7 DC460000 		.long	0x46dc
 9635 49ab 01       		.uleb128 0x1
 9636 49ac DC460000 		.long	0x46dc
 9637 49b0 00       		.byte	0
 9638 49b1 10       		.uleb128 0x10
 9639 49b2 00000000 		.long	.LASF788
 9640 49b6 36       		.byte	0x36
 9641 49b7 83       		.byte	0x83
 9642 49b8 0C       		.byte	0xc
 9643 49b9 4C430000 		.long	0x434c
 9644 49bd CC490000 		.long	0x49cc
 9645 49c1 01       		.uleb128 0x1
 9646 49c2 DC460000 		.long	0x46dc
 9647 49c6 01       		.uleb128 0x1
 9648 49c7 DC460000 		.long	0x46dc
 9649 49cb 00       		.byte	0
 9650 49cc 10       		.uleb128 0x10
 9651 49cd 00000000 		.long	.LASF789
 9652 49d1 37       		.byte	0x37
 9653 49d2 79       		.byte	0x79
GAS LISTING x64lin/../common/event.s 			page 310


 9654 49d3 1C       		.byte	0x1c
 9655 49d4 9F460000 		.long	0x469f
 9656 49d8 E7490000 		.long	0x49e7
 9657 49dc 01       		.uleb128 0x1
 9658 49dd 9F460000 		.long	0x469f
 9659 49e1 01       		.uleb128 0x1
 9660 49e2 DC460000 		.long	0x46dc
 9661 49e6 00       		.byte	0
 9662 49e7 10       		.uleb128 0x10
 9663 49e8 00000000 		.long	.LASF790
 9664 49ec 36       		.byte	0x36
 9665 49ed BC       		.byte	0xbc
 9666 49ee 0F       		.byte	0xf
 9667 49ef D2430000 		.long	0x43d2
 9668 49f3 024A0000 		.long	0x4a02
 9669 49f7 01       		.uleb128 0x1
 9670 49f8 DC460000 		.long	0x46dc
 9671 49fc 01       		.uleb128 0x1
 9672 49fd DC460000 		.long	0x46dc
 9673 4a01 00       		.byte	0
 9674 4a02 0C       		.uleb128 0xc
 9675 4a03 00000000 		.long	.LASF791
 9676 4a07 36       		.byte	0x36
 9677 4a08 5403     		.value	0x354
 9678 4a0a 0F       		.byte	0xf
 9679 4a0b D2430000 		.long	0x43d2
 9680 4a0f 284A0000 		.long	0x4a28
 9681 4a13 01       		.uleb128 0x1
 9682 4a14 9F460000 		.long	0x469f
 9683 4a18 01       		.uleb128 0x1
 9684 4a19 D2430000 		.long	0x43d2
 9685 4a1d 01       		.uleb128 0x1
 9686 4a1e DC460000 		.long	0x46dc
 9687 4a22 01       		.uleb128 0x1
 9688 4a23 284A0000 		.long	0x4a28
 9689 4a27 00       		.byte	0
 9690 4a28 07       		.uleb128 0x7
 9691 4a29 CA4A0000 		.long	0x4aca
 9692 4a2d 9E01     		.uleb128 0x9e
 9693 4a2f 746D00   		.string	"tm"
 9694 4a32 38       		.byte	0x38
 9695 4a33 38       		.byte	0x38
 9696 4a34 07       		.byte	0x7
 9697 4a35 08       		.byte	0x8
 9698 4a36 CA4A0000 		.long	0x4aca
 9699 4a3a 05       		.uleb128 0x5
 9700 4a3b 00000000 		.long	.LASF792
 9701 4a3f 38       		.byte	0x38
 9702 4a40 09       		.byte	0x9
 9703 4a41 07       		.byte	0x7
 9704 4a42 4C430000 		.long	0x434c
 9705 4a46 00       		.byte	0
 9706 4a47 05       		.uleb128 0x5
 9707 4a48 00000000 		.long	.LASF793
 9708 4a4c 38       		.byte	0x38
 9709 4a4d 0A       		.byte	0xa
 9710 4a4e 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 311


 9711 4a4f 4C430000 		.long	0x434c
 9712 4a53 04       		.byte	0x4
 9713 4a54 05       		.uleb128 0x5
 9714 4a55 00000000 		.long	.LASF794
 9715 4a59 38       		.byte	0x38
 9716 4a5a 0B       		.byte	0xb
 9717 4a5b 07       		.byte	0x7
 9718 4a5c 4C430000 		.long	0x434c
 9719 4a60 08       		.byte	0x8
 9720 4a61 05       		.uleb128 0x5
 9721 4a62 00000000 		.long	.LASF795
 9722 4a66 38       		.byte	0x38
 9723 4a67 0C       		.byte	0xc
 9724 4a68 07       		.byte	0x7
 9725 4a69 4C430000 		.long	0x434c
 9726 4a6d 0C       		.byte	0xc
 9727 4a6e 05       		.uleb128 0x5
 9728 4a6f 00000000 		.long	.LASF796
 9729 4a73 38       		.byte	0x38
 9730 4a74 0D       		.byte	0xd
 9731 4a75 07       		.byte	0x7
 9732 4a76 4C430000 		.long	0x434c
 9733 4a7a 10       		.byte	0x10
 9734 4a7b 05       		.uleb128 0x5
 9735 4a7c 00000000 		.long	.LASF797
 9736 4a80 38       		.byte	0x38
 9737 4a81 0E       		.byte	0xe
 9738 4a82 07       		.byte	0x7
 9739 4a83 4C430000 		.long	0x434c
 9740 4a87 14       		.byte	0x14
 9741 4a88 05       		.uleb128 0x5
 9742 4a89 00000000 		.long	.LASF798
 9743 4a8d 38       		.byte	0x38
 9744 4a8e 0F       		.byte	0xf
 9745 4a8f 07       		.byte	0x7
 9746 4a90 4C430000 		.long	0x434c
 9747 4a94 18       		.byte	0x18
 9748 4a95 05       		.uleb128 0x5
 9749 4a96 00000000 		.long	.LASF799
 9750 4a9a 38       		.byte	0x38
 9751 4a9b 10       		.byte	0x10
 9752 4a9c 07       		.byte	0x7
 9753 4a9d 4C430000 		.long	0x434c
 9754 4aa1 1C       		.byte	0x1c
 9755 4aa2 05       		.uleb128 0x5
 9756 4aa3 00000000 		.long	.LASF800
 9757 4aa7 38       		.byte	0x38
 9758 4aa8 11       		.byte	0x11
 9759 4aa9 07       		.byte	0x7
 9760 4aaa 4C430000 		.long	0x434c
 9761 4aae 20       		.byte	0x20
 9762 4aaf 05       		.uleb128 0x5
 9763 4ab0 00000000 		.long	.LASF801
 9764 4ab4 38       		.byte	0x38
 9765 4ab5 14       		.byte	0x14
 9766 4ab6 0C       		.byte	0xc
 9767 4ab7 59430000 		.long	0x4359
GAS LISTING x64lin/../common/event.s 			page 312


 9768 4abb 28       		.byte	0x28
 9769 4abc 05       		.uleb128 0x5
 9770 4abd 00000000 		.long	.LASF802
 9771 4ac1 38       		.byte	0x38
 9772 4ac2 15       		.byte	0x15
 9773 4ac3 0F       		.byte	0xf
 9774 4ac4 46460000 		.long	0x4646
 9775 4ac8 30       		.byte	0x30
 9776 4ac9 00       		.byte	0
 9777 4aca 08       		.uleb128 0x8
 9778 4acb 2D4A0000 		.long	0x4a2d
 9779 4acf 10       		.uleb128 0x10
 9780 4ad0 00000000 		.long	.LASF803
 9781 4ad4 36       		.byte	0x36
 9782 4ad5 DF       		.byte	0xdf
 9783 4ad6 0F       		.byte	0xf
 9784 4ad7 D2430000 		.long	0x43d2
 9785 4adb E54A0000 		.long	0x4ae5
 9786 4adf 01       		.uleb128 0x1
 9787 4ae0 DC460000 		.long	0x46dc
 9788 4ae4 00       		.byte	0
 9789 4ae5 10       		.uleb128 0x10
 9790 4ae6 00000000 		.long	.LASF804
 9791 4aea 37       		.byte	0x37
 9792 4aeb DD       		.byte	0xdd
 9793 4aec 1C       		.byte	0x1c
 9794 4aed 9F460000 		.long	0x469f
 9795 4af1 054B0000 		.long	0x4b05
 9796 4af5 01       		.uleb128 0x1
 9797 4af6 9F460000 		.long	0x469f
 9798 4afa 01       		.uleb128 0x1
 9799 4afb DC460000 		.long	0x46dc
 9800 4aff 01       		.uleb128 0x1
 9801 4b00 D2430000 		.long	0x43d2
 9802 4b04 00       		.byte	0
 9803 4b05 10       		.uleb128 0x10
 9804 4b06 00000000 		.long	.LASF805
 9805 4b0a 36       		.byte	0x36
 9806 4b0b 6D       		.byte	0x6d
 9807 4b0c 0C       		.byte	0xc
 9808 4b0d 4C430000 		.long	0x434c
 9809 4b11 254B0000 		.long	0x4b25
 9810 4b15 01       		.uleb128 0x1
 9811 4b16 DC460000 		.long	0x46dc
 9812 4b1a 01       		.uleb128 0x1
 9813 4b1b DC460000 		.long	0x46dc
 9814 4b1f 01       		.uleb128 0x1
 9815 4b20 D2430000 		.long	0x43d2
 9816 4b24 00       		.byte	0
 9817 4b25 10       		.uleb128 0x10
 9818 4b26 00000000 		.long	.LASF806
 9819 4b2a 37       		.byte	0x37
 9820 4b2b A2       		.byte	0xa2
 9821 4b2c 1C       		.byte	0x1c
 9822 4b2d 9F460000 		.long	0x469f
 9823 4b31 454B0000 		.long	0x4b45
 9824 4b35 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 313


 9825 4b36 9F460000 		.long	0x469f
 9826 4b3a 01       		.uleb128 0x1
 9827 4b3b DC460000 		.long	0x46dc
 9828 4b3f 01       		.uleb128 0x1
 9829 4b40 D2430000 		.long	0x43d2
 9830 4b44 00       		.byte	0
 9831 4b45 0C       		.uleb128 0xc
 9832 4b46 00000000 		.long	.LASF807
 9833 4b4a 37       		.byte	0x37
 9834 4b4b C301     		.value	0x1c3
 9835 4b4d 1C       		.byte	0x1c
 9836 4b4e D2430000 		.long	0x43d2
 9837 4b52 6B4B0000 		.long	0x4b6b
 9838 4b56 01       		.uleb128 0x1
 9839 4b57 76490000 		.long	0x4976
 9840 4b5b 01       		.uleb128 0x1
 9841 4b5c 6B4B0000 		.long	0x4b6b
 9842 4b60 01       		.uleb128 0x1
 9843 4b61 D2430000 		.long	0x43d2
 9844 4b65 01       		.uleb128 0x1
 9845 4b66 80470000 		.long	0x4780
 9846 4b6a 00       		.byte	0
 9847 4b6b 07       		.uleb128 0x7
 9848 4b6c DC460000 		.long	0x46dc
 9849 4b70 10       		.uleb128 0x10
 9850 4b71 00000000 		.long	.LASF808
 9851 4b75 36       		.byte	0x36
 9852 4b76 C0       		.byte	0xc0
 9853 4b77 0F       		.byte	0xf
 9854 4b78 D2430000 		.long	0x43d2
 9855 4b7c 8B4B0000 		.long	0x4b8b
 9856 4b80 01       		.uleb128 0x1
 9857 4b81 DC460000 		.long	0x46dc
 9858 4b85 01       		.uleb128 0x1
 9859 4b86 DC460000 		.long	0x46dc
 9860 4b8a 00       		.byte	0
 9861 4b8b 0C       		.uleb128 0xc
 9862 4b8c 00000000 		.long	.LASF809
 9863 4b90 36       		.byte	0x36
 9864 4b91 7A01     		.value	0x17a
 9865 4b93 0F       		.byte	0xf
 9866 4b94 6E430000 		.long	0x436e
 9867 4b98 A74B0000 		.long	0x4ba7
 9868 4b9c 01       		.uleb128 0x1
 9869 4b9d DC460000 		.long	0x46dc
 9870 4ba1 01       		.uleb128 0x1
 9871 4ba2 A74B0000 		.long	0x4ba7
 9872 4ba6 00       		.byte	0
 9873 4ba7 07       		.uleb128 0x7
 9874 4ba8 9F460000 		.long	0x469f
 9875 4bac 0C       		.uleb128 0xc
 9876 4bad 00000000 		.long	.LASF810
 9877 4bb1 36       		.byte	0x36
 9878 4bb2 7F01     		.value	0x17f
 9879 4bb4 0E       		.byte	0xe
 9880 4bb5 75430000 		.long	0x4375
 9881 4bb9 C84B0000 		.long	0x4bc8
GAS LISTING x64lin/../common/event.s 			page 314


 9882 4bbd 01       		.uleb128 0x1
 9883 4bbe DC460000 		.long	0x46dc
 9884 4bc2 01       		.uleb128 0x1
 9885 4bc3 A74B0000 		.long	0x4ba7
 9886 4bc7 00       		.byte	0
 9887 4bc8 10       		.uleb128 0x10
 9888 4bc9 00000000 		.long	.LASF811
 9889 4bcd 36       		.byte	0x36
 9890 4bce DA       		.byte	0xda
 9891 4bcf 11       		.byte	0x11
 9892 4bd0 9F460000 		.long	0x469f
 9893 4bd4 E84B0000 		.long	0x4be8
 9894 4bd8 01       		.uleb128 0x1
 9895 4bd9 9F460000 		.long	0x469f
 9896 4bdd 01       		.uleb128 0x1
 9897 4bde DC460000 		.long	0x46dc
 9898 4be2 01       		.uleb128 0x1
 9899 4be3 A74B0000 		.long	0x4ba7
 9900 4be7 00       		.byte	0
 9901 4be8 0C       		.uleb128 0xc
 9902 4be9 00000000 		.long	.LASF812
 9903 4bed 36       		.byte	0x36
 9904 4bee AD01     		.value	0x1ad
 9905 4bf0 11       		.byte	0x11
 9906 4bf1 59430000 		.long	0x4359
 9907 4bf5 094C0000 		.long	0x4c09
 9908 4bf9 01       		.uleb128 0x1
 9909 4bfa DC460000 		.long	0x46dc
 9910 4bfe 01       		.uleb128 0x1
 9911 4bff A74B0000 		.long	0x4ba7
 9912 4c03 01       		.uleb128 0x1
 9913 4c04 4C430000 		.long	0x434c
 9914 4c08 00       		.byte	0
 9915 4c09 0C       		.uleb128 0xc
 9916 4c0a 00000000 		.long	.LASF813
 9917 4c0e 36       		.byte	0x36
 9918 4c0f B201     		.value	0x1b2
 9919 4c11 1A       		.byte	0x1a
 9920 4c12 2B430000 		.long	0x432b
 9921 4c16 2A4C0000 		.long	0x4c2a
 9922 4c1a 01       		.uleb128 0x1
 9923 4c1b DC460000 		.long	0x46dc
 9924 4c1f 01       		.uleb128 0x1
 9925 4c20 A74B0000 		.long	0x4ba7
 9926 4c24 01       		.uleb128 0x1
 9927 4c25 4C430000 		.long	0x434c
 9928 4c29 00       		.byte	0
 9929 4c2a 10       		.uleb128 0x10
 9930 4c2b 00000000 		.long	.LASF814
 9931 4c2f 36       		.byte	0x36
 9932 4c30 87       		.byte	0x87
 9933 4c31 0F       		.byte	0xf
 9934 4c32 D2430000 		.long	0x43d2
 9935 4c36 4A4C0000 		.long	0x4c4a
 9936 4c3a 01       		.uleb128 0x1
 9937 4c3b 9F460000 		.long	0x469f
 9938 4c3f 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 315


 9939 4c40 DC460000 		.long	0x46dc
 9940 4c44 01       		.uleb128 0x1
 9941 4c45 D2430000 		.long	0x43d2
 9942 4c49 00       		.byte	0
 9943 4c4a 0C       		.uleb128 0xc
 9944 4c4b 00000000 		.long	.LASF815
 9945 4c4f 36       		.byte	0x36
 9946 4c50 4501     		.value	0x145
 9947 4c52 1C       		.byte	0x1c
 9948 4c53 4C430000 		.long	0x434c
 9949 4c57 614C0000 		.long	0x4c61
 9950 4c5b 01       		.uleb128 0x1
 9951 4c5c 17440000 		.long	0x4417
 9952 4c60 00       		.byte	0
 9953 4c61 0C       		.uleb128 0xc
 9954 4c62 00000000 		.long	.LASF816
 9955 4c66 36       		.byte	0x36
 9956 4c67 0301     		.value	0x103
 9957 4c69 0C       		.byte	0xc
 9958 4c6a 4C430000 		.long	0x434c
 9959 4c6e 824C0000 		.long	0x4c82
 9960 4c72 01       		.uleb128 0x1
 9961 4c73 DC460000 		.long	0x46dc
 9962 4c77 01       		.uleb128 0x1
 9963 4c78 DC460000 		.long	0x46dc
 9964 4c7c 01       		.uleb128 0x1
 9965 4c7d D2430000 		.long	0x43d2
 9966 4c81 00       		.byte	0
 9967 4c82 10       		.uleb128 0x10
 9968 4c83 00000000 		.long	.LASF817
 9969 4c87 37       		.byte	0x37
 9970 4c88 27       		.byte	0x27
 9971 4c89 1C       		.byte	0x1c
 9972 4c8a 9F460000 		.long	0x469f
 9973 4c8e A24C0000 		.long	0x4ca2
 9974 4c92 01       		.uleb128 0x1
 9975 4c93 9F460000 		.long	0x469f
 9976 4c97 01       		.uleb128 0x1
 9977 4c98 DC460000 		.long	0x46dc
 9978 4c9c 01       		.uleb128 0x1
 9979 4c9d D2430000 		.long	0x43d2
 9980 4ca1 00       		.byte	0
 9981 4ca2 10       		.uleb128 0x10
 9982 4ca3 00000000 		.long	.LASF818
 9983 4ca7 37       		.byte	0x37
 9984 4ca8 3C       		.byte	0x3c
 9985 4ca9 1C       		.byte	0x1c
 9986 4caa 9F460000 		.long	0x469f
 9987 4cae C24C0000 		.long	0x4cc2
 9988 4cb2 01       		.uleb128 0x1
 9989 4cb3 9F460000 		.long	0x469f
 9990 4cb7 01       		.uleb128 0x1
 9991 4cb8 DC460000 		.long	0x46dc
 9992 4cbc 01       		.uleb128 0x1
 9993 4cbd D2430000 		.long	0x43d2
 9994 4cc1 00       		.byte	0
 9995 4cc2 10       		.uleb128 0x10
GAS LISTING x64lin/../common/event.s 			page 316


 9996 4cc3 00000000 		.long	.LASF819
 9997 4cc7 37       		.byte	0x37
 9998 4cc8 69       		.byte	0x69
 9999 4cc9 1C       		.byte	0x1c
 10000 4cca 9F460000 		.long	0x469f
 10001 4cce E24C0000 		.long	0x4ce2
 10002 4cd2 01       		.uleb128 0x1
 10003 4cd3 9F460000 		.long	0x469f
 10004 4cd7 01       		.uleb128 0x1
 10005 4cd8 86430000 		.long	0x4386
 10006 4cdc 01       		.uleb128 0x1
 10007 4cdd D2430000 		.long	0x43d2
 10008 4ce1 00       		.byte	0
 10009 4ce2 0C       		.uleb128 0xc
 10010 4ce3 00000000 		.long	.LASF820
 10011 4ce7 37       		.byte	0x37
 10012 4ce8 2A01     		.value	0x12a
 10013 4cea 01       		.byte	0x1
 10014 4ceb 4C430000 		.long	0x434c
 10015 4cef FA4C0000 		.long	0x4cfa
 10016 4cf3 01       		.uleb128 0x1
 10017 4cf4 DC460000 		.long	0x46dc
 10018 4cf8 39       		.uleb128 0x39
 10019 4cf9 00       		.byte	0
 10020 4cfa 14       		.uleb128 0x14
 10021 4cfb 00000000 		.long	.LASF821
 10022 4cff 36       		.byte	0x36
 10023 4d00 9502     		.value	0x295
 10024 4d02 0C       		.byte	0xc
 10025 4d03 00000000 		.long	.LASF822
 10026 4d07 4C430000 		.long	0x434c
 10027 4d0b 164D0000 		.long	0x4d16
 10028 4d0f 01       		.uleb128 0x1
 10029 4d10 DC460000 		.long	0x46dc
 10030 4d14 39       		.uleb128 0x39
 10031 4d15 00       		.byte	0
 10032 4d16 1A       		.uleb128 0x1a
 10033 4d17 00000000 		.long	.LASF823
 10034 4d1b 36       		.byte	0x36
 10035 4d1c A2       		.byte	0xa2
 10036 4d1d 1D       		.byte	0x1d
 10037 4d1e 00000000 		.long	.LASF823
 10038 4d22 DC460000 		.long	0x46dc
 10039 4d26 354D0000 		.long	0x4d35
 10040 4d2a 01       		.uleb128 0x1
 10041 4d2b DC460000 		.long	0x46dc
 10042 4d2f 01       		.uleb128 0x1
 10043 4d30 86430000 		.long	0x4386
 10044 4d34 00       		.byte	0
 10045 4d35 1A       		.uleb128 0x1a
 10046 4d36 00000000 		.long	.LASF823
 10047 4d3a 36       		.byte	0x36
 10048 4d3b A0       		.byte	0xa0
 10049 4d3c 17       		.byte	0x17
 10050 4d3d 00000000 		.long	.LASF823
 10051 4d41 9F460000 		.long	0x469f
 10052 4d45 544D0000 		.long	0x4d54
GAS LISTING x64lin/../common/event.s 			page 317


 10053 4d49 01       		.uleb128 0x1
 10054 4d4a 9F460000 		.long	0x469f
 10055 4d4e 01       		.uleb128 0x1
 10056 4d4f 86430000 		.long	0x4386
 10057 4d53 00       		.byte	0
 10058 4d54 1A       		.uleb128 0x1a
 10059 4d55 00000000 		.long	.LASF824
 10060 4d59 36       		.byte	0x36
 10061 4d5a C6       		.byte	0xc6
 10062 4d5b 1D       		.byte	0x1d
 10063 4d5c 00000000 		.long	.LASF824
 10064 4d60 DC460000 		.long	0x46dc
 10065 4d64 734D0000 		.long	0x4d73
 10066 4d68 01       		.uleb128 0x1
 10067 4d69 DC460000 		.long	0x46dc
 10068 4d6d 01       		.uleb128 0x1
 10069 4d6e DC460000 		.long	0x46dc
 10070 4d72 00       		.byte	0
 10071 4d73 1A       		.uleb128 0x1a
 10072 4d74 00000000 		.long	.LASF824
 10073 4d78 36       		.byte	0x36
 10074 4d79 C4       		.byte	0xc4
 10075 4d7a 17       		.byte	0x17
 10076 4d7b 00000000 		.long	.LASF824
 10077 4d7f 9F460000 		.long	0x469f
 10078 4d83 924D0000 		.long	0x4d92
 10079 4d87 01       		.uleb128 0x1
 10080 4d88 9F460000 		.long	0x469f
 10081 4d8c 01       		.uleb128 0x1
 10082 4d8d DC460000 		.long	0x46dc
 10083 4d91 00       		.byte	0
 10084 4d92 1A       		.uleb128 0x1a
 10085 4d93 00000000 		.long	.LASF825
 10086 4d97 36       		.byte	0x36
 10087 4d98 AC       		.byte	0xac
 10088 4d99 1D       		.byte	0x1d
 10089 4d9a 00000000 		.long	.LASF825
 10090 4d9e DC460000 		.long	0x46dc
 10091 4da2 B14D0000 		.long	0x4db1
 10092 4da6 01       		.uleb128 0x1
 10093 4da7 DC460000 		.long	0x46dc
 10094 4dab 01       		.uleb128 0x1
 10095 4dac 86430000 		.long	0x4386
 10096 4db0 00       		.byte	0
 10097 4db1 1A       		.uleb128 0x1a
 10098 4db2 00000000 		.long	.LASF825
 10099 4db6 36       		.byte	0x36
 10100 4db7 AA       		.byte	0xaa
 10101 4db8 17       		.byte	0x17
 10102 4db9 00000000 		.long	.LASF825
 10103 4dbd 9F460000 		.long	0x469f
 10104 4dc1 D04D0000 		.long	0x4dd0
 10105 4dc5 01       		.uleb128 0x1
 10106 4dc6 9F460000 		.long	0x469f
 10107 4dca 01       		.uleb128 0x1
 10108 4dcb 86430000 		.long	0x4386
 10109 4dcf 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 318


 10110 4dd0 1A       		.uleb128 0x1a
 10111 4dd1 00000000 		.long	.LASF826
 10112 4dd5 36       		.byte	0x36
 10113 4dd6 D1       		.byte	0xd1
 10114 4dd7 1D       		.byte	0x1d
 10115 4dd8 00000000 		.long	.LASF826
 10116 4ddc DC460000 		.long	0x46dc
 10117 4de0 EF4D0000 		.long	0x4def
 10118 4de4 01       		.uleb128 0x1
 10119 4de5 DC460000 		.long	0x46dc
 10120 4de9 01       		.uleb128 0x1
 10121 4dea DC460000 		.long	0x46dc
 10122 4dee 00       		.byte	0
 10123 4def 1A       		.uleb128 0x1a
 10124 4df0 00000000 		.long	.LASF826
 10125 4df4 36       		.byte	0x36
 10126 4df5 CF       		.byte	0xcf
 10127 4df6 17       		.byte	0x17
 10128 4df7 00000000 		.long	.LASF826
 10129 4dfb 9F460000 		.long	0x469f
 10130 4dff 0E4E0000 		.long	0x4e0e
 10131 4e03 01       		.uleb128 0x1
 10132 4e04 9F460000 		.long	0x469f
 10133 4e08 01       		.uleb128 0x1
 10134 4e09 DC460000 		.long	0x46dc
 10135 4e0d 00       		.byte	0
 10136 4e0e 1A       		.uleb128 0x1a
 10137 4e0f 00000000 		.long	.LASF827
 10138 4e13 36       		.byte	0x36
 10139 4e14 FA       		.byte	0xfa
 10140 4e15 1D       		.byte	0x1d
 10141 4e16 00000000 		.long	.LASF827
 10142 4e1a DC460000 		.long	0x46dc
 10143 4e1e 324E0000 		.long	0x4e32
 10144 4e22 01       		.uleb128 0x1
 10145 4e23 DC460000 		.long	0x46dc
 10146 4e27 01       		.uleb128 0x1
 10147 4e28 86430000 		.long	0x4386
 10148 4e2c 01       		.uleb128 0x1
 10149 4e2d D2430000 		.long	0x43d2
 10150 4e31 00       		.byte	0
 10151 4e32 1A       		.uleb128 0x1a
 10152 4e33 00000000 		.long	.LASF827
 10153 4e37 36       		.byte	0x36
 10154 4e38 F8       		.byte	0xf8
 10155 4e39 17       		.byte	0x17
 10156 4e3a 00000000 		.long	.LASF827
 10157 4e3e 9F460000 		.long	0x469f
 10158 4e42 564E0000 		.long	0x4e56
 10159 4e46 01       		.uleb128 0x1
 10160 4e47 9F460000 		.long	0x469f
 10161 4e4b 01       		.uleb128 0x1
 10162 4e4c 86430000 		.long	0x4386
 10163 4e50 01       		.uleb128 0x1
 10164 4e51 D2430000 		.long	0x43d2
 10165 4e55 00       		.byte	0
 10166 4e56 0C       		.uleb128 0xc
GAS LISTING x64lin/../common/event.s 			page 319


 10167 4e57 00000000 		.long	.LASF828
 10168 4e5b 36       		.byte	0x36
 10169 4e5c 8101     		.value	0x181
 10170 4e5e 14       		.byte	0x14
 10171 4e5f 67430000 		.long	0x4367
 10172 4e63 724E0000 		.long	0x4e72
 10173 4e67 01       		.uleb128 0x1
 10174 4e68 DC460000 		.long	0x46dc
 10175 4e6c 01       		.uleb128 0x1
 10176 4e6d A74B0000 		.long	0x4ba7
 10177 4e71 00       		.byte	0
 10178 4e72 0C       		.uleb128 0xc
 10179 4e73 00000000 		.long	.LASF829
 10180 4e77 36       		.byte	0x36
 10181 4e78 BA01     		.value	0x1ba
 10182 4e7a 16       		.byte	0x16
 10183 4e7b 60430000 		.long	0x4360
 10184 4e7f 934E0000 		.long	0x4e93
 10185 4e83 01       		.uleb128 0x1
 10186 4e84 DC460000 		.long	0x46dc
 10187 4e88 01       		.uleb128 0x1
 10188 4e89 A74B0000 		.long	0x4ba7
 10189 4e8d 01       		.uleb128 0x1
 10190 4e8e 4C430000 		.long	0x434c
 10191 4e92 00       		.byte	0
 10192 4e93 0C       		.uleb128 0xc
 10193 4e94 00000000 		.long	.LASF830
 10194 4e98 36       		.byte	0x36
 10195 4e99 C101     		.value	0x1c1
 10196 4e9b 1F       		.byte	0x1f
 10197 4e9c 37430000 		.long	0x4337
 10198 4ea0 B44E0000 		.long	0x4eb4
 10199 4ea4 01       		.uleb128 0x1
 10200 4ea5 DC460000 		.long	0x46dc
 10201 4ea9 01       		.uleb128 0x1
 10202 4eaa A74B0000 		.long	0x4ba7
 10203 4eae 01       		.uleb128 0x1
 10204 4eaf 4C430000 		.long	0x434c
 10205 4eb3 00       		.byte	0
 10206 4eb4 06       		.uleb128 0x6
 10207 4eb5 00000000 		.long	.LASF831
 10208 4eb9 39       		.byte	0x39
 10209 4eba 25       		.byte	0x25
 10210 4ebb 15       		.byte	0x15
 10211 4ebc 3E430000 		.long	0x433e
 10212 4ec0 06       		.uleb128 0x6
 10213 4ec1 00000000 		.long	.LASF832
 10214 4ec5 39       		.byte	0x39
 10215 4ec6 26       		.byte	0x26
 10216 4ec7 17       		.byte	0x17
 10217 4ec8 1D430000 		.long	0x431d
 10218 4ecc 06       		.uleb128 0x6
 10219 4ecd 00000000 		.long	.LASF833
 10220 4ed1 39       		.byte	0x39
 10221 4ed2 27       		.byte	0x27
 10222 4ed3 1A       		.byte	0x1a
 10223 4ed4 45430000 		.long	0x4345
GAS LISTING x64lin/../common/event.s 			page 320


 10224 4ed8 06       		.uleb128 0x6
 10225 4ed9 00000000 		.long	.LASF834
 10226 4edd 39       		.byte	0x39
 10227 4ede 28       		.byte	0x28
 10228 4edf 1C       		.byte	0x1c
 10229 4ee0 24430000 		.long	0x4324
 10230 4ee4 06       		.uleb128 0x6
 10231 4ee5 00000000 		.long	.LASF835
 10232 4ee9 39       		.byte	0x39
 10233 4eea 29       		.byte	0x29
 10234 4eeb 14       		.byte	0x14
 10235 4eec 4C430000 		.long	0x434c
 10236 4ef0 08       		.uleb128 0x8
 10237 4ef1 E44E0000 		.long	0x4ee4
 10238 4ef5 06       		.uleb128 0x6
 10239 4ef6 00000000 		.long	.LASF836
 10240 4efa 39       		.byte	0x39
 10241 4efb 2A       		.byte	0x2a
 10242 4efc 16       		.byte	0x16
 10243 4efd 713F0000 		.long	0x3f71
 10244 4f01 06       		.uleb128 0x6
 10245 4f02 00000000 		.long	.LASF837
 10246 4f06 39       		.byte	0x39
 10247 4f07 2C       		.byte	0x2c
 10248 4f08 19       		.byte	0x19
 10249 4f09 59430000 		.long	0x4359
 10250 4f0d 06       		.uleb128 0x6
 10251 4f0e 00000000 		.long	.LASF838
 10252 4f12 39       		.byte	0x39
 10253 4f13 2D       		.byte	0x2d
 10254 4f14 1B       		.byte	0x1b
 10255 4f15 2B430000 		.long	0x432b
 10256 4f19 06       		.uleb128 0x6
 10257 4f1a 00000000 		.long	.LASF839
 10258 4f1e 39       		.byte	0x39
 10259 4f1f 34       		.byte	0x34
 10260 4f20 12       		.byte	0x12
 10261 4f21 B44E0000 		.long	0x4eb4
 10262 4f25 06       		.uleb128 0x6
 10263 4f26 00000000 		.long	.LASF840
 10264 4f2a 39       		.byte	0x39
 10265 4f2b 35       		.byte	0x35
 10266 4f2c 13       		.byte	0x13
 10267 4f2d C04E0000 		.long	0x4ec0
 10268 4f31 06       		.uleb128 0x6
 10269 4f32 00000000 		.long	.LASF841
 10270 4f36 39       		.byte	0x39
 10271 4f37 36       		.byte	0x36
 10272 4f38 13       		.byte	0x13
 10273 4f39 CC4E0000 		.long	0x4ecc
 10274 4f3d 06       		.uleb128 0x6
 10275 4f3e 00000000 		.long	.LASF842
 10276 4f42 39       		.byte	0x39
 10277 4f43 37       		.byte	0x37
 10278 4f44 14       		.byte	0x14
 10279 4f45 D84E0000 		.long	0x4ed8
 10280 4f49 06       		.uleb128 0x6
GAS LISTING x64lin/../common/event.s 			page 321


 10281 4f4a 00000000 		.long	.LASF843
 10282 4f4e 39       		.byte	0x39
 10283 4f4f 38       		.byte	0x38
 10284 4f50 13       		.byte	0x13
 10285 4f51 E44E0000 		.long	0x4ee4
 10286 4f55 06       		.uleb128 0x6
 10287 4f56 00000000 		.long	.LASF844
 10288 4f5a 39       		.byte	0x39
 10289 4f5b 39       		.byte	0x39
 10290 4f5c 14       		.byte	0x14
 10291 4f5d F54E0000 		.long	0x4ef5
 10292 4f61 06       		.uleb128 0x6
 10293 4f62 00000000 		.long	.LASF845
 10294 4f66 39       		.byte	0x39
 10295 4f67 3A       		.byte	0x3a
 10296 4f68 13       		.byte	0x13
 10297 4f69 014F0000 		.long	0x4f01
 10298 4f6d 06       		.uleb128 0x6
 10299 4f6e 00000000 		.long	.LASF846
 10300 4f72 39       		.byte	0x39
 10301 4f73 3B       		.byte	0x3b
 10302 4f74 14       		.byte	0x14
 10303 4f75 0D4F0000 		.long	0x4f0d
 10304 4f79 06       		.uleb128 0x6
 10305 4f7a 00000000 		.long	.LASF847
 10306 4f7e 39       		.byte	0x39
 10307 4f7f 48       		.byte	0x48
 10308 4f80 12       		.byte	0x12
 10309 4f81 59430000 		.long	0x4359
 10310 4f85 06       		.uleb128 0x6
 10311 4f86 00000000 		.long	.LASF848
 10312 4f8a 39       		.byte	0x39
 10313 4f8b 49       		.byte	0x49
 10314 4f8c 1B       		.byte	0x1b
 10315 4f8d 2B430000 		.long	0x432b
 10316 4f91 06       		.uleb128 0x6
 10317 4f92 00000000 		.long	.LASF849
 10318 4f96 39       		.byte	0x39
 10319 4f97 98       		.byte	0x98
 10320 4f98 12       		.byte	0x12
 10321 4f99 59430000 		.long	0x4359
 10322 4f9d 06       		.uleb128 0x6
 10323 4f9e 00000000 		.long	.LASF850
 10324 4fa2 39       		.byte	0x39
 10325 4fa3 99       		.byte	0x99
 10326 4fa4 12       		.byte	0x12
 10327 4fa5 59430000 		.long	0x4359
 10328 4fa9 06       		.uleb128 0x6
 10329 4faa 00000000 		.long	.LASF851
 10330 4fae 39       		.byte	0x39
 10331 4faf 9C       		.byte	0x9c
 10332 4fb0 12       		.byte	0x12
 10333 4fb1 59430000 		.long	0x4359
 10334 4fb5 06       		.uleb128 0x6
 10335 4fb6 00000000 		.long	.LASF852
 10336 4fba 39       		.byte	0x39
 10337 4fbb A0       		.byte	0xa0
GAS LISTING x64lin/../common/event.s 			page 322


 10338 4fbc 12       		.byte	0x12
 10339 4fbd 59430000 		.long	0x4359
 10340 4fc1 06       		.uleb128 0x6
 10341 4fc2 00000000 		.long	.LASF853
 10342 4fc6 39       		.byte	0x39
 10343 4fc7 A9       		.byte	0xa9
 10344 4fc8 0D       		.byte	0xd
 10345 4fc9 4C430000 		.long	0x434c
 10346 4fcd 06       		.uleb128 0x6
 10347 4fce 00000000 		.long	.LASF854
 10348 4fd2 39       		.byte	0x39
 10349 4fd3 C5       		.byte	0xc5
 10350 4fd4 12       		.byte	0x12
 10351 4fd5 59430000 		.long	0x4359
 10352 4fd9 06       		.uleb128 0x6
 10353 4fda 00000000 		.long	.LASF855
 10354 4fde 3A       		.byte	0x3a
 10355 4fdf 18       		.byte	0x18
 10356 4fe0 12       		.byte	0x12
 10357 4fe1 B44E0000 		.long	0x4eb4
 10358 4fe5 06       		.uleb128 0x6
 10359 4fe6 00000000 		.long	.LASF856
 10360 4fea 3A       		.byte	0x3a
 10361 4feb 19       		.byte	0x19
 10362 4fec 13       		.byte	0x13
 10363 4fed CC4E0000 		.long	0x4ecc
 10364 4ff1 06       		.uleb128 0x6
 10365 4ff2 00000000 		.long	.LASF857
 10366 4ff6 3A       		.byte	0x3a
 10367 4ff7 1A       		.byte	0x1a
 10368 4ff8 13       		.byte	0x13
 10369 4ff9 E44E0000 		.long	0x4ee4
 10370 4ffd 06       		.uleb128 0x6
 10371 4ffe 00000000 		.long	.LASF858
 10372 5002 3A       		.byte	0x3a
 10373 5003 1B       		.byte	0x1b
 10374 5004 13       		.byte	0x13
 10375 5005 014F0000 		.long	0x4f01
 10376 5009 06       		.uleb128 0x6
 10377 500a 00000000 		.long	.LASF859
 10378 500e 3B       		.byte	0x3b
 10379 500f 18       		.byte	0x18
 10380 5010 13       		.byte	0x13
 10381 5011 C04E0000 		.long	0x4ec0
 10382 5015 06       		.uleb128 0x6
 10383 5016 00000000 		.long	.LASF860
 10384 501a 3B       		.byte	0x3b
 10385 501b 19       		.byte	0x19
 10386 501c 14       		.byte	0x14
 10387 501d D84E0000 		.long	0x4ed8
 10388 5021 06       		.uleb128 0x6
 10389 5022 00000000 		.long	.LASF861
 10390 5026 3B       		.byte	0x3b
 10391 5027 1A       		.byte	0x1a
 10392 5028 14       		.byte	0x14
 10393 5029 F54E0000 		.long	0x4ef5
 10394 502d 06       		.uleb128 0x6
GAS LISTING x64lin/../common/event.s 			page 323


 10395 502e 00000000 		.long	.LASF862
 10396 5032 3B       		.byte	0x3b
 10397 5033 1B       		.byte	0x1b
 10398 5034 14       		.byte	0x14
 10399 5035 0D4F0000 		.long	0x4f0d
 10400 5039 06       		.uleb128 0x6
 10401 503a 00000000 		.long	.LASF863
 10402 503e 3C       		.byte	0x3c
 10403 503f 2B       		.byte	0x2b
 10404 5040 18       		.byte	0x18
 10405 5041 194F0000 		.long	0x4f19
 10406 5045 06       		.uleb128 0x6
 10407 5046 00000000 		.long	.LASF864
 10408 504a 3C       		.byte	0x3c
 10409 504b 2C       		.byte	0x2c
 10410 504c 19       		.byte	0x19
 10411 504d 314F0000 		.long	0x4f31
 10412 5051 06       		.uleb128 0x6
 10413 5052 00000000 		.long	.LASF865
 10414 5056 3C       		.byte	0x3c
 10415 5057 2D       		.byte	0x2d
 10416 5058 19       		.byte	0x19
 10417 5059 494F0000 		.long	0x4f49
 10418 505d 06       		.uleb128 0x6
 10419 505e 00000000 		.long	.LASF866
 10420 5062 3C       		.byte	0x3c
 10421 5063 2E       		.byte	0x2e
 10422 5064 19       		.byte	0x19
 10423 5065 614F0000 		.long	0x4f61
 10424 5069 06       		.uleb128 0x6
 10425 506a 00000000 		.long	.LASF867
 10426 506e 3C       		.byte	0x3c
 10427 506f 31       		.byte	0x31
 10428 5070 19       		.byte	0x19
 10429 5071 254F0000 		.long	0x4f25
 10430 5075 06       		.uleb128 0x6
 10431 5076 00000000 		.long	.LASF868
 10432 507a 3C       		.byte	0x3c
 10433 507b 32       		.byte	0x32
 10434 507c 1A       		.byte	0x1a
 10435 507d 3D4F0000 		.long	0x4f3d
 10436 5081 06       		.uleb128 0x6
 10437 5082 00000000 		.long	.LASF869
 10438 5086 3C       		.byte	0x3c
 10439 5087 33       		.byte	0x33
 10440 5088 1A       		.byte	0x1a
 10441 5089 554F0000 		.long	0x4f55
 10442 508d 06       		.uleb128 0x6
 10443 508e 00000000 		.long	.LASF870
 10444 5092 3C       		.byte	0x3c
 10445 5093 34       		.byte	0x34
 10446 5094 1A       		.byte	0x1a
 10447 5095 6D4F0000 		.long	0x4f6d
 10448 5099 06       		.uleb128 0x6
 10449 509a 00000000 		.long	.LASF871
 10450 509e 3C       		.byte	0x3c
 10451 509f 3A       		.byte	0x3a
GAS LISTING x64lin/../common/event.s 			page 324


 10452 50a0 15       		.byte	0x15
 10453 50a1 3E430000 		.long	0x433e
 10454 50a5 06       		.uleb128 0x6
 10455 50a6 00000000 		.long	.LASF872
 10456 50aa 3C       		.byte	0x3c
 10457 50ab 3C       		.byte	0x3c
 10458 50ac 12       		.byte	0x12
 10459 50ad 59430000 		.long	0x4359
 10460 50b1 06       		.uleb128 0x6
 10461 50b2 00000000 		.long	.LASF873
 10462 50b6 3C       		.byte	0x3c
 10463 50b7 3D       		.byte	0x3d
 10464 50b8 12       		.byte	0x12
 10465 50b9 59430000 		.long	0x4359
 10466 50bd 06       		.uleb128 0x6
 10467 50be 00000000 		.long	.LASF874
 10468 50c2 3C       		.byte	0x3c
 10469 50c3 3E       		.byte	0x3e
 10470 50c4 12       		.byte	0x12
 10471 50c5 59430000 		.long	0x4359
 10472 50c9 06       		.uleb128 0x6
 10473 50ca 00000000 		.long	.LASF875
 10474 50ce 3C       		.byte	0x3c
 10475 50cf 47       		.byte	0x47
 10476 50d0 17       		.byte	0x17
 10477 50d1 1D430000 		.long	0x431d
 10478 50d5 06       		.uleb128 0x6
 10479 50d6 00000000 		.long	.LASF876
 10480 50da 3C       		.byte	0x3c
 10481 50db 49       		.byte	0x49
 10482 50dc 1B       		.byte	0x1b
 10483 50dd 2B430000 		.long	0x432b
 10484 50e1 06       		.uleb128 0x6
 10485 50e2 00000000 		.long	.LASF877
 10486 50e6 3C       		.byte	0x3c
 10487 50e7 4A       		.byte	0x4a
 10488 50e8 1B       		.byte	0x1b
 10489 50e9 2B430000 		.long	0x432b
 10490 50ed 06       		.uleb128 0x6
 10491 50ee 00000000 		.long	.LASF878
 10492 50f2 3C       		.byte	0x3c
 10493 50f3 4B       		.byte	0x4b
 10494 50f4 1B       		.byte	0x1b
 10495 50f5 2B430000 		.long	0x432b
 10496 50f9 06       		.uleb128 0x6
 10497 50fa 00000000 		.long	.LASF879
 10498 50fe 3C       		.byte	0x3c
 10499 50ff 57       		.byte	0x57
 10500 5100 12       		.byte	0x12
 10501 5101 59430000 		.long	0x4359
 10502 5105 06       		.uleb128 0x6
 10503 5106 00000000 		.long	.LASF880
 10504 510a 3C       		.byte	0x3c
 10505 510b 5A       		.byte	0x5a
 10506 510c 1B       		.byte	0x1b
 10507 510d 2B430000 		.long	0x432b
 10508 5111 06       		.uleb128 0x6
GAS LISTING x64lin/../common/event.s 			page 325


 10509 5112 00000000 		.long	.LASF881
 10510 5116 3C       		.byte	0x3c
 10511 5117 65       		.byte	0x65
 10512 5118 14       		.byte	0x14
 10513 5119 794F0000 		.long	0x4f79
 10514 511d 06       		.uleb128 0x6
 10515 511e 00000000 		.long	.LASF882
 10516 5122 3C       		.byte	0x3c
 10517 5123 66       		.byte	0x66
 10518 5124 15       		.byte	0x15
 10519 5125 854F0000 		.long	0x4f85
 10520 5129 07       		.uleb128 0x7
 10521 512a 2E510000 		.long	0x512e
 10522 512e 9F01     		.uleb128 0x9f
 10523 5130 16       		.uleb128 0x16
 10524 5131 00000000 		.long	.LASF883
 10525 5135 60       		.byte	0x60
 10526 5136 3D       		.byte	0x3d
 10527 5137 33       		.byte	0x33
 10528 5138 08       		.byte	0x8
 10529 5139 76520000 		.long	0x5276
 10530 513d 05       		.uleb128 0x5
 10531 513e 00000000 		.long	.LASF884
 10532 5142 3D       		.byte	0x3d
 10533 5143 37       		.byte	0x37
 10534 5144 09       		.byte	0x9
 10535 5145 76490000 		.long	0x4976
 10536 5149 00       		.byte	0
 10537 514a 05       		.uleb128 0x5
 10538 514b 00000000 		.long	.LASF885
 10539 514f 3D       		.byte	0x3d
 10540 5150 38       		.byte	0x38
 10541 5151 09       		.byte	0x9
 10542 5152 76490000 		.long	0x4976
 10543 5156 08       		.byte	0x8
 10544 5157 05       		.uleb128 0x5
 10545 5158 00000000 		.long	.LASF886
 10546 515c 3D       		.byte	0x3d
 10547 515d 3E       		.byte	0x3e
 10548 515e 09       		.byte	0x9
 10549 515f 76490000 		.long	0x4976
 10550 5163 10       		.byte	0x10
 10551 5164 05       		.uleb128 0x5
 10552 5165 00000000 		.long	.LASF887
 10553 5169 3D       		.byte	0x3d
 10554 516a 44       		.byte	0x44
 10555 516b 09       		.byte	0x9
 10556 516c 76490000 		.long	0x4976
 10557 5170 18       		.byte	0x18
 10558 5171 05       		.uleb128 0x5
 10559 5172 00000000 		.long	.LASF888
 10560 5176 3D       		.byte	0x3d
 10561 5177 45       		.byte	0x45
 10562 5178 09       		.byte	0x9
 10563 5179 76490000 		.long	0x4976
 10564 517d 20       		.byte	0x20
 10565 517e 05       		.uleb128 0x5
GAS LISTING x64lin/../common/event.s 			page 326


 10566 517f 00000000 		.long	.LASF889
 10567 5183 3D       		.byte	0x3d
 10568 5184 46       		.byte	0x46
 10569 5185 09       		.byte	0x9
 10570 5186 76490000 		.long	0x4976
 10571 518a 28       		.byte	0x28
 10572 518b 05       		.uleb128 0x5
 10573 518c 00000000 		.long	.LASF890
 10574 5190 3D       		.byte	0x3d
 10575 5191 47       		.byte	0x47
 10576 5192 09       		.byte	0x9
 10577 5193 76490000 		.long	0x4976
 10578 5197 30       		.byte	0x30
 10579 5198 05       		.uleb128 0x5
 10580 5199 00000000 		.long	.LASF891
 10581 519d 3D       		.byte	0x3d
 10582 519e 48       		.byte	0x48
 10583 519f 09       		.byte	0x9
 10584 51a0 76490000 		.long	0x4976
 10585 51a4 38       		.byte	0x38
 10586 51a5 05       		.uleb128 0x5
 10587 51a6 00000000 		.long	.LASF892
 10588 51aa 3D       		.byte	0x3d
 10589 51ab 49       		.byte	0x49
 10590 51ac 09       		.byte	0x9
 10591 51ad 76490000 		.long	0x4976
 10592 51b1 40       		.byte	0x40
 10593 51b2 05       		.uleb128 0x5
 10594 51b3 00000000 		.long	.LASF893
 10595 51b7 3D       		.byte	0x3d
 10596 51b8 4A       		.byte	0x4a
 10597 51b9 09       		.byte	0x9
 10598 51ba 76490000 		.long	0x4976
 10599 51be 48       		.byte	0x48
 10600 51bf 05       		.uleb128 0x5
 10601 51c0 00000000 		.long	.LASF894
 10602 51c4 3D       		.byte	0x3d
 10603 51c5 4B       		.byte	0x4b
 10604 51c6 08       		.byte	0x8
 10605 51c7 7E440000 		.long	0x447e
 10606 51cb 50       		.byte	0x50
 10607 51cc 05       		.uleb128 0x5
 10608 51cd 00000000 		.long	.LASF895
 10609 51d1 3D       		.byte	0x3d
 10610 51d2 4C       		.byte	0x4c
 10611 51d3 08       		.byte	0x8
 10612 51d4 7E440000 		.long	0x447e
 10613 51d8 51       		.byte	0x51
 10614 51d9 05       		.uleb128 0x5
 10615 51da 00000000 		.long	.LASF896
 10616 51de 3D       		.byte	0x3d
 10617 51df 4E       		.byte	0x4e
 10618 51e0 08       		.byte	0x8
 10619 51e1 7E440000 		.long	0x447e
 10620 51e5 52       		.byte	0x52
 10621 51e6 05       		.uleb128 0x5
 10622 51e7 00000000 		.long	.LASF897
GAS LISTING x64lin/../common/event.s 			page 327


 10623 51eb 3D       		.byte	0x3d
 10624 51ec 50       		.byte	0x50
 10625 51ed 08       		.byte	0x8
 10626 51ee 7E440000 		.long	0x447e
 10627 51f2 53       		.byte	0x53
 10628 51f3 05       		.uleb128 0x5
 10629 51f4 00000000 		.long	.LASF898
 10630 51f8 3D       		.byte	0x3d
 10631 51f9 52       		.byte	0x52
 10632 51fa 08       		.byte	0x8
 10633 51fb 7E440000 		.long	0x447e
 10634 51ff 54       		.byte	0x54
 10635 5200 05       		.uleb128 0x5
 10636 5201 00000000 		.long	.LASF899
 10637 5205 3D       		.byte	0x3d
 10638 5206 54       		.byte	0x54
 10639 5207 08       		.byte	0x8
 10640 5208 7E440000 		.long	0x447e
 10641 520c 55       		.byte	0x55
 10642 520d 05       		.uleb128 0x5
 10643 520e 00000000 		.long	.LASF900
 10644 5212 3D       		.byte	0x3d
 10645 5213 5B       		.byte	0x5b
 10646 5214 08       		.byte	0x8
 10647 5215 7E440000 		.long	0x447e
 10648 5219 56       		.byte	0x56
 10649 521a 05       		.uleb128 0x5
 10650 521b 00000000 		.long	.LASF901
 10651 521f 3D       		.byte	0x3d
 10652 5220 5C       		.byte	0x5c
 10653 5221 08       		.byte	0x8
 10654 5222 7E440000 		.long	0x447e
 10655 5226 57       		.byte	0x57
 10656 5227 05       		.uleb128 0x5
 10657 5228 00000000 		.long	.LASF902
 10658 522c 3D       		.byte	0x3d
 10659 522d 5F       		.byte	0x5f
 10660 522e 08       		.byte	0x8
 10661 522f 7E440000 		.long	0x447e
 10662 5233 58       		.byte	0x58
 10663 5234 05       		.uleb128 0x5
 10664 5235 00000000 		.long	.LASF903
 10665 5239 3D       		.byte	0x3d
 10666 523a 61       		.byte	0x61
 10667 523b 08       		.byte	0x8
 10668 523c 7E440000 		.long	0x447e
 10669 5240 59       		.byte	0x59
 10670 5241 05       		.uleb128 0x5
 10671 5242 00000000 		.long	.LASF904
 10672 5246 3D       		.byte	0x3d
 10673 5247 63       		.byte	0x63
 10674 5248 08       		.byte	0x8
 10675 5249 7E440000 		.long	0x447e
 10676 524d 5A       		.byte	0x5a
 10677 524e 05       		.uleb128 0x5
 10678 524f 00000000 		.long	.LASF905
 10679 5253 3D       		.byte	0x3d
GAS LISTING x64lin/../common/event.s 			page 328


 10680 5254 65       		.byte	0x65
 10681 5255 08       		.byte	0x8
 10682 5256 7E440000 		.long	0x447e
 10683 525a 5B       		.byte	0x5b
 10684 525b 05       		.uleb128 0x5
 10685 525c 00000000 		.long	.LASF906
 10686 5260 3D       		.byte	0x3d
 10687 5261 6C       		.byte	0x6c
 10688 5262 08       		.byte	0x8
 10689 5263 7E440000 		.long	0x447e
 10690 5267 5C       		.byte	0x5c
 10691 5268 05       		.uleb128 0x5
 10692 5269 00000000 		.long	.LASF907
 10693 526d 3D       		.byte	0x3d
 10694 526e 6D       		.byte	0x6d
 10695 526f 08       		.byte	0x8
 10696 5270 7E440000 		.long	0x447e
 10697 5274 5D       		.byte	0x5d
 10698 5275 00       		.byte	0
 10699 5276 10       		.uleb128 0x10
 10700 5277 00000000 		.long	.LASF908
 10701 527b 3D       		.byte	0x3d
 10702 527c 7A       		.byte	0x7a
 10703 527d 0E       		.byte	0xe
 10704 527e 76490000 		.long	0x4976
 10705 5282 91520000 		.long	0x5291
 10706 5286 01       		.uleb128 0x1
 10707 5287 4C430000 		.long	0x434c
 10708 528b 01       		.uleb128 0x1
 10709 528c 46460000 		.long	0x4646
 10710 5290 00       		.byte	0
 10711 5291 55       		.uleb128 0x55
 10712 5292 00000000 		.long	.LASF910
 10713 5296 3D       		.byte	0x3d
 10714 5297 7D       		.byte	0x7d
 10715 5298 16       		.byte	0x16
 10716 5299 9D520000 		.long	0x529d
 10717 529d 07       		.uleb128 0x7
 10718 529e 30510000 		.long	0x5130
 10719 52a2 54       		.uleb128 0x54
 10720 52a3 08       		.byte	0x8
 10721 52a4 3E       		.byte	0x3e
 10722 52a5 3C       		.byte	0x3c
 10723 52a6 03       		.byte	0x3
 10724 52a7 00000000 		.long	.LASF912
 10725 52ab C9520000 		.long	0x52c9
 10726 52af 05       		.uleb128 0x5
 10727 52b0 00000000 		.long	.LASF913
 10728 52b4 3E       		.byte	0x3e
 10729 52b5 3D       		.byte	0x3d
 10730 52b6 09       		.byte	0x9
 10731 52b7 4C430000 		.long	0x434c
 10732 52bb 00       		.byte	0
 10733 52bc 60       		.uleb128 0x60
 10734 52bd 72656D00 		.string	"rem"
 10735 52c1 3E       		.byte	0x3e
 10736 52c2 09       		.byte	0x9
GAS LISTING x64lin/../common/event.s 			page 329


 10737 52c3 4C430000 		.long	0x434c
 10738 52c7 04       		.byte	0x4
 10739 52c8 00       		.byte	0
 10740 52c9 06       		.uleb128 0x6
 10741 52ca 00000000 		.long	.LASF914
 10742 52ce 3E       		.byte	0x3e
 10743 52cf 3F       		.byte	0x3f
 10744 52d0 05       		.byte	0x5
 10745 52d1 A2520000 		.long	0x52a2
 10746 52d5 54       		.uleb128 0x54
 10747 52d6 10       		.byte	0x10
 10748 52d7 3E       		.byte	0x3e
 10749 52d8 44       		.byte	0x44
 10750 52d9 03       		.byte	0x3
 10751 52da 00000000 		.long	.LASF915
 10752 52de FC520000 		.long	0x52fc
 10753 52e2 05       		.uleb128 0x5
 10754 52e3 00000000 		.long	.LASF913
 10755 52e7 3E       		.byte	0x3e
 10756 52e8 45       		.byte	0x45
 10757 52e9 0E       		.byte	0xe
 10758 52ea 59430000 		.long	0x4359
 10759 52ee 00       		.byte	0
 10760 52ef 60       		.uleb128 0x60
 10761 52f0 72656D00 		.string	"rem"
 10762 52f4 46       		.byte	0x46
 10763 52f5 0E       		.byte	0xe
 10764 52f6 59430000 		.long	0x4359
 10765 52fa 08       		.byte	0x8
 10766 52fb 00       		.byte	0
 10767 52fc 06       		.uleb128 0x6
 10768 52fd 00000000 		.long	.LASF916
 10769 5301 3E       		.byte	0x3e
 10770 5302 47       		.byte	0x47
 10771 5303 05       		.byte	0x5
 10772 5304 D5520000 		.long	0x52d5
 10773 5308 54       		.uleb128 0x54
 10774 5309 10       		.byte	0x10
 10775 530a 3E       		.byte	0x3e
 10776 530b 4E       		.byte	0x4e
 10777 530c 03       		.byte	0x3
 10778 530d 00000000 		.long	.LASF917
 10779 5311 2F530000 		.long	0x532f
 10780 5315 05       		.uleb128 0x5
 10781 5316 00000000 		.long	.LASF913
 10782 531a 3E       		.byte	0x3e
 10783 531b 4F       		.byte	0x4f
 10784 531c 13       		.byte	0x13
 10785 531d 60430000 		.long	0x4360
 10786 5321 00       		.byte	0
 10787 5322 60       		.uleb128 0x60
 10788 5323 72656D00 		.string	"rem"
 10789 5327 50       		.byte	0x50
 10790 5328 13       		.byte	0x13
 10791 5329 60430000 		.long	0x4360
 10792 532d 08       		.byte	0x8
 10793 532e 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 330


 10794 532f 06       		.uleb128 0x6
 10795 5330 00000000 		.long	.LASF918
 10796 5334 3E       		.byte	0x3e
 10797 5335 51       		.byte	0x51
 10798 5336 05       		.byte	0x5
 10799 5337 08530000 		.long	0x5308
 10800 533b 06       		.uleb128 0x6
 10801 533c 00000000 		.long	.LASF919
 10802 5340 3F       		.byte	0x3f
 10803 5341 07       		.byte	0x7
 10804 5342 13       		.byte	0x13
 10805 5343 A94F0000 		.long	0x4fa9
 10806 5347 06       		.uleb128 0x6
 10807 5348 00000000 		.long	.LASF920
 10808 534c 40       		.byte	0x40
 10809 534d 07       		.byte	0x7
 10810 534e 15       		.byte	0x15
 10811 534f C14F0000 		.long	0x4fc1
 10812 5353 06       		.uleb128 0x6
 10813 5354 00000000 		.long	.LASF921
 10814 5358 41       		.byte	0x41
 10815 5359 0A       		.byte	0xa
 10816 535a 12       		.byte	0x12
 10817 535b B54F0000 		.long	0x4fb5
 10818 535f 08       		.uleb128 0x8
 10819 5360 53530000 		.long	0x5353
 10820 5364 16       		.uleb128 0x16
 10821 5365 00000000 		.long	.LASF117
 10822 5369 10       		.byte	0x10
 10823 536a 42       		.byte	0x42
 10824 536b 0B       		.byte	0xb
 10825 536c 08       		.byte	0x8
 10826 536d 8C530000 		.long	0x538c
 10827 5371 05       		.uleb128 0x5
 10828 5372 00000000 		.long	.LASF922
 10829 5376 42       		.byte	0x42
 10830 5377 10       		.byte	0x10
 10831 5378 0C       		.byte	0xc
 10832 5379 B54F0000 		.long	0x4fb5
 10833 537d 00       		.byte	0
 10834 537e 05       		.uleb128 0x5
 10835 537f 00000000 		.long	.LASF923
 10836 5383 42       		.byte	0x42
 10837 5384 15       		.byte	0x15
 10838 5385 15       		.byte	0x15
 10839 5386 CD4F0000 		.long	0x4fcd
 10840 538a 08       		.byte	0x8
 10841 538b 00       		.byte	0
 10842 538c 61       		.uleb128 0x61
 10843 538d 08       		.byte	0x8
 10844 538e 43       		.byte	0x43
 10845 538f 1A       		.byte	0x1a
 10846 5390 00000000 		.long	.LASF949
 10847 5394 D6530000 		.long	0x53d6
 10848 5398 A001     		.uleb128 0xa0
 10849 539a 08       		.byte	0x8
 10850 539b 43       		.byte	0x43
GAS LISTING x64lin/../common/event.s 			page 331


 10851 539c 1D       		.byte	0x1d
 10852 539d 03       		.byte	0x3
 10853 539e BD530000 		.long	0x53bd
 10854 53a2 05       		.uleb128 0x5
 10855 53a3 00000000 		.long	.LASF924
 10856 53a7 43       		.byte	0x43
 10857 53a8 1E       		.byte	0x1e
 10858 53a9 12       		.byte	0x12
 10859 53aa 713F0000 		.long	0x3f71
 10860 53ae 00       		.byte	0
 10861 53af 05       		.uleb128 0x5
 10862 53b0 00000000 		.long	.LASF925
 10863 53b4 43       		.byte	0x43
 10864 53b5 1F       		.byte	0x1f
 10865 53b6 12       		.byte	0x12
 10866 53b7 713F0000 		.long	0x3f71
 10867 53bb 04       		.byte	0x4
 10868 53bc 00       		.byte	0
 10869 53bd 31       		.uleb128 0x31
 10870 53be 00000000 		.long	.LASF926
 10871 53c2 43       		.byte	0x43
 10872 53c3 1B       		.byte	0x1b
 10873 53c4 28       		.byte	0x28
 10874 53c5 37430000 		.long	0x4337
 10875 53c9 31       		.uleb128 0x31
 10876 53ca 00000000 		.long	.LASF927
 10877 53ce 43       		.byte	0x43
 10878 53cf 20       		.byte	0x20
 10879 53d0 05       		.byte	0x5
 10880 53d1 98530000 		.long	0x5398
 10881 53d5 00       		.byte	0
 10882 53d6 06       		.uleb128 0x6
 10883 53d7 00000000 		.long	.LASF928
 10884 53db 43       		.byte	0x43
 10885 53dc 21       		.byte	0x21
 10886 53dd 03       		.byte	0x3
 10887 53de 8C530000 		.long	0x538c
 10888 53e2 16       		.uleb128 0x16
 10889 53e3 00000000 		.long	.LASF929
 10890 53e7 10       		.byte	0x10
 10891 53e8 44       		.byte	0x44
 10892 53e9 33       		.byte	0x33
 10893 53ea 10       		.byte	0x10
 10894 53eb 0A540000 		.long	0x540a
 10895 53ef 05       		.uleb128 0x5
 10896 53f0 00000000 		.long	.LASF930
 10897 53f4 44       		.byte	0x44
 10898 53f5 35       		.byte	0x35
 10899 53f6 23       		.byte	0x23
 10900 53f7 0A540000 		.long	0x540a
 10901 53fb 00       		.byte	0
 10902 53fc 05       		.uleb128 0x5
 10903 53fd 00000000 		.long	.LASF931
 10904 5401 44       		.byte	0x44
 10905 5402 36       		.byte	0x36
 10906 5403 23       		.byte	0x23
 10907 5404 0A540000 		.long	0x540a
GAS LISTING x64lin/../common/event.s 			page 332


 10908 5408 08       		.byte	0x8
 10909 5409 00       		.byte	0
 10910 540a 07       		.uleb128 0x7
 10911 540b E2530000 		.long	0x53e2
 10912 540f 06       		.uleb128 0x6
 10913 5410 00000000 		.long	.LASF932
 10914 5414 44       		.byte	0x44
 10915 5415 37       		.byte	0x37
 10916 5416 03       		.byte	0x3
 10917 5417 E2530000 		.long	0x53e2
 10918 541b 16       		.uleb128 0x16
 10919 541c 00000000 		.long	.LASF933
 10920 5420 28       		.byte	0x28
 10921 5421 45       		.byte	0x45
 10922 5422 16       		.byte	0x16
 10923 5423 08       		.byte	0x8
 10924 5424 91540000 		.long	0x5491
 10925 5428 05       		.uleb128 0x5
 10926 5429 00000000 		.long	.LASF934
 10927 542d 45       		.byte	0x45
 10928 542e 18       		.byte	0x18
 10929 542f 07       		.byte	0x7
 10930 5430 4C430000 		.long	0x434c
 10931 5434 00       		.byte	0
 10932 5435 05       		.uleb128 0x5
 10933 5436 00000000 		.long	.LASF719
 10934 543a 45       		.byte	0x45
 10935 543b 19       		.byte	0x19
 10936 543c 10       		.byte	0x10
 10937 543d 713F0000 		.long	0x3f71
 10938 5441 04       		.byte	0x4
 10939 5442 05       		.uleb128 0x5
 10940 5443 00000000 		.long	.LASF935
 10941 5447 45       		.byte	0x45
 10942 5448 1A       		.byte	0x1a
 10943 5449 07       		.byte	0x7
 10944 544a 4C430000 		.long	0x434c
 10945 544e 08       		.byte	0x8
 10946 544f 05       		.uleb128 0x5
 10947 5450 00000000 		.long	.LASF936
 10948 5454 45       		.byte	0x45
 10949 5455 1C       		.byte	0x1c
 10950 5456 10       		.byte	0x10
 10951 5457 713F0000 		.long	0x3f71
 10952 545b 0C       		.byte	0xc
 10953 545c 05       		.uleb128 0x5
 10954 545d 00000000 		.long	.LASF937
 10955 5461 45       		.byte	0x45
 10956 5462 20       		.byte	0x20
 10957 5463 07       		.byte	0x7
 10958 5464 4C430000 		.long	0x434c
 10959 5468 10       		.byte	0x10
 10960 5469 05       		.uleb128 0x5
 10961 546a 00000000 		.long	.LASF938
 10962 546e 45       		.byte	0x45
 10963 546f 22       		.byte	0x22
 10964 5470 09       		.byte	0x9
GAS LISTING x64lin/../common/event.s 			page 333


 10965 5471 45430000 		.long	0x4345
 10966 5475 14       		.byte	0x14
 10967 5476 05       		.uleb128 0x5
 10968 5477 00000000 		.long	.LASF939
 10969 547b 45       		.byte	0x45
 10970 547c 23       		.byte	0x23
 10971 547d 09       		.byte	0x9
 10972 547e 45430000 		.long	0x4345
 10973 5482 16       		.byte	0x16
 10974 5483 05       		.uleb128 0x5
 10975 5484 00000000 		.long	.LASF940
 10976 5488 45       		.byte	0x45
 10977 5489 24       		.byte	0x24
 10978 548a 14       		.byte	0x14
 10979 548b 0F540000 		.long	0x540f
 10980 548f 18       		.byte	0x18
 10981 5490 00       		.byte	0
 10982 5491 16       		.uleb128 0x16
 10983 5492 00000000 		.long	.LASF941
 10984 5496 30       		.byte	0x30
 10985 5497 44       		.byte	0x44
 10986 5498 5E       		.byte	0x5e
 10987 5499 08       		.byte	0x8
 10988 549a FA540000 		.long	0x54fa
 10989 549e 05       		.uleb128 0x5
 10990 549f 00000000 		.long	.LASF942
 10991 54a3 44       		.byte	0x44
 10992 54a4 60       		.byte	0x60
 10993 54a5 19       		.byte	0x19
 10994 54a6 D6530000 		.long	0x53d6
 10995 54aa 00       		.byte	0
 10996 54ab 05       		.uleb128 0x5
 10997 54ac 00000000 		.long	.LASF943
 10998 54b0 44       		.byte	0x44
 10999 54b1 61       		.byte	0x61
 11000 54b2 19       		.byte	0x19
 11001 54b3 D6530000 		.long	0x53d6
 11002 54b7 08       		.byte	0x8
 11003 54b8 05       		.uleb128 0x5
 11004 54b9 00000000 		.long	.LASF944
 11005 54bd 44       		.byte	0x44
 11006 54be 62       		.byte	0x62
 11007 54bf 10       		.byte	0x10
 11008 54c0 FA540000 		.long	0x54fa
 11009 54c4 10       		.byte	0x10
 11010 54c5 05       		.uleb128 0x5
 11011 54c6 00000000 		.long	.LASF945
 11012 54ca 44       		.byte	0x44
 11013 54cb 63       		.byte	0x63
 11014 54cc 10       		.byte	0x10
 11015 54cd FA540000 		.long	0x54fa
 11016 54d1 18       		.byte	0x18
 11017 54d2 05       		.uleb128 0x5
 11018 54d3 00000000 		.long	.LASF946
 11019 54d7 44       		.byte	0x44
 11020 54d8 64       		.byte	0x64
 11021 54d9 10       		.byte	0x10
GAS LISTING x64lin/../common/event.s 			page 334


 11022 54da 713F0000 		.long	0x3f71
 11023 54de 20       		.byte	0x20
 11024 54df 05       		.uleb128 0x5
 11025 54e0 00000000 		.long	.LASF947
 11026 54e4 44       		.byte	0x44
 11027 54e5 65       		.byte	0x65
 11028 54e6 10       		.byte	0x10
 11029 54e7 713F0000 		.long	0x3f71
 11030 54eb 24       		.byte	0x24
 11031 54ec 05       		.uleb128 0x5
 11032 54ed 00000000 		.long	.LASF948
 11033 54f1 44       		.byte	0x44
 11034 54f2 66       		.byte	0x66
 11035 54f3 10       		.byte	0x10
 11036 54f4 FA540000 		.long	0x54fa
 11037 54f8 28       		.byte	0x28
 11038 54f9 00       		.byte	0
 11039 54fa 42       		.uleb128 0x42
 11040 54fb 713F0000 		.long	0x3f71
 11041 54ff 0A550000 		.long	0x550a
 11042 5503 43       		.uleb128 0x43
 11043 5504 2B430000 		.long	0x432b
 11044 5508 01       		.byte	0x1
 11045 5509 00       		.byte	0
 11046 550a 61       		.uleb128 0x61
 11047 550b 28       		.byte	0x28
 11048 550c 46       		.byte	0x46
 11049 550d 44       		.byte	0x44
 11050 550e 00000000 		.long	.LASF950
 11051 5512 3B550000 		.long	0x553b
 11052 5516 31       		.uleb128 0x31
 11053 5517 00000000 		.long	.LASF951
 11054 551b 46       		.byte	0x46
 11055 551c 45       		.byte	0x45
 11056 551d 1C       		.byte	0x1c
 11057 551e 1B540000 		.long	0x541b
 11058 5522 31       		.uleb128 0x31
 11059 5523 00000000 		.long	.LASF952
 11060 5527 46       		.byte	0x46
 11061 5528 46       		.byte	0x46
 11062 5529 08       		.byte	0x8
 11063 552a 3B550000 		.long	0x553b
 11064 552e 31       		.uleb128 0x31
 11065 552f 00000000 		.long	.LASF953
 11066 5533 46       		.byte	0x46
 11067 5534 47       		.byte	0x47
 11068 5535 0C       		.byte	0xc
 11069 5536 59430000 		.long	0x4359
 11070 553a 00       		.byte	0
 11071 553b 42       		.uleb128 0x42
 11072 553c 7E440000 		.long	0x447e
 11073 5540 4B550000 		.long	0x554b
 11074 5544 43       		.uleb128 0x43
 11075 5545 2B430000 		.long	0x432b
 11076 5549 27       		.byte	0x27
 11077 554a 00       		.byte	0
 11078 554b 06       		.uleb128 0x6
GAS LISTING x64lin/../common/event.s 			page 335


 11079 554c 00000000 		.long	.LASF954
 11080 5550 46       		.byte	0x46
 11081 5551 48       		.byte	0x48
 11082 5552 03       		.byte	0x3
 11083 5553 0A550000 		.long	0x550a
 11084 5557 61       		.uleb128 0x61
 11085 5558 30       		.byte	0x30
 11086 5559 46       		.byte	0x46
 11087 555a 4C       		.byte	0x4c
 11088 555b 00000000 		.long	.LASF955
 11089 555f 88550000 		.long	0x5588
 11090 5563 31       		.uleb128 0x31
 11091 5564 00000000 		.long	.LASF951
 11092 5568 46       		.byte	0x46
 11093 5569 4D       		.byte	0x4d
 11094 556a 1B       		.byte	0x1b
 11095 556b 91540000 		.long	0x5491
 11096 556f 31       		.uleb128 0x31
 11097 5570 00000000 		.long	.LASF952
 11098 5574 46       		.byte	0x46
 11099 5575 4E       		.byte	0x4e
 11100 5576 08       		.byte	0x8
 11101 5577 88550000 		.long	0x5588
 11102 557b 31       		.uleb128 0x31
 11103 557c 00000000 		.long	.LASF953
 11104 5580 46       		.byte	0x46
 11105 5581 4F       		.byte	0x4f
 11106 5582 1F       		.byte	0x1f
 11107 5583 60430000 		.long	0x4360
 11108 5587 00       		.byte	0
 11109 5588 42       		.uleb128 0x42
 11110 5589 7E440000 		.long	0x447e
 11111 558d 98550000 		.long	0x5598
 11112 5591 43       		.uleb128 0x43
 11113 5592 2B430000 		.long	0x432b
 11114 5596 2F       		.byte	0x2f
 11115 5597 00       		.byte	0
 11116 5598 06       		.uleb128 0x6
 11117 5599 00000000 		.long	.LASF956
 11118 559d 46       		.byte	0x46
 11119 559e 50       		.byte	0x50
 11120 559f 03       		.byte	0x3
 11121 55a0 57550000 		.long	0x5557
 11122 55a4 18       		.uleb128 0x18
 11123 55a5 00000000 		.long	.LASF957
 11124 55a9 3E       		.byte	0x3e
 11125 55aa 3003     		.value	0x330
 11126 55ac 0F       		.byte	0xf
 11127 55ad B1550000 		.long	0x55b1
 11128 55b1 07       		.uleb128 0x7
 11129 55b2 B6550000 		.long	0x55b6
 11130 55b6 73       		.uleb128 0x73
 11131 55b7 4C430000 		.long	0x434c
 11132 55bb CA550000 		.long	0x55ca
 11133 55bf 01       		.uleb128 0x1
 11134 55c0 29510000 		.long	0x5129
 11135 55c4 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 336


 11136 55c5 29510000 		.long	0x5129
 11137 55c9 00       		.byte	0
 11138 55ca 0C       		.uleb128 0xc
 11139 55cb 00000000 		.long	.LASF958
 11140 55cf 3E       		.byte	0x3e
 11141 55d0 5A02     		.value	0x25a
 11142 55d2 0C       		.byte	0xc
 11143 55d3 4C430000 		.long	0x434c
 11144 55d7 E1550000 		.long	0x55e1
 11145 55db 01       		.uleb128 0x1
 11146 55dc E1550000 		.long	0x55e1
 11147 55e0 00       		.byte	0
 11148 55e1 07       		.uleb128 0x7
 11149 55e2 E6550000 		.long	0x55e6
 11150 55e6 A101     		.uleb128 0xa1
 11151 55e8 14       		.uleb128 0x14
 11152 55e9 00000000 		.long	.LASF959
 11153 55ed 3E       		.byte	0x3e
 11154 55ee 5F02     		.value	0x25f
 11155 55f0 12       		.byte	0x12
 11156 55f1 00000000 		.long	.LASF959
 11157 55f5 4C430000 		.long	0x434c
 11158 55f9 03560000 		.long	0x5603
 11159 55fd 01       		.uleb128 0x1
 11160 55fe E1550000 		.long	0x55e1
 11161 5602 00       		.byte	0
 11162 5603 10       		.uleb128 0x10
 11163 5604 00000000 		.long	.LASF960
 11164 5608 47       		.byte	0x47
 11165 5609 19       		.byte	0x19
 11166 560a 1C       		.byte	0x1c
 11167 560b 6E430000 		.long	0x436e
 11168 560f 19560000 		.long	0x5619
 11169 5613 01       		.uleb128 0x1
 11170 5614 46460000 		.long	0x4646
 11171 5618 00       		.byte	0
 11172 5619 0C       		.uleb128 0xc
 11173 561a 00000000 		.long	.LASF961
 11174 561e 3E       		.byte	0x3e
 11175 561f 6A01     		.value	0x16a
 11176 5621 1C       		.byte	0x1c
 11177 5622 4C430000 		.long	0x434c
 11178 5626 30560000 		.long	0x5630
 11179 562a 01       		.uleb128 0x1
 11180 562b 46460000 		.long	0x4646
 11181 562f 00       		.byte	0
 11182 5630 0C       		.uleb128 0xc
 11183 5631 00000000 		.long	.LASF962
 11184 5635 3E       		.byte	0x3e
 11185 5636 6F01     		.value	0x16f
 11186 5638 1C       		.byte	0x1c
 11187 5639 59430000 		.long	0x4359
 11188 563d 47560000 		.long	0x5647
 11189 5641 01       		.uleb128 0x1
 11190 5642 46460000 		.long	0x4646
 11191 5646 00       		.byte	0
 11192 5647 10       		.uleb128 0x10
GAS LISTING x64lin/../common/event.s 			page 337


 11193 5648 00000000 		.long	.LASF963
 11194 564c 48       		.byte	0x48
 11195 564d 14       		.byte	0x14
 11196 564e 01       		.byte	0x1
 11197 564f 14440000 		.long	0x4414
 11198 5653 71560000 		.long	0x5671
 11199 5657 01       		.uleb128 0x1
 11200 5658 29510000 		.long	0x5129
 11201 565c 01       		.uleb128 0x1
 11202 565d 29510000 		.long	0x5129
 11203 5661 01       		.uleb128 0x1
 11204 5662 D2430000 		.long	0x43d2
 11205 5666 01       		.uleb128 0x1
 11206 5667 D2430000 		.long	0x43d2
 11207 566b 01       		.uleb128 0x1
 11208 566c A4550000 		.long	0x55a4
 11209 5670 00       		.byte	0
 11210 5671 A201     		.uleb128 0xa2
 11211 5673 64697600 		.string	"div"
 11212 5677 3E       		.byte	0x3e
 11213 5678 5C03     		.value	0x35c
 11214 567a 0E       		.byte	0xe
 11215 567b C9520000 		.long	0x52c9
 11216 567f 8E560000 		.long	0x568e
 11217 5683 01       		.uleb128 0x1
 11218 5684 4C430000 		.long	0x434c
 11219 5688 01       		.uleb128 0x1
 11220 5689 4C430000 		.long	0x434c
 11221 568d 00       		.byte	0
 11222 568e 0C       		.uleb128 0xc
 11223 568f 00000000 		.long	.LASF964
 11224 5693 3E       		.byte	0x3e
 11225 5694 8102     		.value	0x281
 11226 5696 0E       		.byte	0xe
 11227 5697 76490000 		.long	0x4976
 11228 569b A5560000 		.long	0x56a5
 11229 569f 01       		.uleb128 0x1
 11230 56a0 46460000 		.long	0x4646
 11231 56a4 00       		.byte	0
 11232 56a5 0C       		.uleb128 0xc
 11233 56a6 00000000 		.long	.LASF965
 11234 56aa 3E       		.byte	0x3e
 11235 56ab 5E03     		.value	0x35e
 11236 56ad 0F       		.byte	0xf
 11237 56ae FC520000 		.long	0x52fc
 11238 56b2 C1560000 		.long	0x56c1
 11239 56b6 01       		.uleb128 0x1
 11240 56b7 59430000 		.long	0x4359
 11241 56bb 01       		.uleb128 0x1
 11242 56bc 59430000 		.long	0x4359
 11243 56c0 00       		.byte	0
 11244 56c1 0C       		.uleb128 0xc
 11245 56c2 00000000 		.long	.LASF966
 11246 56c6 3E       		.byte	0x3e
 11247 56c7 A203     		.value	0x3a2
 11248 56c9 0C       		.byte	0xc
 11249 56ca 4C430000 		.long	0x434c
GAS LISTING x64lin/../common/event.s 			page 338


 11250 56ce DD560000 		.long	0x56dd
 11251 56d2 01       		.uleb128 0x1
 11252 56d3 46460000 		.long	0x4646
 11253 56d7 01       		.uleb128 0x1
 11254 56d8 D2430000 		.long	0x43d2
 11255 56dc 00       		.byte	0
 11256 56dd 10       		.uleb128 0x10
 11257 56de 00000000 		.long	.LASF967
 11258 56e2 49       		.byte	0x49
 11259 56e3 70       		.byte	0x70
 11260 56e4 1C       		.byte	0x1c
 11261 56e5 D2430000 		.long	0x43d2
 11262 56e9 FD560000 		.long	0x56fd
 11263 56ed 01       		.uleb128 0x1
 11264 56ee 9F460000 		.long	0x469f
 11265 56f2 01       		.uleb128 0x1
 11266 56f3 46460000 		.long	0x4646
 11267 56f7 01       		.uleb128 0x1
 11268 56f8 D2430000 		.long	0x43d2
 11269 56fc 00       		.byte	0
 11270 56fd 0C       		.uleb128 0xc
 11271 56fe 00000000 		.long	.LASF968
 11272 5702 3E       		.byte	0x3e
 11273 5703 A503     		.value	0x3a5
 11274 5705 0C       		.byte	0xc
 11275 5706 4C430000 		.long	0x434c
 11276 570a 1E570000 		.long	0x571e
 11277 570e 01       		.uleb128 0x1
 11278 570f 9F460000 		.long	0x469f
 11279 5713 01       		.uleb128 0x1
 11280 5714 46460000 		.long	0x4646
 11281 5718 01       		.uleb128 0x1
 11282 5719 D2430000 		.long	0x43d2
 11283 571d 00       		.byte	0
 11284 571e 44       		.uleb128 0x44
 11285 571f 00000000 		.long	.LASF970
 11286 5723 3E       		.byte	0x3e
 11287 5724 4603     		.value	0x346
 11288 5726 3F570000 		.long	0x573f
 11289 572a 01       		.uleb128 0x1
 11290 572b 14440000 		.long	0x4414
 11291 572f 01       		.uleb128 0x1
 11292 5730 D2430000 		.long	0x43d2
 11293 5734 01       		.uleb128 0x1
 11294 5735 D2430000 		.long	0x43d2
 11295 5739 01       		.uleb128 0x1
 11296 573a A4550000 		.long	0x55a4
 11297 573e 00       		.byte	0
 11298 573f A301     		.uleb128 0xa3
 11299 5741 00000000 		.long	.LASF971
 11300 5745 3E       		.byte	0x3e
 11301 5746 7602     		.value	0x276
 11302 5748 0D       		.byte	0xd
 11303 5749 53570000 		.long	0x5753
 11304 574d 01       		.uleb128 0x1
 11305 574e 4C430000 		.long	0x434c
 11306 5752 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 339


 11307 5753 72       		.uleb128 0x72
 11308 5754 00000000 		.long	.LASF972
 11309 5758 3E       		.byte	0x3e
 11310 5759 C601     		.value	0x1c6
 11311 575b 0C       		.byte	0xc
 11312 575c 4C430000 		.long	0x434c
 11313 5760 44       		.uleb128 0x44
 11314 5761 00000000 		.long	.LASF973
 11315 5765 3E       		.byte	0x3e
 11316 5766 C801     		.value	0x1c8
 11317 5768 72570000 		.long	0x5772
 11318 576c 01       		.uleb128 0x1
 11319 576d 713F0000 		.long	0x3f71
 11320 5771 00       		.byte	0
 11321 5772 10       		.uleb128 0x10
 11322 5773 00000000 		.long	.LASF974
 11323 5777 3E       		.byte	0x3e
 11324 5778 76       		.byte	0x76
 11325 5779 0F       		.byte	0xf
 11326 577a 6E430000 		.long	0x436e
 11327 577e 8D570000 		.long	0x578d
 11328 5782 01       		.uleb128 0x1
 11329 5783 46460000 		.long	0x4646
 11330 5787 01       		.uleb128 0x1
 11331 5788 8D570000 		.long	0x578d
 11332 578c 00       		.byte	0
 11333 578d 07       		.uleb128 0x7
 11334 578e 76490000 		.long	0x4976
 11335 5792 10       		.uleb128 0x10
 11336 5793 00000000 		.long	.LASF975
 11337 5797 3E       		.byte	0x3e
 11338 5798 B1       		.byte	0xb1
 11339 5799 11       		.byte	0x11
 11340 579a 59430000 		.long	0x4359
 11341 579e B2570000 		.long	0x57b2
 11342 57a2 01       		.uleb128 0x1
 11343 57a3 46460000 		.long	0x4646
 11344 57a7 01       		.uleb128 0x1
 11345 57a8 8D570000 		.long	0x578d
 11346 57ac 01       		.uleb128 0x1
 11347 57ad 4C430000 		.long	0x434c
 11348 57b1 00       		.byte	0
 11349 57b2 10       		.uleb128 0x10
 11350 57b3 00000000 		.long	.LASF976
 11351 57b7 3E       		.byte	0x3e
 11352 57b8 B5       		.byte	0xb5
 11353 57b9 1A       		.byte	0x1a
 11354 57ba 2B430000 		.long	0x432b
 11355 57be D2570000 		.long	0x57d2
 11356 57c2 01       		.uleb128 0x1
 11357 57c3 46460000 		.long	0x4646
 11358 57c7 01       		.uleb128 0x1
 11359 57c8 8D570000 		.long	0x578d
 11360 57cc 01       		.uleb128 0x1
 11361 57cd 4C430000 		.long	0x434c
 11362 57d1 00       		.byte	0
 11363 57d2 0C       		.uleb128 0xc
GAS LISTING x64lin/../common/event.s 			page 340


 11364 57d3 00000000 		.long	.LASF977
 11365 57d7 3E       		.byte	0x3e
 11366 57d8 1703     		.value	0x317
 11367 57da 0C       		.byte	0xc
 11368 57db 4C430000 		.long	0x434c
 11369 57df E9570000 		.long	0x57e9
 11370 57e3 01       		.uleb128 0x1
 11371 57e4 46460000 		.long	0x4646
 11372 57e8 00       		.byte	0
 11373 57e9 10       		.uleb128 0x10
 11374 57ea 00000000 		.long	.LASF978
 11375 57ee 49       		.byte	0x49
 11376 57ef 89       		.byte	0x89
 11377 57f0 1C       		.byte	0x1c
 11378 57f1 D2430000 		.long	0x43d2
 11379 57f5 09580000 		.long	0x5809
 11380 57f9 01       		.uleb128 0x1
 11381 57fa 76490000 		.long	0x4976
 11382 57fe 01       		.uleb128 0x1
 11383 57ff DC460000 		.long	0x46dc
 11384 5803 01       		.uleb128 0x1
 11385 5804 D2430000 		.long	0x43d2
 11386 5808 00       		.byte	0
 11387 5809 10       		.uleb128 0x10
 11388 580a 00000000 		.long	.LASF979
 11389 580e 49       		.byte	0x49
 11390 580f 4F       		.byte	0x4f
 11391 5810 1C       		.byte	0x1c
 11392 5811 4C430000 		.long	0x434c
 11393 5815 24580000 		.long	0x5824
 11394 5819 01       		.uleb128 0x1
 11395 581a 76490000 		.long	0x4976
 11396 581e 01       		.uleb128 0x1
 11397 581f 86430000 		.long	0x4386
 11398 5823 00       		.byte	0
 11399 5824 0C       		.uleb128 0xc
 11400 5825 00000000 		.long	.LASF980
 11401 5829 3E       		.byte	0x3e
 11402 582a 6203     		.value	0x362
 11403 582c 1E       		.byte	0x1e
 11404 582d 2F530000 		.long	0x532f
 11405 5831 40580000 		.long	0x5840
 11406 5835 01       		.uleb128 0x1
 11407 5836 60430000 		.long	0x4360
 11408 583a 01       		.uleb128 0x1
 11409 583b 60430000 		.long	0x4360
 11410 583f 00       		.byte	0
 11411 5840 0C       		.uleb128 0xc
 11412 5841 00000000 		.long	.LASF981
 11413 5845 3E       		.byte	0x3e
 11414 5846 7601     		.value	0x176
 11415 5848 1C       		.byte	0x1c
 11416 5849 60430000 		.long	0x4360
 11417 584d 57580000 		.long	0x5857
 11418 5851 01       		.uleb128 0x1
 11419 5852 46460000 		.long	0x4646
 11420 5856 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 341


 11421 5857 10       		.uleb128 0x10
 11422 5858 00000000 		.long	.LASF982
 11423 585c 3E       		.byte	0x3e
 11424 585d C9       		.byte	0xc9
 11425 585e 16       		.byte	0x16
 11426 585f 60430000 		.long	0x4360
 11427 5863 77580000 		.long	0x5877
 11428 5867 01       		.uleb128 0x1
 11429 5868 46460000 		.long	0x4646
 11430 586c 01       		.uleb128 0x1
 11431 586d 8D570000 		.long	0x578d
 11432 5871 01       		.uleb128 0x1
 11433 5872 4C430000 		.long	0x434c
 11434 5876 00       		.byte	0
 11435 5877 10       		.uleb128 0x10
 11436 5878 00000000 		.long	.LASF983
 11437 587c 3E       		.byte	0x3e
 11438 587d CE       		.byte	0xce
 11439 587e 1F       		.byte	0x1f
 11440 587f 37430000 		.long	0x4337
 11441 5883 97580000 		.long	0x5897
 11442 5887 01       		.uleb128 0x1
 11443 5888 46460000 		.long	0x4646
 11444 588c 01       		.uleb128 0x1
 11445 588d 8D570000 		.long	0x578d
 11446 5891 01       		.uleb128 0x1
 11447 5892 4C430000 		.long	0x434c
 11448 5896 00       		.byte	0
 11449 5897 10       		.uleb128 0x10
 11450 5898 00000000 		.long	.LASF984
 11451 589c 3E       		.byte	0x3e
 11452 589d 7C       		.byte	0x7c
 11453 589e 0E       		.byte	0xe
 11454 589f 75430000 		.long	0x4375
 11455 58a3 B2580000 		.long	0x58b2
 11456 58a7 01       		.uleb128 0x1
 11457 58a8 46460000 		.long	0x4646
 11458 58ac 01       		.uleb128 0x1
 11459 58ad 8D570000 		.long	0x578d
 11460 58b1 00       		.byte	0
 11461 58b2 10       		.uleb128 0x10
 11462 58b3 00000000 		.long	.LASF985
 11463 58b7 3E       		.byte	0x3e
 11464 58b8 7F       		.byte	0x7f
 11465 58b9 14       		.byte	0x14
 11466 58ba 67430000 		.long	0x4367
 11467 58be CD580000 		.long	0x58cd
 11468 58c2 01       		.uleb128 0x1
 11469 58c3 46460000 		.long	0x4646
 11470 58c7 01       		.uleb128 0x1
 11471 58c8 8D570000 		.long	0x578d
 11472 58cc 00       		.byte	0
 11473 58cd 06       		.uleb128 0x6
 11474 58ce 00000000 		.long	.LASF986
 11475 58d2 03       		.byte	0x3
 11476 58d3 32       		.byte	0x32
 11477 58d4 19       		.byte	0x19
GAS LISTING x64lin/../common/event.s 			page 342


 11478 58d5 4B550000 		.long	0x554b
 11479 58d9 06       		.uleb128 0x6
 11480 58da 00000000 		.long	.LASF987
 11481 58de 03       		.byte	0x3
 11482 58df 34       		.byte	0x34
 11483 58e0 18       		.byte	0x18
 11484 58e1 98550000 		.long	0x5598
 11485 58e5 06       		.uleb128 0x6
 11486 58e6 00000000 		.long	.LASF988
 11487 58ea 03       		.byte	0x3
 11488 58eb 35       		.byte	0x35
 11489 58ec 19       		.byte	0x19
 11490 58ed 64530000 		.long	0x5364
 11491 58f1 A401     		.uleb128 0xa4
 11492 58f3 00000000 		.long	.LASF1141
 11493 58f7 1C       		.uleb128 0x1c
 11494 58f8 10       		.byte	0x10
 11495 58f9 07       		.byte	0x7
 11496 58fa 00000000 		.long	.LASF989
 11497 58fe 16       		.uleb128 0x16
 11498 58ff 00000000 		.long	.LASF990
 11499 5903 10       		.byte	0x10
 11500 5904 4A       		.byte	0x4a
 11501 5905 0A       		.byte	0xa
 11502 5906 10       		.byte	0x10
 11503 5907 26590000 		.long	0x5926
 11504 590b 05       		.uleb128 0x5
 11505 590c 00000000 		.long	.LASF991
 11506 5910 4A       		.byte	0x4a
 11507 5911 0C       		.byte	0xc
 11508 5912 0B       		.byte	0xb
 11509 5913 914F0000 		.long	0x4f91
 11510 5917 00       		.byte	0
 11511 5918 05       		.uleb128 0x5
 11512 5919 00000000 		.long	.LASF992
 11513 591d 4A       		.byte	0x4a
 11514 591e 0D       		.byte	0xd
 11515 591f 0F       		.byte	0xf
 11516 5920 8A440000 		.long	0x448a
 11517 5924 08       		.byte	0x8
 11518 5925 00       		.byte	0
 11519 5926 06       		.uleb128 0x6
 11520 5927 00000000 		.long	.LASF993
 11521 592b 4A       		.byte	0x4a
 11522 592c 0E       		.byte	0xe
 11523 592d 03       		.byte	0x3
 11524 592e FE580000 		.long	0x58fe
 11525 5932 A501     		.uleb128 0xa5
 11526 5934 00000000 		.long	.LASF1142
 11527 5938 34       		.byte	0x34
 11528 5939 2B       		.byte	0x2b
 11529 593a 0E       		.byte	0xe
 11530 593b 51       		.uleb128 0x51
 11531 593c 00000000 		.long	.LASF995
 11532 5940 07       		.uleb128 0x7
 11533 5941 3B590000 		.long	0x593b
 11534 5945 07       		.uleb128 0x7
GAS LISTING x64lin/../common/event.s 			page 343


 11535 5946 B3440000 		.long	0x44b3
 11536 594a 42       		.uleb128 0x42
 11537 594b 7E440000 		.long	0x447e
 11538 594f 5A590000 		.long	0x595a
 11539 5953 43       		.uleb128 0x43
 11540 5954 2B430000 		.long	0x432b
 11541 5958 00       		.byte	0
 11542 5959 00       		.byte	0
 11543 595a 07       		.uleb128 0x7
 11544 595b 32590000 		.long	0x5932
 11545 595f 51       		.uleb128 0x51
 11546 5960 00000000 		.long	.LASF996
 11547 5964 07       		.uleb128 0x7
 11548 5965 5F590000 		.long	0x595f
 11549 5969 51       		.uleb128 0x51
 11550 596a 00000000 		.long	.LASF997
 11551 596e 07       		.uleb128 0x7
 11552 596f 69590000 		.long	0x5969
 11553 5973 42       		.uleb128 0x42
 11554 5974 7E440000 		.long	0x447e
 11555 5978 83590000 		.long	0x5983
 11556 597c 43       		.uleb128 0x43
 11557 597d 2B430000 		.long	0x432b
 11558 5981 13       		.byte	0x13
 11559 5982 00       		.byte	0
 11560 5983 06       		.uleb128 0x6
 11561 5984 00000000 		.long	.LASF998
 11562 5988 4B       		.byte	0x4b
 11563 5989 54       		.byte	0x54
 11564 598a 12       		.byte	0x12
 11565 598b 26590000 		.long	0x5926
 11566 598f 08       		.uleb128 0x8
 11567 5990 83590000 		.long	0x5983
 11568 5994 07       		.uleb128 0x7
 11569 5995 3A460000 		.long	0x463a
 11570 5999 44       		.uleb128 0x44
 11571 599a 00000000 		.long	.LASF999
 11572 599e 4B       		.byte	0x4b
 11573 599f 1203     		.value	0x312
 11574 59a1 AB590000 		.long	0x59ab
 11575 59a5 01       		.uleb128 0x1
 11576 59a6 94590000 		.long	0x5994
 11577 59aa 00       		.byte	0
 11578 59ab 10       		.uleb128 0x10
 11579 59ac 00000000 		.long	.LASF1000
 11580 59b0 4B       		.byte	0x4b
 11581 59b1 B2       		.byte	0xb2
 11582 59b2 0C       		.byte	0xc
 11583 59b3 4C430000 		.long	0x434c
 11584 59b7 C1590000 		.long	0x59c1
 11585 59bb 01       		.uleb128 0x1
 11586 59bc 94590000 		.long	0x5994
 11587 59c0 00       		.byte	0
 11588 59c1 0C       		.uleb128 0xc
 11589 59c2 00000000 		.long	.LASF1001
 11590 59c6 4B       		.byte	0x4b
 11591 59c7 1403     		.value	0x314
GAS LISTING x64lin/../common/event.s 			page 344


 11592 59c9 0C       		.byte	0xc
 11593 59ca 4C430000 		.long	0x434c
 11594 59ce D8590000 		.long	0x59d8
 11595 59d2 01       		.uleb128 0x1
 11596 59d3 94590000 		.long	0x5994
 11597 59d7 00       		.byte	0
 11598 59d8 0C       		.uleb128 0xc
 11599 59d9 00000000 		.long	.LASF1002
 11600 59dd 4B       		.byte	0x4b
 11601 59de 1603     		.value	0x316
 11602 59e0 0C       		.byte	0xc
 11603 59e1 4C430000 		.long	0x434c
 11604 59e5 EF590000 		.long	0x59ef
 11605 59e9 01       		.uleb128 0x1
 11606 59ea 94590000 		.long	0x5994
 11607 59ee 00       		.byte	0
 11608 59ef 10       		.uleb128 0x10
 11609 59f0 00000000 		.long	.LASF1003
 11610 59f4 4B       		.byte	0x4b
 11611 59f5 E6       		.byte	0xe6
 11612 59f6 0C       		.byte	0xc
 11613 59f7 4C430000 		.long	0x434c
 11614 59fb 055A0000 		.long	0x5a05
 11615 59ff 01       		.uleb128 0x1
 11616 5a00 94590000 		.long	0x5994
 11617 5a04 00       		.byte	0
 11618 5a05 0C       		.uleb128 0xc
 11619 5a06 00000000 		.long	.LASF1004
 11620 5a0a 4B       		.byte	0x4b
 11621 5a0b 0102     		.value	0x201
 11622 5a0d 0C       		.byte	0xc
 11623 5a0e 4C430000 		.long	0x434c
 11624 5a12 1C5A0000 		.long	0x5a1c
 11625 5a16 01       		.uleb128 0x1
 11626 5a17 94590000 		.long	0x5994
 11627 5a1b 00       		.byte	0
 11628 5a1c 0C       		.uleb128 0xc
 11629 5a1d 00000000 		.long	.LASF1005
 11630 5a21 4B       		.byte	0x4b
 11631 5a22 F802     		.value	0x2f8
 11632 5a24 0C       		.byte	0xc
 11633 5a25 4C430000 		.long	0x434c
 11634 5a29 385A0000 		.long	0x5a38
 11635 5a2d 01       		.uleb128 0x1
 11636 5a2e 94590000 		.long	0x5994
 11637 5a32 01       		.uleb128 0x1
 11638 5a33 385A0000 		.long	0x5a38
 11639 5a37 00       		.byte	0
 11640 5a38 07       		.uleb128 0x7
 11641 5a39 83590000 		.long	0x5983
 11642 5a3d 0C       		.uleb128 0xc
 11643 5a3e 00000000 		.long	.LASF1006
 11644 5a42 4C       		.byte	0x4c
 11645 5a43 0601     		.value	0x106
 11646 5a45 01       		.byte	0x1
 11647 5a46 76490000 		.long	0x4976
 11648 5a4a 5E5A0000 		.long	0x5a5e
GAS LISTING x64lin/../common/event.s 			page 345


 11649 5a4e 01       		.uleb128 0x1
 11650 5a4f 76490000 		.long	0x4976
 11651 5a53 01       		.uleb128 0x1
 11652 5a54 4C430000 		.long	0x434c
 11653 5a58 01       		.uleb128 0x1
 11654 5a59 94590000 		.long	0x5994
 11655 5a5d 00       		.byte	0
 11656 5a5e 0C       		.uleb128 0xc
 11657 5a5f 00000000 		.long	.LASF1007
 11658 5a63 4B       		.byte	0x4b
 11659 5a64 0201     		.value	0x102
 11660 5a66 0E       		.byte	0xe
 11661 5a67 94590000 		.long	0x5994
 11662 5a6b 7A5A0000 		.long	0x5a7a
 11663 5a6f 01       		.uleb128 0x1
 11664 5a70 46460000 		.long	0x4646
 11665 5a74 01       		.uleb128 0x1
 11666 5a75 46460000 		.long	0x4646
 11667 5a79 00       		.byte	0
 11668 5a7a 0C       		.uleb128 0xc
 11669 5a7b 00000000 		.long	.LASF1008
 11670 5a7f 4C       		.byte	0x4c
 11671 5a80 2001     		.value	0x120
 11672 5a82 01       		.byte	0x1
 11673 5a83 D2430000 		.long	0x43d2
 11674 5a87 A05A0000 		.long	0x5aa0
 11675 5a8b 01       		.uleb128 0x1
 11676 5a8c 14440000 		.long	0x4414
 11677 5a90 01       		.uleb128 0x1
 11678 5a91 D2430000 		.long	0x43d2
 11679 5a95 01       		.uleb128 0x1
 11680 5a96 D2430000 		.long	0x43d2
 11681 5a9a 01       		.uleb128 0x1
 11682 5a9b 94590000 		.long	0x5994
 11683 5a9f 00       		.byte	0
 11684 5aa0 0C       		.uleb128 0xc
 11685 5aa1 00000000 		.long	.LASF1009
 11686 5aa5 4B       		.byte	0x4b
 11687 5aa6 0901     		.value	0x109
 11688 5aa8 0E       		.byte	0xe
 11689 5aa9 94590000 		.long	0x5994
 11690 5aad C15A0000 		.long	0x5ac1
 11691 5ab1 01       		.uleb128 0x1
 11692 5ab2 46460000 		.long	0x4646
 11693 5ab6 01       		.uleb128 0x1
 11694 5ab7 46460000 		.long	0x4646
 11695 5abb 01       		.uleb128 0x1
 11696 5abc 94590000 		.long	0x5994
 11697 5ac0 00       		.byte	0
 11698 5ac1 0C       		.uleb128 0xc
 11699 5ac2 00000000 		.long	.LASF1010
 11700 5ac6 4B       		.byte	0x4b
 11701 5ac7 C902     		.value	0x2c9
 11702 5ac9 0C       		.byte	0xc
 11703 5aca 4C430000 		.long	0x434c
 11704 5ace E25A0000 		.long	0x5ae2
 11705 5ad2 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 346


 11706 5ad3 94590000 		.long	0x5994
 11707 5ad7 01       		.uleb128 0x1
 11708 5ad8 59430000 		.long	0x4359
 11709 5adc 01       		.uleb128 0x1
 11710 5add 4C430000 		.long	0x434c
 11711 5ae1 00       		.byte	0
 11712 5ae2 0C       		.uleb128 0xc
 11713 5ae3 00000000 		.long	.LASF1011
 11714 5ae7 4B       		.byte	0x4b
 11715 5ae8 FD02     		.value	0x2fd
 11716 5aea 0C       		.byte	0xc
 11717 5aeb 4C430000 		.long	0x434c
 11718 5aef FE5A0000 		.long	0x5afe
 11719 5af3 01       		.uleb128 0x1
 11720 5af4 94590000 		.long	0x5994
 11721 5af8 01       		.uleb128 0x1
 11722 5af9 FE5A0000 		.long	0x5afe
 11723 5afd 00       		.byte	0
 11724 5afe 07       		.uleb128 0x7
 11725 5aff 8F590000 		.long	0x598f
 11726 5b03 0C       		.uleb128 0xc
 11727 5b04 00000000 		.long	.LASF1012
 11728 5b08 4B       		.byte	0x4b
 11729 5b09 CE02     		.value	0x2ce
 11730 5b0b 11       		.byte	0x11
 11731 5b0c 59430000 		.long	0x4359
 11732 5b10 1A5B0000 		.long	0x5b1a
 11733 5b14 01       		.uleb128 0x1
 11734 5b15 94590000 		.long	0x5994
 11735 5b19 00       		.byte	0
 11736 5b1a 0C       		.uleb128 0xc
 11737 5b1b 00000000 		.long	.LASF1013
 11738 5b1f 4B       		.byte	0x4b
 11739 5b20 0202     		.value	0x202
 11740 5b22 0C       		.byte	0xc
 11741 5b23 4C430000 		.long	0x434c
 11742 5b27 315B0000 		.long	0x5b31
 11743 5b2b 01       		.uleb128 0x1
 11744 5b2c 94590000 		.long	0x5994
 11745 5b30 00       		.byte	0
 11746 5b31 55       		.uleb128 0x55
 11747 5b32 00000000 		.long	.LASF1014
 11748 5b36 4D       		.byte	0x4d
 11749 5b37 2F       		.byte	0x2f
 11750 5b38 01       		.byte	0x1
 11751 5b39 4C430000 		.long	0x434c
 11752 5b3d 44       		.uleb128 0x44
 11753 5b3e 00000000 		.long	.LASF1015
 11754 5b42 4B       		.byte	0x4b
 11755 5b43 2403     		.value	0x324
 11756 5b45 4F5B0000 		.long	0x5b4f
 11757 5b49 01       		.uleb128 0x1
 11758 5b4a 46460000 		.long	0x4646
 11759 5b4e 00       		.byte	0
 11760 5b4f 10       		.uleb128 0x10
 11761 5b50 00000000 		.long	.LASF1016
 11762 5b54 4B       		.byte	0x4b
GAS LISTING x64lin/../common/event.s 			page 347


 11763 5b55 98       		.byte	0x98
 11764 5b56 0C       		.byte	0xc
 11765 5b57 4C430000 		.long	0x434c
 11766 5b5b 655B0000 		.long	0x5b65
 11767 5b5f 01       		.uleb128 0x1
 11768 5b60 46460000 		.long	0x4646
 11769 5b64 00       		.byte	0
 11770 5b65 10       		.uleb128 0x10
 11771 5b66 00000000 		.long	.LASF1017
 11772 5b6a 4B       		.byte	0x4b
 11773 5b6b 9A       		.byte	0x9a
 11774 5b6c 0C       		.byte	0xc
 11775 5b6d 4C430000 		.long	0x434c
 11776 5b71 805B0000 		.long	0x5b80
 11777 5b75 01       		.uleb128 0x1
 11778 5b76 46460000 		.long	0x4646
 11779 5b7a 01       		.uleb128 0x1
 11780 5b7b 46460000 		.long	0x4646
 11781 5b7f 00       		.byte	0
 11782 5b80 44       		.uleb128 0x44
 11783 5b81 00000000 		.long	.LASF1018
 11784 5b85 4B       		.byte	0x4b
 11785 5b86 D302     		.value	0x2d3
 11786 5b88 925B0000 		.long	0x5b92
 11787 5b8c 01       		.uleb128 0x1
 11788 5b8d 94590000 		.long	0x5994
 11789 5b91 00       		.byte	0
 11790 5b92 44       		.uleb128 0x44
 11791 5b93 00000000 		.long	.LASF1019
 11792 5b97 4B       		.byte	0x4b
 11793 5b98 4801     		.value	0x148
 11794 5b9a A95B0000 		.long	0x5ba9
 11795 5b9e 01       		.uleb128 0x1
 11796 5b9f 94590000 		.long	0x5994
 11797 5ba3 01       		.uleb128 0x1
 11798 5ba4 76490000 		.long	0x4976
 11799 5ba8 00       		.byte	0
 11800 5ba9 0C       		.uleb128 0xc
 11801 5baa 00000000 		.long	.LASF1020
 11802 5bae 4B       		.byte	0x4b
 11803 5baf 4C01     		.value	0x14c
 11804 5bb1 0C       		.byte	0xc
 11805 5bb2 4C430000 		.long	0x434c
 11806 5bb6 CF5B0000 		.long	0x5bcf
 11807 5bba 01       		.uleb128 0x1
 11808 5bbb 94590000 		.long	0x5994
 11809 5bbf 01       		.uleb128 0x1
 11810 5bc0 76490000 		.long	0x4976
 11811 5bc4 01       		.uleb128 0x1
 11812 5bc5 4C430000 		.long	0x434c
 11813 5bc9 01       		.uleb128 0x1
 11814 5bca D2430000 		.long	0x43d2
 11815 5bce 00       		.byte	0
 11816 5bcf 55       		.uleb128 0x55
 11817 5bd0 00000000 		.long	.LASF1021
 11818 5bd4 4B       		.byte	0x4b
 11819 5bd5 BC       		.byte	0xbc
GAS LISTING x64lin/../common/event.s 			page 348


 11820 5bd6 0E       		.byte	0xe
 11821 5bd7 94590000 		.long	0x5994
 11822 5bdb 10       		.uleb128 0x10
 11823 5bdc 00000000 		.long	.LASF1022
 11824 5be0 4B       		.byte	0x4b
 11825 5be1 CD       		.byte	0xcd
 11826 5be2 0E       		.byte	0xe
 11827 5be3 76490000 		.long	0x4976
 11828 5be7 F15B0000 		.long	0x5bf1
 11829 5beb 01       		.uleb128 0x1
 11830 5bec 76490000 		.long	0x4976
 11831 5bf0 00       		.byte	0
 11832 5bf1 0C       		.uleb128 0xc
 11833 5bf2 00000000 		.long	.LASF1023
 11834 5bf6 4B       		.byte	0x4b
 11835 5bf7 9C02     		.value	0x29c
 11836 5bf9 0C       		.byte	0xc
 11837 5bfa 4C430000 		.long	0x434c
 11838 5bfe 0D5C0000 		.long	0x5c0d
 11839 5c02 01       		.uleb128 0x1
 11840 5c03 4C430000 		.long	0x434c
 11841 5c07 01       		.uleb128 0x1
 11842 5c08 94590000 		.long	0x5994
 11843 5c0c 00       		.byte	0
 11844 5c0d 07       		.uleb128 0x7
 11845 5c0e A2080000 		.long	0x8a2
 11846 5c12 07       		.uleb128 0x7
 11847 5c13 DA080000 		.long	0x8da
 11848 5c17 07       		.uleb128 0x7
 11849 5c18 23090000 		.long	0x923
 11850 5c1c 07       		.uleb128 0x7
 11851 5c1d EA0A0000 		.long	0xaea
 11852 5c21 09       		.uleb128 0x9
 11853 5c22 EA0A0000 		.long	0xaea
 11854 5c26 22       		.uleb128 0x22
 11855 5c27 23090000 		.long	0x923
 11856 5c2b 09       		.uleb128 0x9
 11857 5c2c 23090000 		.long	0x923
 11858 5c30 07       		.uleb128 0x7
 11859 5c31 1B0B0000 		.long	0xb1b
 11860 5c35 06       		.uleb128 0x6
 11861 5c36 00000000 		.long	.LASF1024
 11862 5c3a 4E       		.byte	0x4e
 11863 5c3b 26       		.byte	0x26
 11864 5c3c 1B       		.byte	0x1b
 11865 5c3d 2B430000 		.long	0x432b
 11866 5c41 06       		.uleb128 0x6
 11867 5c42 00000000 		.long	.LASF1025
 11868 5c46 4F       		.byte	0x4f
 11869 5c47 30       		.byte	0x30
 11870 5c48 1A       		.byte	0x1a
 11871 5c49 4D5C0000 		.long	0x5c4d
 11872 5c4d 07       		.uleb128 0x7
 11873 5c4e F04E0000 		.long	0x4ef0
 11874 5c52 10       		.uleb128 0x10
 11875 5c53 00000000 		.long	.LASF1026
 11876 5c57 4E       		.byte	0x4e
GAS LISTING x64lin/../common/event.s 			page 349


 11877 5c58 9F       		.byte	0x9f
 11878 5c59 0C       		.byte	0xc
 11879 5c5a 4C430000 		.long	0x434c
 11880 5c5e 6D5C0000 		.long	0x5c6d
 11881 5c62 01       		.uleb128 0x1
 11882 5c63 17440000 		.long	0x4417
 11883 5c67 01       		.uleb128 0x1
 11884 5c68 355C0000 		.long	0x5c35
 11885 5c6c 00       		.byte	0
 11886 5c6d 10       		.uleb128 0x10
 11887 5c6e 00000000 		.long	.LASF1027
 11888 5c72 4F       		.byte	0x4f
 11889 5c73 37       		.byte	0x37
 11890 5c74 0F       		.byte	0xf
 11891 5c75 17440000 		.long	0x4417
 11892 5c79 885C0000 		.long	0x5c88
 11893 5c7d 01       		.uleb128 0x1
 11894 5c7e 17440000 		.long	0x4417
 11895 5c82 01       		.uleb128 0x1
 11896 5c83 415C0000 		.long	0x5c41
 11897 5c87 00       		.byte	0
 11898 5c88 10       		.uleb128 0x10
 11899 5c89 00000000 		.long	.LASF1028
 11900 5c8d 4F       		.byte	0x4f
 11901 5c8e 34       		.byte	0x34
 11902 5c8f 12       		.byte	0x12
 11903 5c90 415C0000 		.long	0x5c41
 11904 5c94 9E5C0000 		.long	0x5c9e
 11905 5c98 01       		.uleb128 0x1
 11906 5c99 46460000 		.long	0x4646
 11907 5c9d 00       		.byte	0
 11908 5c9e 10       		.uleb128 0x10
 11909 5c9f 00000000 		.long	.LASF1029
 11910 5ca3 4E       		.byte	0x4e
 11911 5ca4 9B       		.byte	0x9b
 11912 5ca5 11       		.byte	0x11
 11913 5ca6 355C0000 		.long	0x5c35
 11914 5caa B45C0000 		.long	0x5cb4
 11915 5cae 01       		.uleb128 0x1
 11916 5caf 46460000 		.long	0x4646
 11917 5cb3 00       		.byte	0
 11918 5cb4 36       		.uleb128 0x36
 11919 5cb5 32400000 		.long	0x4032
 11920 5cb9 07       		.uleb128 0x7
 11921 5cba CD580000 		.long	0x58cd
 11922 5cbe 07       		.uleb128 0x7
 11923 5cbf 890B0000 		.long	0xb89
 11924 5cc3 09       		.uleb128 0x9
 11925 5cc4 0B0C0000 		.long	0xc0b
 11926 5cc8 09       		.uleb128 0x9
 11927 5cc9 890B0000 		.long	0xb89
 11928 5ccd 07       		.uleb128 0x7
 11929 5cce 100C0000 		.long	0xc10
 11930 5cd2 08       		.uleb128 0x8
 11931 5cd3 CD5C0000 		.long	0x5ccd
 11932 5cd7 09       		.uleb128 0x9
 11933 5cd8 1D0D0000 		.long	0xd1d
GAS LISTING x64lin/../common/event.s 			page 350


 11934 5cdc 09       		.uleb128 0x9
 11935 5cdd 100C0000 		.long	0xc10
 11936 5ce1 07       		.uleb128 0x7
 11937 5ce2 960B0000 		.long	0xb96
 11938 5ce6 07       		.uleb128 0x7
 11939 5ce7 220D0000 		.long	0xd22
 11940 5ceb 09       		.uleb128 0x9
 11941 5cec 890E0000 		.long	0xe89
 11942 5cf0 09       		.uleb128 0x9
 11943 5cf1 220D0000 		.long	0xd22
 11944 5cf5 07       		.uleb128 0x7
 11945 5cf6 D9580000 		.long	0x58d9
 11946 5cfa 09       		.uleb128 0x9
 11947 5cfb 110E0000 		.long	0xe11
 11948 5cff 07       		.uleb128 0x7
 11949 5d00 8E0E0000 		.long	0xe8e
 11950 5d04 07       		.uleb128 0x7
 11951 5d05 B20E0000 		.long	0xeb2
 11952 5d09 07       		.uleb128 0x7
 11953 5d0a D60E0000 		.long	0xed6
 11954 5d0e 36       		.uleb128 0x36
 11955 5d0f 99010000 		.long	0x199
 11956 5d13 36       		.uleb128 0x36
 11957 5d14 A5010000 		.long	0x1a5
 11958 5d18 36       		.uleb128 0x36
 11959 5d19 B1010000 		.long	0x1b1
 11960 5d1d 3D       		.uleb128 0x3d
 11961 5d1e 00000000 		.long	.LASF1030
 11962 5d22 50       		.byte	0x50
 11963 5d23 0F       		.byte	0xf
 11964 5d24 0B       		.byte	0xb
 11965 5d25 655E0000 		.long	0x5e65
 11966 5d29 A601     		.uleb128 0xa6
 11967 5d2b 00000000 		.long	.LASF1143
 11968 5d2f 50       		.byte	0x50
 11969 5d30 11       		.byte	0x11
 11970 5d31 0B       		.byte	0xb
 11971 5d32 A701     		.uleb128 0xa7
 11972 5d34 763100   		.string	"v1"
 11973 5d37 50       		.byte	0x50
 11974 5d38 13       		.byte	0x13
 11975 5d39 12       		.byte	0x12
 11976 5d3a 23       		.uleb128 0x23
 11977 5d3b 00000000 		.long	.LASF1031
 11978 5d3f 01       		.byte	0x1
 11979 5d40 50       		.byte	0x50
 11980 5d41 17       		.byte	0x17
 11981 5d42 07       		.byte	0x7
 11982 5d43 725D0000 		.long	0x5d72
 11983 5d47 2B       		.uleb128 0x2b
 11984 5d48 00000000 		.long	.LASF1032
 11985 5d4c 1C       		.byte	0x1c
 11986 5d4d 00000000 		.long	.LASF1034
 11987 5d51 15010000 		.long	0x115
 11988 5d55 2B       		.uleb128 0x2b
 11989 5d56 00000000 		.long	.LASF1033
 11990 5d5a 21       		.byte	0x21
GAS LISTING x64lin/../common/event.s 			page 351


 11991 5d5b 00000000 		.long	.LASF1035
 11992 5d5f 15010000 		.long	0x115
 11993 5d63 2B       		.uleb128 0x2b
 11994 5d64 00000000 		.long	.LASF1036
 11995 5d68 26       		.byte	0x26
 11996 5d69 00000000 		.long	.LASF1037
 11997 5d6d 15010000 		.long	0x115
 11998 5d71 00       		.byte	0
 11999 5d72 08       		.uleb128 0x8
 12000 5d73 3A5D0000 		.long	0x5d3a
 12001 5d77 23       		.uleb128 0x23
 12002 5d78 00000000 		.long	.LASF1038
 12003 5d7c 01       		.byte	0x1
 12004 5d7d 50       		.byte	0x50
 12005 5d7e 2D       		.byte	0x2d
 12006 5d7f 07       		.byte	0x7
 12007 5d80 AF5D0000 		.long	0x5daf
 12008 5d84 2B       		.uleb128 0x2b
 12009 5d85 00000000 		.long	.LASF1032
 12010 5d89 32       		.byte	0x32
 12011 5d8a 00000000 		.long	.LASF1039
 12012 5d8e 15010000 		.long	0x115
 12013 5d92 2B       		.uleb128 0x2b
 12014 5d93 00000000 		.long	.LASF1033
 12015 5d97 37       		.byte	0x37
 12016 5d98 00000000 		.long	.LASF1040
 12017 5d9c 15010000 		.long	0x115
 12018 5da0 2B       		.uleb128 0x2b
 12019 5da1 00000000 		.long	.LASF1036
 12020 5da5 3C       		.byte	0x3c
 12021 5da6 00000000 		.long	.LASF1041
 12022 5daa 88060000 		.long	0x688
 12023 5dae 00       		.byte	0
 12024 5daf 08       		.uleb128 0x8
 12025 5db0 775D0000 		.long	0x5d77
 12026 5db4 23       		.uleb128 0x23
 12027 5db5 00000000 		.long	.LASF1042
 12028 5db9 01       		.byte	0x1
 12029 5dba 50       		.byte	0x50
 12030 5dbb 43       		.byte	0x43
 12031 5dbc 07       		.byte	0x7
 12032 5dbd EC5D0000 		.long	0x5dec
 12033 5dc1 2B       		.uleb128 0x2b
 12034 5dc2 00000000 		.long	.LASF1032
 12035 5dc6 48       		.byte	0x48
 12036 5dc7 00000000 		.long	.LASF1043
 12037 5dcb 88060000 		.long	0x688
 12038 5dcf 2B       		.uleb128 0x2b
 12039 5dd0 00000000 		.long	.LASF1033
 12040 5dd4 4D       		.byte	0x4d
 12041 5dd5 00000000 		.long	.LASF1044
 12042 5dd9 88060000 		.long	0x688
 12043 5ddd 2B       		.uleb128 0x2b
 12044 5dde 00000000 		.long	.LASF1036
 12045 5de2 52       		.byte	0x52
 12046 5de3 00000000 		.long	.LASF1045
 12047 5de7 88060000 		.long	0x688
GAS LISTING x64lin/../common/event.s 			page 352


 12048 5deb 00       		.byte	0
 12049 5dec 08       		.uleb128 0x8
 12050 5ded B45D0000 		.long	0x5db4
 12051 5df1 23       		.uleb128 0x23
 12052 5df2 00000000 		.long	.LASF1046
 12053 5df6 01       		.byte	0x1
 12054 5df7 50       		.byte	0x50
 12055 5df8 58       		.byte	0x58
 12056 5df9 07       		.byte	0x7
 12057 5dfa 295E0000 		.long	0x5e29
 12058 5dfe 2B       		.uleb128 0x2b
 12059 5dff 00000000 		.long	.LASF1032
 12060 5e03 5D       		.byte	0x5d
 12061 5e04 00000000 		.long	.LASF1047
 12062 5e08 88060000 		.long	0x688
 12063 5e0c 2B       		.uleb128 0x2b
 12064 5e0d 00000000 		.long	.LASF1033
 12065 5e11 62       		.byte	0x62
 12066 5e12 00000000 		.long	.LASF1048
 12067 5e16 88060000 		.long	0x688
 12068 5e1a 2B       		.uleb128 0x2b
 12069 5e1b 00000000 		.long	.LASF1036
 12070 5e1f 67       		.byte	0x67
 12071 5e20 00000000 		.long	.LASF1049
 12072 5e24 15010000 		.long	0x115
 12073 5e28 00       		.byte	0
 12074 5e29 08       		.uleb128 0x8
 12075 5e2a F15D0000 		.long	0x5df1
 12076 5e2e 74       		.uleb128 0x74
 12077 5e2f 73657100 		.string	"seq"
 12078 5e33 6E       		.byte	0x6e
 12079 5e34 1C       		.byte	0x1c
 12080 5e35 725D0000 		.long	0x5d72
 12081 5e39 01       		.byte	0x1
 12082 5e3a 00       		.byte	0
 12083 5e3b 74       		.uleb128 0x74
 12084 5e3c 70617200 		.string	"par"
 12085 5e40 6F       		.byte	0x6f
 12086 5e41 1B       		.byte	0x1b
 12087 5e42 AF5D0000 		.long	0x5daf
 12088 5e46 01       		.byte	0x1
 12089 5e47 00       		.byte	0
 12090 5e48 75       		.uleb128 0x75
 12091 5e49 00000000 		.long	.LASF1050
 12092 5e4d 70       		.byte	0x70
 12093 5e4e 27       		.byte	0x27
 12094 5e4f EC5D0000 		.long	0x5dec
 12095 5e53 01       		.byte	0x1
 12096 5e54 00       		.byte	0
 12097 5e55 75       		.uleb128 0x75
 12098 5e56 00000000 		.long	.LASF1051
 12099 5e5a 71       		.byte	0x71
 12100 5e5b 1E       		.byte	0x1e
 12101 5e5c 295E0000 		.long	0x5e29
 12102 5e60 01       		.byte	0x1
 12103 5e61 00       		.byte	0
 12104 5e62 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 353


 12105 5e63 00       		.byte	0
 12106 5e64 00       		.byte	0
 12107 5e65 36       		.uleb128 0x36
 12108 5e66 2E5E0000 		.long	0x5e2e
 12109 5e6a 36       		.uleb128 0x36
 12110 5e6b 3B5E0000 		.long	0x5e3b
 12111 5e6f 36       		.uleb128 0x36
 12112 5e70 485E0000 		.long	0x5e48
 12113 5e74 36       		.uleb128 0x36
 12114 5e75 555E0000 		.long	0x5e55
 12115 5e79 55       		.uleb128 0x55
 12116 5e7a 00000000 		.long	.LASF1052
 12117 5e7e 51       		.byte	0x51
 12118 5e7f 48       		.byte	0x48
 12119 5e80 10       		.byte	0x10
 12120 5e81 3B530000 		.long	0x533b
 12121 5e85 10       		.uleb128 0x10
 12122 5e86 00000000 		.long	.LASF1053
 12123 5e8a 51       		.byte	0x51
 12124 5e8b 4F       		.byte	0x4f
 12125 5e8c 0F       		.byte	0xf
 12126 5e8d 6E430000 		.long	0x436e
 12127 5e91 A05E0000 		.long	0x5ea0
 12128 5e95 01       		.uleb128 0x1
 12129 5e96 53530000 		.long	0x5353
 12130 5e9a 01       		.uleb128 0x1
 12131 5e9b 53530000 		.long	0x5353
 12132 5e9f 00       		.byte	0
 12133 5ea0 10       		.uleb128 0x10
 12134 5ea1 00000000 		.long	.LASF1054
 12135 5ea5 51       		.byte	0x51
 12136 5ea6 53       		.byte	0x53
 12137 5ea7 0F       		.byte	0xf
 12138 5ea8 53530000 		.long	0x5353
 12139 5eac B65E0000 		.long	0x5eb6
 12140 5eb0 01       		.uleb128 0x1
 12141 5eb1 B65E0000 		.long	0x5eb6
 12142 5eb5 00       		.byte	0
 12143 5eb6 07       		.uleb128 0x7
 12144 5eb7 2D4A0000 		.long	0x4a2d
 12145 5ebb 10       		.uleb128 0x10
 12146 5ebc 00000000 		.long	.LASF1055
 12147 5ec0 51       		.byte	0x51
 12148 5ec1 4C       		.byte	0x4c
 12149 5ec2 0F       		.byte	0xf
 12150 5ec3 53530000 		.long	0x5353
 12151 5ec7 D15E0000 		.long	0x5ed1
 12152 5ecb 01       		.uleb128 0x1
 12153 5ecc D15E0000 		.long	0x5ed1
 12154 5ed0 00       		.byte	0
 12155 5ed1 07       		.uleb128 0x7
 12156 5ed2 53530000 		.long	0x5353
 12157 5ed6 10       		.uleb128 0x10
 12158 5ed7 00000000 		.long	.LASF1056
 12159 5edb 51       		.byte	0x51
 12160 5edc B3       		.byte	0xb3
 12161 5edd 0E       		.byte	0xe
GAS LISTING x64lin/../common/event.s 			page 354


 12162 5ede 76490000 		.long	0x4976
 12163 5ee2 EC5E0000 		.long	0x5eec
 12164 5ee6 01       		.uleb128 0x1
 12165 5ee7 284A0000 		.long	0x4a28
 12166 5eeb 00       		.byte	0
 12167 5eec 10       		.uleb128 0x10
 12168 5eed 00000000 		.long	.LASF1057
 12169 5ef1 51       		.byte	0x51
 12170 5ef2 B7       		.byte	0xb7
 12171 5ef3 0E       		.byte	0xe
 12172 5ef4 76490000 		.long	0x4976
 12173 5ef8 025F0000 		.long	0x5f02
 12174 5efc 01       		.uleb128 0x1
 12175 5efd 025F0000 		.long	0x5f02
 12176 5f01 00       		.byte	0
 12177 5f02 07       		.uleb128 0x7
 12178 5f03 5F530000 		.long	0x535f
 12179 5f07 10       		.uleb128 0x10
 12180 5f08 00000000 		.long	.LASF1058
 12181 5f0c 51       		.byte	0x51
 12182 5f0d 84       		.byte	0x84
 12183 5f0e 13       		.byte	0x13
 12184 5f0f B65E0000 		.long	0x5eb6
 12185 5f13 1D5F0000 		.long	0x5f1d
 12186 5f17 01       		.uleb128 0x1
 12187 5f18 025F0000 		.long	0x5f02
 12188 5f1c 00       		.byte	0
 12189 5f1d 10       		.uleb128 0x10
 12190 5f1e 00000000 		.long	.LASF1059
 12191 5f22 51       		.byte	0x51
 12192 5f23 88       		.byte	0x88
 12193 5f24 13       		.byte	0x13
 12194 5f25 B65E0000 		.long	0x5eb6
 12195 5f29 335F0000 		.long	0x5f33
 12196 5f2d 01       		.uleb128 0x1
 12197 5f2e 025F0000 		.long	0x5f02
 12198 5f32 00       		.byte	0
 12199 5f33 0C       		.uleb128 0xc
 12200 5f34 00000000 		.long	.LASF1060
 12201 5f38 51       		.byte	0x51
 12202 5f39 7301     		.value	0x173
 12203 5f3b 0C       		.byte	0xc
 12204 5f3c 4C430000 		.long	0x434c
 12205 5f40 4F5F0000 		.long	0x5f4f
 12206 5f44 01       		.uleb128 0x1
 12207 5f45 4F5F0000 		.long	0x5f4f
 12208 5f49 01       		.uleb128 0x1
 12209 5f4a 4C430000 		.long	0x434c
 12210 5f4e 00       		.byte	0
 12211 5f4f 07       		.uleb128 0x7
 12212 5f50 64530000 		.long	0x5364
 12213 5f54 07       		.uleb128 0x7
 12214 5f55 B30F0000 		.long	0xfb3
 12215 5f59 09       		.uleb128 0x9
 12216 5f5a C9100000 		.long	0x10c9
 12217 5f5e 09       		.uleb128 0x9
 12218 5f5f B30F0000 		.long	0xfb3
GAS LISTING x64lin/../common/event.s 			page 355


 12219 5f63 09       		.uleb128 0x9
 12220 5f64 CE100000 		.long	0x10ce
 12221 5f68 07       		.uleb128 0x7
 12222 5f69 CE100000 		.long	0x10ce
 12223 5f6d 09       		.uleb128 0x9
 12224 5f6e 15110000 		.long	0x1115
 12225 5f72 09       		.uleb128 0x9
 12226 5f73 4B130000 		.long	0x134b
 12227 5f77 22       		.uleb128 0x22
 12228 5f78 CE100000 		.long	0x10ce
 12229 5f7c 07       		.uleb128 0x7
 12230 5f7d 15110000 		.long	0x1115
 12231 5f81 07       		.uleb128 0x7
 12232 5f82 4B130000 		.long	0x134b
 12233 5f86 07       		.uleb128 0x7
 12234 5f87 50130000 		.long	0x1350
 12235 5f8b 08       		.uleb128 0x8
 12236 5f8c 865F0000 		.long	0x5f86
 12237 5f90 09       		.uleb128 0x9
 12238 5f91 7C130000 		.long	0x137c
 12239 5f95 09       		.uleb128 0x9
 12240 5f96 28140000 		.long	0x1428
 12241 5f9a 09       		.uleb128 0x9
 12242 5f9b 50130000 		.long	0x1350
 12243 5f9f A801     		.uleb128 0xa8
 12244 5fa1 00000000 		.long	.LASF1144
 12245 5fa5 05       		.byte	0x5
 12246 5fa6 04       		.byte	0x4
 12247 5fa7 4C430000 		.long	0x434c
 12248 5fab 52       		.byte	0x52
 12249 5fac 0A       		.byte	0xa
 12250 5fad 0C       		.byte	0xc
 12251 5fae D75F0000 		.long	0x5fd7
 12252 5fb2 34       		.uleb128 0x34
 12253 5fb3 00000000 		.long	.LASF1061
 12254 5fb7 00       		.byte	0
 12255 5fb8 34       		.uleb128 0x34
 12256 5fb9 00000000 		.long	.LASF1062
 12257 5fbd 01       		.byte	0x1
 12258 5fbe 34       		.uleb128 0x34
 12259 5fbf 00000000 		.long	.LASF1063
 12260 5fc3 02       		.byte	0x2
 12261 5fc4 34       		.uleb128 0x34
 12262 5fc5 00000000 		.long	.LASF1064
 12263 5fc9 03       		.byte	0x3
 12264 5fca 34       		.uleb128 0x34
 12265 5fcb 00000000 		.long	.LASF1065
 12266 5fcf 04       		.byte	0x4
 12267 5fd0 34       		.uleb128 0x34
 12268 5fd1 00000000 		.long	.LASF1066
 12269 5fd5 05       		.byte	0x5
 12270 5fd6 00       		.byte	0
 12271 5fd7 07       		.uleb128 0x7
 12272 5fd8 40400000 		.long	0x4040
 12273 5fdc 08       		.uleb128 0x8
 12274 5fdd D75F0000 		.long	0x5fd7
 12275 5fe1 09       		.uleb128 0x9
GAS LISTING x64lin/../common/event.s 			page 356


 12276 5fe2 0B410000 		.long	0x410b
 12277 5fe6 07       		.uleb128 0x7
 12278 5fe7 2D140000 		.long	0x142d
 12279 5feb 08       		.uleb128 0x8
 12280 5fec E65F0000 		.long	0x5fe6
 12281 5ff0 07       		.uleb128 0x7
 12282 5ff1 0B410000 		.long	0x410b
 12283 5ff5 08       		.uleb128 0x8
 12284 5ff6 F05F0000 		.long	0x5ff0
 12285 5ffa 07       		.uleb128 0x7
 12286 5ffb 75160000 		.long	0x1675
 12287 5fff 08       		.uleb128 0x8
 12288 6000 FA5F0000 		.long	0x5ffa
 12289 6004 09       		.uleb128 0x9
 12290 6005 48170000 		.long	0x1748
 12291 6009 09       		.uleb128 0x9
 12292 600a 75160000 		.long	0x1675
 12293 600e 09       		.uleb128 0x9
 12294 600f 87170000 		.long	0x1787
 12295 6013 09       		.uleb128 0x9
 12296 6014 94170000 		.long	0x1794
 12297 6018 07       		.uleb128 0x7
 12298 6019 70160000 		.long	0x1670
 12299 601d 09       		.uleb128 0x9
 12300 601e C7410000 		.long	0x41c7
 12301 6022 09       		.uleb128 0x9
 12302 6023 D3410000 		.long	0x41d3
 12303 6027 07       		.uleb128 0x7
 12304 6028 4C420000 		.long	0x424c
 12305 602c 08       		.uleb128 0x8
 12306 602d 27600000 		.long	0x6027
 12307 6031 09       		.uleb128 0x9
 12308 6032 17430000 		.long	0x4317
 12309 6036 07       		.uleb128 0x7
 12310 6037 E65F0000 		.long	0x5fe6
 12311 603b 08       		.uleb128 0x8
 12312 603c 36600000 		.long	0x6036
 12313 6040 07       		.uleb128 0x7
 12314 6041 17430000 		.long	0x4317
 12315 6045 08       		.uleb128 0x8
 12316 6046 40600000 		.long	0x6040
 12317 604a 07       		.uleb128 0x7
 12318 604b 89180000 		.long	0x1889
 12319 604f 08       		.uleb128 0x8
 12320 6050 4A600000 		.long	0x604a
 12321 6054 09       		.uleb128 0x9
 12322 6055 85190000 		.long	0x1985
 12323 6059 09       		.uleb128 0x9
 12324 605a 89180000 		.long	0x1889
 12325 605e 09       		.uleb128 0x9
 12326 605f FA190000 		.long	0x19fa
 12327 6063 07       		.uleb128 0x7
 12328 6064 061A0000 		.long	0x1a06
 12329 6068 08       		.uleb128 0x8
 12330 6069 63600000 		.long	0x6063
 12331 606d 09       		.uleb128 0x9
 12332 606e BD1C0000 		.long	0x1cbd
GAS LISTING x64lin/../common/event.s 			page 357


 12333 6072 09       		.uleb128 0x9
 12334 6073 061A0000 		.long	0x1a06
 12335 6077 07       		.uleb128 0x7
 12336 6078 BD1C0000 		.long	0x1cbd
 12337 607c 08       		.uleb128 0x8
 12338 607d 77600000 		.long	0x6077
 12339 6081 09       		.uleb128 0x9
 12340 6082 2D140000 		.long	0x142d
 12341 6086 09       		.uleb128 0x9
 12342 6087 791B0000 		.long	0x1b79
 12343 608b 07       		.uleb128 0x7
 12344 608c EC1C0000 		.long	0x1cec
 12345 6090 09       		.uleb128 0x9
 12346 6091 C81D0000 		.long	0x1dc8
 12347 6095 09       		.uleb128 0x9
 12348 6096 EC1C0000 		.long	0x1cec
 12349 609a 22       		.uleb128 0x22
 12350 609b EC1C0000 		.long	0x1cec
 12351 609f 07       		.uleb128 0x7
 12352 60a0 E71D0000 		.long	0x1de7
 12353 60a4 09       		.uleb128 0x9
 12354 60a5 A51E0000 		.long	0x1ea5
 12355 60a9 22       		.uleb128 0x22
 12356 60aa E71D0000 		.long	0x1de7
 12357 60ae 22       		.uleb128 0x22
 12358 60af 981E0000 		.long	0x1e98
 12359 60b3 07       		.uleb128 0x7
 12360 60b4 96210000 		.long	0x2196
 12361 60b8 08       		.uleb128 0x8
 12362 60b9 B3600000 		.long	0x60b3
 12363 60bd 07       		.uleb128 0x7
 12364 60be DF1C0000 		.long	0x1cdf
 12365 60c2 08       		.uleb128 0x8
 12366 60c3 BD600000 		.long	0x60bd
 12367 60c7 09       		.uleb128 0x9
 12368 60c8 B71E0000 		.long	0x1eb7
 12369 60cc 22       		.uleb128 0x22
 12370 60cd DF1C0000 		.long	0x1cdf
 12371 60d1 09       		.uleb128 0x9
 12372 60d2 981E0000 		.long	0x1e98
 12373 60d6 07       		.uleb128 0x7
 12374 60d7 9B210000 		.long	0x219b
 12375 60db 08       		.uleb128 0x8
 12376 60dc D6600000 		.long	0x60d6
 12377 60e0 09       		.uleb128 0x9
 12378 60e1 5F220000 		.long	0x225f
 12379 60e5 09       		.uleb128 0x9
 12380 60e6 D1220000 		.long	0x22d1
 12381 60ea 09       		.uleb128 0x9
 12382 60eb ED2E0000 		.long	0x2eed
 12383 60ef 22       		.uleb128 0x22
 12384 60f0 9B210000 		.long	0x219b
 12385 60f4 09       		.uleb128 0x9
 12386 60f5 9B210000 		.long	0x219b
 12387 60f9 07       		.uleb128 0x7
 12388 60fa ED2E0000 		.long	0x2eed
 12389 60fe 08       		.uleb128 0x8
GAS LISTING x64lin/../common/event.s 			page 358


 12390 60ff F9600000 		.long	0x60f9
 12391 6103 22       		.uleb128 0x22
 12392 6104 C4220000 		.long	0x22c4
 12393 6108 09       		.uleb128 0x9
 12394 6109 C72A0000 		.long	0x2ac7
 12395 610d 07       		.uleb128 0x7
 12396 610e 012F0000 		.long	0x2f01
 12397 6112 08       		.uleb128 0x8
 12398 6113 0D610000 		.long	0x610d
 12399 6117 07       		.uleb128 0x7
 12400 6118 E0300000 		.long	0x30e0
 12401 611c 09       		.uleb128 0x9
 12402 611d 68300000 		.long	0x3068
 12403 6121 22       		.uleb128 0x22
 12404 6122 5B300000 		.long	0x305b
 12405 6126 09       		.uleb128 0x9
 12406 6127 012F0000 		.long	0x2f01
 12407 612b 16       		.uleb128 0x16
 12408 612c 00000000 		.long	.LASF1067
 12409 6130 A8       		.byte	0xa8
 12410 6131 52       		.byte	0x52
 12411 6132 1F       		.byte	0x1f
 12412 6133 08       		.byte	0x8
 12413 6134 60610000 		.long	0x6160
 12414 6138 05       		.uleb128 0x5
 12415 6139 00000000 		.long	.LASF1068
 12416 613d 52       		.byte	0x52
 12417 613e 20       		.byte	0x20
 12418 613f 2C       		.byte	0x2c
 12419 6140 012F0000 		.long	0x2f01
 12420 6144 00       		.byte	0
 12421 6145 05       		.uleb128 0x5
 12422 6146 00000000 		.long	.LASF1069
 12423 614a 52       		.byte	0x52
 12424 614b 21       		.byte	0x21
 12425 614c 10       		.byte	0x10
 12426 614d 100C0000 		.long	0xc10
 12427 6151 50       		.byte	0x50
 12428 6152 05       		.uleb128 0x5
 12429 6153 00000000 		.long	.LASF1070
 12430 6157 52       		.byte	0x52
 12431 6158 22       		.byte	0x22
 12432 6159 1D       		.byte	0x1d
 12433 615a B30F0000 		.long	0xfb3
 12434 615e 78       		.byte	0x78
 12435 615f 00       		.byte	0
 12436 6160 07       		.uleb128 0x7
 12437 6161 E5300000 		.long	0x30e5
 12438 6165 07       		.uleb128 0x7
 12439 6166 35310000 		.long	0x3135
 12440 616a 07       		.uleb128 0x7
 12441 616b 74610000 		.long	0x6174
 12442 616f 08       		.uleb128 0x8
 12443 6170 6A610000 		.long	0x616a
 12444 6174 A901     		.uleb128 0xa9
 12445 6176 00000000 		.long	.LASF1071
 12446 617a 10       		.byte	0x10
GAS LISTING x64lin/../common/event.s 			page 359


 12447 617b 52       		.byte	0x52
 12448 617c 1A       		.byte	0x1a
 12449 617d 08       		.byte	0x8
 12450 617e 74610000 		.long	0x6174
 12451 6182 F4610000 		.long	0x61f4
 12452 6186 76       		.uleb128 0x76
 12453 6187 00000000 		.long	.LASF1071
 12454 618b 00000000 		.long	.LASF1072
 12455 618f 97610000 		.long	0x6197
 12456 6193 A2610000 		.long	0x61a2
 12457 6197 02       		.uleb128 0x2
 12458 6198 6A610000 		.long	0x616a
 12459 619c 01       		.uleb128 0x1
 12460 619d E4620000 		.long	0x62e4
 12461 61a1 00       		.byte	0
 12462 61a2 76       		.uleb128 0x76
 12463 61a3 00000000 		.long	.LASF1071
 12464 61a7 00000000 		.long	.LASF1073
 12465 61ab B3610000 		.long	0x61b3
 12466 61af B9610000 		.long	0x61b9
 12467 61b3 02       		.uleb128 0x2
 12468 61b4 6A610000 		.long	0x616a
 12469 61b8 00       		.byte	0
 12470 61b9 AA01     		.uleb128 0xaa
 12471 61bb 00000000 		.long	.LASF1145
 12472 61bf F4620000 		.long	0x62f4
 12473 61c3 00       		.byte	0
 12474 61c4 05       		.uleb128 0x5
 12475 61c5 00000000 		.long	.LASF1074
 12476 61c9 52       		.byte	0x52
 12477 61ca 1B       		.byte	0x1b
 12478 61cb 0F       		.byte	0xf
 12479 61cc 9F5F0000 		.long	0x5f9f
 12480 61d0 08       		.byte	0x8
 12481 61d1 AB01     		.uleb128 0xab
 12482 61d3 00000000 		.long	.LASF1075
 12483 61d7 52       		.byte	0x52
 12484 61d8 1C       		.byte	0x1c
 12485 61d9 0D       		.byte	0xd
 12486 61da 00000000 		.long	.LASF1076
 12487 61de 01       		.byte	0x1
 12488 61df 74610000 		.long	0x6174
 12489 61e3 01       		.byte	0x1
 12490 61e4 E8610000 		.long	0x61e8
 12491 61e8 02       		.uleb128 0x2
 12492 61e9 6A610000 		.long	0x616a
 12493 61ed 02       		.uleb128 0x2
 12494 61ee 4C430000 		.long	0x434c
 12495 61f2 00       		.byte	0
 12496 61f3 00       		.byte	0
 12497 61f4 08       		.uleb128 0x8
 12498 61f5 74610000 		.long	0x6174
 12499 61f9 07       		.uleb128 0x7
 12500 61fa FF320000 		.long	0x32ff
 12501 61fe 09       		.uleb128 0x9
 12502 61ff 35310000 		.long	0x3135
 12503 6203 09       		.uleb128 0x9
GAS LISTING x64lin/../common/event.s 			page 360


 12504 6204 FC330000 		.long	0x33fc
 12505 6208 22       		.uleb128 0x22
 12506 6209 FF320000 		.long	0x32ff
 12507 620d 09       		.uleb128 0x9
 12508 620e E5300000 		.long	0x30e5
 12509 6212 09       		.uleb128 0x9
 12510 6213 FF320000 		.long	0x32ff
 12511 6217 09       		.uleb128 0x9
 12512 6218 01340000 		.long	0x3401
 12513 621c 09       		.uleb128 0x9
 12514 621d 1C350000 		.long	0x351c
 12515 6221 07       		.uleb128 0x7
 12516 6222 01340000 		.long	0x3401
 12517 6226 08       		.uleb128 0x8
 12518 6227 21620000 		.long	0x6221
 12519 622b 22       		.uleb128 0x22
 12520 622c 01340000 		.long	0x3401
 12521 6230 07       		.uleb128 0x7
 12522 6231 21350000 		.long	0x3521
 12523 6235 09       		.uleb128 0x9
 12524 6236 6F610000 		.long	0x616f
 12525 623a 09       		.uleb128 0x9
 12526 623b 1E360000 		.long	0x361e
 12527 623f 22       		.uleb128 0x22
 12528 6240 21350000 		.long	0x3521
 12529 6244 09       		.uleb128 0x9
 12530 6245 6A610000 		.long	0x616a
 12531 6249 09       		.uleb128 0x9
 12532 624a 21350000 		.long	0x3521
 12533 624e 09       		.uleb128 0x9
 12534 624f 23360000 		.long	0x3623
 12535 6253 09       		.uleb128 0x9
 12536 6254 95370000 		.long	0x3795
 12537 6258 09       		.uleb128 0x9
 12538 6259 71360000 		.long	0x3671
 12539 625d 09       		.uleb128 0x9
 12540 625e 7E360000 		.long	0x367e
 12541 6262 07       		.uleb128 0x7
 12542 6263 23360000 		.long	0x3623
 12543 6267 08       		.uleb128 0x8
 12544 6268 62620000 		.long	0x6262
 12545 626c 22       		.uleb128 0x22
 12546 626d 23360000 		.long	0x3623
 12547 6271 09       		.uleb128 0x9
 12548 6272 95380000 		.long	0x3895
 12549 6276 22       		.uleb128 0x22
 12550 6277 B5370000 		.long	0x37b5
 12551 627b 07       		.uleb128 0x7
 12552 627c B5370000 		.long	0x37b5
 12553 6280 08       		.uleb128 0x8
 12554 6281 7B620000 		.long	0x627b
 12555 6285 09       		.uleb128 0x9
 12556 6286 B5370000 		.long	0x37b5
 12557 628a 07       		.uleb128 0x7
 12558 628b 3A310000 		.long	0x313a
 12559 628f 08       		.uleb128 0x8
 12560 6290 8A620000 		.long	0x628a
GAS LISTING x64lin/../common/event.s 			page 361


 12561 6294 22       		.uleb128 0x22
 12562 6295 3A310000 		.long	0x313a
 12563 6299 09       		.uleb128 0x9
 12564 629a 3A310000 		.long	0x313a
 12565 629e 09       		.uleb128 0x9
 12566 629f AE310000 		.long	0x31ae
 12567 62a3 07       		.uleb128 0x7
 12568 62a4 FA320000 		.long	0x32fa
 12569 62a8 07       		.uleb128 0x7
 12570 62a9 B5380000 		.long	0x38b5
 12571 62ad 08       		.uleb128 0x8
 12572 62ae A8620000 		.long	0x62a8
 12573 62b2 22       		.uleb128 0x22
 12574 62b3 B5380000 		.long	0x38b5
 12575 62b7 09       		.uleb128 0x9
 12576 62b8 B5380000 		.long	0x38b5
 12577 62bc 09       		.uleb128 0x9
 12578 62bd 74610000 		.long	0x6174
 12579 62c1 22       		.uleb128 0x22
 12580 62c2 2D140000 		.long	0x142d
 12581 62c6 09       		.uleb128 0x9
 12582 62c7 3F150000 		.long	0x153f
 12583 62cb 09       		.uleb128 0x9
 12584 62cc 4C150000 		.long	0x154c
 12585 62d0 09       		.uleb128 0x9
 12586 62d1 70160000 		.long	0x1670
 12587 62d5 09       		.uleb128 0x9
 12588 62d6 863A0000 		.long	0x3a86
 12589 62da 09       		.uleb128 0x9
 12590 62db 933A0000 		.long	0x3a93
 12591 62df 07       		.uleb128 0x7
 12592 62e0 EB5F0000 		.long	0x5feb
 12593 62e4 09       		.uleb128 0x9
 12594 62e5 F4610000 		.long	0x61f4
 12595 62e9 73       		.uleb128 0x73
 12596 62ea 4C430000 		.long	0x434c
 12597 62ee F4620000 		.long	0x62f4
 12598 62f2 39       		.uleb128 0x39
 12599 62f3 00       		.byte	0
 12600 62f4 07       		.uleb128 0x7
 12601 62f5 F9620000 		.long	0x62f9
 12602 62f9 AC01     		.uleb128 0xac
 12603 62fb 08       		.byte	0x8
 12604 62fc 00000000 		.long	.LASF1146
 12605 6300 E9620000 		.long	0x62e9
 12606 6304 0C       		.uleb128 0xc
 12607 6305 00000000 		.long	.LASF1077
 12608 6309 53       		.byte	0x53
 12609 630a 4303     		.value	0x343
 12610 630c 0C       		.byte	0xc
 12611 630d 4C430000 		.long	0x434c
 12612 6311 1B630000 		.long	0x631b
 12613 6315 01       		.uleb128 0x1
 12614 6316 1B630000 		.long	0x631b
 12615 631a 00       		.byte	0
 12616 631b 07       		.uleb128 0x7
 12617 631c 4B550000 		.long	0x554b
GAS LISTING x64lin/../common/event.s 			page 362


 12618 6320 5F       		.uleb128 0x5f
 12619 6321 00000000 		.long	.LASF1078
 12620 6325 54       		.byte	0x54
 12621 6326 87       		.byte	0x87
 12622 6327 06       		.byte	0x6
 12623 6328 00000000 		.long	.LASF1079
 12624 632c 3B630000 		.long	0x633b
 12625 6330 01       		.uleb128 0x1
 12626 6331 14440000 		.long	0x4414
 12627 6335 01       		.uleb128 0x1
 12628 6336 21010000 		.long	0x121
 12629 633a 00       		.byte	0
 12630 633b 5F       		.uleb128 0x5f
 12631 633c 00000000 		.long	.LASF1078
 12632 6340 54       		.byte	0x54
 12633 6341 82       		.byte	0x82
 12634 6342 06       		.byte	0x6
 12635 6343 00000000 		.long	.LASF1080
 12636 6347 51630000 		.long	0x6351
 12637 634b 01       		.uleb128 0x1
 12638 634c 14440000 		.long	0x4414
 12639 6350 00       		.byte	0
 12640 6351 1A       		.uleb128 0x1a
 12641 6352 00000000 		.long	.LASF1081
 12642 6356 54       		.byte	0x54
 12643 6357 7E       		.byte	0x7e
 12644 6358 19       		.byte	0x19
 12645 6359 00000000 		.long	.LASF1082
 12646 635d 14440000 		.long	0x4414
 12647 6361 6B630000 		.long	0x636b
 12648 6365 01       		.uleb128 0x1
 12649 6366 21010000 		.long	0x121
 12650 636a 00       		.byte	0
 12651 636b 0C       		.uleb128 0xc
 12652 636c 00000000 		.long	.LASF1083
 12653 6370 53       		.byte	0x53
 12654 6371 1A03     		.value	0x31a
 12655 6373 0C       		.byte	0xc
 12656 6374 4C430000 		.long	0x434c
 12657 6378 82630000 		.long	0x6382
 12658 637c 01       		.uleb128 0x1
 12659 637d 1B630000 		.long	0x631b
 12660 6381 00       		.byte	0
 12661 6382 13       		.uleb128 0x13
 12662 6383 CA420000 		.long	0x42ca
 12663 6387 90630000 		.long	0x6390
 12664 638b 03       		.byte	0x3
 12665 638c B2630000 		.long	0x63b2
 12666 6390 11       		.uleb128 0x11
 12667 6391 00000000 		.long	.LASF1084
 12668 6395 2C600000 		.long	0x602c
 12669 6399 20       		.uleb128 0x20
 12670 639a 5F5F7000 		.string	"__p"
 12671 639e 0D       		.byte	0xd
 12672 639f 84       		.byte	0x84
 12673 63a0 17       		.byte	0x17
 12674 63a1 36600000 		.long	0x6036
GAS LISTING x64lin/../common/event.s 			page 363


 12675 63a5 20       		.uleb128 0x20
 12676 63a6 5F5F7400 		.string	"__t"
 12677 63aa 0D       		.byte	0xd
 12678 63ab 84       		.byte	0x84
 12679 63ac 26       		.byte	0x26
 12680 63ad BD420000 		.long	0x42bd
 12681 63b1 00       		.byte	0
 12682 63b2 13       		.uleb128 0x13
 12683 63b3 3C190000 		.long	0x193c
 12684 63b7 C0630000 		.long	0x63c0
 12685 63bb 03       		.byte	0x3
 12686 63bc E2630000 		.long	0x63e2
 12687 63c0 11       		.uleb128 0x11
 12688 63c1 00000000 		.long	.LASF1084
 12689 63c5 4F600000 		.long	0x604f
 12690 63c9 20       		.uleb128 0x20
 12691 63ca 5F5F7000 		.string	"__p"
 12692 63ce 0C       		.byte	0xc
 12693 63cf BE       		.byte	0xbe
 12694 63d0 17       		.byte	0x17
 12695 63d1 36600000 		.long	0x6036
 12696 63d5 20       		.uleb128 0x20
 12697 63d6 5F5F6E00 		.string	"__n"
 12698 63da 0C       		.byte	0xc
 12699 63db BE       		.byte	0xbe
 12700 63dc 23       		.byte	0x23
 12701 63dd 21010000 		.long	0x121
 12702 63e1 00       		.byte	0
 12703 63e2 13       		.uleb128 0x13
 12704 63e3 61190000 		.long	0x1961
 12705 63e7 F9630000 		.long	0x63f9
 12706 63eb 02       		.byte	0x2
 12707 63ec 08640000 		.long	0x6408
 12708 63f0 12       		.uleb128 0x12
 12709 63f1 00000000 		.long	.LASF235
 12710 63f5 2D140000 		.long	0x142d
 12711 63f9 11       		.uleb128 0x11
 12712 63fa 00000000 		.long	.LASF1084
 12713 63fe 4F600000 		.long	0x604f
 12714 6402 01       		.uleb128 0x1
 12715 6403 04600000 		.long	0x6004
 12716 6407 00       		.byte	0
 12717 6408 2C       		.uleb128 0x2c
 12718 6409 E2630000 		.long	0x63e2
 12719 640d 00000000 		.long	.LASF1085
 12720 6411 22640000 		.long	0x6422
 12721 6415 2D640000 		.long	0x642d
 12722 6419 12       		.uleb128 0x12
 12723 641a 00000000 		.long	.LASF235
 12724 641e 2D140000 		.long	0x142d
 12725 6422 1D       		.uleb128 0x1d
 12726 6423 F9630000 		.long	0x63f9
 12727 6427 1D       		.uleb128 0x1d
 12728 6428 02640000 		.long	0x6402
 12729 642c 00       		.byte	0
 12730 642d 13       		.uleb128 0x13
 12731 642e 59420000 		.long	0x4259
GAS LISTING x64lin/../common/event.s 			page 364


 12732 6432 3B640000 		.long	0x643b
 12733 6436 02       		.byte	0x2
 12734 6437 45640000 		.long	0x6445
 12735 643b 11       		.uleb128 0x11
 12736 643c 00000000 		.long	.LASF1084
 12737 6440 2C600000 		.long	0x602c
 12738 6444 00       		.byte	0
 12739 6445 2C       		.uleb128 0x2c
 12740 6446 2D640000 		.long	0x642d
 12741 644a 00000000 		.long	.LASF1086
 12742 644e 56640000 		.long	0x6456
 12743 6452 5C640000 		.long	0x645c
 12744 6456 1D       		.uleb128 0x1d
 12745 6457 3B640000 		.long	0x643b
 12746 645b 00       		.byte	0
 12747 645c 15       		.uleb128 0x15
 12748 645d D73A0000 		.long	0x3ad7
 12749 6461 8D640000 		.long	0x648d
 12750 6465 1E       		.uleb128 0x1e
 12751 6466 5F5F6100 		.string	"__a"
 12752 646a 07       		.byte	0x7
 12753 646b EF01     		.value	0x1ef
 12754 646d 22       		.byte	0x22
 12755 646e D5620000 		.long	0x62d5
 12756 6472 1E       		.uleb128 0x1e
 12757 6473 5F5F7000 		.string	"__p"
 12758 6477 07       		.byte	0x7
 12759 6478 EF01     		.value	0x1ef
 12760 647a 2F       		.byte	0x2f
 12761 647b 593A0000 		.long	0x3a59
 12762 647f 1E       		.uleb128 0x1e
 12763 6480 5F5F6E00 		.string	"__n"
 12764 6484 07       		.byte	0x7
 12765 6485 EF01     		.value	0x1ef
 12766 6487 3E       		.byte	0x3e
 12767 6488 983A0000 		.long	0x3a98
 12768 648c 00       		.byte	0
 12769 648d 13       		.uleb128 0x13
 12770 648e 94420000 		.long	0x4294
 12771 6492 9B640000 		.long	0x649b
 12772 6496 03       		.byte	0x3
 12773 6497 C2640000 		.long	0x64c2
 12774 649b 11       		.uleb128 0x11
 12775 649c 00000000 		.long	.LASF1084
 12776 64a0 2C600000 		.long	0x602c
 12777 64a4 20       		.uleb128 0x20
 12778 64a5 5F5F6E00 		.string	"__n"
 12779 64a9 0D       		.byte	0xd
 12780 64aa 67       		.byte	0x67
 12781 64ab 1A       		.byte	0x1a
 12782 64ac BD420000 		.long	0x42bd
 12783 64b0 01       		.uleb128 0x1
 12784 64b1 29510000 		.long	0x5129
 12785 64b5 56       		.uleb128 0x56
 12786 64b6 77       		.uleb128 0x77
 12787 64b7 00000000 		.long	.LASF1089
 12788 64bb 7B       		.byte	0x7b
GAS LISTING x64lin/../common/event.s 			page 365


 12789 64bc 10020000 		.long	0x210
 12790 64c0 00       		.byte	0
 12791 64c1 00       		.byte	0
 12792 64c2 13       		.uleb128 0x13
 12793 64c3 EF420000 		.long	0x42ef
 12794 64c7 D0640000 		.long	0x64d0
 12795 64cb 03       		.byte	0x3
 12796 64cc DA640000 		.long	0x64da
 12797 64d0 11       		.uleb128 0x11
 12798 64d1 00000000 		.long	.LASF1084
 12799 64d5 45600000 		.long	0x6045
 12800 64d9 00       		.byte	0
 12801 64da 13       		.uleb128 0x13
 12802 64db F8180000 		.long	0x18f8
 12803 64df E8640000 		.long	0x64e8
 12804 64e3 02       		.byte	0x2
 12805 64e4 FB640000 		.long	0x64fb
 12806 64e8 11       		.uleb128 0x11
 12807 64e9 00000000 		.long	.LASF1084
 12808 64ed 4F600000 		.long	0x604f
 12809 64f1 11       		.uleb128 0x11
 12810 64f2 00000000 		.long	.LASF1087
 12811 64f6 54430000 		.long	0x4354
 12812 64fa 00       		.byte	0
 12813 64fb 2C       		.uleb128 0x2c
 12814 64fc DA640000 		.long	0x64da
 12815 6500 00000000 		.long	.LASF1088
 12816 6504 0C650000 		.long	0x650c
 12817 6508 12650000 		.long	0x6512
 12818 650c 1D       		.uleb128 0x1d
 12819 650d E8640000 		.long	0x64e8
 12820 6511 00       		.byte	0
 12821 6512 13       		.uleb128 0x13
 12822 6513 40200000 		.long	0x2040
 12823 6517 20650000 		.long	0x6520
 12824 651b 03       		.byte	0x3
 12825 651c 2A650000 		.long	0x652a
 12826 6520 11       		.uleb128 0x11
 12827 6521 00000000 		.long	.LASF1084
 12828 6525 B8600000 		.long	0x60b8
 12829 6529 00       		.byte	0
 12830 652a 13       		.uleb128 0x13
 12831 652b 88400000 		.long	0x4088
 12832 652f 38650000 		.long	0x6538
 12833 6533 03       		.byte	0x3
 12834 6534 5F650000 		.long	0x655f
 12835 6538 11       		.uleb128 0x11
 12836 6539 00000000 		.long	.LASF1084
 12837 653d DC5F0000 		.long	0x5fdc
 12838 6541 20       		.uleb128 0x20
 12839 6542 5F5F6E00 		.string	"__n"
 12840 6546 0D       		.byte	0xd
 12841 6547 67       		.byte	0x67
 12842 6548 1A       		.byte	0x1a
 12843 6549 B1400000 		.long	0x40b1
 12844 654d 01       		.uleb128 0x1
 12845 654e 29510000 		.long	0x5129
GAS LISTING x64lin/../common/event.s 			page 366


 12846 6552 56       		.uleb128 0x56
 12847 6553 77       		.uleb128 0x77
 12848 6554 00000000 		.long	.LASF1089
 12849 6558 7B       		.byte	0x7b
 12850 6559 10020000 		.long	0x210
 12851 655d 00       		.byte	0
 12852 655e 00       		.byte	0
 12853 655f 13       		.uleb128 0x13
 12854 6560 E3400000 		.long	0x40e3
 12855 6564 6D650000 		.long	0x656d
 12856 6568 03       		.byte	0x3
 12857 6569 77650000 		.long	0x6577
 12858 656d 11       		.uleb128 0x11
 12859 656e 00000000 		.long	.LASF1084
 12860 6572 F55F0000 		.long	0x5ff5
 12861 6576 00       		.byte	0
 12862 6577 13       		.uleb128 0x13
 12863 6578 D3200000 		.long	0x20d3
 12864 657c 85650000 		.long	0x6585
 12865 6580 03       		.byte	0x3
 12866 6581 B6650000 		.long	0x65b6
 12867 6585 11       		.uleb128 0x11
 12868 6586 00000000 		.long	.LASF1084
 12869 658a C2600000 		.long	0x60c2
 12870 658e 1E       		.uleb128 0x1e
 12871 658f 5F5F7000 		.string	"__p"
 12872 6593 05       		.byte	0x5
 12873 6594 4402     		.value	0x244
 12874 6596 26       		.byte	0x26
 12875 6597 CD1D0000 		.long	0x1dcd
 12876 659b 1E       		.uleb128 0x1e
 12877 659c 5F5F6E00 		.string	"__n"
 12878 65a0 05       		.byte	0x5
 12879 65a1 4402     		.value	0x244
 12880 65a3 32       		.byte	0x32
 12881 65a4 21010000 		.long	0x121
 12882 65a8 2D       		.uleb128 0x2d
 12883 65a9 00000000 		.long	.LASF1090
 12884 65ad 05       		.byte	0x5
 12885 65ae 4602     		.value	0x246
 12886 65b0 12       		.byte	0x12
 12887 65b1 33200000 		.long	0x2033
 12888 65b5 00       		.byte	0
 12889 65b6 13       		.uleb128 0x13
 12890 65b7 AE200000 		.long	0x20ae
 12891 65bb C4650000 		.long	0x65c4
 12892 65bf 03       		.byte	0x3
 12893 65c0 E8650000 		.long	0x65e8
 12894 65c4 11       		.uleb128 0x11
 12895 65c5 00000000 		.long	.LASF1084
 12896 65c9 C2600000 		.long	0x60c2
 12897 65cd 1E       		.uleb128 0x1e
 12898 65ce 5F5F6E00 		.string	"__n"
 12899 65d2 05       		.byte	0x5
 12900 65d3 3D02     		.value	0x23d
 12901 65d5 1E       		.byte	0x1e
 12902 65d6 21010000 		.long	0x121
GAS LISTING x64lin/../common/event.s 			page 367


 12903 65da 2D       		.uleb128 0x2d
 12904 65db 00000000 		.long	.LASF1090
 12905 65df 05       		.byte	0x5
 12906 65e0 3F02     		.value	0x23f
 12907 65e2 12       		.byte	0x12
 12908 65e3 33200000 		.long	0x2033
 12909 65e7 00       		.byte	0
 12910 65e8 15       		.uleb128 0x15
 12911 65e9 663A0000 		.long	0x3a66
 12912 65ed 0C660000 		.long	0x660c
 12913 65f1 1E       		.uleb128 0x1e
 12914 65f2 5F5F6100 		.string	"__a"
 12915 65f6 07       		.byte	0x7
 12916 65f7 CF01     		.value	0x1cf
 12917 65f9 20       		.byte	0x20
 12918 65fa D5620000 		.long	0x62d5
 12919 65fe 1E       		.uleb128 0x1e
 12920 65ff 5F5F6E00 		.string	"__n"
 12921 6603 07       		.byte	0x7
 12922 6604 CF01     		.value	0x1cf
 12923 6606 2F       		.byte	0x2f
 12924 6607 983A0000 		.long	0x3a98
 12925 660b 00       		.byte	0
 12926 660c 13       		.uleb128 0x13
 12927 660d 18190000 		.long	0x1918
 12928 6611 1A660000 		.long	0x661a
 12929 6615 03       		.byte	0x3
 12930 6616 30660000 		.long	0x6630
 12931 661a 11       		.uleb128 0x11
 12932 661b 00000000 		.long	.LASF1084
 12933 661f 4F600000 		.long	0x604f
 12934 6623 20       		.uleb128 0x20
 12935 6624 5F5F6E00 		.string	"__n"
 12936 6628 0C       		.byte	0xc
 12937 6629 B3       		.byte	0xb3
 12938 662a 17       		.byte	0x17
 12939 662b 21010000 		.long	0x121
 12940 662f 00       		.byte	0
 12941 6630 09       		.uleb128 0x9
 12942 6631 32430000 		.long	0x4332
 12943 6635 15       		.uleb128 0x15
 12944 6636 683B0000 		.long	0x3b68
 12945 663a 60660000 		.long	0x6660
 12946 663e 0A       		.uleb128 0xa
 12947 663f 5F547000 		.string	"_Tp"
 12948 6643 2B430000 		.long	0x432b
 12949 6647 20       		.uleb128 0x20
 12950 6648 5F5F6100 		.string	"__a"
 12951 664c 0E       		.byte	0xe
 12952 664d FE       		.byte	0xfe
 12953 664e 14       		.byte	0x14
 12954 664f 30660000 		.long	0x6630
 12955 6653 20       		.uleb128 0x20
 12956 6654 5F5F6200 		.string	"__b"
 12957 6658 0E       		.byte	0xe
 12958 6659 FE       		.byte	0xfe
 12959 665a 24       		.byte	0x24
GAS LISTING x64lin/../common/event.s 			page 368


 12960 665b 30660000 		.long	0x6630
 12961 665f 00       		.byte	0
 12962 6660 09       		.uleb128 0x9
 12963 6661 903B0000 		.long	0x3b90
 12964 6665 15       		.uleb128 0x15
 12965 6666 9C3B0000 		.long	0x3b9c
 12966 666a 9A660000 		.long	0x669a
 12967 666e 38       		.uleb128 0x38
 12968 666f 5F5F6900 		.string	"__i"
 12969 6673 2B430000 		.long	0x432b
 12970 6677 00       		.byte	0
 12971 6678 2A       		.uleb128 0x2a
 12972 6679 00000000 		.long	.LASF567
 12973 667d 8C660000 		.long	0x668c
 12974 6681 21       		.uleb128 0x21
 12975 6682 6A610000 		.long	0x616a
 12976 6686 21       		.uleb128 0x21
 12977 6687 E5300000 		.long	0x30e5
 12978 668b 00       		.byte	0
 12979 668c 1E       		.uleb128 0x1e
 12980 668d 5F5F7400 		.string	"__t"
 12981 6691 0B       		.byte	0xb
 12982 6692 7105     		.value	0x571
 12983 6694 1E       		.byte	0x1e
 12984 6695 85620000 		.long	0x6285
 12985 6699 00       		.byte	0
 12986 669a 15       		.uleb128 0x15
 12987 669b D53B0000 		.long	0x3bd5
 12988 669f D3660000 		.long	0x66d3
 12989 66a3 38       		.uleb128 0x38
 12990 66a4 5F5F6900 		.string	"__i"
 12991 66a8 2B430000 		.long	0x432b
 12992 66ac 00       		.byte	0
 12993 66ad 12       		.uleb128 0x12
 12994 66ae 00000000 		.long	.LASF534
 12995 66b2 6A610000 		.long	0x616a
 12996 66b6 2A       		.uleb128 0x2a
 12997 66b7 00000000 		.long	.LASF615
 12998 66bb C5660000 		.long	0x66c5
 12999 66bf 21       		.uleb128 0x21
 13000 66c0 E5300000 		.long	0x30e5
 13001 66c4 00       		.byte	0
 13002 66c5 1E       		.uleb128 0x1e
 13003 66c6 5F5F7400 		.string	"__t"
 13004 66ca 0B       		.byte	0xb
 13005 66cb 6105     		.value	0x561
 13006 66cd 35       		.byte	0x35
 13007 66ce 4E620000 		.long	0x624e
 13008 66d2 00       		.byte	0
 13009 66d3 15       		.uleb128 0x15
 13010 66d4 3B360000 		.long	0x363b
 13011 66d8 EA660000 		.long	0x66ea
 13012 66dc 1E       		.uleb128 0x1e
 13013 66dd 5F5F7400 		.string	"__t"
 13014 66e1 0B       		.byte	0xb
 13015 66e2 0C01     		.value	0x10c
 13016 66e4 1C       		.byte	0x1c
GAS LISTING x64lin/../common/event.s 			page 369


 13017 66e5 4E620000 		.long	0x624e
 13018 66e9 00       		.byte	0
 13019 66ea 15       		.uleb128 0x15
 13020 66eb C9350000 		.long	0x35c9
 13021 66ef 00670000 		.long	0x6700
 13022 66f3 20       		.uleb128 0x20
 13023 66f4 5F5F6200 		.string	"__b"
 13024 66f8 0B       		.byte	0xb
 13025 66f9 E9       		.byte	0xe9
 13026 66fa 1B       		.byte	0x1b
 13027 66fb 49620000 		.long	0x6249
 13028 66ff 00       		.byte	0
 13029 6700 13       		.uleb128 0x13
 13030 6701 AD1A0000 		.long	0x1aad
 13031 6705 0E670000 		.long	0x670e
 13032 6709 02       		.byte	0x2
 13033 670a 24670000 		.long	0x6724
 13034 670e 11       		.uleb128 0x11
 13035 670f 00000000 		.long	.LASF1084
 13036 6713 68600000 		.long	0x6068
 13037 6717 20       		.uleb128 0x20
 13038 6718 5F5F7800 		.string	"__x"
 13039 671c 05       		.byte	0x5
 13040 671d A8       		.byte	0xa8
 13041 671e 2E       		.byte	0x2e
 13042 671f 6D600000 		.long	0x606d
 13043 6723 00       		.byte	0
 13044 6724 2C       		.uleb128 0x2c
 13045 6725 00670000 		.long	0x6700
 13046 6729 00000000 		.long	.LASF1091
 13047 672d 35670000 		.long	0x6735
 13048 6731 40670000 		.long	0x6740
 13049 6735 1D       		.uleb128 0x1d
 13050 6736 0E670000 		.long	0x670e
 13051 673a 1D       		.uleb128 0x1d
 13052 673b 17670000 		.long	0x6717
 13053 673f 00       		.byte	0
 13054 6740 78       		.uleb128 0x78
 13055 6741 131A0000 		.long	0x1a13
 13056 6745 15       		.uleb128 0x15
 13057 6746 67170000 		.long	0x1767
 13058 674a 69670000 		.long	0x6769
 13059 674e 1E       		.uleb128 0x1e
 13060 674f 5F5F6100 		.string	"__a"
 13061 6753 07       		.byte	0x7
 13062 6754 CF01     		.value	0x1cf
 13063 6756 20       		.byte	0x20
 13064 6757 0E600000 		.long	0x600e
 13065 675b 1E       		.uleb128 0x1e
 13066 675c 5F5F6E00 		.string	"__n"
 13067 6760 07       		.byte	0x7
 13068 6761 CF01     		.value	0x1cf
 13069 6763 2F       		.byte	0x2f
 13070 6764 99170000 		.long	0x1799
 13071 6768 00       		.byte	0
 13072 6769 13       		.uleb128 0x13
 13073 676a 04170000 		.long	0x1704
GAS LISTING x64lin/../common/event.s 			page 370


 13074 676e 77670000 		.long	0x6777
 13075 6772 03       		.byte	0x3
 13076 6773 8D670000 		.long	0x678d
 13077 6777 11       		.uleb128 0x11
 13078 6778 00000000 		.long	.LASF1084
 13079 677c FF5F0000 		.long	0x5fff
 13080 6780 20       		.uleb128 0x20
 13081 6781 5F5F6E00 		.string	"__n"
 13082 6785 0C       		.byte	0xc
 13083 6786 B3       		.byte	0xb3
 13084 6787 17       		.byte	0x17
 13085 6788 21010000 		.long	0x121
 13086 678c 00       		.byte	0
 13087 678d 13       		.uleb128 0x13
 13088 678e AC2D0000 		.long	0x2dac
 13089 6792 9B670000 		.long	0x679b
 13090 6796 01       		.byte	0x1
 13091 6797 02680000 		.long	0x6802
 13092 679b 11       		.uleb128 0x11
 13093 679c 00000000 		.long	.LASF1084
 13094 67a0 DB600000 		.long	0x60db
 13095 67a4 0E       		.uleb128 0xe
 13096 67a5 00000000 		.long	.LASF1092
 13097 67a9 06       		.byte	0x6
 13098 67aa A403     		.value	0x3a4
 13099 67ac 21       		.byte	0x21
 13100 67ad 87220000 		.long	0x2287
 13101 67b1 0E       		.uleb128 0xe
 13102 67b2 00000000 		.long	.LASF1093
 13103 67b6 06       		.byte	0x6
 13104 67b7 A403     		.value	0x3a4
 13105 67b9 36       		.byte	0x36
 13106 67ba 783F0000 		.long	0x3f78
 13107 67be 2D       		.uleb128 0x2d
 13108 67bf 00000000 		.long	.LASF1094
 13109 67c3 06       		.byte	0x6
 13110 67c4 A603     		.value	0x3a6
 13111 67c6 17       		.byte	0x17
 13112 67c7 94220000 		.long	0x2294
 13113 67cb 2D       		.uleb128 0x2d
 13114 67cc 00000000 		.long	.LASF1095
 13115 67d0 06       		.byte	0x6
 13116 67d1 A803     		.value	0x3a8
 13117 67d3 17       		.byte	0x17
 13118 67d4 94220000 		.long	0x2294
 13119 67d8 2D       		.uleb128 0x2d
 13120 67d9 00000000 		.long	.LASF1096
 13121 67dd 06       		.byte	0x6
 13122 67de AA03     		.value	0x3aa
 13123 67e0 14       		.byte	0x14
 13124 67e1 6A2E0000 		.long	0x2e6a
 13125 67e5 56       		.uleb128 0x56
 13126 67e6 2D       		.uleb128 0x2d
 13127 67e7 00000000 		.long	.LASF1097
 13128 67eb 06       		.byte	0x6
 13129 67ec BB03     		.value	0x3bb
 13130 67ee 0E       		.byte	0xe
GAS LISTING x64lin/../common/event.s 			page 371


 13131 67ef 87220000 		.long	0x2287
 13132 67f3 2D       		.uleb128 0x2d
 13133 67f4 00000000 		.long	.LASF1098
 13134 67f8 06       		.byte	0x6
 13135 67f9 BF03     		.value	0x3bf
 13136 67fb 11       		.byte	0x11
 13137 67fc 6A2E0000 		.long	0x2e6a
 13138 6800 00       		.byte	0
 13139 6801 00       		.byte	0
 13140 6802 15       		.uleb128 0x15
 13141 6803 123C0000 		.long	0x3c12
 13142 6807 45680000 		.long	0x6845
 13143 680b 12       		.uleb128 0x12
 13144 680c 00000000 		.long	.LASF42
 13145 6810 36600000 		.long	0x6036
 13146 6814 12       		.uleb128 0x12
 13147 6815 00000000 		.long	.LASF43
 13148 6819 36600000 		.long	0x6036
 13149 681d 0E       		.uleb128 0xe
 13150 681e 00000000 		.long	.LASF1099
 13151 6822 0E       		.byte	0xe
 13152 6823 5003     		.value	0x350
 13153 6825 18       		.byte	0x18
 13154 6826 36600000 		.long	0x6036
 13155 682a 0E       		.uleb128 0xe
 13156 682b 00000000 		.long	.LASF1100
 13157 682f 0E       		.byte	0xe
 13158 6830 5003     		.value	0x350
 13159 6832 26       		.byte	0x26
 13160 6833 36600000 		.long	0x6036
 13161 6837 0E       		.uleb128 0xe
 13162 6838 00000000 		.long	.LASF1101
 13163 683c 0E       		.byte	0xe
 13164 683d 5003     		.value	0x350
 13165 683f 33       		.byte	0x33
 13166 6840 36600000 		.long	0x6036
 13167 6844 00       		.byte	0
 13168 6845 15       		.uleb128 0x15
 13169 6846 493C0000 		.long	0x3c49
 13170 684a 92680000 		.long	0x6892
 13171 684e 19       		.uleb128 0x19
 13172 684f 00000000 		.long	.LASF34
 13173 6853 783F0000 		.long	0x3f78
 13174 6857 00       		.byte	0
 13175 6858 0A       		.uleb128 0xa
 13176 6859 5F494900 		.string	"_II"
 13177 685d 36600000 		.long	0x6036
 13178 6861 0A       		.uleb128 0xa
 13179 6862 5F4F4900 		.string	"_OI"
 13180 6866 36600000 		.long	0x6036
 13181 686a 0E       		.uleb128 0xe
 13182 686b 00000000 		.long	.LASF1099
 13183 686f 0E       		.byte	0xe
 13184 6870 1C03     		.value	0x31c
 13185 6872 20       		.byte	0x20
 13186 6873 36600000 		.long	0x6036
 13187 6877 0E       		.uleb128 0xe
GAS LISTING x64lin/../common/event.s 			page 372


 13188 6878 00000000 		.long	.LASF1100
 13189 687c 0E       		.byte	0xe
 13190 687d 1C03     		.value	0x31c
 13191 687f 2D       		.byte	0x2d
 13192 6880 36600000 		.long	0x6036
 13193 6884 0E       		.uleb128 0xe
 13194 6885 00000000 		.long	.LASF1101
 13195 6889 0E       		.byte	0xe
 13196 688a 1C03     		.value	0x31c
 13197 688c 39       		.byte	0x39
 13198 688d 36600000 		.long	0x6036
 13199 6891 00       		.byte	0
 13200 6892 15       		.uleb128 0x15
 13201 6893 8A3C0000 		.long	0x3c8a
 13202 6897 DF680000 		.long	0x68df
 13203 689b 19       		.uleb128 0x19
 13204 689c 00000000 		.long	.LASF34
 13205 68a0 783F0000 		.long	0x3f78
 13206 68a4 00       		.byte	0
 13207 68a5 12       		.uleb128 0x12
 13208 68a6 00000000 		.long	.LASF42
 13209 68aa 36600000 		.long	0x6036
 13210 68ae 12       		.uleb128 0x12
 13211 68af 00000000 		.long	.LASF43
 13212 68b3 36600000 		.long	0x6036
 13213 68b7 0E       		.uleb128 0xe
 13214 68b8 00000000 		.long	.LASF1099
 13215 68bc 0E       		.byte	0xe
 13216 68bd 0003     		.value	0x300
 13217 68bf 22       		.byte	0x22
 13218 68c0 36600000 		.long	0x6036
 13219 68c4 0E       		.uleb128 0xe
 13220 68c5 00000000 		.long	.LASF1100
 13221 68c9 0E       		.byte	0xe
 13222 68ca 0003     		.value	0x300
 13223 68cc 30       		.byte	0x30
 13224 68cd 36600000 		.long	0x6036
 13225 68d1 0E       		.uleb128 0xe
 13226 68d2 00000000 		.long	.LASF1101
 13227 68d6 0E       		.byte	0xe
 13228 68d7 0003     		.value	0x300
 13229 68d9 3D       		.byte	0x3d
 13230 68da 36600000 		.long	0x6036
 13231 68de 00       		.byte	0
 13232 68df 15       		.uleb128 0x15
 13233 68e0 CB3C0000 		.long	0x3ccb
 13234 68e4 2C690000 		.long	0x692c
 13235 68e8 19       		.uleb128 0x19
 13236 68e9 00000000 		.long	.LASF34
 13237 68ed 783F0000 		.long	0x3f78
 13238 68f1 00       		.byte	0
 13239 68f2 12       		.uleb128 0x12
 13240 68f3 00000000 		.long	.LASF42
 13241 68f7 36600000 		.long	0x6036
 13242 68fb 12       		.uleb128 0x12
 13243 68fc 00000000 		.long	.LASF43
 13244 6900 36600000 		.long	0x6036
GAS LISTING x64lin/../common/event.s 			page 373


 13245 6904 0E       		.uleb128 0xe
 13246 6905 00000000 		.long	.LASF1099
 13247 6909 0E       		.byte	0xe
 13248 690a EE02     		.value	0x2ee
 13249 690c 22       		.byte	0x22
 13250 690d 36600000 		.long	0x6036
 13251 6911 0E       		.uleb128 0xe
 13252 6912 00000000 		.long	.LASF1100
 13253 6916 0E       		.byte	0xe
 13254 6917 EE02     		.value	0x2ee
 13255 6919 30       		.byte	0x30
 13256 691a 36600000 		.long	0x6036
 13257 691e 0E       		.uleb128 0xe
 13258 691f 00000000 		.long	.LASF1101
 13259 6923 0E       		.byte	0xe
 13260 6924 EE02     		.value	0x2ee
 13261 6926 3D       		.byte	0x3d
 13262 6927 36600000 		.long	0x6036
 13263 692b 00       		.byte	0
 13264 692c 15       		.uleb128 0x15
 13265 692d 003A0000 		.long	0x3a00
 13266 6931 73690000 		.long	0x6973
 13267 6935 0A       		.uleb128 0xa
 13268 6936 5F547000 		.string	"_Tp"
 13269 693a E65F0000 		.long	0x5fe6
 13270 693e 0E       		.uleb128 0xe
 13271 693f 00000000 		.long	.LASF1099
 13272 6943 0E       		.byte	0xe
 13273 6944 DB02     		.value	0x2db
 13274 6946 1B       		.byte	0x1b
 13275 6947 DF620000 		.long	0x62df
 13276 694b 0E       		.uleb128 0xe
 13277 694c 00000000 		.long	.LASF1100
 13278 6950 0E       		.byte	0xe
 13279 6951 DB02     		.value	0x2db
 13280 6953 2F       		.byte	0x2f
 13281 6954 DF620000 		.long	0x62df
 13282 6958 0E       		.uleb128 0xe
 13283 6959 00000000 		.long	.LASF1101
 13284 695d 0E       		.byte	0xe
 13285 695e DB02     		.value	0x2db
 13286 6960 3C       		.byte	0x3c
 13287 6961 36600000 		.long	0x6036
 13288 6965 2D       		.uleb128 0x2d
 13289 6966 00000000 		.long	.LASF1102
 13290 696a 0E       		.byte	0xe
 13291 696b E402     		.value	0x2e4
 13292 696d 14       		.byte	0x14
 13293 696e 4A050000 		.long	0x54a
 13294 6972 00       		.byte	0
 13295 6973 15       		.uleb128 0x15
 13296 6974 96020000 		.long	0x296
 13297 6978 C2690000 		.long	0x69c2
 13298 697c 12       		.uleb128 0x12
 13299 697d 00000000 		.long	.LASF42
 13300 6981 36600000 		.long	0x6036
 13301 6985 12       		.uleb128 0x12
GAS LISTING x64lin/../common/event.s 			page 374


 13302 6986 00000000 		.long	.LASF43
 13303 698a 36600000 		.long	0x6036
 13304 698e 0E       		.uleb128 0xe
 13305 698f 00000000 		.long	.LASF1099
 13306 6993 0E       		.byte	0xe
 13307 6994 B902     		.value	0x2b9
 13308 6996 15       		.byte	0x15
 13309 6997 36600000 		.long	0x6036
 13310 699b 0E       		.uleb128 0xe
 13311 699c 00000000 		.long	.LASF1100
 13312 69a0 0E       		.byte	0xe
 13313 69a1 B902     		.value	0x2b9
 13314 69a3 23       		.byte	0x23
 13315 69a4 36600000 		.long	0x6036
 13316 69a8 0E       		.uleb128 0xe
 13317 69a9 00000000 		.long	.LASF1101
 13318 69ad 0E       		.byte	0xe
 13319 69ae B902     		.value	0x2b9
 13320 69b0 30       		.byte	0x30
 13321 69b1 36600000 		.long	0x6036
 13322 69b5 79       		.uleb128 0x79
 13323 69b6 5F5F6E00 		.string	"__n"
 13324 69ba BC02     		.value	0x2bc
 13325 69bc 06       		.byte	0x6
 13326 69bd E6390000 		.long	0x39e6
 13327 69c1 00       		.byte	0
 13328 69c2 15       		.uleb128 0x15
 13329 69c3 0C3D0000 		.long	0x3d0c
 13330 69c7 056A0000 		.long	0x6a05
 13331 69cb 0A       		.uleb128 0xa
 13332 69cc 5F494900 		.string	"_II"
 13333 69d0 36600000 		.long	0x6036
 13334 69d4 0A       		.uleb128 0xa
 13335 69d5 5F4F4900 		.string	"_OI"
 13336 69d9 36600000 		.long	0x6036
 13337 69dd 0E       		.uleb128 0xe
 13338 69de 00000000 		.long	.LASF1099
 13339 69e2 0E       		.byte	0xe
 13340 69e3 6302     		.value	0x263
 13341 69e5 0E       		.byte	0xe
 13342 69e6 36600000 		.long	0x6036
 13343 69ea 0E       		.uleb128 0xe
 13344 69eb 00000000 		.long	.LASF1100
 13345 69ef 0E       		.byte	0xe
 13346 69f0 6302     		.value	0x263
 13347 69f2 1B       		.byte	0x1b
 13348 69f3 36600000 		.long	0x6036
 13349 69f7 0E       		.uleb128 0xe
 13350 69f8 00000000 		.long	.LASF1101
 13351 69fc 0E       		.byte	0xe
 13352 69fd 6302     		.value	0x263
 13353 69ff 27       		.byte	0x27
 13354 6a00 36600000 		.long	0x6036
 13355 6a04 00       		.byte	0
 13356 6a05 15       		.uleb128 0x15
 13357 6a06 433D0000 		.long	0x3d43
 13358 6a0a 526A0000 		.long	0x6a52
GAS LISTING x64lin/../common/event.s 			page 375


 13359 6a0e 19       		.uleb128 0x19
 13360 6a0f 00000000 		.long	.LASF34
 13361 6a13 783F0000 		.long	0x3f78
 13362 6a17 00       		.byte	0
 13363 6a18 0A       		.uleb128 0xa
 13364 6a19 5F494900 		.string	"_II"
 13365 6a1d 36600000 		.long	0x6036
 13366 6a21 0A       		.uleb128 0xa
 13367 6a22 5F4F4900 		.string	"_OI"
 13368 6a26 36600000 		.long	0x6036
 13369 6a2a 0E       		.uleb128 0xe
 13370 6a2b 00000000 		.long	.LASF1099
 13371 6a2f 0E       		.byte	0xe
 13372 6a30 0F02     		.value	0x20f
 13373 6a32 17       		.byte	0x17
 13374 6a33 36600000 		.long	0x6036
 13375 6a37 0E       		.uleb128 0xe
 13376 6a38 00000000 		.long	.LASF1100
 13377 6a3c 0E       		.byte	0xe
 13378 6a3d 0F02     		.value	0x20f
 13379 6a3f 24       		.byte	0x24
 13380 6a40 36600000 		.long	0x6036
 13381 6a44 0E       		.uleb128 0xe
 13382 6a45 00000000 		.long	.LASF1101
 13383 6a49 0E       		.byte	0xe
 13384 6a4a 0F02     		.value	0x20f
 13385 6a4c 30       		.byte	0x30
 13386 6a4d 36600000 		.long	0x6036
 13387 6a51 00       		.byte	0
 13388 6a52 09       		.uleb128 0x9
 13389 6a53 3B600000 		.long	0x603b
 13390 6a57 15       		.uleb128 0x15
 13391 6a58 843D0000 		.long	0x3d84
 13392 6a5c 7C6A0000 		.long	0x6a7c
 13393 6a60 12       		.uleb128 0x12
 13394 6a61 00000000 		.long	.LASF630
 13395 6a65 36600000 		.long	0x6036
 13396 6a69 01       		.uleb128 0x1
 13397 6a6a 526A0000 		.long	0x6a52
 13398 6a6e 0E       		.uleb128 0xe
 13399 6a6f 00000000 		.long	.LASF1103
 13400 6a73 0E       		.byte	0xe
 13401 6a74 4F01     		.value	0x14f
 13402 6a76 2E       		.byte	0x2e
 13403 6a77 36600000 		.long	0x6036
 13404 6a7b 00       		.byte	0
 13405 6a7c 15       		.uleb128 0x15
 13406 6a7d AD3D0000 		.long	0x3dad
 13407 6a81 C96A0000 		.long	0x6ac9
 13408 6a85 19       		.uleb128 0x19
 13409 6a86 00000000 		.long	.LASF34
 13410 6a8a 783F0000 		.long	0x3f78
 13411 6a8e 00       		.byte	0
 13412 6a8f 0A       		.uleb128 0xa
 13413 6a90 5F494900 		.string	"_II"
 13414 6a94 36600000 		.long	0x6036
 13415 6a98 0A       		.uleb128 0xa
GAS LISTING x64lin/../common/event.s 			page 376


 13416 6a99 5F4F4900 		.string	"_OI"
 13417 6a9d 36600000 		.long	0x6036
 13418 6aa1 0E       		.uleb128 0xe
 13419 6aa2 00000000 		.long	.LASF1099
 13420 6aa6 0E       		.byte	0xe
 13421 6aa7 0902     		.value	0x209
 13422 6aa9 18       		.byte	0x18
 13423 6aaa 36600000 		.long	0x6036
 13424 6aae 0E       		.uleb128 0xe
 13425 6aaf 00000000 		.long	.LASF1100
 13426 6ab3 0E       		.byte	0xe
 13427 6ab4 0902     		.value	0x209
 13428 6ab6 25       		.byte	0x25
 13429 6ab7 36600000 		.long	0x6036
 13430 6abb 0E       		.uleb128 0xe
 13431 6abc 00000000 		.long	.LASF1101
 13432 6ac0 0E       		.byte	0xe
 13433 6ac1 0902     		.value	0x209
 13434 6ac3 31       		.byte	0x31
 13435 6ac4 36600000 		.long	0x6036
 13436 6ac8 00       		.byte	0
 13437 6ac9 15       		.uleb128 0x15
 13438 6aca EE3D0000 		.long	0x3dee
 13439 6ace 166B0000 		.long	0x6b16
 13440 6ad2 19       		.uleb128 0x19
 13441 6ad3 00000000 		.long	.LASF34
 13442 6ad7 783F0000 		.long	0x3f78
 13443 6adb 00       		.byte	0
 13444 6adc 0A       		.uleb128 0xa
 13445 6add 5F494900 		.string	"_II"
 13446 6ae1 36600000 		.long	0x6036
 13447 6ae5 0A       		.uleb128 0xa
 13448 6ae6 5F4F4900 		.string	"_OI"
 13449 6aea 36600000 		.long	0x6036
 13450 6aee 0E       		.uleb128 0xe
 13451 6aef 00000000 		.long	.LASF1099
 13452 6af3 0E       		.byte	0xe
 13453 6af4 E601     		.value	0x1e6
 13454 6af6 18       		.byte	0x18
 13455 6af7 36600000 		.long	0x6036
 13456 6afb 0E       		.uleb128 0xe
 13457 6afc 00000000 		.long	.LASF1100
 13458 6b00 0E       		.byte	0xe
 13459 6b01 E601     		.value	0x1e6
 13460 6b03 25       		.byte	0x25
 13461 6b04 36600000 		.long	0x6036
 13462 6b08 0E       		.uleb128 0xe
 13463 6b09 00000000 		.long	.LASF1101
 13464 6b0d 0E       		.byte	0xe
 13465 6b0e E601     		.value	0x1e6
 13466 6b10 31       		.byte	0x31
 13467 6b11 36600000 		.long	0x6036
 13468 6b15 00       		.byte	0
 13469 6b16 15       		.uleb128 0x15
 13470 6b17 5C050000 		.long	0x55c
 13471 6b1b 5D6B0000 		.long	0x6b5d
 13472 6b1f 0A       		.uleb128 0xa
GAS LISTING x64lin/../common/event.s 			page 377


 13473 6b20 5F547000 		.string	"_Tp"
 13474 6b24 E65F0000 		.long	0x5fe6
 13475 6b28 0E       		.uleb128 0xe
 13476 6b29 00000000 		.long	.LASF1099
 13477 6b2d 0E       		.byte	0xe
 13478 6b2e A401     		.value	0x1a4
 13479 6b30 16       		.byte	0x16
 13480 6b31 DF620000 		.long	0x62df
 13481 6b35 0E       		.uleb128 0xe
 13482 6b36 00000000 		.long	.LASF1100
 13483 6b3a 0E       		.byte	0xe
 13484 6b3b A401     		.value	0x1a4
 13485 6b3d 2A       		.byte	0x2a
 13486 6b3e DF620000 		.long	0x62df
 13487 6b42 0E       		.uleb128 0xe
 13488 6b43 00000000 		.long	.LASF1101
 13489 6b47 0E       		.byte	0xe
 13490 6b48 A401     		.value	0x1a4
 13491 6b4a 37       		.byte	0x37
 13492 6b4b 36600000 		.long	0x6036
 13493 6b4f 2D       		.uleb128 0x2d
 13494 6b50 00000000 		.long	.LASF1102
 13495 6b54 0E       		.byte	0xe
 13496 6b55 AD01     		.value	0x1ad
 13497 6b57 14       		.byte	0x14
 13498 6b58 4A050000 		.long	0x54a
 13499 6b5c 00       		.byte	0
 13500 6b5d 15       		.uleb128 0x15
 13501 6b5e 34020000 		.long	0x234
 13502 6b62 BB6B0000 		.long	0x6bbb
 13503 6b66 0A       		.uleb128 0xa
 13504 6b67 5F494900 		.string	"_II"
 13505 6b6b 36600000 		.long	0x6036
 13506 6b6f 0A       		.uleb128 0xa
 13507 6b70 5F4F4900 		.string	"_OI"
 13508 6b74 36600000 		.long	0x6036
 13509 6b78 0E       		.uleb128 0xe
 13510 6b79 00000000 		.long	.LASF1099
 13511 6b7d 0E       		.byte	0xe
 13512 6b7e 7C01     		.value	0x17c
 13513 6b80 0F       		.byte	0xf
 13514 6b81 36600000 		.long	0x6036
 13515 6b85 0E       		.uleb128 0xe
 13516 6b86 00000000 		.long	.LASF1100
 13517 6b8a 0E       		.byte	0xe
 13518 6b8b 7C01     		.value	0x17c
 13519 6b8d 1C       		.byte	0x1c
 13520 6b8e 36600000 		.long	0x6036
 13521 6b92 0E       		.uleb128 0xe
 13522 6b93 00000000 		.long	.LASF1101
 13523 6b97 0E       		.byte	0xe
 13524 6b98 7C01     		.value	0x17c
 13525 6b9a 28       		.byte	0x28
 13526 6b9b 36600000 		.long	0x6036
 13527 6b9f 18       		.uleb128 0x18
 13528 6ba0 00000000 		.long	.LASF1104
 13529 6ba4 0E       		.byte	0xe
GAS LISTING x64lin/../common/event.s 			page 378


 13530 6ba5 7E01     		.value	0x17e
 13531 6ba7 3B       		.byte	0x3b
 13532 6ba8 E6390000 		.long	0x39e6
 13533 6bac 56       		.uleb128 0x56
 13534 6bad 79       		.uleb128 0x79
 13535 6bae 5F5F6E00 		.string	"__n"
 13536 6bb2 7F01     		.value	0x17f
 13537 6bb4 12       		.byte	0x12
 13538 6bb5 9F6B0000 		.long	0x6b9f
 13539 6bb9 00       		.byte	0
 13540 6bba 00       		.byte	0
 13541 6bbb 15       		.uleb128 0x15
 13542 6bbc 2F3E0000 		.long	0x3e2f
 13543 6bc0 DB6B0000 		.long	0x6bdb
 13544 6bc4 12       		.uleb128 0x12
 13545 6bc5 00000000 		.long	.LASF630
 13546 6bc9 36600000 		.long	0x6036
 13547 6bcd 0E       		.uleb128 0xe
 13548 6bce 00000000 		.long	.LASF1105
 13549 6bd2 0E       		.byte	0xe
 13550 6bd3 3901     		.value	0x139
 13551 6bd5 1C       		.byte	0x1c
 13552 6bd6 36600000 		.long	0x6036
 13553 6bda 00       		.byte	0
 13554 6bdb 15       		.uleb128 0x15
 13555 6bdc 533E0000 		.long	0x3e53
 13556 6be0 FB6B0000 		.long	0x6bfb
 13557 6be4 12       		.uleb128 0x12
 13558 6be5 00000000 		.long	.LASF630
 13559 6be9 36600000 		.long	0x6036
 13560 6bed 0E       		.uleb128 0xe
 13561 6bee 00000000 		.long	.LASF1105
 13562 6bf2 2B       		.byte	0x2b
 13563 6bf3 3002     		.value	0x230
 13564 6bf5 1C       		.byte	0x1c
 13565 6bf6 36600000 		.long	0x6036
 13566 6bfa 00       		.byte	0
 13567 6bfb 13       		.uleb128 0x13
 13568 6bfc 13200000 		.long	0x2013
 13569 6c00 096C0000 		.long	0x6c09
 13570 6c04 03       		.byte	0x3
 13571 6c05 136C0000 		.long	0x6c13
 13572 6c09 11       		.uleb128 0x11
 13573 6c0a 00000000 		.long	.LASF1084
 13574 6c0e B8600000 		.long	0x60b8
 13575 6c12 00       		.byte	0
 13576 6c13 15       		.uleb128 0x15
 13577 6c14 A12A0000 		.long	0x2aa1
 13578 6c18 446C0000 		.long	0x6c44
 13579 6c1c 1E       		.uleb128 0x1e
 13580 6c1d 5F5F6100 		.string	"__a"
 13581 6c21 05       		.byte	0x5
 13582 6c22 2A07     		.value	0x72a
 13583 6c24 29       		.byte	0x29
 13584 6c25 08610000 		.long	0x6108
 13585 6c29 2D       		.uleb128 0x2d
 13586 6c2a 00000000 		.long	.LASF1106
GAS LISTING x64lin/../common/event.s 			page 379


 13587 6c2e 05       		.byte	0x5
 13588 6c2f 2C07     		.value	0x72c
 13589 6c31 0F       		.byte	0xf
 13590 6c32 2E010000 		.long	0x12e
 13591 6c36 2D       		.uleb128 0x2d
 13592 6c37 00000000 		.long	.LASF1107
 13593 6c3b 05       		.byte	0x5
 13594 6c3c 2D07     		.value	0x72d
 13595 6c3e 0F       		.byte	0xf
 13596 6c3f 2E010000 		.long	0x12e
 13597 6c43 00       		.byte	0
 13598 6c44 15       		.uleb128 0x15
 13599 6c45 773E0000 		.long	0x3e77
 13600 6c49 6F6C0000 		.long	0x6c6f
 13601 6c4d 0A       		.uleb128 0xa
 13602 6c4e 5F547000 		.string	"_Tp"
 13603 6c52 2B430000 		.long	0x432b
 13604 6c56 20       		.uleb128 0x20
 13605 6c57 5F5F6100 		.string	"__a"
 13606 6c5b 0E       		.byte	0xe
 13607 6c5c E6       		.byte	0xe6
 13608 6c5d 14       		.byte	0x14
 13609 6c5e 30660000 		.long	0x6630
 13610 6c62 20       		.uleb128 0x20
 13611 6c63 5F5F6200 		.string	"__b"
 13612 6c67 0E       		.byte	0xe
 13613 6c68 E6       		.byte	0xe6
 13614 6c69 24       		.byte	0x24
 13615 6c6a 30660000 		.long	0x6630
 13616 6c6e 00       		.byte	0
 13617 6c6f 15       		.uleb128 0x15
 13618 6c70 F5170000 		.long	0x17f5
 13619 6c74 866C0000 		.long	0x6c86
 13620 6c78 1E       		.uleb128 0x1e
 13621 6c79 5F5F6100 		.string	"__a"
 13622 6c7d 07       		.byte	0x7
 13623 6c7e 2302     		.value	0x223
 13624 6c80 26       		.byte	0x26
 13625 6c81 13600000 		.long	0x6013
 13626 6c85 00       		.byte	0
 13627 6c86 09       		.uleb128 0x9
 13628 6c87 851B0000 		.long	0x1b85
 13629 6c8b 15       		.uleb128 0x15
 13630 6c8c 9F3E0000 		.long	0x3e9f
 13631 6c90 AF6C0000 		.long	0x6caf
 13632 6c94 1E       		.uleb128 0x1e
 13633 6c95 5F5F7800 		.string	"__x"
 13634 6c99 05       		.byte	0x5
 13635 6c9a 6101     		.value	0x161
 13636 6c9c 1E       		.byte	0x1e
 13637 6c9d 866C0000 		.long	0x6c86
 13638 6ca1 1E       		.uleb128 0x1e
 13639 6ca2 5F5F7900 		.string	"__y"
 13640 6ca6 05       		.byte	0x5
 13641 6ca7 6101     		.value	0x161
 13642 6ca9 30       		.byte	0x30
 13643 6caa 866C0000 		.long	0x6c86
GAS LISTING x64lin/../common/event.s 			page 380


 13644 6cae 00       		.byte	0
 13645 6caf 13       		.uleb128 0x13
 13646 6cb0 FF310000 		.long	0x31ff
 13647 6cb4 BD6C0000 		.long	0x6cbd
 13648 6cb8 03       		.byte	0x3
 13649 6cb9 C76C0000 		.long	0x6cc7
 13650 6cbd 11       		.uleb128 0x11
 13651 6cbe 00000000 		.long	.LASF1084
 13652 6cc2 8F620000 		.long	0x628f
 13653 6cc6 00       		.byte	0
 13654 6cc7 13       		.uleb128 0x13
 13655 6cc8 311B0000 		.long	0x1b31
 13656 6ccc D56C0000 		.long	0x6cd5
 13657 6cd0 03       		.byte	0x3
 13658 6cd1 DF6C0000 		.long	0x6cdf
 13659 6cd5 11       		.uleb128 0x11
 13660 6cd6 00000000 		.long	.LASF1084
 13661 6cda 7C600000 		.long	0x607c
 13662 6cde 00       		.byte	0
 13663 6cdf 13       		.uleb128 0x13
 13664 6ce0 CB1B0000 		.long	0x1bcb
 13665 6ce4 ED6C0000 		.long	0x6ced
 13666 6ce8 03       		.byte	0x3
 13667 6ce9 F76C0000 		.long	0x6cf7
 13668 6ced 11       		.uleb128 0x11
 13669 6cee 00000000 		.long	.LASF1084
 13670 6cf2 68600000 		.long	0x6068
 13671 6cf6 00       		.byte	0
 13672 6cf7 13       		.uleb128 0x13
 13673 6cf8 2D250000 		.long	0x252d
 13674 6cfc 056D0000 		.long	0x6d05
 13675 6d00 03       		.byte	0x3
 13676 6d01 0F6D0000 		.long	0x6d0f
 13677 6d05 11       		.uleb128 0x11
 13678 6d06 00000000 		.long	.LASF1084
 13679 6d0a DB600000 		.long	0x60db
 13680 6d0e 00       		.byte	0
 13681 6d0f 13       		.uleb128 0x13
 13682 6d10 811C0000 		.long	0x1c81
 13683 6d14 1D6D0000 		.long	0x6d1d
 13684 6d18 03       		.byte	0x3
 13685 6d19 346D0000 		.long	0x6d34
 13686 6d1d 11       		.uleb128 0x11
 13687 6d1e 00000000 		.long	.LASF1084
 13688 6d22 68600000 		.long	0x6068
 13689 6d26 0E       		.uleb128 0xe
 13690 6d27 00000000 		.long	.LASF1108
 13691 6d2b 05       		.byte	0x5
 13692 6d2c 0401     		.value	0x104
 13693 6d2e 20       		.byte	0x20
 13694 6d2f 561A0000 		.long	0x1a56
 13695 6d33 00       		.byte	0
 13696 6d34 13       		.uleb128 0x13
 13697 6d35 6D200000 		.long	0x206d
 13698 6d39 426D0000 		.long	0x6d42
 13699 6d3d 03       		.byte	0x3
 13700 6d3e 4C6D0000 		.long	0x6d4c
GAS LISTING x64lin/../common/event.s 			page 381


 13701 6d42 11       		.uleb128 0x11
 13702 6d43 00000000 		.long	.LASF1084
 13703 6d47 C2600000 		.long	0x60c2
 13704 6d4b 00       		.byte	0
 13705 6d4c 13       		.uleb128 0x13
 13706 6d4d 6A2D0000 		.long	0x2d6a
 13707 6d51 5A6D0000 		.long	0x6d5a
 13708 6d55 03       		.byte	0x3
 13709 6d56 716D0000 		.long	0x6d71
 13710 6d5a 11       		.uleb128 0x11
 13711 6d5b 00000000 		.long	.LASF1084
 13712 6d5f DB600000 		.long	0x60db
 13713 6d63 0E       		.uleb128 0xe
 13714 6d64 00000000 		.long	.LASF1092
 13715 6d68 05       		.byte	0x5
 13716 6d69 4E08     		.value	0x84e
 13717 6d6b 28       		.byte	0x28
 13718 6d6c 87220000 		.long	0x2287
 13719 6d70 00       		.byte	0
 13720 6d71 13       		.uleb128 0x13
 13721 6d72 A3260000 		.long	0x26a3
 13722 6d76 7F6D0000 		.long	0x6d7f
 13723 6d7a 03       		.byte	0x3
 13724 6d7b 896D0000 		.long	0x6d89
 13725 6d7f 11       		.uleb128 0x11
 13726 6d80 00000000 		.long	.LASF1084
 13727 6d84 FE600000 		.long	0x60fe
 13728 6d88 00       		.byte	0
 13729 6d89 13       		.uleb128 0x13
 13730 6d8a 83260000 		.long	0x2683
 13731 6d8e 976D0000 		.long	0x6d97
 13732 6d92 03       		.byte	0x3
 13733 6d93 A16D0000 		.long	0x6da1
 13734 6d97 11       		.uleb128 0x11
 13735 6d98 00000000 		.long	.LASF1084
 13736 6d9c FE600000 		.long	0x60fe
 13737 6da0 00       		.byte	0
 13738 6da1 13       		.uleb128 0x13
 13739 6da2 BB310000 		.long	0x31bb
 13740 6da6 AF6D0000 		.long	0x6daf
 13741 6daa 02       		.byte	0x2
 13742 6dab C56D0000 		.long	0x6dc5
 13743 6daf 11       		.uleb128 0x11
 13744 6db0 00000000 		.long	.LASF1084
 13745 6db4 8F620000 		.long	0x628f
 13746 6db8 20       		.uleb128 0x20
 13747 6db9 5F5F7500 		.string	"__u"
 13748 6dbd 09       		.byte	0x9
 13749 6dbe A1       		.byte	0xa1
 13750 6dbf 29       		.byte	0x29
 13751 6dc0 94620000 		.long	0x6294
 13752 6dc4 00       		.byte	0
 13753 6dc5 2C       		.uleb128 0x2c
 13754 6dc6 A16D0000 		.long	0x6da1
 13755 6dca 00000000 		.long	.LASF1109
 13756 6dce D66D0000 		.long	0x6dd6
 13757 6dd2 E16D0000 		.long	0x6de1
GAS LISTING x64lin/../common/event.s 			page 382


 13758 6dd6 1D       		.uleb128 0x1d
 13759 6dd7 AF6D0000 		.long	0x6daf
 13760 6ddb 1D       		.uleb128 0x1d
 13761 6ddc B86D0000 		.long	0x6db8
 13762 6de0 00       		.byte	0
 13763 6de1 22       		.uleb128 0x22
 13764 6de2 94390000 		.long	0x3994
 13765 6de6 15       		.uleb128 0x15
 13766 6de7 BF3E0000 		.long	0x3ebf
 13767 6deb 056E0000 		.long	0x6e05
 13768 6def 0A       		.uleb128 0xa
 13769 6df0 5F547000 		.string	"_Tp"
 13770 6df4 85620000 		.long	0x6285
 13771 6df8 20       		.uleb128 0x20
 13772 6df9 5F5F7400 		.string	"__t"
 13773 6dfd 0A       		.byte	0xa
 13774 6dfe 68       		.byte	0x68
 13775 6dff 10       		.byte	0x10
 13776 6e00 85620000 		.long	0x6285
 13777 6e04 00       		.byte	0
 13778 6e05 13       		.uleb128 0x13
 13779 6e06 F9370000 		.long	0x37f9
 13780 6e0a 136E0000 		.long	0x6e13
 13781 6e0e 02       		.byte	0x2
 13782 6e0f 226E0000 		.long	0x6e22
 13783 6e13 11       		.uleb128 0x11
 13784 6e14 00000000 		.long	.LASF1084
 13785 6e18 80620000 		.long	0x6280
 13786 6e1c 01       		.uleb128 0x1
 13787 6e1d 76620000 		.long	0x6276
 13788 6e21 00       		.byte	0
 13789 6e22 2C       		.uleb128 0x2c
 13790 6e23 056E0000 		.long	0x6e05
 13791 6e27 00000000 		.long	.LASF1110
 13792 6e2b 336E0000 		.long	0x6e33
 13793 6e2f 3E6E0000 		.long	0x6e3e
 13794 6e33 1D       		.uleb128 0x1d
 13795 6e34 136E0000 		.long	0x6e13
 13796 6e38 1D       		.uleb128 0x1d
 13797 6e39 1C6E0000 		.long	0x6e1c
 13798 6e3d 00       		.byte	0
 13799 6e3e 13       		.uleb128 0x13
 13800 6e3f 39370000 		.long	0x3739
 13801 6e43 4C6E0000 		.long	0x6e4c
 13802 6e47 02       		.byte	0x2
 13803 6e48 5B6E0000 		.long	0x6e5b
 13804 6e4c 11       		.uleb128 0x11
 13805 6e4d 00000000 		.long	.LASF1084
 13806 6e51 67620000 		.long	0x6267
 13807 6e55 01       		.uleb128 0x1
 13808 6e56 6C620000 		.long	0x626c
 13809 6e5a 00       		.byte	0
 13810 6e5b 2C       		.uleb128 0x2c
 13811 6e5c 3E6E0000 		.long	0x6e3e
 13812 6e60 00000000 		.long	.LASF1111
 13813 6e64 6C6E0000 		.long	0x6e6c
 13814 6e68 776E0000 		.long	0x6e77
GAS LISTING x64lin/../common/event.s 			page 383


 13815 6e6c 1D       		.uleb128 0x1d
 13816 6e6d 4C6E0000 		.long	0x6e4c
 13817 6e71 1D       		.uleb128 0x1d
 13818 6e72 556E0000 		.long	0x6e55
 13819 6e76 00       		.byte	0
 13820 6e77 13       		.uleb128 0x13
 13821 6e78 C5340000 		.long	0x34c5
 13822 6e7c 856E0000 		.long	0x6e85
 13823 6e80 02       		.byte	0x2
 13824 6e81 9C6E0000 		.long	0x6e9c
 13825 6e85 11       		.uleb128 0x11
 13826 6e86 00000000 		.long	.LASF1084
 13827 6e8a 26620000 		.long	0x6226
 13828 6e8e 0E       		.uleb128 0xe
 13829 6e8f 00000000 		.long	.LASF1112
 13830 6e93 0B       		.byte	0xb
 13831 6e94 C601     		.value	0x1c6
 13832 6e96 21       		.byte	0x21
 13833 6e97 2B620000 		.long	0x622b
 13834 6e9b 00       		.byte	0
 13835 6e9c 2C       		.uleb128 0x2c
 13836 6e9d 776E0000 		.long	0x6e77
 13837 6ea1 00000000 		.long	.LASF1113
 13838 6ea5 AD6E0000 		.long	0x6ead
 13839 6ea9 B86E0000 		.long	0x6eb8
 13840 6ead 1D       		.uleb128 0x1d
 13841 6eae 856E0000 		.long	0x6e85
 13842 6eb2 1D       		.uleb128 0x1d
 13843 6eb3 8E6E0000 		.long	0x6e8e
 13844 6eb7 00       		.byte	0
 13845 6eb8 13       		.uleb128 0x13
 13846 6eb9 4F280000 		.long	0x284f
 13847 6ebd C66E0000 		.long	0x6ec6
 13848 6ec1 03       		.byte	0x3
 13849 6ec2 DD6E0000 		.long	0x6edd
 13850 6ec6 11       		.uleb128 0x11
 13851 6ec7 00000000 		.long	.LASF1084
 13852 6ecb DB600000 		.long	0x60db
 13853 6ecf 2D       		.uleb128 0x2d
 13854 6ed0 00000000 		.long	.LASF1114
 13855 6ed4 05       		.byte	0x5
 13856 6ed5 9605     		.value	0x596
 13857 6ed7 0B       		.byte	0xb
 13858 6ed8 D3240000 		.long	0x24d3
 13859 6edc 00       		.byte	0
 13860 6edd 13       		.uleb128 0x13
 13861 6ede 772E0000 		.long	0x2e77
 13862 6ee2 FA6E0000 		.long	0x6efa
 13863 6ee6 01       		.byte	0x1
 13864 6ee7 0F6F0000 		.long	0x6f0f
 13865 6eeb 2A       		.uleb128 0x2a
 13866 6eec 00000000 		.long	.LASF480
 13867 6ef0 FA6E0000 		.long	0x6efa
 13868 6ef4 21       		.uleb128 0x21
 13869 6ef5 2D140000 		.long	0x142d
 13870 6ef9 00       		.byte	0
 13871 6efa 11       		.uleb128 0x11
GAS LISTING x64lin/../common/event.s 			page 384


 13872 6efb 00000000 		.long	.LASF1084
 13873 6eff DB600000 		.long	0x60db
 13874 6f03 7A       		.uleb128 0x7a
 13875 6f04 06       		.byte	0x6
 13876 6f05 E501     		.value	0x1e5
 13877 6f07 1F       		.byte	0x1f
 13878 6f08 01       		.uleb128 0x1
 13879 6f09 C1620000 		.long	0x62c1
 13880 6f0d 00       		.byte	0
 13881 6f0e 00       		.byte	0
 13882 6f0f 15       		.uleb128 0x15
 13883 6f10 52180000 		.long	0x1852
 13884 6f14 566F0000 		.long	0x6f56
 13885 6f18 0A       		.uleb128 0xa
 13886 6f19 5F557000 		.string	"_Up"
 13887 6f1d 2D140000 		.long	0x142d
 13888 6f21 2A       		.uleb128 0x2a
 13889 6f22 00000000 		.long	.LASF480
 13890 6f26 306F0000 		.long	0x6f30
 13891 6f2a 21       		.uleb128 0x21
 13892 6f2b 2D140000 		.long	0x142d
 13893 6f2f 00       		.byte	0
 13894 6f30 1E       		.uleb128 0x1e
 13895 6f31 5F5F6100 		.string	"__a"
 13896 6f35 07       		.byte	0x7
 13897 6f36 FF01     		.value	0x1ff
 13898 6f38 1C       		.byte	0x1c
 13899 6f39 0E600000 		.long	0x600e
 13900 6f3d 1E       		.uleb128 0x1e
 13901 6f3e 5F5F7000 		.string	"__p"
 13902 6f42 07       		.byte	0x7
 13903 6f43 FF01     		.value	0x1ff
 13904 6f45 42       		.byte	0x42
 13905 6f46 E65F0000 		.long	0x5fe6
 13906 6f4a 7A       		.uleb128 0x7a
 13907 6f4b 07       		.byte	0x7
 13908 6f4c 0002     		.value	0x200
 13909 6f4e 0C       		.byte	0xc
 13910 6f4f 01       		.uleb128 0x1
 13911 6f50 C1620000 		.long	0x62c1
 13912 6f54 00       		.byte	0
 13913 6f55 00       		.byte	0
 13914 6f56 15       		.uleb128 0x15
 13915 6f57 E23E0000 		.long	0x3ee2
 13916 6f5b 8F6F0000 		.long	0x6f8f
 13917 6f5f 0A       		.uleb128 0xa
 13918 6f60 5F547000 		.string	"_Tp"
 13919 6f64 2D140000 		.long	0x142d
 13920 6f68 2A       		.uleb128 0x2a
 13921 6f69 00000000 		.long	.LASF480
 13922 6f6d 776F0000 		.long	0x6f77
 13923 6f71 21       		.uleb128 0x21
 13924 6f72 2D140000 		.long	0x142d
 13925 6f76 00       		.byte	0
 13926 6f77 AD01     		.uleb128 0xad
 13927 6f79 00000000 		.long	.LASF1115
 13928 6f7d 08       		.byte	0x8
GAS LISTING x64lin/../common/event.s 			page 385


 13929 6f7e 5E       		.byte	0x5e
 13930 6f7f 17       		.byte	0x17
 13931 6f80 E65F0000 		.long	0x5fe6
 13932 6f84 7B       		.uleb128 0x7b
 13933 6f85 08       		.byte	0x8
 13934 6f86 5E       		.byte	0x5e
 13935 6f87 2A       		.byte	0x2a
 13936 6f88 01       		.uleb128 0x1
 13937 6f89 C1620000 		.long	0x62c1
 13938 6f8d 00       		.byte	0
 13939 6f8e 00       		.byte	0
 13940 6f8f 13       		.uleb128 0x13
 13941 6f90 47140000 		.long	0x1447
 13942 6f94 9D6F0000 		.long	0x6f9d
 13943 6f98 02       		.byte	0x2
 13944 6f99 AC6F0000 		.long	0x6fac
 13945 6f9d 11       		.uleb128 0x11
 13946 6f9e 00000000 		.long	.LASF1084
 13947 6fa2 EB5F0000 		.long	0x5feb
 13948 6fa6 01       		.uleb128 0x1
 13949 6fa7 C1620000 		.long	0x62c1
 13950 6fab 00       		.byte	0
 13951 6fac 2C       		.uleb128 0x2c
 13952 6fad 8F6F0000 		.long	0x6f8f
 13953 6fb1 00000000 		.long	.LASF1116
 13954 6fb5 BD6F0000 		.long	0x6fbd
 13955 6fb9 C86F0000 		.long	0x6fc8
 13956 6fbd 1D       		.uleb128 0x1d
 13957 6fbe 9D6F0000 		.long	0x6f9d
 13958 6fc2 1D       		.uleb128 0x1d
 13959 6fc3 A66F0000 		.long	0x6fa6
 13960 6fc7 00       		.byte	0
 13961 6fc8 13       		.uleb128 0x13
 13962 6fc9 C7380000 		.long	0x38c7
 13963 6fcd D66F0000 		.long	0x6fd6
 13964 6fd1 02       		.byte	0x2
 13965 6fd2 E56F0000 		.long	0x6fe5
 13966 6fd6 11       		.uleb128 0x11
 13967 6fd7 00000000 		.long	.LASF1084
 13968 6fdb AD620000 		.long	0x62ad
 13969 6fdf 01       		.uleb128 0x1
 13970 6fe0 B2620000 		.long	0x62b2
 13971 6fe4 00       		.byte	0
 13972 6fe5 2C       		.uleb128 0x2c
 13973 6fe6 C86F0000 		.long	0x6fc8
 13974 6fea 00000000 		.long	.LASF1117
 13975 6fee F66F0000 		.long	0x6ff6
 13976 6ff2 01700000 		.long	0x7001
 13977 6ff6 1D       		.uleb128 0x1d
 13978 6ff7 D66F0000 		.long	0x6fd6
 13979 6ffb 1D       		.uleb128 0x1d
 13980 6ffc DF6F0000 		.long	0x6fdf
 13981 7000 00       		.byte	0
 13982 7001 13       		.uleb128 0x13
 13983 7002 A72E0000 		.long	0x2ea7
 13984 7006 1E700000 		.long	0x701e
 13985 700a 01       		.byte	0x1
GAS LISTING x64lin/../common/event.s 			page 386


 13986 700b 32700000 		.long	0x7032
 13987 700f 2A       		.uleb128 0x2a
 13988 7010 00000000 		.long	.LASF480
 13989 7014 1E700000 		.long	0x701e
 13990 7018 21       		.uleb128 0x21
 13991 7019 2D140000 		.long	0x142d
 13992 701d 00       		.byte	0
 13993 701e 11       		.uleb128 0x11
 13994 701f 00000000 		.long	.LASF1084
 13995 7023 DB600000 		.long	0x60db
 13996 7027 7B       		.uleb128 0x7b
 13997 7028 06       		.byte	0x6
 13998 7029 A5       		.byte	0xa5
 13999 702a 1B       		.byte	0x1b
 14000 702b 01       		.uleb128 0x1
 14001 702c C1620000 		.long	0x62c1
 14002 7030 00       		.byte	0
 14003 7031 00       		.byte	0
 14004 7032 09       		.uleb128 0x9
 14005 7033 70390000 		.long	0x3970
 14006 7037 15       		.uleb128 0x15
 14007 7038 193F0000 		.long	0x3f19
 14008 703c 56700000 		.long	0x7056
 14009 7040 0A       		.uleb128 0xa
 14010 7041 5F547000 		.string	"_Tp"
 14011 7045 2D140000 		.long	0x142d
 14012 7049 20       		.uleb128 0x20
 14013 704a 5F5F7400 		.string	"__t"
 14014 704e 0A       		.byte	0xa
 14015 704f 4D       		.byte	0x4d
 14016 7050 38       		.byte	0x38
 14017 7051 32700000 		.long	0x7032
 14018 7055 00       		.byte	0
 14019 7056 13       		.uleb128 0x13
 14020 7057 F2280000 		.long	0x28f2
 14021 705b 64700000 		.long	0x7064
 14022 705f 03       		.byte	0x3
 14023 7060 7B700000 		.long	0x707b
 14024 7064 11       		.uleb128 0x11
 14025 7065 00000000 		.long	.LASF1084
 14026 7069 DB600000 		.long	0x60db
 14027 706d 1E       		.uleb128 0x1e
 14028 706e 5F5F7800 		.string	"__x"
 14029 7072 05       		.byte	0x5
 14030 7073 E705     		.value	0x5e7
 14031 7075 1E       		.byte	0x1e
 14032 7076 03610000 		.long	0x6103
 14033 707a 00       		.byte	0
 14034 707b 13       		.uleb128 0x13
 14035 707c 6D300000 		.long	0x306d
 14036 7080 89700000 		.long	0x7089
 14037 7084 03       		.byte	0x3
 14038 7085 A0700000 		.long	0x70a0
 14039 7089 11       		.uleb128 0x11
 14040 708a 00000000 		.long	.LASF1084
 14041 708e 12610000 		.long	0x6112
 14042 7092 1E       		.uleb128 0x1e
GAS LISTING x64lin/../common/event.s 			page 387


 14043 7093 5F5F7800 		.string	"__x"
 14044 7097 04       		.byte	0x4
 14045 7098 0E01     		.value	0x10e
 14046 709a 19       		.byte	0x19
 14047 709b 21610000 		.long	0x6121
 14048 709f 00       		.byte	0
 14049 70a0 13       		.uleb128 0x13
 14050 70a1 AE130000 		.long	0x13ae
 14051 70a5 AE700000 		.long	0x70ae
 14052 70a9 02       		.byte	0x2
 14053 70aa C1700000 		.long	0x70c1
 14054 70ae 11       		.uleb128 0x11
 14055 70af 00000000 		.long	.LASF1084
 14056 70b3 8B5F0000 		.long	0x5f8b
 14057 70b7 11       		.uleb128 0x11
 14058 70b8 00000000 		.long	.LASF1087
 14059 70bc 54430000 		.long	0x4354
 14060 70c0 00       		.byte	0
 14061 70c1 2C       		.uleb128 0x2c
 14062 70c2 A0700000 		.long	0x70a0
 14063 70c6 00000000 		.long	.LASF1118
 14064 70ca D2700000 		.long	0x70d2
 14065 70ce D8700000 		.long	0x70d8
 14066 70d2 1D       		.uleb128 0x1d
 14067 70d3 AE700000 		.long	0x70ae
 14068 70d7 00       		.byte	0
 14069 70d8 13       		.uleb128 0x13
 14070 70d9 5D130000 		.long	0x135d
 14071 70dd E6700000 		.long	0x70e6
 14072 70e1 02       		.byte	0x2
 14073 70e2 FC700000 		.long	0x70fc
 14074 70e6 11       		.uleb128 0x11
 14075 70e7 00000000 		.long	.LASF1084
 14076 70eb 8B5F0000 		.long	0x5f8b
 14077 70ef 20       		.uleb128 0x20
 14078 70f0 5F5F6D00 		.string	"__m"
 14079 70f4 02       		.byte	0x2
 14080 70f5 E4       		.byte	0xe4
 14081 70f6 27       		.byte	0x27
 14082 70f7 905F0000 		.long	0x5f90
 14083 70fb 00       		.byte	0
 14084 70fc 2C       		.uleb128 0x2c
 14085 70fd D8700000 		.long	0x70d8
 14086 7101 00000000 		.long	.LASF1119
 14087 7105 0D710000 		.long	0x710d
 14088 7109 18710000 		.long	0x7118
 14089 710d 1D       		.uleb128 0x1d
 14090 710e E6700000 		.long	0x70e6
 14091 7112 1D       		.uleb128 0x1d
 14092 7113 EF700000 		.long	0x70ef
 14093 7117 00       		.byte	0
 14094 7118 AE01     		.uleb128 0xae
 14095 711a 00000000 		.long	.LASF1120
 14096 711e 01       		.byte	0x1
 14097 711f 04       		.byte	0x4
 14098 7120 06       		.byte	0x6
 14099 7121 00000000 		.long	.LASF1121
GAS LISTING x64lin/../common/event.s 			page 388


 14100 7125 00000000 		.long	.LLRL0
 14101 7129 01       		.uleb128 0x1
 14102 712a 9C       		.byte	0x9c
 14103 712b 46840000 		.long	0x8446
 14104 712f 7C       		.uleb128 0x7c
 14105 7130 00000000 		.long	.LASF1122
 14106 7134 21       		.byte	0x21
 14107 7135 46840000 		.long	0x8446
 14108 7139 00000000 		.long	.LLST1
 14109 713d 00000000 		.long	.LVUS1
 14110 7141 7C       		.uleb128 0x7c
 14111 7142 00000000 		.long	.LASF1123
 14112 7146 4D       		.byte	0x4d
 14113 7147 2D140000 		.long	0x142d
 14114 714b 00000000 		.long	.LLST2
 14115 714f 00000000 		.long	.LVUS2
 14116 7153 AF01     		.uleb128 0xaf
 14117 7155 00000000 		.long	.LASF96
 14118 7159 01       		.byte	0x1
 14119 715a 06       		.byte	0x6
 14120 715b 21       		.byte	0x21
 14121 715c 50130000 		.long	0x1350
 14122 7160 00000000 		.long	.LLST3
 14123 7164 00000000 		.long	.LVUS3
 14124 7168 3A       		.uleb128 0x3a
 14125 7169 D8700000 		.long	0x70d8
 14126 716d 00000000 		.quad	.LBI553
 14126      00000000 
 14127 7175 01       		.byte	.LVU3
 14128 7176 00000000 		.long	.LLRL4
 14129 717a 01       		.byte	0x1
 14130 717b 06       		.byte	0x6
 14131 717c 40       		.byte	0x40
 14132 717d 1A720000 		.long	0x721a
 14133 7181 04       		.uleb128 0x4
 14134 7182 EF700000 		.long	0x70ef
 14135 7186 00000000 		.long	.LLST5
 14136 718a 00000000 		.long	.LVUS5
 14137 718e 04       		.uleb128 0x4
 14138 718f E6700000 		.long	0x70e6
 14139 7193 00000000 		.long	.LLST6
 14140 7197 00000000 		.long	.LVUS6
 14141 719b 2F       		.uleb128 0x2f
 14142 719c 87840000 		.long	0x8487
 14143 71a0 00000000 		.quad	.LBI554
 14143      00000000 
 14144 71a8 02       		.byte	.LVU4
 14145 71a9 00000000 		.long	.LLRL4
 14146 71ad 02       		.byte	0x2
 14147 71ae E5       		.byte	0xe5
 14148 71af 17       		.byte	0x17
 14149 71b0 04       		.uleb128 0x4
 14150 71b1 95840000 		.long	0x8495
 14151 71b5 00000000 		.long	.LLST7
 14152 71b9 00000000 		.long	.LVUS7
 14153 71bd 4B       		.uleb128 0x4b
 14154 71be 00000000 		.long	.LLRL4
GAS LISTING x64lin/../common/event.s 			page 389


 14155 71c2 35       		.uleb128 0x35
 14156 71c3 9E840000 		.long	0x849e
 14157 71c7 00000000 		.long	.LLST8
 14158 71cb 00000000 		.long	.LVUS8
 14159 71cf 3A       		.uleb128 0x3a
 14160 71d0 C9840000 		.long	0x84c9
 14161 71d4 00000000 		.quad	.LBI556
 14161      00000000 
 14162 71dc 00       		.byte	.LVU8
 14163 71dd 00000000 		.long	.LLRL9
 14164 71e1 02       		.byte	0x2
 14165 71e2 64       		.byte	0x64
 14166 71e3 25       		.byte	0x25
 14167 71e4 0A720000 		.long	0x720a
 14168 71e8 04       		.uleb128 0x4
 14169 71e9 D8840000 		.long	0x84d8
 14170 71ed 00000000 		.long	.LLST10
 14171 71f1 00000000 		.long	.LVUS10
 14172 71f5 3B       		.uleb128 0x3b
 14173 71f6 00000000 		.quad	.LVL4
 14173      00000000 
 14174 71fe 6B630000 		.long	0x636b
 14175 7202 32       		.uleb128 0x32
 14176 7203 01       		.uleb128 0x1
 14177 7204 55       		.byte	0x55
 14178 7205 02       		.uleb128 0x2
 14179 7206 7C       		.byte	0x7c
 14180 7207 00       		.sleb128 0
 14181 7208 00       		.byte	0
 14182 7209 00       		.byte	0
 14183 720a 4C       		.uleb128 0x4c
 14184 720b 00000000 		.quad	.LVL52
 14184      00000000 
 14185 7213 523B0000 		.long	0x3b52
 14186 7217 00       		.byte	0
 14187 7218 00       		.byte	0
 14188 7219 00       		.byte	0
 14189 721a 3A       		.uleb128 0x3a
 14190 721b 7B700000 		.long	0x707b
 14191 721f 00000000 		.quad	.LBI573
 14191      00000000 
 14192 7227 02       		.byte	.LVU20
 14193 7228 00000000 		.long	.LLRL11
 14194 722c 01       		.byte	0x1
 14195 722d 07       		.byte	0x7
 14196 722e 24       		.byte	0x24
 14197 722f 12830000 		.long	0x8312
 14198 7233 04       		.uleb128 0x4
 14199 7234 92700000 		.long	0x7092
 14200 7238 00000000 		.long	.LLST12
 14201 723c 00000000 		.long	.LVUS12
 14202 7240 04       		.uleb128 0x4
 14203 7241 89700000 		.long	0x7089
 14204 7245 00000000 		.long	.LLST13
 14205 7249 00000000 		.long	.LVUS13
 14206 724d 28       		.uleb128 0x28
 14207 724e 56700000 		.long	0x7056
GAS LISTING x64lin/../common/event.s 			page 390


 14208 7252 00000000 		.quad	.LBI574
 14208      00000000 
 14209 725a 03       		.byte	.LVU21
 14210 725b 00000000 		.long	.LLRL11
 14211 725f 04       		.byte	0x4
 14212 7260 0F01     		.value	0x10f
 14213 7262 14       		.byte	0x14
 14214 7263 04       		.uleb128 0x4
 14215 7264 6D700000 		.long	0x706d
 14216 7268 00000000 		.long	.LLST14
 14217 726c 00000000 		.long	.LVUS14
 14218 7270 04       		.uleb128 0x4
 14219 7271 64700000 		.long	0x7064
 14220 7275 00000000 		.long	.LLST15
 14221 7279 00000000 		.long	.LVUS15
 14222 727d 28       		.uleb128 0x28
 14223 727e 01700000 		.long	0x7001
 14224 7282 00000000 		.quad	.LBI575
 14224      00000000 
 14225 728a 04       		.byte	.LVU22
 14226 728b 00000000 		.long	.LLRL11
 14227 728f 05       		.byte	0x5
 14228 7290 E805     		.value	0x5e8
 14229 7292 15       		.byte	0x15
 14230 7293 04       		.uleb128 0x4
 14231 7294 2B700000 		.long	0x702b
 14232 7298 00000000 		.long	.LLST16
 14233 729c 00000000 		.long	.LVUS16
 14234 72a0 04       		.uleb128 0x4
 14235 72a1 1E700000 		.long	0x701e
 14236 72a5 00000000 		.long	.LLST17
 14237 72a9 00000000 		.long	.LVUS17
 14238 72ad 3A       		.uleb128 0x3a
 14239 72ae 0F6F0000 		.long	0x6f0f
 14240 72b2 00000000 		.quad	.LBI577
 14240      00000000 
 14241 72ba 00       		.byte	.LVU27
 14242 72bb 00000000 		.long	.LLRL18
 14243 72bf 06       		.byte	0x6
 14244 72c0 AA       		.byte	0xaa
 14245 72c1 1E       		.byte	0x1e
 14246 72c2 B4740000 		.long	0x74b4
 14247 72c6 04       		.uleb128 0x4
 14248 72c7 4F6F0000 		.long	0x6f4f
 14249 72cb 00000000 		.long	.LLST19
 14250 72cf 00000000 		.long	.LVUS19
 14251 72d3 04       		.uleb128 0x4
 14252 72d4 3D6F0000 		.long	0x6f3d
 14253 72d8 00000000 		.long	.LLST20
 14254 72dc 00000000 		.long	.LVUS20
 14255 72e0 04       		.uleb128 0x4
 14256 72e1 306F0000 		.long	0x6f30
 14257 72e5 00000000 		.long	.LLST21
 14258 72e9 00000000 		.long	.LVUS21
 14259 72ed 28       		.uleb128 0x28
 14260 72ee 566F0000 		.long	0x6f56
 14261 72f2 00000000 		.quad	.LBI578
GAS LISTING x64lin/../common/event.s 			page 391


 14261      00000000 
 14262 72fa 01       		.byte	.LVU28
 14263 72fb 00000000 		.long	.LLRL18
 14264 72ff 07       		.byte	0x7
 14265 7300 0602     		.value	0x206
 14266 7302 15       		.byte	0x15
 14267 7303 04       		.uleb128 0x4
 14268 7304 886F0000 		.long	0x6f88
 14269 7308 00000000 		.long	.LLST22
 14270 730c 00000000 		.long	.LVUS22
 14271 7310 04       		.uleb128 0x4
 14272 7311 776F0000 		.long	0x6f77
 14273 7315 00000000 		.long	.LLST23
 14274 7319 00000000 		.long	.LVUS23
 14275 731d 2F       		.uleb128 0x2f
 14276 731e 8F6F0000 		.long	0x6f8f
 14277 7322 00000000 		.quad	.LBI579
 14277      00000000 
 14278 732a 02       		.byte	.LVU29
 14279 732b 00000000 		.long	.LLRL18
 14280 732f 08       		.byte	0x8
 14281 7330 61       		.byte	0x61
 14282 7331 0E       		.byte	0xe
 14283 7332 04       		.uleb128 0x4
 14284 7333 A66F0000 		.long	0x6fa6
 14285 7337 00000000 		.long	.LLST24
 14286 733b 00000000 		.long	.LVUS24
 14287 733f 04       		.uleb128 0x4
 14288 7340 9D6F0000 		.long	0x6f9d
 14289 7344 00000000 		.long	.LLST25
 14290 7348 00000000 		.long	.LVUS25
 14291 734c 28       		.uleb128 0x28
 14292 734d C86F0000 		.long	0x6fc8
 14293 7351 00000000 		.quad	.LBI580
 14293      00000000 
 14294 7359 03       		.byte	.LVU30
 14295 735a 00000000 		.long	.LLRL18
 14296 735e 09       		.byte	0x9
 14297 735f 4701     		.value	0x147
 14298 7361 07       		.byte	0x7
 14299 7362 04       		.uleb128 0x4
 14300 7363 DF6F0000 		.long	0x6fdf
 14301 7367 00000000 		.long	.LLST26
 14302 736b 00000000 		.long	.LVUS26
 14303 736f 04       		.uleb128 0x4
 14304 7370 D66F0000 		.long	0x6fd6
 14305 7374 00000000 		.long	.LLST27
 14306 7378 00000000 		.long	.LVUS27
 14307 737c 2F       		.uleb128 0x2f
 14308 737d A16D0000 		.long	0x6da1
 14309 7381 00000000 		.quad	.LBI581
 14309      00000000 
 14310 7389 04       		.byte	.LVU31
 14311 738a 00000000 		.long	.LLRL18
 14312 738e 09       		.byte	0x9
 14313 738f D3       		.byte	0xd3
 14314 7390 07       		.byte	0x7
GAS LISTING x64lin/../common/event.s 			page 392


 14315 7391 04       		.uleb128 0x4
 14316 7392 B86D0000 		.long	0x6db8
 14317 7396 00000000 		.long	.LLST28
 14318 739a 00000000 		.long	.LVUS28
 14319 739e 04       		.uleb128 0x4
 14320 739f AF6D0000 		.long	0x6daf
 14321 73a3 00000000 		.long	.LLST29
 14322 73a7 00000000 		.long	.LVUS29
 14323 73ab 57       		.uleb128 0x57
 14324 73ac E66D0000 		.long	0x6de6
 14325 73b0 00000000 		.quad	.LBI583
 14325      00000000 
 14326 73b8 05       		.byte	.LVU32
 14327 73b9 00000000 		.quad	.LBB583
 14327      00000000 
 14328 73c1 00000000 		.quad	.LBE583-.LBB583
 14328      00000000 
 14329 73c9 09       		.byte	0x9
 14330 73ca A2       		.byte	0xa2
 14331 73cb 17       		.byte	0x17
 14332 73cc DE730000 		.long	0x73de
 14333 73d0 04       		.uleb128 0x4
 14334 73d1 F86D0000 		.long	0x6df8
 14335 73d5 00000000 		.long	.LLST30
 14336 73d9 00000000 		.long	.LVUS30
 14337 73dd 00       		.byte	0
 14338 73de 3A       		.uleb128 0x3a
 14339 73df 056E0000 		.long	0x6e05
 14340 73e3 00000000 		.quad	.LBI584
 14340      00000000 
 14341 73eb 07       		.byte	.LVU34
 14342 73ec 00000000 		.long	.LLRL31
 14343 73f0 09       		.byte	0x9
 14344 73f1 A2       		.byte	0xa2
 14345 73f2 09       		.byte	0x9
 14346 73f3 80740000 		.long	0x7480
 14347 73f7 04       		.uleb128 0x4
 14348 73f8 1C6E0000 		.long	0x6e1c
 14349 73fc 00000000 		.long	.LLST32
 14350 7400 00000000 		.long	.LVUS32
 14351 7404 04       		.uleb128 0x4
 14352 7405 136E0000 		.long	0x6e13
 14353 7409 00000000 		.long	.LLST33
 14354 740d 00000000 		.long	.LVUS33
 14355 7411 28       		.uleb128 0x28
 14356 7412 3E6E0000 		.long	0x6e3e
 14357 7416 00000000 		.quad	.LBI585
 14357      00000000 
 14358 741e 08       		.byte	.LVU35
 14359 741f 00000000 		.long	.LLRL31
 14360 7423 0B       		.byte	0xb
 14361 7424 4204     		.value	0x442
 14362 7426 11       		.byte	0x11
 14363 7427 04       		.uleb128 0x4
 14364 7428 556E0000 		.long	0x6e55
 14365 742c 00000000 		.long	.LLST34
 14366 7430 00000000 		.long	.LVUS34
GAS LISTING x64lin/../common/event.s 			page 393


 14367 7434 04       		.uleb128 0x4
 14368 7435 4C6E0000 		.long	0x6e4c
 14369 7439 00000000 		.long	.LLST35
 14370 743d 00000000 		.long	.LVUS35
 14371 7441 1F       		.uleb128 0x1f
 14372 7442 776E0000 		.long	0x6e77
 14373 7446 00000000 		.quad	.LBI587
 14373      00000000 
 14374 744e 09       		.byte	.LVU36
 14375 744f 00000000 		.quad	.LBB587
 14375      00000000 
 14376 7457 00000000 		.quad	.LBE587-.LBB587
 14376      00000000 
 14377 745f 0B       		.byte	0xb
 14378 7460 2D01     		.value	0x12d
 14379 7462 07       		.byte	0x7
 14380 7463 04       		.uleb128 0x4
 14381 7464 8E6E0000 		.long	0x6e8e
 14382 7468 00000000 		.long	.LLST36
 14383 746c 00000000 		.long	.LVUS36
 14384 7470 04       		.uleb128 0x4
 14385 7471 856E0000 		.long	0x6e85
 14386 7475 00000000 		.long	.LLST37
 14387 7479 00000000 		.long	.LVUS37
 14388 747d 00       		.byte	0
 14389 747e 00       		.byte	0
 14390 747f 00       		.byte	0
 14391 7480 45       		.uleb128 0x45
 14392 7481 AF6C0000 		.long	0x6caf
 14393 7485 00000000 		.quad	.LBI591
 14393      00000000 
 14394 748d 01       		.byte	.LVU42
 14395 748e 00000000 		.quad	.LBB591
 14395      00000000 
 14396 7496 00000000 		.quad	.LBE591-.LBB591
 14396      00000000 
 14397 749e 09       		.byte	0x9
 14398 749f A3       		.byte	0xa3
 14399 74a0 13       		.byte	0x13
 14400 74a1 04       		.uleb128 0x4
 14401 74a2 BD6C0000 		.long	0x6cbd
 14402 74a6 00000000 		.long	.LLST38
 14403 74aa 00000000 		.long	.LVUS38
 14404 74ae 00       		.byte	0
 14405 74af 00       		.byte	0
 14406 74b0 00       		.byte	0
 14407 74b1 00       		.byte	0
 14408 74b2 00       		.byte	0
 14409 74b3 00       		.byte	0
 14410 74b4 57       		.uleb128 0x57
 14411 74b5 B86E0000 		.long	0x6eb8
 14412 74b9 00000000 		.quad	.LBI598
 14412      00000000 
 14413 74c1 00       		.byte	.LVU47
 14414 74c2 00000000 		.quad	.LBB598
 14414      00000000 
 14415 74ca 00000000 		.quad	.LBE598-.LBB598
GAS LISTING x64lin/../common/event.s 			page 394


 14415      00000000 
 14416 74d2 06       		.byte	0x6
 14417 74d3 B2       		.byte	0xb2
 14418 74d4 0D       		.byte	0xd
 14419 74d5 59750000 		.long	0x7559
 14420 74d9 04       		.uleb128 0x4
 14421 74da C66E0000 		.long	0x6ec6
 14422 74de 00000000 		.long	.LLST39
 14423 74e2 00000000 		.long	.LVUS39
 14424 74e6 62       		.uleb128 0x62
 14425 74e7 CF6E0000 		.long	0x6ecf
 14426 74eb 1F       		.uleb128 0x1f
 14427 74ec F76C0000 		.long	0x6cf7
 14428 74f0 00000000 		.quad	.LBI600
 14428      00000000 
 14429 74f8 01       		.byte	.LVU48
 14430 74f9 00000000 		.quad	.LBB600
 14430      00000000 
 14431 7501 00000000 		.quad	.LBE600-.LBB600
 14431      00000000 
 14432 7509 05       		.byte	0x5
 14433 750a 9605     		.value	0x596
 14434 750c 0B       		.byte	0xb
 14435 750d 04       		.uleb128 0x4
 14436 750e 056D0000 		.long	0x6d05
 14437 7512 00000000 		.long	.LLST40
 14438 7516 00000000 		.long	.LVUS40
 14439 751a 1F       		.uleb128 0x1f
 14440 751b 00670000 		.long	0x6700
 14441 751f 00000000 		.quad	.LBI601
 14441      00000000 
 14442 7527 02       		.byte	.LVU49
 14443 7528 00000000 		.quad	.LBB601
 14443      00000000 
 14444 7530 00000000 		.quad	.LBE601-.LBB601
 14444      00000000 
 14445 7538 05       		.byte	0x5
 14446 7539 7A04     		.value	0x47a
 14447 753b 1E       		.byte	0x1e
 14448 753c 04       		.uleb128 0x4
 14449 753d 17670000 		.long	0x6717
 14450 7541 00000000 		.long	.LLST41
 14451 7545 00000000 		.long	.LVUS41
 14452 7549 04       		.uleb128 0x4
 14453 754a 0E670000 		.long	0x670e
 14454 754e 00000000 		.long	.LLST42
 14455 7552 00000000 		.long	.LVUS42
 14456 7556 00       		.byte	0
 14457 7557 00       		.byte	0
 14458 7558 00       		.byte	0
 14459 7559 2F       		.uleb128 0x2f
 14460 755a DD6E0000 		.long	0x6edd
 14461 755e 00000000 		.quad	.LBI602
 14461      00000000 
 14462 7566 01       		.byte	.LVU67
 14463 7567 00000000 		.long	.LLRL43
 14464 756b 06       		.byte	0x6
GAS LISTING x64lin/../common/event.s 			page 395


 14465 756c B0       		.byte	0xb0
 14466 756d 14       		.byte	0x14
 14467 756e 04       		.uleb128 0x4
 14468 756f 086F0000 		.long	0x6f08
 14469 7573 00000000 		.long	.LLST44
 14470 7577 00000000 		.long	.LVUS44
 14471 757b 04       		.uleb128 0x4
 14472 757c FA6E0000 		.long	0x6efa
 14473 7580 00000000 		.long	.LLST45
 14474 7584 00000000 		.long	.LVUS45
 14475 7588 37       		.uleb128 0x37
 14476 7589 896D0000 		.long	0x6d89
 14477 758d 00000000 		.quad	.LBI604
 14477      00000000 
 14478 7595 02       		.byte	.LVU68
 14479 7596 00000000 		.long	.LLRL46
 14480 759a 06       		.byte	0x6
 14481 759b EC01     		.value	0x1ec
 14482 759d 0A       		.byte	0xa
 14483 759e E1750000 		.long	0x75e1
 14484 75a2 04       		.uleb128 0x4
 14485 75a3 976D0000 		.long	0x6d97
 14486 75a7 00000000 		.long	.LLST47
 14487 75ab 00000000 		.long	.LVUS47
 14488 75af 28       		.uleb128 0x28
 14489 75b0 8B6C0000 		.long	0x6c8b
 14490 75b4 00000000 		.quad	.LBI605
 14490      00000000 
 14491 75bc 03       		.byte	.LVU69
 14492 75bd 00000000 		.long	.LLRL46
 14493 75c1 05       		.byte	0x5
 14494 75c2 D204     		.value	0x4d2
 14495 75c4 28       		.byte	0x28
 14496 75c5 04       		.uleb128 0x4
 14497 75c6 A16C0000 		.long	0x6ca1
 14498 75ca 00000000 		.long	.LLST48
 14499 75ce 00000000 		.long	.LVUS48
 14500 75d2 04       		.uleb128 0x4
 14501 75d3 946C0000 		.long	0x6c94
 14502 75d7 00000000 		.long	.LLST49
 14503 75db 00000000 		.long	.LVUS49
 14504 75df 00       		.byte	0
 14505 75e0 00       		.byte	0
 14506 75e1 37       		.uleb128 0x37
 14507 75e2 4C6D0000 		.long	0x6d4c
 14508 75e6 00000000 		.quad	.LBI610
 14508      00000000 
 14509 75ee 00       		.byte	.LVU82
 14510 75ef 00000000 		.long	.LLRL50
 14511 75f3 06       		.byte	0x6
 14512 75f4 F001     		.value	0x1f0
 14513 75f6 18       		.byte	0x18
 14514 75f7 927F0000 		.long	0x7f92
 14515 75fb 04       		.uleb128 0x4
 14516 75fc 636D0000 		.long	0x6d63
 14517 7600 00000000 		.long	.LLST51
 14518 7604 00000000 		.long	.LVUS51
GAS LISTING x64lin/../common/event.s 			page 396


 14519 7608 04       		.uleb128 0x4
 14520 7609 5A6D0000 		.long	0x6d5a
 14521 760d 00000000 		.long	.LLST52
 14522 7611 00000000 		.long	.LVUS52
 14523 7615 28       		.uleb128 0x28
 14524 7616 8D670000 		.long	0x678d
 14525 761a 00000000 		.quad	.LBI612
 14525      00000000 
 14526 7622 00       		.byte	.LVU125
 14527 7623 00000000 		.long	.LLRL53
 14528 7627 05       		.byte	0x5
 14529 7628 5208     		.value	0x852
 14530 762a 15       		.byte	0x15
 14531 762b 04       		.uleb128 0x4
 14532 762c B1670000 		.long	0x67b1
 14533 7630 00000000 		.long	.LLST54
 14534 7634 00000000 		.long	.LVUS54
 14535 7638 04       		.uleb128 0x4
 14536 7639 A4670000 		.long	0x67a4
 14537 763d 00000000 		.long	.LLST55
 14538 7641 00000000 		.long	.LVUS55
 14539 7645 04       		.uleb128 0x4
 14540 7646 9B670000 		.long	0x679b
 14541 764a 00000000 		.long	.LLST56
 14542 764e 00000000 		.long	.LVUS56
 14543 7652 4B       		.uleb128 0x4b
 14544 7653 00000000 		.long	.LLRL53
 14545 7657 35       		.uleb128 0x35
 14546 7658 BE670000 		.long	0x67be
 14547 765c 00000000 		.long	.LLST57
 14548 7660 00000000 		.long	.LVUS57
 14549 7664 35       		.uleb128 0x35
 14550 7665 CB670000 		.long	0x67cb
 14551 7669 00000000 		.long	.LLST58
 14552 766d 00000000 		.long	.LVUS58
 14553 7671 35       		.uleb128 0x35
 14554 7672 D8670000 		.long	0x67d8
 14555 7676 00000000 		.long	.LLST59
 14556 767a 00000000 		.long	.LVUS59
 14557 767e B001     		.uleb128 0xb0
 14558 7680 E5670000 		.long	0x67e5
 14559 7684 00000000 		.long	.LLRL60
 14560 7688 327C0000 		.long	0x7c32
 14561 768c 35       		.uleb128 0x35
 14562 768d E6670000 		.long	0x67e6
 14563 7691 00000000 		.long	.LLST61
 14564 7695 00000000 		.long	.LVUS61
 14565 7699 35       		.uleb128 0x35
 14566 769a F3670000 		.long	0x67f3
 14567 769e 00000000 		.long	.LLST62
 14568 76a2 00000000 		.long	.LVUS62
 14569 76a6 37       		.uleb128 0x37
 14570 76a7 B6650000 		.long	0x65b6
 14571 76ab 00000000 		.quad	.LBI616
 14571      00000000 
 14572 76b3 00       		.byte	.LVU130
 14573 76b4 00000000 		.long	.LLRL63
GAS LISTING x64lin/../common/event.s 			page 397


 14574 76b8 06       		.byte	0x6
 14575 76b9 BF03     		.value	0x3bf
 14576 76bb 32       		.byte	0x32
 14577 76bc 8D780000 		.long	0x788d
 14578 76c0 04       		.uleb128 0x4
 14579 76c1 CD650000 		.long	0x65cd
 14580 76c5 00000000 		.long	.LLST64
 14581 76c9 00000000 		.long	.LVUS64
 14582 76cd 04       		.uleb128 0x4
 14583 76ce C4650000 		.long	0x65c4
 14584 76d2 00000000 		.long	.LLST65
 14585 76d6 00000000 		.long	.LVUS65
 14586 76da 4B       		.uleb128 0x4b
 14587 76db 00000000 		.long	.LLRL63
 14588 76df 62       		.uleb128 0x62
 14589 76e0 DA650000 		.long	0x65da
 14590 76e4 46       		.uleb128 0x46
 14591 76e5 12650000 		.long	0x6512
 14592 76e9 00000000 		.quad	.LBI618
 14592      00000000 
 14593 76f1 01       		.byte	.LVU131
 14594 76f2 00000000 		.quad	.LBB618
 14594      00000000 
 14595 76fa 00000000 		.quad	.LBE618-.LBB618
 14595      00000000 
 14596 7702 05       		.byte	0x5
 14597 7703 3F02     		.value	0x23f
 14598 7705 12       		.byte	0x12
 14599 7706 84770000 		.long	0x7784
 14600 770a 04       		.uleb128 0x4
 14601 770b 20650000 		.long	0x6520
 14602 770f 00000000 		.long	.LLST66
 14603 7713 00000000 		.long	.LVUS66
 14604 7717 1F       		.uleb128 0x1f
 14605 7718 E2630000 		.long	0x63e2
 14606 771c 00000000 		.quad	.LBI619
 14606      00000000 
 14607 7724 02       		.byte	.LVU132
 14608 7725 00000000 		.quad	.LBB619
 14608      00000000 
 14609 772d 00000000 		.quad	.LBE619-.LBB619
 14609      00000000 
 14610 7735 05       		.byte	0x5
 14611 7736 2C02     		.value	0x22c
 14612 7738 35       		.byte	0x35
 14613 7739 04       		.uleb128 0x4
 14614 773a 02640000 		.long	0x6402
 14615 773e 00000000 		.long	.LLST67
 14616 7742 00000000 		.long	.LVUS67
 14617 7746 04       		.uleb128 0x4
 14618 7747 F9630000 		.long	0x63f9
 14619 774b 00000000 		.long	.LLST68
 14620 774f 00000000 		.long	.LVUS68
 14621 7753 45       		.uleb128 0x45
 14622 7754 2D640000 		.long	0x642d
 14623 7758 00000000 		.quad	.LBI620
 14623      00000000 
GAS LISTING x64lin/../common/event.s 			page 398


 14624 7760 03       		.byte	.LVU133
 14625 7761 00000000 		.quad	.LBB620
 14625      00000000 
 14626 7769 00000000 		.quad	.LBE620-.LBB620
 14626      00000000 
 14627 7771 0C       		.byte	0xc
 14628 7772 A9       		.byte	0xa9
 14629 7773 2D       		.byte	0x2d
 14630 7774 04       		.uleb128 0x4
 14631 7775 3B640000 		.long	0x643b
 14632 7779 00000000 		.long	.LLST69
 14633 777d 00000000 		.long	.LVUS69
 14634 7781 00       		.byte	0
 14635 7782 00       		.byte	0
 14636 7783 00       		.byte	0
 14637 7784 37       		.uleb128 0x37
 14638 7785 E8650000 		.long	0x65e8
 14639 7789 00000000 		.quad	.LBI621
 14639      00000000 
 14640 7791 05       		.byte	.LVU135
 14641 7792 00000000 		.long	.LLRL70
 14642 7796 05       		.byte	0x5
 14643 7797 4002     		.value	0x240
 14644 7799 24       		.byte	0x24
 14645 779a 5B780000 		.long	0x785b
 14646 779e 04       		.uleb128 0x4
 14647 779f FE650000 		.long	0x65fe
 14648 77a3 00000000 		.long	.LLST71
 14649 77a7 00000000 		.long	.LVUS71
 14650 77ab 04       		.uleb128 0x4
 14651 77ac F1650000 		.long	0x65f1
 14652 77b0 00000000 		.long	.LLST72
 14653 77b4 00000000 		.long	.LVUS72
 14654 77b8 28       		.uleb128 0x28
 14655 77b9 0C660000 		.long	0x660c
 14656 77bd 00000000 		.quad	.LBI622
 14656      00000000 
 14657 77c5 06       		.byte	.LVU136
 14658 77c6 00000000 		.long	.LLRL70
 14659 77ca 07       		.byte	0x7
 14660 77cb D001     		.value	0x1d0
 14661 77cd 1C       		.byte	0x1c
 14662 77ce 04       		.uleb128 0x4
 14663 77cf 23660000 		.long	0x6623
 14664 77d3 00000000 		.long	.LLST73
 14665 77d7 00000000 		.long	.LVUS73
 14666 77db 04       		.uleb128 0x4
 14667 77dc 1A660000 		.long	0x661a
 14668 77e0 00000000 		.long	.LLST74
 14669 77e4 00000000 		.long	.LVUS74
 14670 77e8 2F       		.uleb128 0x2f
 14671 77e9 8D640000 		.long	0x648d
 14672 77ed 00000000 		.quad	.LBI623
 14672      00000000 
 14673 77f5 07       		.byte	.LVU137
 14674 77f6 00000000 		.long	.LLRL70
 14675 77fa 0C       		.byte	0xc
GAS LISTING x64lin/../common/event.s 			page 399


 14676 77fb B9       		.byte	0xb9
 14677 77fc 28       		.byte	0x28
 14678 77fd 04       		.uleb128 0x4
 14679 77fe 9B640000 		.long	0x649b
 14680 7802 00000000 		.long	.LLST75
 14681 7806 00000000 		.long	.LVUS75
 14682 780a 04       		.uleb128 0x4
 14683 780b B0640000 		.long	0x64b0
 14684 780f 00000000 		.long	.LLST76
 14685 7813 00000000 		.long	.LVUS76
 14686 7817 04       		.uleb128 0x4
 14687 7818 A4640000 		.long	0x64a4
 14688 781c 00000000 		.long	.LLST77
 14689 7820 00000000 		.long	.LVUS77
 14690 7824 7D       		.uleb128 0x7d
 14691 7825 00000000 		.quad	.LVL30
 14691      00000000 
 14692 782d 51630000 		.long	0x6351
 14693 7831 3E780000 		.long	0x783e
 14694 7835 32       		.uleb128 0x32
 14695 7836 01       		.uleb128 0x1
 14696 7837 55       		.byte	0x55
 14697 7838 04       		.uleb128 0x4
 14698 7839 7F       		.byte	0x7f
 14699 783a 00       		.sleb128 0
 14700 783b 33       		.byte	0x33
 14701 783c 24       		.byte	0x24
 14702 783d 00       		.byte	0
 14703 783e 4C       		.uleb128 0x4c
 14704 783f 00000000 		.quad	.LVL50
 14704      00000000 
 14705 7847 323B0000 		.long	0x3b32
 14706 784b 4C       		.uleb128 0x4c
 14707 784c 00000000 		.quad	.LVL51
 14707      00000000 
 14708 7854 283B0000 		.long	0x3b28
 14709 7858 00       		.byte	0
 14710 7859 00       		.byte	0
 14711 785a 00       		.byte	0
 14712 785b 1F       		.uleb128 0x1f
 14713 785c DA640000 		.long	0x64da
 14714 7860 00000000 		.quad	.LBI628
 14714      00000000 
 14715 7868 01       		.byte	.LVU141
 14716 7869 00000000 		.quad	.LBB628
 14716      00000000 
 14717 7871 00000000 		.quad	.LBE628-.LBB628
 14717      00000000 
 14718 7879 05       		.byte	0x5
 14719 787a 4102     		.value	0x241
 14720 787c 07       		.byte	0x7
 14721 787d 04       		.uleb128 0x4
 14722 787e E8640000 		.long	0x64e8
 14723 7882 00000000 		.long	.LLST78
 14724 7886 00000000 		.long	.LVUS78
 14725 788a 00       		.byte	0
 14726 788b 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 400


 14727 788c 00       		.byte	0
 14728 788d 46       		.uleb128 0x46
 14729 788e C2690000 		.long	0x69c2
 14730 7892 00000000 		.quad	.LBI631
 14730      00000000 
 14731 789a 00       		.byte	.LVU149
 14732 789b 00000000 		.quad	.LBB631
 14732      00000000 
 14733 78a3 10000000 		.quad	.LBE631-.LBB631
 14733      00000000 
 14734 78ab 06       		.byte	0x6
 14735 78ac C203     		.value	0x3c2
 14736 78ae 0D       		.byte	0xd
 14737 78af 247A0000 		.long	0x7a24
 14738 78b3 04       		.uleb128 0x4
 14739 78b4 F7690000 		.long	0x69f7
 14740 78b8 00000000 		.long	.LLST79
 14741 78bc 00000000 		.long	.LVUS79
 14742 78c0 04       		.uleb128 0x4
 14743 78c1 EA690000 		.long	0x69ea
 14744 78c5 00000000 		.long	.LLST80
 14745 78c9 00000000 		.long	.LVUS80
 14746 78cd 04       		.uleb128 0x4
 14747 78ce DD690000 		.long	0x69dd
 14748 78d2 00000000 		.long	.LLST81
 14749 78d6 00000000 		.long	.LVUS81
 14750 78da 1F       		.uleb128 0x1f
 14751 78db 056A0000 		.long	0x6a05
 14752 78df 00000000 		.quad	.LBI632
 14752      00000000 
 14753 78e7 01       		.byte	.LVU150
 14754 78e8 00000000 		.quad	.LBB632
 14754      00000000 
 14755 78f0 10000000 		.quad	.LBE632-.LBB632
 14755      00000000 
 14756 78f8 0E       		.byte	0xe
 14757 78f9 6C02     		.value	0x26c
 14758 78fb 07       		.byte	0x7
 14759 78fc 04       		.uleb128 0x4
 14760 78fd 446A0000 		.long	0x6a44
 14761 7901 00000000 		.long	.LLST82
 14762 7905 00000000 		.long	.LVUS82
 14763 7909 04       		.uleb128 0x4
 14764 790a 376A0000 		.long	0x6a37
 14765 790e 00000000 		.long	.LLST83
 14766 7912 00000000 		.long	.LVUS83
 14767 7916 04       		.uleb128 0x4
 14768 7917 2A6A0000 		.long	0x6a2a
 14769 791b 00000000 		.long	.LLST84
 14770 791f 00000000 		.long	.LVUS84
 14771 7923 1F       		.uleb128 0x1f
 14772 7924 7C6A0000 		.long	0x6a7c
 14773 7928 00000000 		.quad	.LBI633
 14773      00000000 
 14774 7930 02       		.byte	.LVU151
 14775 7931 00000000 		.quad	.LBB633
 14775      00000000 
GAS LISTING x64lin/../common/event.s 			page 401


 14776 7939 10000000 		.quad	.LBE633-.LBB633
 14776      00000000 
 14777 7941 0E       		.byte	0xe
 14778 7942 1102     		.value	0x211
 14779 7944 1F       		.byte	0x1f
 14780 7945 04       		.uleb128 0x4
 14781 7946 BB6A0000 		.long	0x6abb
 14782 794a 00000000 		.long	.LLST85
 14783 794e 00000000 		.long	.LVUS85
 14784 7952 04       		.uleb128 0x4
 14785 7953 AE6A0000 		.long	0x6aae
 14786 7957 00000000 		.long	.LLST86
 14787 795b 00000000 		.long	.LVUS86
 14788 795f 04       		.uleb128 0x4
 14789 7960 A16A0000 		.long	0x6aa1
 14790 7964 00000000 		.long	.LLST87
 14791 7968 00000000 		.long	.LVUS87
 14792 796c 1F       		.uleb128 0x1f
 14793 796d C96A0000 		.long	0x6ac9
 14794 7971 00000000 		.quad	.LBI634
 14794      00000000 
 14795 7979 03       		.byte	.LVU152
 14796 797a 00000000 		.quad	.LBB634
 14796      00000000 
 14797 7982 10000000 		.quad	.LBE634-.LBB634
 14797      00000000 
 14798 798a 0E       		.byte	0xe
 14799 798b 0A02     		.value	0x20a
 14800 798d 2A       		.byte	0x2a
 14801 798e 04       		.uleb128 0x4
 14802 798f 086B0000 		.long	0x6b08
 14803 7993 00000000 		.long	.LLST88
 14804 7997 00000000 		.long	.LVUS88
 14805 799b 04       		.uleb128 0x4
 14806 799c FB6A0000 		.long	0x6afb
 14807 79a0 00000000 		.long	.LLST89
 14808 79a4 00000000 		.long	.LVUS89
 14809 79a8 04       		.uleb128 0x4
 14810 79a9 EE6A0000 		.long	0x6aee
 14811 79ad 00000000 		.long	.LLST90
 14812 79b1 00000000 		.long	.LVUS90
 14813 79b5 1F       		.uleb128 0x1f
 14814 79b6 166B0000 		.long	0x6b16
 14815 79ba 00000000 		.quad	.LBI636
 14815      00000000 
 14816 79c2 04       		.byte	.LVU153
 14817 79c3 00000000 		.quad	.LBB636
 14817      00000000 
 14818 79cb 10000000 		.quad	.LBE636-.LBB636
 14818      00000000 
 14819 79d3 0E       		.byte	0xe
 14820 79d4 EF01     		.value	0x1ef
 14821 79d6 1E       		.byte	0x1e
 14822 79d7 04       		.uleb128 0x4
 14823 79d8 426B0000 		.long	0x6b42
 14824 79dc 00000000 		.long	.LLST91
 14825 79e0 00000000 		.long	.LVUS91
GAS LISTING x64lin/../common/event.s 			page 402


 14826 79e4 04       		.uleb128 0x4
 14827 79e5 356B0000 		.long	0x6b35
 14828 79e9 00000000 		.long	.LLST92
 14829 79ed 00000000 		.long	.LVUS92
 14830 79f1 04       		.uleb128 0x4
 14831 79f2 286B0000 		.long	0x6b28
 14832 79f6 00000000 		.long	.LLST93
 14833 79fa 00000000 		.long	.LVUS93
 14834 79fe 35       		.uleb128 0x35
 14835 79ff 4F6B0000 		.long	0x6b4f
 14836 7a03 00000000 		.long	.LLST94
 14837 7a07 00000000 		.long	.LVUS94
 14838 7a0b 3B       		.uleb128 0x3b
 14839 7a0c 00000000 		.quad	.LVL36
 14839      00000000 
 14840 7a14 22850000 		.long	0x8522
 14841 7a18 32       		.uleb128 0x32
 14842 7a19 01       		.uleb128 0x1
 14843 7a1a 55       		.byte	0x55
 14844 7a1b 02       		.uleb128 0x2
 14845 7a1c 7D       		.byte	0x7d
 14846 7a1d 00       		.sleb128 0
 14847 7a1e 00       		.byte	0
 14848 7a1f 00       		.byte	0
 14849 7a20 00       		.byte	0
 14850 7a21 00       		.byte	0
 14851 7a22 00       		.byte	0
 14852 7a23 00       		.byte	0
 14853 7a24 1F       		.uleb128 0x1f
 14854 7a25 77650000 		.long	0x6577
 14855 7a29 00000000 		.quad	.LBI638
 14855      00000000 
 14856 7a31 01       		.byte	.LVU158
 14857 7a32 00000000 		.quad	.LBB638
 14857      00000000 
 14858 7a3a 14000000 		.quad	.LBE638-.LBB638
 14858      00000000 
 14859 7a42 06       		.byte	0x6
 14860 7a43 C503     		.value	0x3c5
 14861 7a45 15       		.byte	0x15
 14862 7a46 04       		.uleb128 0x4
 14863 7a47 9B650000 		.long	0x659b
 14864 7a4b 00000000 		.long	.LLST95
 14865 7a4f 00000000 		.long	.LVUS95
 14866 7a53 04       		.uleb128 0x4
 14867 7a54 8E650000 		.long	0x658e
 14868 7a58 00000000 		.long	.LLST96
 14869 7a5c 00000000 		.long	.LVUS96
 14870 7a60 04       		.uleb128 0x4
 14871 7a61 85650000 		.long	0x6585
 14872 7a65 00000000 		.long	.LLST97
 14873 7a69 00000000 		.long	.LVUS97
 14874 7a6d 62       		.uleb128 0x62
 14875 7a6e A8650000 		.long	0x65a8
 14876 7a72 46       		.uleb128 0x46
 14877 7a73 12650000 		.long	0x6512
 14878 7a77 00000000 		.quad	.LBI640
GAS LISTING x64lin/../common/event.s 			page 403


 14878      00000000 
 14879 7a7f 02       		.byte	.LVU159
 14880 7a80 00000000 		.quad	.LBB640
 14880      00000000 
 14881 7a88 00000000 		.quad	.LBE640-.LBB640
 14881      00000000 
 14882 7a90 05       		.byte	0x5
 14883 7a91 4602     		.value	0x246
 14884 7a93 12       		.byte	0x12
 14885 7a94 127B0000 		.long	0x7b12
 14886 7a98 04       		.uleb128 0x4
 14887 7a99 20650000 		.long	0x6520
 14888 7a9d 00000000 		.long	.LLST98
 14889 7aa1 00000000 		.long	.LVUS98
 14890 7aa5 1F       		.uleb128 0x1f
 14891 7aa6 E2630000 		.long	0x63e2
 14892 7aaa 00000000 		.quad	.LBI641
 14892      00000000 
 14893 7ab2 03       		.byte	.LVU160
 14894 7ab3 00000000 		.quad	.LBB641
 14894      00000000 
 14895 7abb 00000000 		.quad	.LBE641-.LBB641
 14895      00000000 
 14896 7ac3 05       		.byte	0x5
 14897 7ac4 2C02     		.value	0x22c
 14898 7ac6 35       		.byte	0x35
 14899 7ac7 04       		.uleb128 0x4
 14900 7ac8 02640000 		.long	0x6402
 14901 7acc 00000000 		.long	.LLST99
 14902 7ad0 00000000 		.long	.LVUS99
 14903 7ad4 04       		.uleb128 0x4
 14904 7ad5 F9630000 		.long	0x63f9
 14905 7ad9 00000000 		.long	.LLST100
 14906 7add 00000000 		.long	.LVUS100
 14907 7ae1 45       		.uleb128 0x45
 14908 7ae2 2D640000 		.long	0x642d
 14909 7ae6 00000000 		.quad	.LBI642
 14909      00000000 
 14910 7aee 04       		.byte	.LVU161
 14911 7aef 00000000 		.quad	.LBB642
 14911      00000000 
 14912 7af7 00000000 		.quad	.LBE642-.LBB642
 14912      00000000 
 14913 7aff 0C       		.byte	0xc
 14914 7b00 A9       		.byte	0xa9
 14915 7b01 2D       		.byte	0x2d
 14916 7b02 04       		.uleb128 0x4
 14917 7b03 3B640000 		.long	0x643b
 14918 7b07 00000000 		.long	.LLST101
 14919 7b0b 00000000 		.long	.LVUS101
 14920 7b0f 00       		.byte	0
 14921 7b10 00       		.byte	0
 14922 7b11 00       		.byte	0
 14923 7b12 46       		.uleb128 0x46
 14924 7b13 5C640000 		.long	0x645c
 14925 7b17 00000000 		.quad	.LBI643
 14925      00000000 
GAS LISTING x64lin/../common/event.s 			page 404


 14926 7b1f 06       		.byte	.LVU163
 14927 7b20 00000000 		.quad	.LBB643
 14927      00000000 
 14928 7b28 14000000 		.quad	.LBE643-.LBB643
 14928      00000000 
 14929 7b30 05       		.byte	0x5
 14930 7b31 4702     		.value	0x247
 14931 7b33 1F       		.byte	0x1f
 14932 7b34 007C0000 		.long	0x7c00
 14933 7b38 04       		.uleb128 0x4
 14934 7b39 7F640000 		.long	0x647f
 14935 7b3d 00000000 		.long	.LLST102
 14936 7b41 00000000 		.long	.LVUS102
 14937 7b45 04       		.uleb128 0x4
 14938 7b46 72640000 		.long	0x6472
 14939 7b4a 00000000 		.long	.LLST103
 14940 7b4e 00000000 		.long	.LVUS103
 14941 7b52 04       		.uleb128 0x4
 14942 7b53 65640000 		.long	0x6465
 14943 7b57 00000000 		.long	.LLST104
 14944 7b5b 00000000 		.long	.LVUS104
 14945 7b5f 1F       		.uleb128 0x1f
 14946 7b60 B2630000 		.long	0x63b2
 14947 7b64 00000000 		.quad	.LBI644
 14947      00000000 
 14948 7b6c 07       		.byte	.LVU164
 14949 7b6d 00000000 		.quad	.LBB644
 14949      00000000 
 14950 7b75 14000000 		.quad	.LBE644-.LBB644
 14950      00000000 
 14951 7b7d 07       		.byte	0x7
 14952 7b7e F001     		.value	0x1f0
 14953 7b80 17       		.byte	0x17
 14954 7b81 04       		.uleb128 0x4
 14955 7b82 D5630000 		.long	0x63d5
 14956 7b86 00000000 		.long	.LLST105
 14957 7b8a 00000000 		.long	.LVUS105
 14958 7b8e 04       		.uleb128 0x4
 14959 7b8f C9630000 		.long	0x63c9
 14960 7b93 00000000 		.long	.LLST106
 14961 7b97 00000000 		.long	.LVUS106
 14962 7b9b 04       		.uleb128 0x4
 14963 7b9c C0630000 		.long	0x63c0
 14964 7ba0 00000000 		.long	.LLST107
 14965 7ba4 00000000 		.long	.LVUS107
 14966 7ba8 45       		.uleb128 0x45
 14967 7ba9 82630000 		.long	0x6382
 14968 7bad 00000000 		.quad	.LBI645
 14968      00000000 
 14969 7bb5 08       		.byte	.LVU165
 14970 7bb6 00000000 		.quad	.LBB645
 14970      00000000 
 14971 7bbe 14000000 		.quad	.LBE645-.LBB645
 14971      00000000 
 14972 7bc6 0C       		.byte	0xc
 14973 7bc7 C7       		.byte	0xc7
 14974 7bc8 23       		.byte	0x23
GAS LISTING x64lin/../common/event.s 			page 405


 14975 7bc9 04       		.uleb128 0x4
 14976 7bca 90630000 		.long	0x6390
 14977 7bce 00000000 		.long	.LLST108
 14978 7bd2 00000000 		.long	.LVUS108
 14979 7bd6 04       		.uleb128 0x4
 14980 7bd7 A5630000 		.long	0x63a5
 14981 7bdb 00000000 		.long	.LLST109
 14982 7bdf 00000000 		.long	.LVUS109
 14983 7be3 04       		.uleb128 0x4
 14984 7be4 99630000 		.long	0x6399
 14985 7be8 00000000 		.long	.LLST110
 14986 7bec 00000000 		.long	.LVUS110
 14987 7bf0 4C       		.uleb128 0x4c
 14988 7bf1 00000000 		.quad	.LVL37
 14988      00000000 
 14989 7bf9 20630000 		.long	0x6320
 14990 7bfd 00       		.byte	0
 14991 7bfe 00       		.byte	0
 14992 7bff 00       		.byte	0
 14993 7c00 1F       		.uleb128 0x1f
 14994 7c01 DA640000 		.long	0x64da
 14995 7c05 00000000 		.quad	.LBI647
 14995      00000000 
 14996 7c0d 01       		.byte	.LVU168
 14997 7c0e 00000000 		.quad	.LBB647
 14997      00000000 
 14998 7c16 00000000 		.quad	.LBE647-.LBB647
 14998      00000000 
 14999 7c1e 05       		.byte	0x5
 15000 7c1f 4802     		.value	0x248
 15001 7c21 07       		.byte	0x7
 15002 7c22 04       		.uleb128 0x4
 15003 7c23 E8640000 		.long	0x64e8
 15004 7c27 00000000 		.long	.LLST111
 15005 7c2b 00000000 		.long	.LVUS111
 15006 7c2f 00       		.byte	0
 15007 7c30 00       		.byte	0
 15008 7c31 00       		.byte	0
 15009 7c32 37       		.uleb128 0x37
 15010 7c33 C2690000 		.long	0x69c2
 15011 7c37 00000000 		.quad	.LBI649
 15011      00000000 
 15012 7c3f 00       		.byte	.LVU194
 15013 7c40 00000000 		.long	.LLRL112
 15014 7c44 06       		.byte	0x6
 15015 7c45 B103     		.value	0x3b1
 15016 7c47 0F       		.byte	0xf
 15017 7c48 997D0000 		.long	0x7d99
 15018 7c4c 04       		.uleb128 0x4
 15019 7c4d F7690000 		.long	0x69f7
 15020 7c51 00000000 		.long	.LLST113
 15021 7c55 00000000 		.long	.LVUS113
 15022 7c59 04       		.uleb128 0x4
 15023 7c5a EA690000 		.long	0x69ea
 15024 7c5e 00000000 		.long	.LLST114
 15025 7c62 00000000 		.long	.LVUS114
 15026 7c66 04       		.uleb128 0x4
GAS LISTING x64lin/../common/event.s 			page 406


 15027 7c67 DD690000 		.long	0x69dd
 15028 7c6b 00000000 		.long	.LLST115
 15029 7c6f 00000000 		.long	.LVUS115
 15030 7c73 28       		.uleb128 0x28
 15031 7c74 056A0000 		.long	0x6a05
 15032 7c78 00000000 		.quad	.LBI650
 15032      00000000 
 15033 7c80 01       		.byte	.LVU195
 15034 7c81 00000000 		.long	.LLRL112
 15035 7c85 0E       		.byte	0xe
 15036 7c86 6C02     		.value	0x26c
 15037 7c88 07       		.byte	0x7
 15038 7c89 04       		.uleb128 0x4
 15039 7c8a 446A0000 		.long	0x6a44
 15040 7c8e 00000000 		.long	.LLST116
 15041 7c92 00000000 		.long	.LVUS116
 15042 7c96 04       		.uleb128 0x4
 15043 7c97 376A0000 		.long	0x6a37
 15044 7c9b 00000000 		.long	.LLST117
 15045 7c9f 00000000 		.long	.LVUS117
 15046 7ca3 04       		.uleb128 0x4
 15047 7ca4 2A6A0000 		.long	0x6a2a
 15048 7ca8 00000000 		.long	.LLST118
 15049 7cac 00000000 		.long	.LVUS118
 15050 7cb0 28       		.uleb128 0x28
 15051 7cb1 7C6A0000 		.long	0x6a7c
 15052 7cb5 00000000 		.quad	.LBI651
 15052      00000000 
 15053 7cbd 02       		.byte	.LVU196
 15054 7cbe 00000000 		.long	.LLRL112
 15055 7cc2 0E       		.byte	0xe
 15056 7cc3 1102     		.value	0x211
 15057 7cc5 1F       		.byte	0x1f
 15058 7cc6 04       		.uleb128 0x4
 15059 7cc7 BB6A0000 		.long	0x6abb
 15060 7ccb 00000000 		.long	.LLST119
 15061 7ccf 00000000 		.long	.LVUS119
 15062 7cd3 04       		.uleb128 0x4
 15063 7cd4 AE6A0000 		.long	0x6aae
 15064 7cd8 00000000 		.long	.LLST120
 15065 7cdc 00000000 		.long	.LVUS120
 15066 7ce0 04       		.uleb128 0x4
 15067 7ce1 A16A0000 		.long	0x6aa1
 15068 7ce5 00000000 		.long	.LLST121
 15069 7ce9 00000000 		.long	.LVUS121
 15070 7ced 28       		.uleb128 0x28
 15071 7cee C96A0000 		.long	0x6ac9
 15072 7cf2 00000000 		.quad	.LBI652
 15072      00000000 
 15073 7cfa 03       		.byte	.LVU197
 15074 7cfb 00000000 		.long	.LLRL112
 15075 7cff 0E       		.byte	0xe
 15076 7d00 0A02     		.value	0x20a
 15077 7d02 2A       		.byte	0x2a
 15078 7d03 04       		.uleb128 0x4
 15079 7d04 086B0000 		.long	0x6b08
 15080 7d08 00000000 		.long	.LLST122
GAS LISTING x64lin/../common/event.s 			page 407


 15081 7d0c 00000000 		.long	.LVUS122
 15082 7d10 04       		.uleb128 0x4
 15083 7d11 FB6A0000 		.long	0x6afb
 15084 7d15 00000000 		.long	.LLST123
 15085 7d19 00000000 		.long	.LVUS123
 15086 7d1d 04       		.uleb128 0x4
 15087 7d1e EE6A0000 		.long	0x6aee
 15088 7d22 00000000 		.long	.LLST124
 15089 7d26 00000000 		.long	.LVUS124
 15090 7d2a 4B       		.uleb128 0x4b
 15091 7d2b 00000000 		.long	.LLRL112
 15092 7d2f 28       		.uleb128 0x28
 15093 7d30 166B0000 		.long	0x6b16
 15094 7d34 00000000 		.quad	.LBI654
 15094      00000000 
 15095 7d3c 04       		.byte	.LVU198
 15096 7d3d 00000000 		.long	.LLRL112
 15097 7d41 0E       		.byte	0xe
 15098 7d42 EF01     		.value	0x1ef
 15099 7d44 1E       		.byte	0x1e
 15100 7d45 04       		.uleb128 0x4
 15101 7d46 426B0000 		.long	0x6b42
 15102 7d4a 00000000 		.long	.LLST125
 15103 7d4e 00000000 		.long	.LVUS125
 15104 7d52 04       		.uleb128 0x4
 15105 7d53 356B0000 		.long	0x6b35
 15106 7d57 00000000 		.long	.LLST126
 15107 7d5b 00000000 		.long	.LVUS126
 15108 7d5f 04       		.uleb128 0x4
 15109 7d60 286B0000 		.long	0x6b28
 15110 7d64 00000000 		.long	.LLST127
 15111 7d68 00000000 		.long	.LVUS127
 15112 7d6c 4B       		.uleb128 0x4b
 15113 7d6d 00000000 		.long	.LLRL112
 15114 7d71 35       		.uleb128 0x35
 15115 7d72 4F6B0000 		.long	0x6b4f
 15116 7d76 00000000 		.long	.LLST128
 15117 7d7a 00000000 		.long	.LVUS128
 15118 7d7e 3B       		.uleb128 0x3b
 15119 7d7f 00000000 		.quad	.LVL44
 15119      00000000 
 15120 7d87 22850000 		.long	0x8522
 15121 7d8b 32       		.uleb128 0x32
 15122 7d8c 01       		.uleb128 0x1
 15123 7d8d 55       		.byte	0x55
 15124 7d8e 02       		.uleb128 0x2
 15125 7d8f 7D       		.byte	0x7d
 15126 7d90 00       		.sleb128 0
 15127 7d91 00       		.byte	0
 15128 7d92 00       		.byte	0
 15129 7d93 00       		.byte	0
 15130 7d94 00       		.byte	0
 15131 7d95 00       		.byte	0
 15132 7d96 00       		.byte	0
 15133 7d97 00       		.byte	0
 15134 7d98 00       		.byte	0
 15135 7d99 46       		.uleb128 0x46
GAS LISTING x64lin/../common/event.s 			page 408


 15136 7d9a 02680000 		.long	0x6802
 15137 7d9e 00000000 		.quad	.LBI663
 15137      00000000 
 15138 7da6 01       		.byte	.LVU203
 15139 7da7 00000000 		.quad	.LBB663
 15139      00000000 
 15140 7daf 19000000 		.quad	.LBE663-.LBB663
 15140      00000000 
 15141 7db7 06       		.byte	0x6
 15142 7db8 B503     		.value	0x3b5
 15143 7dba 18       		.byte	0x18
 15144 7dbb 297F0000 		.long	0x7f29
 15145 7dbf 04       		.uleb128 0x4
 15146 7dc0 37680000 		.long	0x6837
 15147 7dc4 00000000 		.long	.LLST129
 15148 7dc8 00000000 		.long	.LVUS129
 15149 7dcc 04       		.uleb128 0x4
 15150 7dcd 2A680000 		.long	0x682a
 15151 7dd1 00000000 		.long	.LLST130
 15152 7dd5 00000000 		.long	.LVUS130
 15153 7dd9 04       		.uleb128 0x4
 15154 7dda 1D680000 		.long	0x681d
 15155 7dde 00000000 		.long	.LLST131
 15156 7de2 00000000 		.long	.LVUS131
 15157 7de6 1F       		.uleb128 0x1f
 15158 7de7 45680000 		.long	0x6845
 15159 7deb 00000000 		.quad	.LBI664
 15159      00000000 
 15160 7df3 02       		.byte	.LVU204
 15161 7df4 00000000 		.quad	.LBB664
 15161      00000000 
 15162 7dfc 19000000 		.quad	.LBE664-.LBB664
 15162      00000000 
 15163 7e04 0E       		.byte	0xe
 15164 7e05 5B03     		.value	0x35b
 15165 7e07 07       		.byte	0x7
 15166 7e08 04       		.uleb128 0x4
 15167 7e09 84680000 		.long	0x6884
 15168 7e0d 00000000 		.long	.LLST132
 15169 7e11 00000000 		.long	.LVUS132
 15170 7e15 04       		.uleb128 0x4
 15171 7e16 77680000 		.long	0x6877
 15172 7e1a 00000000 		.long	.LLST133
 15173 7e1e 00000000 		.long	.LVUS133
 15174 7e22 04       		.uleb128 0x4
 15175 7e23 6A680000 		.long	0x686a
 15176 7e27 00000000 		.long	.LLST134
 15177 7e2b 00000000 		.long	.LVUS134
 15178 7e2f 1F       		.uleb128 0x1f
 15179 7e30 92680000 		.long	0x6892
 15180 7e34 00000000 		.quad	.LBI665
 15180      00000000 
 15181 7e3c 03       		.byte	.LVU205
 15182 7e3d 00000000 		.quad	.LBB665
 15182      00000000 
 15183 7e45 19000000 		.quad	.LBE665-.LBB665
 15183      00000000 
GAS LISTING x64lin/../common/event.s 			page 409


 15184 7e4d 0E       		.byte	0xe
 15185 7e4e 1E03     		.value	0x31e
 15186 7e50 1F       		.byte	0x1f
 15187 7e51 04       		.uleb128 0x4
 15188 7e52 D1680000 		.long	0x68d1
 15189 7e56 00000000 		.long	.LLST135
 15190 7e5a 00000000 		.long	.LVUS135
 15191 7e5e 04       		.uleb128 0x4
 15192 7e5f C4680000 		.long	0x68c4
 15193 7e63 00000000 		.long	.LLST136
 15194 7e67 00000000 		.long	.LVUS136
 15195 7e6b 04       		.uleb128 0x4
 15196 7e6c B7680000 		.long	0x68b7
 15197 7e70 00000000 		.long	.LLST137
 15198 7e74 00000000 		.long	.LVUS137
 15199 7e78 1F       		.uleb128 0x1f
 15200 7e79 DF680000 		.long	0x68df
 15201 7e7d 00000000 		.quad	.LBI666
 15201      00000000 
 15202 7e85 04       		.byte	.LVU206
 15203 7e86 00000000 		.quad	.LBB666
 15203      00000000 
 15204 7e8e 19000000 		.quad	.LBE666-.LBB666
 15204      00000000 
 15205 7e96 0E       		.byte	0xe
 15206 7e97 0103     		.value	0x301
 15207 7e99 33       		.byte	0x33
 15208 7e9a 04       		.uleb128 0x4
 15209 7e9b 1E690000 		.long	0x691e
 15210 7e9f 00000000 		.long	.LLST138
 15211 7ea3 00000000 		.long	.LVUS138
 15212 7ea7 04       		.uleb128 0x4
 15213 7ea8 11690000 		.long	0x6911
 15214 7eac 00000000 		.long	.LLST139
 15215 7eb0 00000000 		.long	.LVUS139
 15216 7eb4 04       		.uleb128 0x4
 15217 7eb5 04690000 		.long	0x6904
 15218 7eb9 00000000 		.long	.LLST140
 15219 7ebd 00000000 		.long	.LVUS140
 15220 7ec1 1F       		.uleb128 0x1f
 15221 7ec2 2C690000 		.long	0x692c
 15222 7ec6 00000000 		.quad	.LBI668
 15222      00000000 
 15223 7ece 05       		.byte	.LVU207
 15224 7ecf 00000000 		.quad	.LBB668
 15224      00000000 
 15225 7ed7 19000000 		.quad	.LBE668-.LBB668
 15225      00000000 
 15226 7edf 0E       		.byte	0xe
 15227 7ee0 F802     		.value	0x2f8
 15228 7ee2 25       		.byte	0x25
 15229 7ee3 04       		.uleb128 0x4
 15230 7ee4 58690000 		.long	0x6958
 15231 7ee8 00000000 		.long	.LLST141
 15232 7eec 00000000 		.long	.LVUS141
 15233 7ef0 04       		.uleb128 0x4
 15234 7ef1 4B690000 		.long	0x694b
GAS LISTING x64lin/../common/event.s 			page 410


 15235 7ef5 00000000 		.long	.LLST142
 15236 7ef9 00000000 		.long	.LVUS142
 15237 7efd 04       		.uleb128 0x4
 15238 7efe 3E690000 		.long	0x693e
 15239 7f02 00000000 		.long	.LLST143
 15240 7f06 00000000 		.long	.LVUS143
 15241 7f0a 35       		.uleb128 0x35
 15242 7f0b 65690000 		.long	0x6965
 15243 7f0f 00000000 		.long	.LLST144
 15244 7f13 00000000 		.long	.LVUS144
 15245 7f17 4C       		.uleb128 0x4c
 15246 7f18 00000000 		.quad	.LVL48
 15246      00000000 
 15247 7f20 22850000 		.long	0x8522
 15248 7f24 00       		.byte	0
 15249 7f25 00       		.byte	0
 15250 7f26 00       		.byte	0
 15251 7f27 00       		.byte	0
 15252 7f28 00       		.byte	0
 15253 7f29 37       		.uleb128 0x37
 15254 7f2a 0F6D0000 		.long	0x6d0f
 15255 7f2e 00000000 		.quad	.LBI671
 15255      00000000 
 15256 7f36 01       		.byte	.LVU174
 15257 7f37 00000000 		.long	.LLRL145
 15258 7f3b 06       		.byte	0x6
 15259 7f3c CB03     		.value	0x3cb
 15260 7f3e 29       		.byte	0x29
 15261 7f3f 5E7F0000 		.long	0x7f5e
 15262 7f43 04       		.uleb128 0x4
 15263 7f44 266D0000 		.long	0x6d26
 15264 7f48 00000000 		.long	.LLST146
 15265 7f4c 00000000 		.long	.LVUS146
 15266 7f50 04       		.uleb128 0x4
 15267 7f51 1D6D0000 		.long	0x6d1d
 15268 7f55 00000000 		.long	.LLST147
 15269 7f59 00000000 		.long	.LVUS147
 15270 7f5d 00       		.byte	0
 15271 7f5e 28       		.uleb128 0x28
 15272 7f5f 0F6D0000 		.long	0x6d0f
 15273 7f63 00000000 		.quad	.LBI676
 15273      00000000 
 15274 7f6b 01       		.byte	.LVU182
 15275 7f6c 00000000 		.long	.LLRL148
 15276 7f70 06       		.byte	0x6
 15277 7f71 CC03     		.value	0x3cc
 15278 7f73 2A       		.byte	0x2a
 15279 7f74 04       		.uleb128 0x4
 15280 7f75 266D0000 		.long	0x6d26
 15281 7f79 00000000 		.long	.LLST149
 15282 7f7d 00000000 		.long	.LVUS149
 15283 7f81 04       		.uleb128 0x4
 15284 7f82 1D6D0000 		.long	0x6d1d
 15285 7f86 00000000 		.long	.LLST150
 15286 7f8a 00000000 		.long	.LVUS150
 15287 7f8e 00       		.byte	0
 15288 7f8f 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 411


 15289 7f90 00       		.byte	0
 15290 7f91 00       		.byte	0
 15291 7f92 46       		.uleb128 0x46
 15292 7f93 346D0000 		.long	0x6d34
 15293 7f97 00000000 		.quad	.LBI685
 15293      00000000 
 15294 7f9f 01       		.byte	.LVU91
 15295 7fa0 00000000 		.quad	.LBB685
 15295      00000000 
 15296 7fa8 0A000000 		.quad	.LBE685-.LBB685
 15296      00000000 
 15297 7fb0 06       		.byte	0x6
 15298 7fb1 F101     		.value	0x1f1
 15299 7fb3 41       		.byte	0x41
 15300 7fb4 9E800000 		.long	0x809e
 15301 7fb8 04       		.uleb128 0x4
 15302 7fb9 426D0000 		.long	0x6d42
 15303 7fbd 00000000 		.long	.LLST151
 15304 7fc1 00000000 		.long	.LVUS151
 15305 7fc5 1F       		.uleb128 0x1f
 15306 7fc6 45670000 		.long	0x6745
 15307 7fca 00000000 		.quad	.LBI687
 15307      00000000 
 15308 7fd2 02       		.byte	.LVU92
 15309 7fd3 00000000 		.quad	.LBB687
 15309      00000000 
 15310 7fdb 0A000000 		.quad	.LBE687-.LBB687
 15310      00000000 
 15311 7fe3 05       		.byte	0x5
 15312 7fe4 3202     		.value	0x232
 15313 7fe6 1A       		.byte	0x1a
 15314 7fe7 04       		.uleb128 0x4
 15315 7fe8 5B670000 		.long	0x675b
 15316 7fec 00000000 		.long	.LLST152
 15317 7ff0 00000000 		.long	.LVUS152
 15318 7ff4 04       		.uleb128 0x4
 15319 7ff5 4E670000 		.long	0x674e
 15320 7ff9 00000000 		.long	.LLST153
 15321 7ffd 00000000 		.long	.LVUS153
 15322 8001 1F       		.uleb128 0x1f
 15323 8002 69670000 		.long	0x6769
 15324 8006 00000000 		.quad	.LBI688
 15324      00000000 
 15325 800e 03       		.byte	.LVU93
 15326 800f 00000000 		.quad	.LBB688
 15326      00000000 
 15327 8017 0A000000 		.quad	.LBE688-.LBB688
 15327      00000000 
 15328 801f 07       		.byte	0x7
 15329 8020 D001     		.value	0x1d0
 15330 8022 1C       		.byte	0x1c
 15331 8023 04       		.uleb128 0x4
 15332 8024 80670000 		.long	0x6780
 15333 8028 00000000 		.long	.LLST154
 15334 802c 00000000 		.long	.LVUS154
 15335 8030 04       		.uleb128 0x4
 15336 8031 77670000 		.long	0x6777
GAS LISTING x64lin/../common/event.s 			page 412


 15337 8035 00000000 		.long	.LLST155
 15338 8039 00000000 		.long	.LVUS155
 15339 803d 45       		.uleb128 0x45
 15340 803e 2A650000 		.long	0x652a
 15341 8042 00000000 		.quad	.LBI689
 15341      00000000 
 15342 804a 04       		.byte	.LVU94
 15343 804b 00000000 		.quad	.LBB689
 15343      00000000 
 15344 8053 0A000000 		.quad	.LBE689-.LBB689
 15344      00000000 
 15345 805b 0C       		.byte	0xc
 15346 805c B9       		.byte	0xb9
 15347 805d 28       		.byte	0x28
 15348 805e 04       		.uleb128 0x4
 15349 805f 41650000 		.long	0x6541
 15350 8063 00000000 		.long	.LLST156
 15351 8067 00000000 		.long	.LVUS156
 15352 806b 04       		.uleb128 0x4
 15353 806c 4D650000 		.long	0x654d
 15354 8070 00000000 		.long	.LLST157
 15355 8074 00000000 		.long	.LVUS157
 15356 8078 04       		.uleb128 0x4
 15357 8079 38650000 		.long	0x6538
 15358 807d 00000000 		.long	.LLST158
 15359 8081 00000000 		.long	.LVUS158
 15360 8085 3B       		.uleb128 0x3b
 15361 8086 00000000 		.quad	.LVL20
 15361      00000000 
 15362 808e 51630000 		.long	0x6351
 15363 8092 32       		.uleb128 0x32
 15364 8093 01       		.uleb128 0x1
 15365 8094 55       		.byte	0x55
 15366 8095 03       		.uleb128 0x3
 15367 8096 0A       		.byte	0xa
 15368 8097 0002     		.value	0x200
 15369 8099 00       		.byte	0
 15370 809a 00       		.byte	0
 15371 809b 00       		.byte	0
 15372 809c 00       		.byte	0
 15373 809d 00       		.byte	0
 15374 809e 37       		.uleb128 0x37
 15375 809f 0F6F0000 		.long	0x6f0f
 15376 80a3 00000000 		.quad	.LBI691
 15376      00000000 
 15377 80ab 00       		.byte	.LVU98
 15378 80ac 00000000 		.long	.LLRL159
 15379 80b0 06       		.byte	0x6
 15380 80b1 F501     		.value	0x1f5
 15381 80b3 1E       		.byte	0x1e
 15382 80b4 BE820000 		.long	0x82be
 15383 80b8 04       		.uleb128 0x4
 15384 80b9 4F6F0000 		.long	0x6f4f
 15385 80bd 00000000 		.long	.LLST160
 15386 80c1 00000000 		.long	.LVUS160
 15387 80c5 04       		.uleb128 0x4
 15388 80c6 3D6F0000 		.long	0x6f3d
GAS LISTING x64lin/../common/event.s 			page 413


 15389 80ca 00000000 		.long	.LLST161
 15390 80ce 00000000 		.long	.LVUS161
 15391 80d2 04       		.uleb128 0x4
 15392 80d3 306F0000 		.long	0x6f30
 15393 80d7 00000000 		.long	.LLST162
 15394 80db 00000000 		.long	.LVUS162
 15395 80df 28       		.uleb128 0x28
 15396 80e0 566F0000 		.long	0x6f56
 15397 80e4 00000000 		.quad	.LBI692
 15397      00000000 
 15398 80ec 01       		.byte	.LVU99
 15399 80ed 00000000 		.long	.LLRL159
 15400 80f1 07       		.byte	0x7
 15401 80f2 0602     		.value	0x206
 15402 80f4 15       		.byte	0x15
 15403 80f5 04       		.uleb128 0x4
 15404 80f6 886F0000 		.long	0x6f88
 15405 80fa 00000000 		.long	.LLST163
 15406 80fe 00000000 		.long	.LVUS163
 15407 8102 04       		.uleb128 0x4
 15408 8103 776F0000 		.long	0x6f77
 15409 8107 00000000 		.long	.LLST164
 15410 810b 00000000 		.long	.LVUS164
 15411 810f 2F       		.uleb128 0x2f
 15412 8110 8F6F0000 		.long	0x6f8f
 15413 8114 00000000 		.quad	.LBI693
 15413      00000000 
 15414 811c 02       		.byte	.LVU100
 15415 811d 00000000 		.long	.LLRL159
 15416 8121 08       		.byte	0x8
 15417 8122 61       		.byte	0x61
 15418 8123 0E       		.byte	0xe
 15419 8124 04       		.uleb128 0x4
 15420 8125 A66F0000 		.long	0x6fa6
 15421 8129 00000000 		.long	.LLST165
 15422 812d 00000000 		.long	.LVUS165
 15423 8131 04       		.uleb128 0x4
 15424 8132 9D6F0000 		.long	0x6f9d
 15425 8136 00000000 		.long	.LLST166
 15426 813a 00000000 		.long	.LVUS166
 15427 813e 28       		.uleb128 0x28
 15428 813f C86F0000 		.long	0x6fc8
 15429 8143 00000000 		.quad	.LBI694
 15429      00000000 
 15430 814b 03       		.byte	.LVU101
 15431 814c 00000000 		.long	.LLRL159
 15432 8150 09       		.byte	0x9
 15433 8151 4701     		.value	0x147
 15434 8153 07       		.byte	0x7
 15435 8154 04       		.uleb128 0x4
 15436 8155 DF6F0000 		.long	0x6fdf
 15437 8159 00000000 		.long	.LLST167
 15438 815d 00000000 		.long	.LVUS167
 15439 8161 04       		.uleb128 0x4
 15440 8162 D66F0000 		.long	0x6fd6
 15441 8166 00000000 		.long	.LLST168
 15442 816a 00000000 		.long	.LVUS168
GAS LISTING x64lin/../common/event.s 			page 414


 15443 816e 2F       		.uleb128 0x2f
 15444 816f A16D0000 		.long	0x6da1
 15445 8173 00000000 		.quad	.LBI695
 15445      00000000 
 15446 817b 04       		.byte	.LVU102
 15447 817c 00000000 		.long	.LLRL159
 15448 8180 09       		.byte	0x9
 15449 8181 D3       		.byte	0xd3
 15450 8182 07       		.byte	0x7
 15451 8183 04       		.uleb128 0x4
 15452 8184 B86D0000 		.long	0x6db8
 15453 8188 00000000 		.long	.LLST169
 15454 818c 00000000 		.long	.LVUS169
 15455 8190 04       		.uleb128 0x4
 15456 8191 AF6D0000 		.long	0x6daf
 15457 8195 00000000 		.long	.LLST170
 15458 8199 00000000 		.long	.LVUS170
 15459 819d 57       		.uleb128 0x57
 15460 819e E66D0000 		.long	0x6de6
 15461 81a2 00000000 		.quad	.LBI697
 15461      00000000 
 15462 81aa 05       		.byte	.LVU103
 15463 81ab 00000000 		.quad	.LBB697
 15463      00000000 
 15464 81b3 00000000 		.quad	.LBE697-.LBB697
 15464      00000000 
 15465 81bb 09       		.byte	0x9
 15466 81bc A2       		.byte	0xa2
 15467 81bd 17       		.byte	0x17
 15468 81be D0810000 		.long	0x81d0
 15469 81c2 04       		.uleb128 0x4
 15470 81c3 F86D0000 		.long	0x6df8
 15471 81c7 00000000 		.long	.LLST171
 15472 81cb 00000000 		.long	.LVUS171
 15473 81cf 00       		.byte	0
 15474 81d0 57       		.uleb128 0x57
 15475 81d1 056E0000 		.long	0x6e05
 15476 81d5 00000000 		.quad	.LBI698
 15476      00000000 
 15477 81dd 07       		.byte	.LVU105
 15478 81de 00000000 		.quad	.LBB698
 15478      00000000 
 15479 81e6 0B000000 		.quad	.LBE698-.LBB698
 15479      00000000 
 15480 81ee 09       		.byte	0x9
 15481 81ef A2       		.byte	0xa2
 15482 81f0 09       		.byte	0x9
 15483 81f1 8A820000 		.long	0x828a
 15484 81f5 04       		.uleb128 0x4
 15485 81f6 1C6E0000 		.long	0x6e1c
 15486 81fa 00000000 		.long	.LLST172
 15487 81fe 00000000 		.long	.LVUS172
 15488 8202 04       		.uleb128 0x4
 15489 8203 136E0000 		.long	0x6e13
 15490 8207 00000000 		.long	.LLST173
 15491 820b 00000000 		.long	.LVUS173
 15492 820f 1F       		.uleb128 0x1f
GAS LISTING x64lin/../common/event.s 			page 415


 15493 8210 3E6E0000 		.long	0x6e3e
 15494 8214 00000000 		.quad	.LBI699
 15494      00000000 
 15495 821c 08       		.byte	.LVU106
 15496 821d 00000000 		.quad	.LBB699
 15496      00000000 
 15497 8225 0B000000 		.quad	.LBE699-.LBB699
 15497      00000000 
 15498 822d 0B       		.byte	0xb
 15499 822e 4204     		.value	0x442
 15500 8230 11       		.byte	0x11
 15501 8231 04       		.uleb128 0x4
 15502 8232 556E0000 		.long	0x6e55
 15503 8236 00000000 		.long	.LLST174
 15504 823a 00000000 		.long	.LVUS174
 15505 823e 04       		.uleb128 0x4
 15506 823f 4C6E0000 		.long	0x6e4c
 15507 8243 00000000 		.long	.LLST175
 15508 8247 00000000 		.long	.LVUS175
 15509 824b 1F       		.uleb128 0x1f
 15510 824c 776E0000 		.long	0x6e77
 15511 8250 00000000 		.quad	.LBI701
 15511      00000000 
 15512 8258 09       		.byte	.LVU107
 15513 8259 00000000 		.quad	.LBB701
 15513      00000000 
 15514 8261 00000000 		.quad	.LBE701-.LBB701
 15514      00000000 
 15515 8269 0B       		.byte	0xb
 15516 826a 2D01     		.value	0x12d
 15517 826c 07       		.byte	0x7
 15518 826d 04       		.uleb128 0x4
 15519 826e 8E6E0000 		.long	0x6e8e
 15520 8272 00000000 		.long	.LLST176
 15521 8276 00000000 		.long	.LVUS176
 15522 827a 04       		.uleb128 0x4
 15523 827b 856E0000 		.long	0x6e85
 15524 827f 00000000 		.long	.LLST177
 15525 8283 00000000 		.long	.LVUS177
 15526 8287 00       		.byte	0
 15527 8288 00       		.byte	0
 15528 8289 00       		.byte	0
 15529 828a 45       		.uleb128 0x45
 15530 828b AF6C0000 		.long	0x6caf
 15531 828f 00000000 		.quad	.LBI702
 15531      00000000 
 15532 8297 01       		.byte	.LVU111
 15533 8298 00000000 		.quad	.LBB702
 15533      00000000 
 15534 82a0 00000000 		.quad	.LBE702-.LBB702
 15534      00000000 
 15535 82a8 09       		.byte	0x9
 15536 82a9 A3       		.byte	0xa3
 15537 82aa 13       		.byte	0x13
 15538 82ab 04       		.uleb128 0x4
 15539 82ac BD6C0000 		.long	0x6cbd
 15540 82b0 00000000 		.long	.LLST178
GAS LISTING x64lin/../common/event.s 			page 416


 15541 82b4 00000000 		.long	.LVUS178
 15542 82b8 00       		.byte	0
 15543 82b9 00       		.byte	0
 15544 82ba 00       		.byte	0
 15545 82bb 00       		.byte	0
 15546 82bc 00       		.byte	0
 15547 82bd 00       		.byte	0
 15548 82be 37       		.uleb128 0x37
 15549 82bf 0F6D0000 		.long	0x6d0f
 15550 82c3 00000000 		.quad	.LBI709
 15550      00000000 
 15551 82cb 01       		.byte	.LVU116
 15552 82cc 00000000 		.long	.LLRL179
 15553 82d0 06       		.byte	0x6
 15554 82d1 FB01     		.value	0x1fb
 15555 82d3 29       		.byte	0x29
 15556 82d4 F3820000 		.long	0x82f3
 15557 82d8 04       		.uleb128 0x4
 15558 82d9 266D0000 		.long	0x6d26
 15559 82dd 00000000 		.long	.LLST180
 15560 82e1 00000000 		.long	.LVUS180
 15561 82e5 04       		.uleb128 0x4
 15562 82e6 1D6D0000 		.long	0x6d1d
 15563 82ea 00000000 		.long	.LLST181
 15564 82ee 00000000 		.long	.LVUS181
 15565 82f2 00       		.byte	0
 15566 82f3 3B       		.uleb128 0x3b
 15567 82f4 00000000 		.quad	.LVL53
 15567      00000000 
 15568 82fc 3C3B0000 		.long	0x3b3c
 15569 8300 32       		.uleb128 0x32
 15570 8301 01       		.uleb128 0x1
 15571 8302 55       		.byte	0x55
 15572 8303 09       		.uleb128 0x9
 15573 8304 03       		.byte	0x3
 15574 8305 00000000 		.quad	.LC0
 15574      00000000 
 15575 830d 00       		.byte	0
 15576 830e 00       		.byte	0
 15577 830f 00       		.byte	0
 15578 8310 00       		.byte	0
 15579 8311 00       		.byte	0
 15580 8312 3A       		.uleb128 0x3a
 15581 8313 A0700000 		.long	0x70a0
 15582 8317 00000000 		.quad	.LBI723
 15582      00000000 
 15583 831f 00       		.byte	.LVU53
 15584 8320 00000000 		.long	.LLRL182
 15585 8324 01       		.byte	0x1
 15586 8325 0A       		.byte	0xa
 15587 8326 01       		.byte	0x1
 15588 8327 97830000 		.long	0x8397
 15589 832b 04       		.uleb128 0x4
 15590 832c AE700000 		.long	0x70ae
 15591 8330 00000000 		.long	.LLST183
 15592 8334 00000000 		.long	.LVUS183
 15593 8338 2F       		.uleb128 0x2f
GAS LISTING x64lin/../common/event.s 			page 417


 15594 8339 6F840000 		.long	0x846f
 15595 833d 00000000 		.quad	.LBI724
 15595      00000000 
 15596 8345 01       		.byte	.LVU54
 15597 8346 00000000 		.long	.LLRL182
 15598 834a 02       		.byte	0x2
 15599 834b EB       		.byte	0xeb
 15600 834c 19       		.byte	0x19
 15601 834d 04       		.uleb128 0x4
 15602 834e 7D840000 		.long	0x847d
 15603 8352 00000000 		.long	.LLST184
 15604 8356 00000000 		.long	.LVUS184
 15605 835a 2F       		.uleb128 0x2f
 15606 835b AC840000 		.long	0x84ac
 15607 835f 00000000 		.quad	.LBI725
 15607      00000000 
 15608 8367 03       		.byte	.LVU56
 15609 8368 00000000 		.long	.LLRL182
 15610 836c 02       		.byte	0x2
 15611 836d 76       		.byte	0x76
 15612 836e 1D       		.byte	0x1d
 15613 836f 04       		.uleb128 0x4
 15614 8370 BB840000 		.long	0x84bb
 15615 8374 00000000 		.long	.LLST185
 15616 8378 00000000 		.long	.LVUS185
 15617 837c B101     		.uleb128 0xb1
 15618 837e 00000000 		.quad	.LVL16
 15618      00000000 
 15619 8386 04630000 		.long	0x6304
 15620 838a 32       		.uleb128 0x32
 15621 838b 01       		.uleb128 0x1
 15622 838c 55       		.byte	0x55
 15623 838d 05       		.uleb128 0x5
 15624 838e A3       		.byte	0xa3
 15625 838f 01       		.uleb128 0x1
 15626 8390 55       		.byte	0x55
 15627 8391 23       		.byte	0x23
 15628 8392 50       		.uleb128 0x50
 15629 8393 00       		.byte	0
 15630 8394 00       		.byte	0
 15631 8395 00       		.byte	0
 15632 8396 00       		.byte	0
 15633 8397 3A       		.uleb128 0x3a
 15634 8398 A0700000 		.long	0x70a0
 15635 839c 00000000 		.quad	.LBI738
 15635      00000000 
 15636 83a4 01       		.byte	.LVU227
 15637 83a5 00000000 		.long	.LLRL186
 15638 83a9 01       		.byte	0x1
 15639 83aa 0A       		.byte	0xa
 15640 83ab 01       		.byte	0x1
 15641 83ac 18840000 		.long	0x8418
 15642 83b0 04       		.uleb128 0x4
 15643 83b1 AE700000 		.long	0x70ae
 15644 83b5 00000000 		.long	.LLST187
 15645 83b9 00000000 		.long	.LVUS187
 15646 83bd 2F       		.uleb128 0x2f
GAS LISTING x64lin/../common/event.s 			page 418


 15647 83be 6F840000 		.long	0x846f
 15648 83c2 00000000 		.quad	.LBI739
 15648      00000000 
 15649 83ca 02       		.byte	.LVU228
 15650 83cb 00000000 		.long	.LLRL188
 15651 83cf 02       		.byte	0x2
 15652 83d0 EB       		.byte	0xeb
 15653 83d1 19       		.byte	0x19
 15654 83d2 04       		.uleb128 0x4
 15655 83d3 7D840000 		.long	0x847d
 15656 83d7 00000000 		.long	.LLST189
 15657 83db 00000000 		.long	.LVUS189
 15658 83df 2F       		.uleb128 0x2f
 15659 83e0 AC840000 		.long	0x84ac
 15660 83e4 00000000 		.quad	.LBI740
 15660      00000000 
 15661 83ec 04       		.byte	.LVU230
 15662 83ed 00000000 		.long	.LLRL188
 15663 83f1 02       		.byte	0x2
 15664 83f2 76       		.byte	0x76
 15665 83f3 1D       		.byte	0x1d
 15666 83f4 04       		.uleb128 0x4
 15667 83f5 BB840000 		.long	0x84bb
 15668 83f9 00000000 		.long	.LLST190
 15669 83fd 00000000 		.long	.LVUS190
 15670 8401 3B       		.uleb128 0x3b
 15671 8402 00000000 		.quad	.LVL56
 15671      00000000 
 15672 840a 04630000 		.long	0x6304
 15673 840e 32       		.uleb128 0x32
 15674 840f 01       		.uleb128 0x1
 15675 8410 55       		.byte	0x55
 15676 8411 02       		.uleb128 0x2
 15677 8412 7C       		.byte	0x7c
 15678 8413 00       		.sleb128 0
 15679 8414 00       		.byte	0
 15680 8415 00       		.byte	0
 15681 8416 00       		.byte	0
 15682 8417 00       		.byte	0
 15683 8418 7D       		.uleb128 0x7d
 15684 8419 00000000 		.quad	.LVL12
 15684      00000000 
 15685 8421 4B100000 		.long	0x104b
 15686 8425 31840000 		.long	0x8431
 15687 8429 32       		.uleb128 0x32
 15688 842a 01       		.uleb128 0x1
 15689 842b 55       		.byte	0x55
 15690 842c 03       		.uleb128 0x3
 15691 842d 73       		.byte	0x73
 15692 842e F800     		.sleb128 120
 15693 8430 00       		.byte	0
 15694 8431 3B       		.uleb128 0x3b
 15695 8432 00000000 		.quad	.LVL57
 15695      00000000 
 15696 843a 2B850000 		.long	0x852b
 15697 843e 32       		.uleb128 0x32
 15698 843f 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 419


 15699 8440 55       		.byte	0x55
 15700 8441 02       		.uleb128 0x2
 15701 8442 76       		.byte	0x76
 15702 8443 00       		.sleb128 0
 15703 8444 00       		.byte	0
 15704 8445 00       		.byte	0
 15705 8446 09       		.uleb128 0x9
 15706 8447 2B610000 		.long	0x612b
 15707 844b 22       		.uleb128 0x22
 15708 844c 4C390000 		.long	0x394c
 15709 8450 15       		.uleb128 0x15
 15710 8451 3C3F0000 		.long	0x3f3c
 15711 8455 6F840000 		.long	0x846f
 15712 8459 0A       		.uleb128 0xa
 15713 845a 5F547000 		.string	"_Tp"
 15714 845e 81600000 		.long	0x6081
 15715 8462 20       		.uleb128 0x20
 15716 8463 5F5F7400 		.string	"__t"
 15717 8467 0A       		.byte	0xa
 15718 8468 68       		.byte	0x68
 15719 8469 10       		.byte	0x10
 15720 846a 81600000 		.long	0x6081
 15721 846e 00       		.byte	0
 15722 846f 13       		.uleb128 0x13
 15723 8470 DA0C0000 		.long	0xcda
 15724 8474 7D840000 		.long	0x847d
 15725 8478 03       		.byte	0x3
 15726 8479 87840000 		.long	0x8487
 15727 847d 11       		.uleb128 0x11
 15728 847e 00000000 		.long	.LASF1084
 15729 8482 D25C0000 		.long	0x5cd2
 15730 8486 00       		.byte	0
 15731 8487 13       		.uleb128 0x13
 15732 8488 A00C0000 		.long	0xca0
 15733 848c 95840000 		.long	0x8495
 15734 8490 03       		.byte	0x3
 15735 8491 AC840000 		.long	0x84ac
 15736 8495 11       		.uleb128 0x11
 15737 8496 00000000 		.long	.LASF1084
 15738 849a D25C0000 		.long	0x5cd2
 15739 849e B201     		.uleb128 0xb2
 15740 84a0 5F5F6500 		.string	"__e"
 15741 84a4 02       		.byte	0x2
 15742 84a5 64       		.byte	0x64
 15743 84a6 0B       		.byte	0xb
 15744 84a7 4C430000 		.long	0x434c
 15745 84ab 00       		.byte	0
 15746 84ac 7E       		.uleb128 0x7e
 15747 84ad 00000000 		.long	.LASF1126
 15748 84b1 0803     		.value	0x308
 15749 84b3 4C430000 		.long	0x434c
 15750 84b7 C9840000 		.long	0x84c9
 15751 84bb 0E       		.uleb128 0xe
 15752 84bc 00000000 		.long	.LASF1125
 15753 84c0 03       		.byte	0x3
 15754 84c1 0803     		.value	0x308
 15755 84c3 2C       		.byte	0x2c
GAS LISTING x64lin/../common/event.s 			page 420


 15756 84c4 B95C0000 		.long	0x5cb9
 15757 84c8 00       		.byte	0
 15758 84c9 7E       		.uleb128 0x7e
 15759 84ca 00000000 		.long	.LASF1127
 15760 84ce EA02     		.value	0x2ea
 15761 84d0 4C430000 		.long	0x434c
 15762 84d4 E6840000 		.long	0x84e6
 15763 84d8 0E       		.uleb128 0xe
 15764 84d9 00000000 		.long	.LASF1125
 15765 84dd 03       		.byte	0x3
 15766 84de EA02     		.value	0x2ea
 15767 84e0 2A       		.byte	0x2a
 15768 84e1 B95C0000 		.long	0x5cb9
 15769 84e5 00       		.byte	0
 15770 84e6 B301     		.uleb128 0xb3
 15771 84e8 00000000 		.long	.LASF1147
 15772 84ec 03       		.byte	0x3
 15773 84ed 2C01     		.value	0x12c
 15774 84ef 01       		.byte	0x1
 15775 84f0 4C430000 		.long	0x434c
 15776 84f4 03       		.byte	0x3
 15777 84f5 B401     		.uleb128 0xb4
 15778 84f7 00000000 		.long	.LASF1081
 15779 84fb 54       		.byte	0x54
 15780 84fc AE       		.byte	0xae
 15781 84fd 20       		.byte	0x20
 15782 84fe 00000000 		.long	.LASF1128
 15783 8502 14440000 		.long	0x4414
 15784 8506 03       		.byte	0x3
 15785 8507 1D850000 		.long	0x851d
 15786 850b 01       		.uleb128 0x1
 15787 850c 21010000 		.long	0x121
 15788 8510 20       		.uleb128 0x20
 15789 8511 5F5F7000 		.string	"__p"
 15790 8515 54       		.byte	0x54
 15791 8516 AE       		.byte	0xae
 15792 8517 40       		.byte	0x40
 15793 8518 14440000 		.long	0x4414
 15794 851c 00       		.byte	0
 15795 851d 78       		.uleb128 0x78
 15796 851e 5F3F0000 		.long	0x3f5f
 15797 8522 7F       		.uleb128 0x7f
 15798 8523 00000000 		.long	.LASF1129
 15799 8527 00000000 		.long	.LASF1131
 15800 852b 7F       		.uleb128 0x7f
 15801 852c 00000000 		.long	.LASF1130
 15802 8530 00000000 		.long	.LASF1132
 15803 8534 00       		.byte	0
 15804              		.section	.debug_abbrev,"",@progbits
 15805              	.Ldebug_abbrev0:
 15806 0000 01       		.uleb128 0x1
 15807 0001 05       		.uleb128 0x5
 15808 0002 00       		.byte	0
 15809 0003 49       		.uleb128 0x49
 15810 0004 13       		.uleb128 0x13
 15811 0005 00       		.byte	0
 15812 0006 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 421


 15813 0007 02       		.uleb128 0x2
 15814 0008 05       		.uleb128 0x5
 15815 0009 00       		.byte	0
 15816 000a 49       		.uleb128 0x49
 15817 000b 13       		.uleb128 0x13
 15818 000c 34       		.uleb128 0x34
 15819 000d 19       		.uleb128 0x19
 15820 000e 00       		.byte	0
 15821 000f 00       		.byte	0
 15822 0010 03       		.uleb128 0x3
 15823 0011 08       		.uleb128 0x8
 15824 0012 00       		.byte	0
 15825 0013 3A       		.uleb128 0x3a
 15826 0014 0B       		.uleb128 0xb
 15827 0015 3B       		.uleb128 0x3b
 15828 0016 0B       		.uleb128 0xb
 15829 0017 39       		.uleb128 0x39
 15830 0018 0B       		.uleb128 0xb
 15831 0019 18       		.uleb128 0x18
 15832 001a 13       		.uleb128 0x13
 15833 001b 00       		.byte	0
 15834 001c 00       		.byte	0
 15835 001d 04       		.uleb128 0x4
 15836 001e 05       		.uleb128 0x5
 15837 001f 00       		.byte	0
 15838 0020 31       		.uleb128 0x31
 15839 0021 13       		.uleb128 0x13
 15840 0022 02       		.uleb128 0x2
 15841 0023 17       		.uleb128 0x17
 15842 0024 B742     		.uleb128 0x2137
 15843 0026 17       		.uleb128 0x17
 15844 0027 00       		.byte	0
 15845 0028 00       		.byte	0
 15846 0029 05       		.uleb128 0x5
 15847 002a 0D       		.uleb128 0xd
 15848 002b 00       		.byte	0
 15849 002c 03       		.uleb128 0x3
 15850 002d 0E       		.uleb128 0xe
 15851 002e 3A       		.uleb128 0x3a
 15852 002f 0B       		.uleb128 0xb
 15853 0030 3B       		.uleb128 0x3b
 15854 0031 0B       		.uleb128 0xb
 15855 0032 39       		.uleb128 0x39
 15856 0033 0B       		.uleb128 0xb
 15857 0034 49       		.uleb128 0x49
 15858 0035 13       		.uleb128 0x13
 15859 0036 38       		.uleb128 0x38
 15860 0037 0B       		.uleb128 0xb
 15861 0038 00       		.byte	0
 15862 0039 00       		.byte	0
 15863 003a 06       		.uleb128 0x6
 15864 003b 16       		.uleb128 0x16
 15865 003c 00       		.byte	0
 15866 003d 03       		.uleb128 0x3
 15867 003e 0E       		.uleb128 0xe
 15868 003f 3A       		.uleb128 0x3a
 15869 0040 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 422


 15870 0041 3B       		.uleb128 0x3b
 15871 0042 0B       		.uleb128 0xb
 15872 0043 39       		.uleb128 0x39
 15873 0044 0B       		.uleb128 0xb
 15874 0045 49       		.uleb128 0x49
 15875 0046 13       		.uleb128 0x13
 15876 0047 00       		.byte	0
 15877 0048 00       		.byte	0
 15878 0049 07       		.uleb128 0x7
 15879 004a 0F       		.uleb128 0xf
 15880 004b 00       		.byte	0
 15881 004c 0B       		.uleb128 0xb
 15882 004d 21       		.uleb128 0x21
 15883 004e 08       		.sleb128 8
 15884 004f 49       		.uleb128 0x49
 15885 0050 13       		.uleb128 0x13
 15886 0051 00       		.byte	0
 15887 0052 00       		.byte	0
 15888 0053 08       		.uleb128 0x8
 15889 0054 26       		.uleb128 0x26
 15890 0055 00       		.byte	0
 15891 0056 49       		.uleb128 0x49
 15892 0057 13       		.uleb128 0x13
 15893 0058 00       		.byte	0
 15894 0059 00       		.byte	0
 15895 005a 09       		.uleb128 0x9
 15896 005b 10       		.uleb128 0x10
 15897 005c 00       		.byte	0
 15898 005d 0B       		.uleb128 0xb
 15899 005e 21       		.uleb128 0x21
 15900 005f 08       		.sleb128 8
 15901 0060 49       		.uleb128 0x49
 15902 0061 13       		.uleb128 0x13
 15903 0062 00       		.byte	0
 15904 0063 00       		.byte	0
 15905 0064 0A       		.uleb128 0xa
 15906 0065 2F       		.uleb128 0x2f
 15907 0066 00       		.byte	0
 15908 0067 03       		.uleb128 0x3
 15909 0068 08       		.uleb128 0x8
 15910 0069 49       		.uleb128 0x49
 15911 006a 13       		.uleb128 0x13
 15912 006b 00       		.byte	0
 15913 006c 00       		.byte	0
 15914 006d 0B       		.uleb128 0xb
 15915 006e 2E       		.uleb128 0x2e
 15916 006f 01       		.byte	0x1
 15917 0070 3F       		.uleb128 0x3f
 15918 0071 19       		.uleb128 0x19
 15919 0072 03       		.uleb128 0x3
 15920 0073 0E       		.uleb128 0xe
 15921 0074 3A       		.uleb128 0x3a
 15922 0075 0B       		.uleb128 0xb
 15923 0076 3B       		.uleb128 0x3b
 15924 0077 05       		.uleb128 0x5
 15925 0078 39       		.uleb128 0x39
 15926 0079 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 423


 15927 007a 6E       		.uleb128 0x6e
 15928 007b 0E       		.uleb128 0xe
 15929 007c 32       		.uleb128 0x32
 15930 007d 0B       		.uleb128 0xb
 15931 007e 3C       		.uleb128 0x3c
 15932 007f 19       		.uleb128 0x19
 15933 0080 64       		.uleb128 0x64
 15934 0081 13       		.uleb128 0x13
 15935 0082 01       		.uleb128 0x1
 15936 0083 13       		.uleb128 0x13
 15937 0084 00       		.byte	0
 15938 0085 00       		.byte	0
 15939 0086 0C       		.uleb128 0xc
 15940 0087 2E       		.uleb128 0x2e
 15941 0088 01       		.byte	0x1
 15942 0089 3F       		.uleb128 0x3f
 15943 008a 19       		.uleb128 0x19
 15944 008b 03       		.uleb128 0x3
 15945 008c 0E       		.uleb128 0xe
 15946 008d 3A       		.uleb128 0x3a
 15947 008e 0B       		.uleb128 0xb
 15948 008f 3B       		.uleb128 0x3b
 15949 0090 05       		.uleb128 0x5
 15950 0091 39       		.uleb128 0x39
 15951 0092 0B       		.uleb128 0xb
 15952 0093 49       		.uleb128 0x49
 15953 0094 13       		.uleb128 0x13
 15954 0095 3C       		.uleb128 0x3c
 15955 0096 19       		.uleb128 0x19
 15956 0097 01       		.uleb128 0x1
 15957 0098 13       		.uleb128 0x13
 15958 0099 00       		.byte	0
 15959 009a 00       		.byte	0
 15960 009b 0D       		.uleb128 0xd
 15961 009c 2E       		.uleb128 0x2e
 15962 009d 01       		.byte	0x1
 15963 009e 3F       		.uleb128 0x3f
 15964 009f 19       		.uleb128 0x19
 15965 00a0 03       		.uleb128 0x3
 15966 00a1 0E       		.uleb128 0xe
 15967 00a2 3A       		.uleb128 0x3a
 15968 00a3 0B       		.uleb128 0xb
 15969 00a4 3B       		.uleb128 0x3b
 15970 00a5 0B       		.uleb128 0xb
 15971 00a6 39       		.uleb128 0x39
 15972 00a7 0B       		.uleb128 0xb
 15973 00a8 6E       		.uleb128 0x6e
 15974 00a9 0E       		.uleb128 0xe
 15975 00aa 32       		.uleb128 0x32
 15976 00ab 0B       		.uleb128 0xb
 15977 00ac 3C       		.uleb128 0x3c
 15978 00ad 19       		.uleb128 0x19
 15979 00ae 64       		.uleb128 0x64
 15980 00af 13       		.uleb128 0x13
 15981 00b0 01       		.uleb128 0x1
 15982 00b1 13       		.uleb128 0x13
 15983 00b2 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 424


 15984 00b3 00       		.byte	0
 15985 00b4 0E       		.uleb128 0xe
 15986 00b5 05       		.uleb128 0x5
 15987 00b6 00       		.byte	0
 15988 00b7 03       		.uleb128 0x3
 15989 00b8 0E       		.uleb128 0xe
 15990 00b9 3A       		.uleb128 0x3a
 15991 00ba 0B       		.uleb128 0xb
 15992 00bb 3B       		.uleb128 0x3b
 15993 00bc 05       		.uleb128 0x5
 15994 00bd 39       		.uleb128 0x39
 15995 00be 0B       		.uleb128 0xb
 15996 00bf 49       		.uleb128 0x49
 15997 00c0 13       		.uleb128 0x13
 15998 00c1 00       		.byte	0
 15999 00c2 00       		.byte	0
 16000 00c3 0F       		.uleb128 0xf
 16001 00c4 2E       		.uleb128 0x2e
 16002 00c5 01       		.byte	0x1
 16003 00c6 3F       		.uleb128 0x3f
 16004 00c7 19       		.uleb128 0x19
 16005 00c8 03       		.uleb128 0x3
 16006 00c9 0E       		.uleb128 0xe
 16007 00ca 3A       		.uleb128 0x3a
 16008 00cb 0B       		.uleb128 0xb
 16009 00cc 3B       		.uleb128 0x3b
 16010 00cd 05       		.uleb128 0x5
 16011 00ce 39       		.uleb128 0x39
 16012 00cf 0B       		.uleb128 0xb
 16013 00d0 6E       		.uleb128 0x6e
 16014 00d1 0E       		.uleb128 0xe
 16015 00d2 49       		.uleb128 0x49
 16016 00d3 13       		.uleb128 0x13
 16017 00d4 32       		.uleb128 0x32
 16018 00d5 0B       		.uleb128 0xb
 16019 00d6 3C       		.uleb128 0x3c
 16020 00d7 19       		.uleb128 0x19
 16021 00d8 64       		.uleb128 0x64
 16022 00d9 13       		.uleb128 0x13
 16023 00da 01       		.uleb128 0x1
 16024 00db 13       		.uleb128 0x13
 16025 00dc 00       		.byte	0
 16026 00dd 00       		.byte	0
 16027 00de 10       		.uleb128 0x10
 16028 00df 2E       		.uleb128 0x2e
 16029 00e0 01       		.byte	0x1
 16030 00e1 3F       		.uleb128 0x3f
 16031 00e2 19       		.uleb128 0x19
 16032 00e3 03       		.uleb128 0x3
 16033 00e4 0E       		.uleb128 0xe
 16034 00e5 3A       		.uleb128 0x3a
 16035 00e6 0B       		.uleb128 0xb
 16036 00e7 3B       		.uleb128 0x3b
 16037 00e8 0B       		.uleb128 0xb
 16038 00e9 39       		.uleb128 0x39
 16039 00ea 0B       		.uleb128 0xb
 16040 00eb 49       		.uleb128 0x49
GAS LISTING x64lin/../common/event.s 			page 425


 16041 00ec 13       		.uleb128 0x13
 16042 00ed 3C       		.uleb128 0x3c
 16043 00ee 19       		.uleb128 0x19
 16044 00ef 01       		.uleb128 0x1
 16045 00f0 13       		.uleb128 0x13
 16046 00f1 00       		.byte	0
 16047 00f2 00       		.byte	0
 16048 00f3 11       		.uleb128 0x11
 16049 00f4 05       		.uleb128 0x5
 16050 00f5 00       		.byte	0
 16051 00f6 03       		.uleb128 0x3
 16052 00f7 0E       		.uleb128 0xe
 16053 00f8 49       		.uleb128 0x49
 16054 00f9 13       		.uleb128 0x13
 16055 00fa 34       		.uleb128 0x34
 16056 00fb 19       		.uleb128 0x19
 16057 00fc 00       		.byte	0
 16058 00fd 00       		.byte	0
 16059 00fe 12       		.uleb128 0x12
 16060 00ff 2F       		.uleb128 0x2f
 16061 0100 00       		.byte	0
 16062 0101 03       		.uleb128 0x3
 16063 0102 0E       		.uleb128 0xe
 16064 0103 49       		.uleb128 0x49
 16065 0104 13       		.uleb128 0x13
 16066 0105 00       		.byte	0
 16067 0106 00       		.byte	0
 16068 0107 13       		.uleb128 0x13
 16069 0108 2E       		.uleb128 0x2e
 16070 0109 01       		.byte	0x1
 16071 010a 47       		.uleb128 0x47
 16072 010b 13       		.uleb128 0x13
 16073 010c 64       		.uleb128 0x64
 16074 010d 13       		.uleb128 0x13
 16075 010e 20       		.uleb128 0x20
 16076 010f 0B       		.uleb128 0xb
 16077 0110 01       		.uleb128 0x1
 16078 0111 13       		.uleb128 0x13
 16079 0112 00       		.byte	0
 16080 0113 00       		.byte	0
 16081 0114 14       		.uleb128 0x14
 16082 0115 2E       		.uleb128 0x2e
 16083 0116 01       		.byte	0x1
 16084 0117 3F       		.uleb128 0x3f
 16085 0118 19       		.uleb128 0x19
 16086 0119 03       		.uleb128 0x3
 16087 011a 0E       		.uleb128 0xe
 16088 011b 3A       		.uleb128 0x3a
 16089 011c 0B       		.uleb128 0xb
 16090 011d 3B       		.uleb128 0x3b
 16091 011e 05       		.uleb128 0x5
 16092 011f 39       		.uleb128 0x39
 16093 0120 0B       		.uleb128 0xb
 16094 0121 6E       		.uleb128 0x6e
 16095 0122 0E       		.uleb128 0xe
 16096 0123 49       		.uleb128 0x49
 16097 0124 13       		.uleb128 0x13
GAS LISTING x64lin/../common/event.s 			page 426


 16098 0125 3C       		.uleb128 0x3c
 16099 0126 19       		.uleb128 0x19
 16100 0127 01       		.uleb128 0x1
 16101 0128 13       		.uleb128 0x13
 16102 0129 00       		.byte	0
 16103 012a 00       		.byte	0
 16104 012b 15       		.uleb128 0x15
 16105 012c 2E       		.uleb128 0x2e
 16106 012d 01       		.byte	0x1
 16107 012e 47       		.uleb128 0x47
 16108 012f 13       		.uleb128 0x13
 16109 0130 20       		.uleb128 0x20
 16110 0131 21       		.uleb128 0x21
 16111 0132 03       		.sleb128 3
 16112 0133 01       		.uleb128 0x1
 16113 0134 13       		.uleb128 0x13
 16114 0135 00       		.byte	0
 16115 0136 00       		.byte	0
 16116 0137 16       		.uleb128 0x16
 16117 0138 13       		.uleb128 0x13
 16118 0139 01       		.byte	0x1
 16119 013a 03       		.uleb128 0x3
 16120 013b 0E       		.uleb128 0xe
 16121 013c 0B       		.uleb128 0xb
 16122 013d 0B       		.uleb128 0xb
 16123 013e 3A       		.uleb128 0x3a
 16124 013f 0B       		.uleb128 0xb
 16125 0140 3B       		.uleb128 0x3b
 16126 0141 0B       		.uleb128 0xb
 16127 0142 39       		.uleb128 0x39
 16128 0143 0B       		.uleb128 0xb
 16129 0144 01       		.uleb128 0x1
 16130 0145 13       		.uleb128 0x13
 16131 0146 00       		.byte	0
 16132 0147 00       		.byte	0
 16133 0148 17       		.uleb128 0x17
 16134 0149 2E       		.uleb128 0x2e
 16135 014a 01       		.byte	0x1
 16136 014b 3F       		.uleb128 0x3f
 16137 014c 19       		.uleb128 0x19
 16138 014d 03       		.uleb128 0x3
 16139 014e 0E       		.uleb128 0xe
 16140 014f 3A       		.uleb128 0x3a
 16141 0150 0B       		.uleb128 0xb
 16142 0151 3B       		.uleb128 0x3b
 16143 0152 0B       		.uleb128 0xb
 16144 0153 39       		.uleb128 0x39
 16145 0154 0B       		.uleb128 0xb
 16146 0155 6E       		.uleb128 0x6e
 16147 0156 0E       		.uleb128 0xe
 16148 0157 49       		.uleb128 0x49
 16149 0158 13       		.uleb128 0x13
 16150 0159 32       		.uleb128 0x32
 16151 015a 0B       		.uleb128 0xb
 16152 015b 3C       		.uleb128 0x3c
 16153 015c 19       		.uleb128 0x19
 16154 015d 64       		.uleb128 0x64
GAS LISTING x64lin/../common/event.s 			page 427


 16155 015e 13       		.uleb128 0x13
 16156 015f 01       		.uleb128 0x1
 16157 0160 13       		.uleb128 0x13
 16158 0161 00       		.byte	0
 16159 0162 00       		.byte	0
 16160 0163 18       		.uleb128 0x18
 16161 0164 16       		.uleb128 0x16
 16162 0165 00       		.byte	0
 16163 0166 03       		.uleb128 0x3
 16164 0167 0E       		.uleb128 0xe
 16165 0168 3A       		.uleb128 0x3a
 16166 0169 0B       		.uleb128 0xb
 16167 016a 3B       		.uleb128 0x3b
 16168 016b 05       		.uleb128 0x5
 16169 016c 39       		.uleb128 0x39
 16170 016d 0B       		.uleb128 0xb
 16171 016e 49       		.uleb128 0x49
 16172 016f 13       		.uleb128 0x13
 16173 0170 00       		.byte	0
 16174 0171 00       		.byte	0
 16175 0172 19       		.uleb128 0x19
 16176 0173 30       		.uleb128 0x30
 16177 0174 00       		.byte	0
 16178 0175 03       		.uleb128 0x3
 16179 0176 0E       		.uleb128 0xe
 16180 0177 49       		.uleb128 0x49
 16181 0178 13       		.uleb128 0x13
 16182 0179 1C       		.uleb128 0x1c
 16183 017a 0B       		.uleb128 0xb
 16184 017b 00       		.byte	0
 16185 017c 00       		.byte	0
 16186 017d 1A       		.uleb128 0x1a
 16187 017e 2E       		.uleb128 0x2e
 16188 017f 01       		.byte	0x1
 16189 0180 3F       		.uleb128 0x3f
 16190 0181 19       		.uleb128 0x19
 16191 0182 03       		.uleb128 0x3
 16192 0183 0E       		.uleb128 0xe
 16193 0184 3A       		.uleb128 0x3a
 16194 0185 0B       		.uleb128 0xb
 16195 0186 3B       		.uleb128 0x3b
 16196 0187 0B       		.uleb128 0xb
 16197 0188 39       		.uleb128 0x39
 16198 0189 0B       		.uleb128 0xb
 16199 018a 6E       		.uleb128 0x6e
 16200 018b 0E       		.uleb128 0xe
 16201 018c 49       		.uleb128 0x49
 16202 018d 13       		.uleb128 0x13
 16203 018e 3C       		.uleb128 0x3c
 16204 018f 19       		.uleb128 0x19
 16205 0190 01       		.uleb128 0x1
 16206 0191 13       		.uleb128 0x13
 16207 0192 00       		.byte	0
 16208 0193 00       		.byte	0
 16209 0194 1B       		.uleb128 0x1b
 16210 0195 08       		.uleb128 0x8
 16211 0196 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 428


 16212 0197 3A       		.uleb128 0x3a
 16213 0198 0B       		.uleb128 0xb
 16214 0199 3B       		.uleb128 0x3b
 16215 019a 05       		.uleb128 0x5
 16216 019b 39       		.uleb128 0x39
 16217 019c 0B       		.uleb128 0xb
 16218 019d 18       		.uleb128 0x18
 16219 019e 13       		.uleb128 0x13
 16220 019f 00       		.byte	0
 16221 01a0 00       		.byte	0
 16222 01a1 1C       		.uleb128 0x1c
 16223 01a2 24       		.uleb128 0x24
 16224 01a3 00       		.byte	0
 16225 01a4 0B       		.uleb128 0xb
 16226 01a5 0B       		.uleb128 0xb
 16227 01a6 3E       		.uleb128 0x3e
 16228 01a7 0B       		.uleb128 0xb
 16229 01a8 03       		.uleb128 0x3
 16230 01a9 0E       		.uleb128 0xe
 16231 01aa 00       		.byte	0
 16232 01ab 00       		.byte	0
 16233 01ac 1D       		.uleb128 0x1d
 16234 01ad 05       		.uleb128 0x5
 16235 01ae 00       		.byte	0
 16236 01af 31       		.uleb128 0x31
 16237 01b0 13       		.uleb128 0x13
 16238 01b1 00       		.byte	0
 16239 01b2 00       		.byte	0
 16240 01b3 1E       		.uleb128 0x1e
 16241 01b4 05       		.uleb128 0x5
 16242 01b5 00       		.byte	0
 16243 01b6 03       		.uleb128 0x3
 16244 01b7 08       		.uleb128 0x8
 16245 01b8 3A       		.uleb128 0x3a
 16246 01b9 0B       		.uleb128 0xb
 16247 01ba 3B       		.uleb128 0x3b
 16248 01bb 05       		.uleb128 0x5
 16249 01bc 39       		.uleb128 0x39
 16250 01bd 0B       		.uleb128 0xb
 16251 01be 49       		.uleb128 0x49
 16252 01bf 13       		.uleb128 0x13
 16253 01c0 00       		.byte	0
 16254 01c1 00       		.byte	0
 16255 01c2 1F       		.uleb128 0x1f
 16256 01c3 1D       		.uleb128 0x1d
 16257 01c4 01       		.byte	0x1
 16258 01c5 31       		.uleb128 0x31
 16259 01c6 13       		.uleb128 0x13
 16260 01c7 52       		.uleb128 0x52
 16261 01c8 01       		.uleb128 0x1
 16262 01c9 B842     		.uleb128 0x2138
 16263 01cb 0B       		.uleb128 0xb
 16264 01cc 11       		.uleb128 0x11
 16265 01cd 01       		.uleb128 0x1
 16266 01ce 12       		.uleb128 0x12
 16267 01cf 07       		.uleb128 0x7
 16268 01d0 58       		.uleb128 0x58
GAS LISTING x64lin/../common/event.s 			page 429


 16269 01d1 0B       		.uleb128 0xb
 16270 01d2 59       		.uleb128 0x59
 16271 01d3 05       		.uleb128 0x5
 16272 01d4 57       		.uleb128 0x57
 16273 01d5 0B       		.uleb128 0xb
 16274 01d6 00       		.byte	0
 16275 01d7 00       		.byte	0
 16276 01d8 20       		.uleb128 0x20
 16277 01d9 05       		.uleb128 0x5
 16278 01da 00       		.byte	0
 16279 01db 03       		.uleb128 0x3
 16280 01dc 08       		.uleb128 0x8
 16281 01dd 3A       		.uleb128 0x3a
 16282 01de 0B       		.uleb128 0xb
 16283 01df 3B       		.uleb128 0x3b
 16284 01e0 0B       		.uleb128 0xb
 16285 01e1 39       		.uleb128 0x39
 16286 01e2 0B       		.uleb128 0xb
 16287 01e3 49       		.uleb128 0x49
 16288 01e4 13       		.uleb128 0x13
 16289 01e5 00       		.byte	0
 16290 01e6 00       		.byte	0
 16291 01e7 21       		.uleb128 0x21
 16292 01e8 2F       		.uleb128 0x2f
 16293 01e9 00       		.byte	0
 16294 01ea 49       		.uleb128 0x49
 16295 01eb 13       		.uleb128 0x13
 16296 01ec 00       		.byte	0
 16297 01ed 00       		.byte	0
 16298 01ee 22       		.uleb128 0x22
 16299 01ef 42       		.uleb128 0x42
 16300 01f0 00       		.byte	0
 16301 01f1 0B       		.uleb128 0xb
 16302 01f2 21       		.uleb128 0x21
 16303 01f3 08       		.sleb128 8
 16304 01f4 49       		.uleb128 0x49
 16305 01f5 13       		.uleb128 0x13
 16306 01f6 00       		.byte	0
 16307 01f7 00       		.byte	0
 16308 01f8 23       		.uleb128 0x23
 16309 01f9 02       		.uleb128 0x2
 16310 01fa 01       		.byte	0x1
 16311 01fb 03       		.uleb128 0x3
 16312 01fc 0E       		.uleb128 0xe
 16313 01fd 0B       		.uleb128 0xb
 16314 01fe 0B       		.uleb128 0xb
 16315 01ff 3A       		.uleb128 0x3a
 16316 0200 0B       		.uleb128 0xb
 16317 0201 3B       		.uleb128 0x3b
 16318 0202 0B       		.uleb128 0xb
 16319 0203 39       		.uleb128 0x39
 16320 0204 0B       		.uleb128 0xb
 16321 0205 01       		.uleb128 0x1
 16322 0206 13       		.uleb128 0x13
 16323 0207 00       		.byte	0
 16324 0208 00       		.byte	0
 16325 0209 24       		.uleb128 0x24
GAS LISTING x64lin/../common/event.s 			page 430


 16326 020a 2E       		.uleb128 0x2e
 16327 020b 01       		.byte	0x1
 16328 020c 3F       		.uleb128 0x3f
 16329 020d 19       		.uleb128 0x19
 16330 020e 03       		.uleb128 0x3
 16331 020f 0E       		.uleb128 0xe
 16332 0210 3A       		.uleb128 0x3a
 16333 0211 0B       		.uleb128 0xb
 16334 0212 3B       		.uleb128 0x3b
 16335 0213 0B       		.uleb128 0xb
 16336 0214 39       		.uleb128 0x39
 16337 0215 0B       		.uleb128 0xb
 16338 0216 6E       		.uleb128 0x6e
 16339 0217 0E       		.uleb128 0xe
 16340 0218 49       		.uleb128 0x49
 16341 0219 13       		.uleb128 0x13
 16342 021a 3C       		.uleb128 0x3c
 16343 021b 19       		.uleb128 0x19
 16344 021c 64       		.uleb128 0x64
 16345 021d 13       		.uleb128 0x13
 16346 021e 01       		.uleb128 0x1
 16347 021f 13       		.uleb128 0x13
 16348 0220 00       		.byte	0
 16349 0221 00       		.byte	0
 16350 0222 25       		.uleb128 0x25
 16351 0223 13       		.uleb128 0x13
 16352 0224 01       		.byte	0x1
 16353 0225 03       		.uleb128 0x3
 16354 0226 0E       		.uleb128 0xe
 16355 0227 0B       		.uleb128 0xb
 16356 0228 0B       		.uleb128 0xb
 16357 0229 3A       		.uleb128 0x3a
 16358 022a 0B       		.uleb128 0xb
 16359 022b 3B       		.uleb128 0x3b
 16360 022c 05       		.uleb128 0x5
 16361 022d 39       		.uleb128 0x39
 16362 022e 21       		.uleb128 0x21
 16363 022f 0C       		.sleb128 12
 16364 0230 01       		.uleb128 0x1
 16365 0231 13       		.uleb128 0x13
 16366 0232 00       		.byte	0
 16367 0233 00       		.byte	0
 16368 0234 26       		.uleb128 0x26
 16369 0235 16       		.uleb128 0x16
 16370 0236 00       		.byte	0
 16371 0237 03       		.uleb128 0x3
 16372 0238 0E       		.uleb128 0xe
 16373 0239 3A       		.uleb128 0x3a
 16374 023a 21       		.uleb128 0x21
 16375 023b 05       		.sleb128 5
 16376 023c 3B       		.uleb128 0x3b
 16377 023d 05       		.uleb128 0x5
 16378 023e 39       		.uleb128 0x39
 16379 023f 0B       		.uleb128 0xb
 16380 0240 49       		.uleb128 0x49
 16381 0241 13       		.uleb128 0x13
 16382 0242 32       		.uleb128 0x32
GAS LISTING x64lin/../common/event.s 			page 431


 16383 0243 0B       		.uleb128 0xb
 16384 0244 00       		.byte	0
 16385 0245 00       		.byte	0
 16386 0246 27       		.uleb128 0x27
 16387 0247 16       		.uleb128 0x16
 16388 0248 00       		.byte	0
 16389 0249 03       		.uleb128 0x3
 16390 024a 0E       		.uleb128 0xe
 16391 024b 3A       		.uleb128 0x3a
 16392 024c 0B       		.uleb128 0xb
 16393 024d 3B       		.uleb128 0x3b
 16394 024e 0B       		.uleb128 0xb
 16395 024f 39       		.uleb128 0x39
 16396 0250 0B       		.uleb128 0xb
 16397 0251 49       		.uleb128 0x49
 16398 0252 13       		.uleb128 0x13
 16399 0253 32       		.uleb128 0x32
 16400 0254 0B       		.uleb128 0xb
 16401 0255 00       		.byte	0
 16402 0256 00       		.byte	0
 16403 0257 28       		.uleb128 0x28
 16404 0258 1D       		.uleb128 0x1d
 16405 0259 01       		.byte	0x1
 16406 025a 31       		.uleb128 0x31
 16407 025b 13       		.uleb128 0x13
 16408 025c 52       		.uleb128 0x52
 16409 025d 01       		.uleb128 0x1
 16410 025e B842     		.uleb128 0x2138
 16411 0260 0B       		.uleb128 0xb
 16412 0261 55       		.uleb128 0x55
 16413 0262 17       		.uleb128 0x17
 16414 0263 58       		.uleb128 0x58
 16415 0264 0B       		.uleb128 0xb
 16416 0265 59       		.uleb128 0x59
 16417 0266 05       		.uleb128 0x5
 16418 0267 57       		.uleb128 0x57
 16419 0268 0B       		.uleb128 0xb
 16420 0269 00       		.byte	0
 16421 026a 00       		.byte	0
 16422 026b 29       		.uleb128 0x29
 16423 026c 2E       		.uleb128 0x2e
 16424 026d 01       		.byte	0x1
 16425 026e 3F       		.uleb128 0x3f
 16426 026f 19       		.uleb128 0x19
 16427 0270 03       		.uleb128 0x3
 16428 0271 0E       		.uleb128 0xe
 16429 0272 3A       		.uleb128 0x3a
 16430 0273 0B       		.uleb128 0xb
 16431 0274 3B       		.uleb128 0x3b
 16432 0275 0B       		.uleb128 0xb
 16433 0276 39       		.uleb128 0x39
 16434 0277 0B       		.uleb128 0xb
 16435 0278 6E       		.uleb128 0x6e
 16436 0279 0E       		.uleb128 0xe
 16437 027a 3C       		.uleb128 0x3c
 16438 027b 19       		.uleb128 0x19
 16439 027c 64       		.uleb128 0x64
GAS LISTING x64lin/../common/event.s 			page 432


 16440 027d 13       		.uleb128 0x13
 16441 027e 01       		.uleb128 0x1
 16442 027f 13       		.uleb128 0x13
 16443 0280 00       		.byte	0
 16444 0281 00       		.byte	0
 16445 0282 2A       		.uleb128 0x2a
 16446 0283 878201   		.uleb128 0x4107
 16447 0286 01       		.byte	0x1
 16448 0287 03       		.uleb128 0x3
 16449 0288 0E       		.uleb128 0xe
 16450 0289 01       		.uleb128 0x1
 16451 028a 13       		.uleb128 0x13
 16452 028b 00       		.byte	0
 16453 028c 00       		.byte	0
 16454 028d 2B       		.uleb128 0x2b
 16455 028e 2E       		.uleb128 0x2e
 16456 028f 00       		.byte	0
 16457 0290 3F       		.uleb128 0x3f
 16458 0291 19       		.uleb128 0x19
 16459 0292 03       		.uleb128 0x3
 16460 0293 0E       		.uleb128 0xe
 16461 0294 3A       		.uleb128 0x3a
 16462 0295 21       		.uleb128 0x21
 16463 0296 D000     		.sleb128 80
 16464 0298 3B       		.uleb128 0x3b
 16465 0299 0B       		.uleb128 0xb
 16466 029a 39       		.uleb128 0x39
 16467 029b 21       		.uleb128 0x21
 16468 029c 05       		.sleb128 5
 16469 029d 6E       		.uleb128 0x6e
 16470 029e 0E       		.uleb128 0xe
 16471 029f 49       		.uleb128 0x49
 16472 02a0 13       		.uleb128 0x13
 16473 02a1 32       		.uleb128 0x32
 16474 02a2 21       		.uleb128 0x21
 16475 02a3 01       		.sleb128 1
 16476 02a4 3C       		.uleb128 0x3c
 16477 02a5 19       		.uleb128 0x19
 16478 02a6 00       		.byte	0
 16479 02a7 00       		.byte	0
 16480 02a8 2C       		.uleb128 0x2c
 16481 02a9 2E       		.uleb128 0x2e
 16482 02aa 01       		.byte	0x1
 16483 02ab 31       		.uleb128 0x31
 16484 02ac 13       		.uleb128 0x13
 16485 02ad 6E       		.uleb128 0x6e
 16486 02ae 0E       		.uleb128 0xe
 16487 02af 64       		.uleb128 0x64
 16488 02b0 13       		.uleb128 0x13
 16489 02b1 01       		.uleb128 0x1
 16490 02b2 13       		.uleb128 0x13
 16491 02b3 00       		.byte	0
 16492 02b4 00       		.byte	0
 16493 02b5 2D       		.uleb128 0x2d
 16494 02b6 34       		.uleb128 0x34
 16495 02b7 00       		.byte	0
 16496 02b8 03       		.uleb128 0x3
GAS LISTING x64lin/../common/event.s 			page 433


 16497 02b9 0E       		.uleb128 0xe
 16498 02ba 3A       		.uleb128 0x3a
 16499 02bb 0B       		.uleb128 0xb
 16500 02bc 3B       		.uleb128 0x3b
 16501 02bd 05       		.uleb128 0x5
 16502 02be 39       		.uleb128 0x39
 16503 02bf 0B       		.uleb128 0xb
 16504 02c0 49       		.uleb128 0x49
 16505 02c1 13       		.uleb128 0x13
 16506 02c2 00       		.byte	0
 16507 02c3 00       		.byte	0
 16508 02c4 2E       		.uleb128 0x2e
 16509 02c5 2E       		.uleb128 0x2e
 16510 02c6 01       		.byte	0x1
 16511 02c7 3F       		.uleb128 0x3f
 16512 02c8 19       		.uleb128 0x19
 16513 02c9 03       		.uleb128 0x3
 16514 02ca 0E       		.uleb128 0xe
 16515 02cb 3A       		.uleb128 0x3a
 16516 02cc 0B       		.uleb128 0xb
 16517 02cd 3B       		.uleb128 0x3b
 16518 02ce 05       		.uleb128 0x5
 16519 02cf 39       		.uleb128 0x39
 16520 02d0 0B       		.uleb128 0xb
 16521 02d1 6E       		.uleb128 0x6e
 16522 02d2 0E       		.uleb128 0xe
 16523 02d3 3C       		.uleb128 0x3c
 16524 02d4 19       		.uleb128 0x19
 16525 02d5 64       		.uleb128 0x64
 16526 02d6 13       		.uleb128 0x13
 16527 02d7 01       		.uleb128 0x1
 16528 02d8 13       		.uleb128 0x13
 16529 02d9 00       		.byte	0
 16530 02da 00       		.byte	0
 16531 02db 2F       		.uleb128 0x2f
 16532 02dc 1D       		.uleb128 0x1d
 16533 02dd 01       		.byte	0x1
 16534 02de 31       		.uleb128 0x31
 16535 02df 13       		.uleb128 0x13
 16536 02e0 52       		.uleb128 0x52
 16537 02e1 01       		.uleb128 0x1
 16538 02e2 B842     		.uleb128 0x2138
 16539 02e4 0B       		.uleb128 0xb
 16540 02e5 55       		.uleb128 0x55
 16541 02e6 17       		.uleb128 0x17
 16542 02e7 58       		.uleb128 0x58
 16543 02e8 0B       		.uleb128 0xb
 16544 02e9 59       		.uleb128 0x59
 16545 02ea 0B       		.uleb128 0xb
 16546 02eb 57       		.uleb128 0x57
 16547 02ec 0B       		.uleb128 0xb
 16548 02ed 00       		.byte	0
 16549 02ee 00       		.byte	0
 16550 02ef 30       		.uleb128 0x30
 16551 02f0 1C       		.uleb128 0x1c
 16552 02f1 00       		.byte	0
 16553 02f2 49       		.uleb128 0x49
GAS LISTING x64lin/../common/event.s 			page 434


 16554 02f3 13       		.uleb128 0x13
 16555 02f4 38       		.uleb128 0x38
 16556 02f5 21       		.uleb128 0x21
 16557 02f6 00       		.sleb128 0
 16558 02f7 00       		.byte	0
 16559 02f8 00       		.byte	0
 16560 02f9 31       		.uleb128 0x31
 16561 02fa 0D       		.uleb128 0xd
 16562 02fb 00       		.byte	0
 16563 02fc 03       		.uleb128 0x3
 16564 02fd 0E       		.uleb128 0xe
 16565 02fe 3A       		.uleb128 0x3a
 16566 02ff 0B       		.uleb128 0xb
 16567 0300 3B       		.uleb128 0x3b
 16568 0301 0B       		.uleb128 0xb
 16569 0302 39       		.uleb128 0x39
 16570 0303 0B       		.uleb128 0xb
 16571 0304 49       		.uleb128 0x49
 16572 0305 13       		.uleb128 0x13
 16573 0306 00       		.byte	0
 16574 0307 00       		.byte	0
 16575 0308 32       		.uleb128 0x32
 16576 0309 49       		.uleb128 0x49
 16577 030a 00       		.byte	0
 16578 030b 02       		.uleb128 0x2
 16579 030c 18       		.uleb128 0x18
 16580 030d 7E       		.uleb128 0x7e
 16581 030e 18       		.uleb128 0x18
 16582 030f 00       		.byte	0
 16583 0310 00       		.byte	0
 16584 0311 33       		.uleb128 0x33
 16585 0312 39       		.uleb128 0x39
 16586 0313 00       		.byte	0
 16587 0314 03       		.uleb128 0x3
 16588 0315 0E       		.uleb128 0xe
 16589 0316 3A       		.uleb128 0x3a
 16590 0317 0B       		.uleb128 0xb
 16591 0318 3B       		.uleb128 0x3b
 16592 0319 0B       		.uleb128 0xb
 16593 031a 39       		.uleb128 0x39
 16594 031b 0B       		.uleb128 0xb
 16595 031c 00       		.byte	0
 16596 031d 00       		.byte	0
 16597 031e 34       		.uleb128 0x34
 16598 031f 28       		.uleb128 0x28
 16599 0320 00       		.byte	0
 16600 0321 03       		.uleb128 0x3
 16601 0322 0E       		.uleb128 0xe
 16602 0323 1C       		.uleb128 0x1c
 16603 0324 0B       		.uleb128 0xb
 16604 0325 00       		.byte	0
 16605 0326 00       		.byte	0
 16606 0327 35       		.uleb128 0x35
 16607 0328 34       		.uleb128 0x34
 16608 0329 00       		.byte	0
 16609 032a 31       		.uleb128 0x31
 16610 032b 13       		.uleb128 0x13
GAS LISTING x64lin/../common/event.s 			page 435


 16611 032c 02       		.uleb128 0x2
 16612 032d 17       		.uleb128 0x17
 16613 032e B742     		.uleb128 0x2137
 16614 0330 17       		.uleb128 0x17
 16615 0331 00       		.byte	0
 16616 0332 00       		.byte	0
 16617 0333 36       		.uleb128 0x36
 16618 0334 34       		.uleb128 0x34
 16619 0335 00       		.byte	0
 16620 0336 47       		.uleb128 0x47
 16621 0337 13       		.uleb128 0x13
 16622 0338 00       		.byte	0
 16623 0339 00       		.byte	0
 16624 033a 37       		.uleb128 0x37
 16625 033b 1D       		.uleb128 0x1d
 16626 033c 01       		.byte	0x1
 16627 033d 31       		.uleb128 0x31
 16628 033e 13       		.uleb128 0x13
 16629 033f 52       		.uleb128 0x52
 16630 0340 01       		.uleb128 0x1
 16631 0341 B842     		.uleb128 0x2138
 16632 0343 0B       		.uleb128 0xb
 16633 0344 55       		.uleb128 0x55
 16634 0345 17       		.uleb128 0x17
 16635 0346 58       		.uleb128 0x58
 16636 0347 0B       		.uleb128 0xb
 16637 0348 59       		.uleb128 0x59
 16638 0349 05       		.uleb128 0x5
 16639 034a 57       		.uleb128 0x57
 16640 034b 0B       		.uleb128 0xb
 16641 034c 01       		.uleb128 0x1
 16642 034d 13       		.uleb128 0x13
 16643 034e 00       		.byte	0
 16644 034f 00       		.byte	0
 16645 0350 38       		.uleb128 0x38
 16646 0351 30       		.uleb128 0x30
 16647 0352 00       		.byte	0
 16648 0353 03       		.uleb128 0x3
 16649 0354 08       		.uleb128 0x8
 16650 0355 49       		.uleb128 0x49
 16651 0356 13       		.uleb128 0x13
 16652 0357 1C       		.uleb128 0x1c
 16653 0358 0B       		.uleb128 0xb
 16654 0359 00       		.byte	0
 16655 035a 00       		.byte	0
 16656 035b 39       		.uleb128 0x39
 16657 035c 18       		.uleb128 0x18
 16658 035d 00       		.byte	0
 16659 035e 00       		.byte	0
 16660 035f 00       		.byte	0
 16661 0360 3A       		.uleb128 0x3a
 16662 0361 1D       		.uleb128 0x1d
 16663 0362 01       		.byte	0x1
 16664 0363 31       		.uleb128 0x31
 16665 0364 13       		.uleb128 0x13
 16666 0365 52       		.uleb128 0x52
 16667 0366 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 436


 16668 0367 B842     		.uleb128 0x2138
 16669 0369 0B       		.uleb128 0xb
 16670 036a 55       		.uleb128 0x55
 16671 036b 17       		.uleb128 0x17
 16672 036c 58       		.uleb128 0x58
 16673 036d 0B       		.uleb128 0xb
 16674 036e 59       		.uleb128 0x59
 16675 036f 0B       		.uleb128 0xb
 16676 0370 57       		.uleb128 0x57
 16677 0371 0B       		.uleb128 0xb
 16678 0372 01       		.uleb128 0x1
 16679 0373 13       		.uleb128 0x13
 16680 0374 00       		.byte	0
 16681 0375 00       		.byte	0
 16682 0376 3B       		.uleb128 0x3b
 16683 0377 48       		.uleb128 0x48
 16684 0378 01       		.byte	0x1
 16685 0379 7D       		.uleb128 0x7d
 16686 037a 01       		.uleb128 0x1
 16687 037b 7F       		.uleb128 0x7f
 16688 037c 13       		.uleb128 0x13
 16689 037d 00       		.byte	0
 16690 037e 00       		.byte	0
 16691 037f 3C       		.uleb128 0x3c
 16692 0380 39       		.uleb128 0x39
 16693 0381 00       		.byte	0
 16694 0382 03       		.uleb128 0x3
 16695 0383 0E       		.uleb128 0xe
 16696 0384 3A       		.uleb128 0x3a
 16697 0385 0B       		.uleb128 0xb
 16698 0386 3B       		.uleb128 0x3b
 16699 0387 05       		.uleb128 0x5
 16700 0388 39       		.uleb128 0x39
 16701 0389 0B       		.uleb128 0xb
 16702 038a 00       		.byte	0
 16703 038b 00       		.byte	0
 16704 038c 3D       		.uleb128 0x3d
 16705 038d 39       		.uleb128 0x39
 16706 038e 01       		.byte	0x1
 16707 038f 03       		.uleb128 0x3
 16708 0390 0E       		.uleb128 0xe
 16709 0391 3A       		.uleb128 0x3a
 16710 0392 0B       		.uleb128 0xb
 16711 0393 3B       		.uleb128 0x3b
 16712 0394 0B       		.uleb128 0xb
 16713 0395 39       		.uleb128 0x39
 16714 0396 0B       		.uleb128 0xb
 16715 0397 01       		.uleb128 0x1
 16716 0398 13       		.uleb128 0x13
 16717 0399 00       		.byte	0
 16718 039a 00       		.byte	0
 16719 039b 3E       		.uleb128 0x3e
 16720 039c 2E       		.uleb128 0x2e
 16721 039d 01       		.byte	0x1
 16722 039e 3F       		.uleb128 0x3f
 16723 039f 19       		.uleb128 0x19
 16724 03a0 03       		.uleb128 0x3
GAS LISTING x64lin/../common/event.s 			page 437


 16725 03a1 0E       		.uleb128 0xe
 16726 03a2 3A       		.uleb128 0x3a
 16727 03a3 0B       		.uleb128 0xb
 16728 03a4 3B       		.uleb128 0x3b
 16729 03a5 0B       		.uleb128 0xb
 16730 03a6 39       		.uleb128 0x39
 16731 03a7 0B       		.uleb128 0xb
 16732 03a8 6E       		.uleb128 0x6e
 16733 03a9 0E       		.uleb128 0xe
 16734 03aa 32       		.uleb128 0x32
 16735 03ab 0B       		.uleb128 0xb
 16736 03ac 3C       		.uleb128 0x3c
 16737 03ad 19       		.uleb128 0x19
 16738 03ae 8A01     		.uleb128 0x8a
 16739 03b0 19       		.uleb128 0x19
 16740 03b1 64       		.uleb128 0x64
 16741 03b2 13       		.uleb128 0x13
 16742 03b3 01       		.uleb128 0x1
 16743 03b4 13       		.uleb128 0x13
 16744 03b5 00       		.byte	0
 16745 03b6 00       		.byte	0
 16746 03b7 3F       		.uleb128 0x3f
 16747 03b8 1C       		.uleb128 0x1c
 16748 03b9 00       		.byte	0
 16749 03ba 49       		.uleb128 0x49
 16750 03bb 13       		.uleb128 0x13
 16751 03bc 38       		.uleb128 0x38
 16752 03bd 21       		.uleb128 0x21
 16753 03be 00       		.sleb128 0
 16754 03bf 32       		.uleb128 0x32
 16755 03c0 0B       		.uleb128 0xb
 16756 03c1 00       		.byte	0
 16757 03c2 00       		.byte	0
 16758 03c3 40       		.uleb128 0x40
 16759 03c4 2E       		.uleb128 0x2e
 16760 03c5 00       		.byte	0
 16761 03c6 3F       		.uleb128 0x3f
 16762 03c7 19       		.uleb128 0x19
 16763 03c8 03       		.uleb128 0x3
 16764 03c9 0E       		.uleb128 0xe
 16765 03ca 3A       		.uleb128 0x3a
 16766 03cb 0B       		.uleb128 0xb
 16767 03cc 3B       		.uleb128 0x3b
 16768 03cd 0B       		.uleb128 0xb
 16769 03ce 39       		.uleb128 0x39
 16770 03cf 0B       		.uleb128 0xb
 16771 03d0 6E       		.uleb128 0x6e
 16772 03d1 0E       		.uleb128 0xe
 16773 03d2 49       		.uleb128 0x49
 16774 03d3 13       		.uleb128 0x13
 16775 03d4 3C       		.uleb128 0x3c
 16776 03d5 19       		.uleb128 0x19
 16777 03d6 00       		.byte	0
 16778 03d7 00       		.byte	0
 16779 03d8 41       		.uleb128 0x41
 16780 03d9 2E       		.uleb128 0x2e
 16781 03da 01       		.byte	0x1
GAS LISTING x64lin/../common/event.s 			page 438


 16782 03db 3F       		.uleb128 0x3f
 16783 03dc 19       		.uleb128 0x19
 16784 03dd 03       		.uleb128 0x3
 16785 03de 0E       		.uleb128 0xe
 16786 03df 3A       		.uleb128 0x3a
 16787 03e0 0B       		.uleb128 0xb
 16788 03e1 3B       		.uleb128 0x3b
 16789 03e2 0B       		.uleb128 0xb
 16790 03e3 39       		.uleb128 0x39
 16791 03e4 0B       		.uleb128 0xb
 16792 03e5 6E       		.uleb128 0x6e
 16793 03e6 0E       		.uleb128 0xe
 16794 03e7 3C       		.uleb128 0x3c
 16795 03e8 19       		.uleb128 0x19
 16796 03e9 8B01     		.uleb128 0x8b
 16797 03eb 21       		.uleb128 0x21
 16798 03ec 01       		.sleb128 1
 16799 03ed 64       		.uleb128 0x64
 16800 03ee 13       		.uleb128 0x13
 16801 03ef 01       		.uleb128 0x1
 16802 03f0 13       		.uleb128 0x13
 16803 03f1 00       		.byte	0
 16804 03f2 00       		.byte	0
 16805 03f3 42       		.uleb128 0x42
 16806 03f4 01       		.uleb128 0x1
 16807 03f5 01       		.byte	0x1
 16808 03f6 49       		.uleb128 0x49
 16809 03f7 13       		.uleb128 0x13
 16810 03f8 01       		.uleb128 0x1
 16811 03f9 13       		.uleb128 0x13
 16812 03fa 00       		.byte	0
 16813 03fb 00       		.byte	0
 16814 03fc 43       		.uleb128 0x43
 16815 03fd 21       		.uleb128 0x21
 16816 03fe 00       		.byte	0
 16817 03ff 49       		.uleb128 0x49
 16818 0400 13       		.uleb128 0x13
 16819 0401 2F       		.uleb128 0x2f
 16820 0402 0B       		.uleb128 0xb
 16821 0403 00       		.byte	0
 16822 0404 00       		.byte	0
 16823 0405 44       		.uleb128 0x44
 16824 0406 2E       		.uleb128 0x2e
 16825 0407 01       		.byte	0x1
 16826 0408 3F       		.uleb128 0x3f
 16827 0409 19       		.uleb128 0x19
 16828 040a 03       		.uleb128 0x3
 16829 040b 0E       		.uleb128 0xe
 16830 040c 3A       		.uleb128 0x3a
 16831 040d 0B       		.uleb128 0xb
 16832 040e 3B       		.uleb128 0x3b
 16833 040f 05       		.uleb128 0x5
 16834 0410 39       		.uleb128 0x39
 16835 0411 21       		.uleb128 0x21
 16836 0412 0D       		.sleb128 13
 16837 0413 3C       		.uleb128 0x3c
 16838 0414 19       		.uleb128 0x19
GAS LISTING x64lin/../common/event.s 			page 439


 16839 0415 01       		.uleb128 0x1
 16840 0416 13       		.uleb128 0x13
 16841 0417 00       		.byte	0
 16842 0418 00       		.byte	0
 16843 0419 45       		.uleb128 0x45
 16844 041a 1D       		.uleb128 0x1d
 16845 041b 01       		.byte	0x1
 16846 041c 31       		.uleb128 0x31
 16847 041d 13       		.uleb128 0x13
 16848 041e 52       		.uleb128 0x52
 16849 041f 01       		.uleb128 0x1
 16850 0420 B842     		.uleb128 0x2138
 16851 0422 0B       		.uleb128 0xb
 16852 0423 11       		.uleb128 0x11
 16853 0424 01       		.uleb128 0x1
 16854 0425 12       		.uleb128 0x12
 16855 0426 07       		.uleb128 0x7
 16856 0427 58       		.uleb128 0x58
 16857 0428 0B       		.uleb128 0xb
 16858 0429 59       		.uleb128 0x59
 16859 042a 0B       		.uleb128 0xb
 16860 042b 57       		.uleb128 0x57
 16861 042c 0B       		.uleb128 0xb
 16862 042d 00       		.byte	0
 16863 042e 00       		.byte	0
 16864 042f 46       		.uleb128 0x46
 16865 0430 1D       		.uleb128 0x1d
 16866 0431 01       		.byte	0x1
 16867 0432 31       		.uleb128 0x31
 16868 0433 13       		.uleb128 0x13
 16869 0434 52       		.uleb128 0x52
 16870 0435 01       		.uleb128 0x1
 16871 0436 B842     		.uleb128 0x2138
 16872 0438 0B       		.uleb128 0xb
 16873 0439 11       		.uleb128 0x11
 16874 043a 01       		.uleb128 0x1
 16875 043b 12       		.uleb128 0x12
 16876 043c 07       		.uleb128 0x7
 16877 043d 58       		.uleb128 0x58
 16878 043e 0B       		.uleb128 0xb
 16879 043f 59       		.uleb128 0x59
 16880 0440 05       		.uleb128 0x5
 16881 0441 57       		.uleb128 0x57
 16882 0442 0B       		.uleb128 0xb
 16883 0443 01       		.uleb128 0x1
 16884 0444 13       		.uleb128 0x13
 16885 0445 00       		.byte	0
 16886 0446 00       		.byte	0
 16887 0447 47       		.uleb128 0x47
 16888 0448 2E       		.uleb128 0x2e
 16889 0449 01       		.byte	0x1
 16890 044a 3F       		.uleb128 0x3f
 16891 044b 19       		.uleb128 0x19
 16892 044c 03       		.uleb128 0x3
 16893 044d 0E       		.uleb128 0xe
 16894 044e 3A       		.uleb128 0x3a
 16895 044f 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 440


 16896 0450 3B       		.uleb128 0x3b
 16897 0451 0B       		.uleb128 0xb
 16898 0452 39       		.uleb128 0x39
 16899 0453 0B       		.uleb128 0xb
 16900 0454 6E       		.uleb128 0x6e
 16901 0455 0E       		.uleb128 0xe
 16902 0456 49       		.uleb128 0x49
 16903 0457 13       		.uleb128 0x13
 16904 0458 32       		.uleb128 0x32
 16905 0459 21       		.uleb128 0x21
 16906 045a 01       		.sleb128 1
 16907 045b 3C       		.uleb128 0x3c
 16908 045c 19       		.uleb128 0x19
 16909 045d 8A01     		.uleb128 0x8a
 16910 045f 19       		.uleb128 0x19
 16911 0460 64       		.uleb128 0x64
 16912 0461 13       		.uleb128 0x13
 16913 0462 01       		.uleb128 0x1
 16914 0463 13       		.uleb128 0x13
 16915 0464 00       		.byte	0
 16916 0465 00       		.byte	0
 16917 0466 48       		.uleb128 0x48
 16918 0467 2E       		.uleb128 0x2e
 16919 0468 01       		.byte	0x1
 16920 0469 3F       		.uleb128 0x3f
 16921 046a 19       		.uleb128 0x19
 16922 046b 03       		.uleb128 0x3
 16923 046c 0E       		.uleb128 0xe
 16924 046d 3A       		.uleb128 0x3a
 16925 046e 0B       		.uleb128 0xb
 16926 046f 3B       		.uleb128 0x3b
 16927 0470 05       		.uleb128 0x5
 16928 0471 39       		.uleb128 0x39
 16929 0472 0B       		.uleb128 0xb
 16930 0473 6E       		.uleb128 0x6e
 16931 0474 0E       		.uleb128 0xe
 16932 0475 32       		.uleb128 0x32
 16933 0476 21       		.uleb128 0x21
 16934 0477 01       		.sleb128 1
 16935 0478 3C       		.uleb128 0x3c
 16936 0479 19       		.uleb128 0x19
 16937 047a 8B01     		.uleb128 0x8b
 16938 047c 21       		.uleb128 0x21
 16939 047d 01       		.sleb128 1
 16940 047e 64       		.uleb128 0x64
 16941 047f 13       		.uleb128 0x13
 16942 0480 01       		.uleb128 0x1
 16943 0481 13       		.uleb128 0x13
 16944 0482 00       		.byte	0
 16945 0483 00       		.byte	0
 16946 0484 49       		.uleb128 0x49
 16947 0485 2E       		.uleb128 0x2e
 16948 0486 01       		.byte	0x1
 16949 0487 3F       		.uleb128 0x3f
 16950 0488 19       		.uleb128 0x19
 16951 0489 03       		.uleb128 0x3
 16952 048a 08       		.uleb128 0x8
GAS LISTING x64lin/../common/event.s 			page 441


 16953 048b 3A       		.uleb128 0x3a
 16954 048c 0B       		.uleb128 0xb
 16955 048d 3B       		.uleb128 0x3b
 16956 048e 05       		.uleb128 0x5
 16957 048f 39       		.uleb128 0x39
 16958 0490 21       		.uleb128 0x21
 16959 0491 07       		.sleb128 7
 16960 0492 6E       		.uleb128 0x6e
 16961 0493 0E       		.uleb128 0xe
 16962 0494 49       		.uleb128 0x49
 16963 0495 13       		.uleb128 0x13
 16964 0496 32       		.uleb128 0x32
 16965 0497 21       		.uleb128 0x21
 16966 0498 01       		.sleb128 1
 16967 0499 3C       		.uleb128 0x3c
 16968 049a 19       		.uleb128 0x19
 16969 049b 64       		.uleb128 0x64
 16970 049c 13       		.uleb128 0x13
 16971 049d 01       		.uleb128 0x1
 16972 049e 13       		.uleb128 0x13
 16973 049f 00       		.byte	0
 16974 04a0 00       		.byte	0
 16975 04a1 4A       		.uleb128 0x4a
 16976 04a2 2E       		.uleb128 0x2e
 16977 04a3 01       		.byte	0x1
 16978 04a4 3F       		.uleb128 0x3f
 16979 04a5 19       		.uleb128 0x19
 16980 04a6 03       		.uleb128 0x3
 16981 04a7 0E       		.uleb128 0xe
 16982 04a8 3A       		.uleb128 0x3a
 16983 04a9 0B       		.uleb128 0xb
 16984 04aa 3B       		.uleb128 0x3b
 16985 04ab 05       		.uleb128 0x5
 16986 04ac 39       		.uleb128 0x39
 16987 04ad 0B       		.uleb128 0xb
 16988 04ae 6E       		.uleb128 0x6e
 16989 04af 0E       		.uleb128 0xe
 16990 04b0 3C       		.uleb128 0x3c
 16991 04b1 19       		.uleb128 0x19
 16992 04b2 8B01     		.uleb128 0x8b
 16993 04b4 21       		.uleb128 0x21
 16994 04b5 01       		.sleb128 1
 16995 04b6 64       		.uleb128 0x64
 16996 04b7 13       		.uleb128 0x13
 16997 04b8 01       		.uleb128 0x1
 16998 04b9 13       		.uleb128 0x13
 16999 04ba 00       		.byte	0
 17000 04bb 00       		.byte	0
 17001 04bc 4B       		.uleb128 0x4b
 17002 04bd 0B       		.uleb128 0xb
 17003 04be 01       		.byte	0x1
 17004 04bf 55       		.uleb128 0x55
 17005 04c0 17       		.uleb128 0x17
 17006 04c1 00       		.byte	0
 17007 04c2 00       		.byte	0
 17008 04c3 4C       		.uleb128 0x4c
 17009 04c4 48       		.uleb128 0x48
GAS LISTING x64lin/../common/event.s 			page 442


 17010 04c5 00       		.byte	0
 17011 04c6 7D       		.uleb128 0x7d
 17012 04c7 01       		.uleb128 0x1
 17013 04c8 7F       		.uleb128 0x7f
 17014 04c9 13       		.uleb128 0x13
 17015 04ca 00       		.byte	0
 17016 04cb 00       		.byte	0
 17017 04cc 4D       		.uleb128 0x4d
 17018 04cd 2E       		.uleb128 0x2e
 17019 04ce 01       		.byte	0x1
 17020 04cf 3F       		.uleb128 0x3f
 17021 04d0 19       		.uleb128 0x19
 17022 04d1 03       		.uleb128 0x3
 17023 04d2 0E       		.uleb128 0xe
 17024 04d3 3A       		.uleb128 0x3a
 17025 04d4 0B       		.uleb128 0xb
 17026 04d5 3B       		.uleb128 0x3b
 17027 04d6 0B       		.uleb128 0xb
 17028 04d7 39       		.uleb128 0x39
 17029 04d8 0B       		.uleb128 0xb
 17030 04d9 6E       		.uleb128 0x6e
 17031 04da 0E       		.uleb128 0xe
 17032 04db 3C       		.uleb128 0x3c
 17033 04dc 19       		.uleb128 0x19
 17034 04dd 63       		.uleb128 0x63
 17035 04de 19       		.uleb128 0x19
 17036 04df 8B01     		.uleb128 0x8b
 17037 04e1 21       		.uleb128 0x21
 17038 04e2 01       		.sleb128 1
 17039 04e3 64       		.uleb128 0x64
 17040 04e4 13       		.uleb128 0x13
 17041 04e5 00       		.byte	0
 17042 04e6 00       		.byte	0
 17043 04e7 4E       		.uleb128 0x4e
 17044 04e8 02       		.uleb128 0x2
 17045 04e9 00       		.byte	0
 17046 04ea 03       		.uleb128 0x3
 17047 04eb 0E       		.uleb128 0xe
 17048 04ec 3C       		.uleb128 0x3c
 17049 04ed 19       		.uleb128 0x19
 17050 04ee 00       		.byte	0
 17051 04ef 00       		.byte	0
 17052 04f0 4F       		.uleb128 0x4f
 17053 04f1 2E       		.uleb128 0x2e
 17054 04f2 01       		.byte	0x1
 17055 04f3 3F       		.uleb128 0x3f
 17056 04f4 19       		.uleb128 0x19
 17057 04f5 03       		.uleb128 0x3
 17058 04f6 0E       		.uleb128 0xe
 17059 04f7 3A       		.uleb128 0x3a
 17060 04f8 0B       		.uleb128 0xb
 17061 04f9 3B       		.uleb128 0x3b
 17062 04fa 0B       		.uleb128 0xb
 17063 04fb 39       		.uleb128 0x39
 17064 04fc 0B       		.uleb128 0xb
 17065 04fd 6E       		.uleb128 0x6e
 17066 04fe 0E       		.uleb128 0xe
GAS LISTING x64lin/../common/event.s 			page 443


 17067 04ff 32       		.uleb128 0x32
 17068 0500 0B       		.uleb128 0xb
 17069 0501 3C       		.uleb128 0x3c
 17070 0502 19       		.uleb128 0x19
 17071 0503 8B01     		.uleb128 0x8b
 17072 0505 21       		.uleb128 0x21
 17073 0506 01       		.sleb128 1
 17074 0507 64       		.uleb128 0x64
 17075 0508 13       		.uleb128 0x13
 17076 0509 01       		.uleb128 0x1
 17077 050a 13       		.uleb128 0x13
 17078 050b 00       		.byte	0
 17079 050c 00       		.byte	0
 17080 050d 50       		.uleb128 0x50
 17081 050e 2E       		.uleb128 0x2e
 17082 050f 01       		.byte	0x1
 17083 0510 3F       		.uleb128 0x3f
 17084 0511 19       		.uleb128 0x19
 17085 0512 03       		.uleb128 0x3
 17086 0513 0E       		.uleb128 0xe
 17087 0514 3A       		.uleb128 0x3a
 17088 0515 0B       		.uleb128 0xb
 17089 0516 3B       		.uleb128 0x3b
 17090 0517 0B       		.uleb128 0xb
 17091 0518 39       		.uleb128 0x39
 17092 0519 0B       		.uleb128 0xb
 17093 051a 6E       		.uleb128 0x6e
 17094 051b 0E       		.uleb128 0xe
 17095 051c 32       		.uleb128 0x32
 17096 051d 21       		.uleb128 0x21
 17097 051e 01       		.sleb128 1
 17098 051f 3C       		.uleb128 0x3c
 17099 0520 19       		.uleb128 0x19
 17100 0521 63       		.uleb128 0x63
 17101 0522 19       		.uleb128 0x19
 17102 0523 64       		.uleb128 0x64
 17103 0524 13       		.uleb128 0x13
 17104 0525 01       		.uleb128 0x1
 17105 0526 13       		.uleb128 0x13
 17106 0527 00       		.byte	0
 17107 0528 00       		.byte	0
 17108 0529 51       		.uleb128 0x51
 17109 052a 13       		.uleb128 0x13
 17110 052b 00       		.byte	0
 17111 052c 03       		.uleb128 0x3
 17112 052d 0E       		.uleb128 0xe
 17113 052e 3C       		.uleb128 0x3c
 17114 052f 19       		.uleb128 0x19
 17115 0530 00       		.byte	0
 17116 0531 00       		.byte	0
 17117 0532 52       		.uleb128 0x52
 17118 0533 0D       		.uleb128 0xd
 17119 0534 00       		.byte	0
 17120 0535 03       		.uleb128 0x3
 17121 0536 0E       		.uleb128 0xe
 17122 0537 3A       		.uleb128 0x3a
 17123 0538 21       		.uleb128 0x21
GAS LISTING x64lin/../common/event.s 			page 444


 17124 0539 05       		.sleb128 5
 17125 053a 3B       		.uleb128 0x3b
 17126 053b 05       		.uleb128 0x5
 17127 053c 39       		.uleb128 0x39
 17128 053d 0B       		.uleb128 0xb
 17129 053e 49       		.uleb128 0x49
 17130 053f 13       		.uleb128 0x13
 17131 0540 38       		.uleb128 0x38
 17132 0541 0B       		.uleb128 0xb
 17133 0542 00       		.byte	0
 17134 0543 00       		.byte	0
 17135 0544 53       		.uleb128 0x53
 17136 0545 0D       		.uleb128 0xd
 17137 0546 00       		.byte	0
 17138 0547 03       		.uleb128 0x3
 17139 0548 0E       		.uleb128 0xe
 17140 0549 3A       		.uleb128 0x3a
 17141 054a 21       		.uleb128 0x21
 17142 054b 2F       		.sleb128 47
 17143 054c 3B       		.uleb128 0x3b
 17144 054d 21       		.uleb128 0x21
 17145 054e 00       		.sleb128 0
 17146 054f 49       		.uleb128 0x49
 17147 0550 13       		.uleb128 0x13
 17148 0551 38       		.uleb128 0x38
 17149 0552 0B       		.uleb128 0xb
 17150 0553 00       		.byte	0
 17151 0554 00       		.byte	0
 17152 0555 54       		.uleb128 0x54
 17153 0556 13       		.uleb128 0x13
 17154 0557 01       		.byte	0x1
 17155 0558 0B       		.uleb128 0xb
 17156 0559 0B       		.uleb128 0xb
 17157 055a 3A       		.uleb128 0x3a
 17158 055b 0B       		.uleb128 0xb
 17159 055c 3B       		.uleb128 0x3b
 17160 055d 0B       		.uleb128 0xb
 17161 055e 39       		.uleb128 0x39
 17162 055f 0B       		.uleb128 0xb
 17163 0560 6E       		.uleb128 0x6e
 17164 0561 0E       		.uleb128 0xe
 17165 0562 01       		.uleb128 0x1
 17166 0563 13       		.uleb128 0x13
 17167 0564 00       		.byte	0
 17168 0565 00       		.byte	0
 17169 0566 55       		.uleb128 0x55
 17170 0567 2E       		.uleb128 0x2e
 17171 0568 00       		.byte	0
 17172 0569 3F       		.uleb128 0x3f
 17173 056a 19       		.uleb128 0x19
 17174 056b 03       		.uleb128 0x3
 17175 056c 0E       		.uleb128 0xe
 17176 056d 3A       		.uleb128 0x3a
 17177 056e 0B       		.uleb128 0xb
 17178 056f 3B       		.uleb128 0x3b
 17179 0570 0B       		.uleb128 0xb
 17180 0571 39       		.uleb128 0x39
GAS LISTING x64lin/../common/event.s 			page 445


 17181 0572 0B       		.uleb128 0xb
 17182 0573 49       		.uleb128 0x49
 17183 0574 13       		.uleb128 0x13
 17184 0575 3C       		.uleb128 0x3c
 17185 0576 19       		.uleb128 0x19
 17186 0577 00       		.byte	0
 17187 0578 00       		.byte	0
 17188 0579 56       		.uleb128 0x56
 17189 057a 0B       		.uleb128 0xb
 17190 057b 01       		.byte	0x1
 17191 057c 00       		.byte	0
 17192 057d 00       		.byte	0
 17193 057e 57       		.uleb128 0x57
 17194 057f 1D       		.uleb128 0x1d
 17195 0580 01       		.byte	0x1
 17196 0581 31       		.uleb128 0x31
 17197 0582 13       		.uleb128 0x13
 17198 0583 52       		.uleb128 0x52
 17199 0584 01       		.uleb128 0x1
 17200 0585 B842     		.uleb128 0x2138
 17201 0587 0B       		.uleb128 0xb
 17202 0588 11       		.uleb128 0x11
 17203 0589 01       		.uleb128 0x1
 17204 058a 12       		.uleb128 0x12
 17205 058b 07       		.uleb128 0x7
 17206 058c 58       		.uleb128 0x58
 17207 058d 0B       		.uleb128 0xb
 17208 058e 59       		.uleb128 0x59
 17209 058f 0B       		.uleb128 0xb
 17210 0590 57       		.uleb128 0x57
 17211 0591 0B       		.uleb128 0xb
 17212 0592 01       		.uleb128 0x1
 17213 0593 13       		.uleb128 0x13
 17214 0594 00       		.byte	0
 17215 0595 00       		.byte	0
 17216 0596 58       		.uleb128 0x58
 17217 0597 34       		.uleb128 0x34
 17218 0598 00       		.byte	0
 17219 0599 03       		.uleb128 0x3
 17220 059a 0E       		.uleb128 0xe
 17221 059b 3A       		.uleb128 0x3a
 17222 059c 21       		.uleb128 0x21
 17223 059d 15       		.sleb128 21
 17224 059e 3B       		.uleb128 0x3b
 17225 059f 0B       		.uleb128 0xb
 17226 05a0 39       		.uleb128 0x39
 17227 05a1 0B       		.uleb128 0xb
 17228 05a2 49       		.uleb128 0x49
 17229 05a3 13       		.uleb128 0x13
 17230 05a4 3C       		.uleb128 0x3c
 17231 05a5 19       		.uleb128 0x19
 17232 05a6 1C       		.uleb128 0x1c
 17233 05a7 0B       		.uleb128 0xb
 17234 05a8 6C       		.uleb128 0x6c
 17235 05a9 19       		.uleb128 0x19
 17236 05aa 00       		.byte	0
 17237 05ab 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 446


 17238 05ac 59       		.uleb128 0x59
 17239 05ad 39       		.uleb128 0x39
 17240 05ae 00       		.byte	0
 17241 05af 03       		.uleb128 0x3
 17242 05b0 0E       		.uleb128 0xe
 17243 05b1 3A       		.uleb128 0x3a
 17244 05b2 0B       		.uleb128 0xb
 17245 05b3 3B       		.uleb128 0x3b
 17246 05b4 05       		.uleb128 0x5
 17247 05b5 39       		.uleb128 0x39
 17248 05b6 0B       		.uleb128 0xb
 17249 05b7 8901     		.uleb128 0x89
 17250 05b9 19       		.uleb128 0x19
 17251 05ba 00       		.byte	0
 17252 05bb 00       		.byte	0
 17253 05bc 5A       		.uleb128 0x5a
 17254 05bd 2E       		.uleb128 0x2e
 17255 05be 01       		.byte	0x1
 17256 05bf 3F       		.uleb128 0x3f
 17257 05c0 19       		.uleb128 0x19
 17258 05c1 03       		.uleb128 0x3
 17259 05c2 0E       		.uleb128 0xe
 17260 05c3 3A       		.uleb128 0x3a
 17261 05c4 0B       		.uleb128 0xb
 17262 05c5 3B       		.uleb128 0x3b
 17263 05c6 0B       		.uleb128 0xb
 17264 05c7 39       		.uleb128 0x39
 17265 05c8 0B       		.uleb128 0xb
 17266 05c9 6E       		.uleb128 0x6e
 17267 05ca 0E       		.uleb128 0xe
 17268 05cb 49       		.uleb128 0x49
 17269 05cc 13       		.uleb128 0x13
 17270 05cd 32       		.uleb128 0x32
 17271 05ce 21       		.uleb128 0x21
 17272 05cf 01       		.sleb128 1
 17273 05d0 3C       		.uleb128 0x3c
 17274 05d1 19       		.uleb128 0x19
 17275 05d2 64       		.uleb128 0x64
 17276 05d3 13       		.uleb128 0x13
 17277 05d4 00       		.byte	0
 17278 05d5 00       		.byte	0
 17279 05d6 5B       		.uleb128 0x5b
 17280 05d7 2E       		.uleb128 0x2e
 17281 05d8 01       		.byte	0x1
 17282 05d9 3F       		.uleb128 0x3f
 17283 05da 19       		.uleb128 0x19
 17284 05db 03       		.uleb128 0x3
 17285 05dc 0E       		.uleb128 0xe
 17286 05dd 3A       		.uleb128 0x3a
 17287 05de 0B       		.uleb128 0xb
 17288 05df 3B       		.uleb128 0x3b
 17289 05e0 0B       		.uleb128 0xb
 17290 05e1 39       		.uleb128 0x39
 17291 05e2 0B       		.uleb128 0xb
 17292 05e3 6E       		.uleb128 0x6e
 17293 05e4 0E       		.uleb128 0xe
 17294 05e5 8701     		.uleb128 0x87
GAS LISTING x64lin/../common/event.s 			page 447


 17295 05e7 19       		.uleb128 0x19
 17296 05e8 3C       		.uleb128 0x3c
 17297 05e9 19       		.uleb128 0x19
 17298 05ea 01       		.uleb128 0x1
 17299 05eb 13       		.uleb128 0x13
 17300 05ec 00       		.byte	0
 17301 05ed 00       		.byte	0
 17302 05ee 5C       		.uleb128 0x5c
 17303 05ef 02       		.uleb128 0x2
 17304 05f0 01       		.byte	0x1
 17305 05f1 03       		.uleb128 0x3
 17306 05f2 0E       		.uleb128 0xe
 17307 05f3 0B       		.uleb128 0xb
 17308 05f4 0B       		.uleb128 0xb
 17309 05f5 3A       		.uleb128 0x3a
 17310 05f6 0B       		.uleb128 0xb
 17311 05f7 3B       		.uleb128 0x3b
 17312 05f8 05       		.uleb128 0x5
 17313 05f9 39       		.uleb128 0x39
 17314 05fa 21       		.uleb128 0x21
 17315 05fb 0B       		.sleb128 11
 17316 05fc 01       		.uleb128 0x1
 17317 05fd 13       		.uleb128 0x13
 17318 05fe 00       		.byte	0
 17319 05ff 00       		.byte	0
 17320 0600 5D       		.uleb128 0x5d
 17321 0601 2E       		.uleb128 0x2e
 17322 0602 00       		.byte	0
 17323 0603 3F       		.uleb128 0x3f
 17324 0604 19       		.uleb128 0x19
 17325 0605 03       		.uleb128 0x3
 17326 0606 0E       		.uleb128 0xe
 17327 0607 3A       		.uleb128 0x3a
 17328 0608 0B       		.uleb128 0xb
 17329 0609 3B       		.uleb128 0x3b
 17330 060a 05       		.uleb128 0x5
 17331 060b 39       		.uleb128 0x39
 17332 060c 0B       		.uleb128 0xb
 17333 060d 6E       		.uleb128 0x6e
 17334 060e 0E       		.uleb128 0xe
 17335 060f 49       		.uleb128 0x49
 17336 0610 13       		.uleb128 0x13
 17337 0611 3C       		.uleb128 0x3c
 17338 0612 19       		.uleb128 0x19
 17339 0613 00       		.byte	0
 17340 0614 00       		.byte	0
 17341 0615 5E       		.uleb128 0x5e
 17342 0616 878201   		.uleb128 0x4107
 17343 0619 01       		.byte	0x1
 17344 061a 03       		.uleb128 0x3
 17345 061b 0E       		.uleb128 0xe
 17346 061c 00       		.byte	0
 17347 061d 00       		.byte	0
 17348 061e 5F       		.uleb128 0x5f
 17349 061f 2E       		.uleb128 0x2e
 17350 0620 01       		.byte	0x1
 17351 0621 3F       		.uleb128 0x3f
GAS LISTING x64lin/../common/event.s 			page 448


 17352 0622 19       		.uleb128 0x19
 17353 0623 03       		.uleb128 0x3
 17354 0624 0E       		.uleb128 0xe
 17355 0625 3A       		.uleb128 0x3a
 17356 0626 0B       		.uleb128 0xb
 17357 0627 3B       		.uleb128 0x3b
 17358 0628 0B       		.uleb128 0xb
 17359 0629 39       		.uleb128 0x39
 17360 062a 0B       		.uleb128 0xb
 17361 062b 6E       		.uleb128 0x6e
 17362 062c 0E       		.uleb128 0xe
 17363 062d 3C       		.uleb128 0x3c
 17364 062e 19       		.uleb128 0x19
 17365 062f 01       		.uleb128 0x1
 17366 0630 13       		.uleb128 0x13
 17367 0631 00       		.byte	0
 17368 0632 00       		.byte	0
 17369 0633 60       		.uleb128 0x60
 17370 0634 0D       		.uleb128 0xd
 17371 0635 00       		.byte	0
 17372 0636 03       		.uleb128 0x3
 17373 0637 08       		.uleb128 0x8
 17374 0638 3A       		.uleb128 0x3a
 17375 0639 21       		.uleb128 0x21
 17376 063a 3E       		.sleb128 62
 17377 063b 3B       		.uleb128 0x3b
 17378 063c 0B       		.uleb128 0xb
 17379 063d 39       		.uleb128 0x39
 17380 063e 0B       		.uleb128 0xb
 17381 063f 49       		.uleb128 0x49
 17382 0640 13       		.uleb128 0x13
 17383 0641 38       		.uleb128 0x38
 17384 0642 0B       		.uleb128 0xb
 17385 0643 00       		.byte	0
 17386 0644 00       		.byte	0
 17387 0645 61       		.uleb128 0x61
 17388 0646 17       		.uleb128 0x17
 17389 0647 01       		.byte	0x1
 17390 0648 0B       		.uleb128 0xb
 17391 0649 0B       		.uleb128 0xb
 17392 064a 3A       		.uleb128 0x3a
 17393 064b 0B       		.uleb128 0xb
 17394 064c 3B       		.uleb128 0x3b
 17395 064d 0B       		.uleb128 0xb
 17396 064e 39       		.uleb128 0x39
 17397 064f 21       		.uleb128 0x21
 17398 0650 01       		.sleb128 1
 17399 0651 6E       		.uleb128 0x6e
 17400 0652 0E       		.uleb128 0xe
 17401 0653 01       		.uleb128 0x1
 17402 0654 13       		.uleb128 0x13
 17403 0655 00       		.byte	0
 17404 0656 00       		.byte	0
 17405 0657 62       		.uleb128 0x62
 17406 0658 34       		.uleb128 0x34
 17407 0659 00       		.byte	0
 17408 065a 31       		.uleb128 0x31
GAS LISTING x64lin/../common/event.s 			page 449


 17409 065b 13       		.uleb128 0x13
 17410 065c 00       		.byte	0
 17411 065d 00       		.byte	0
 17412 065e 63       		.uleb128 0x63
 17413 065f 13       		.uleb128 0x13
 17414 0660 00       		.byte	0
 17415 0661 03       		.uleb128 0x3
 17416 0662 0E       		.uleb128 0xe
 17417 0663 0B       		.uleb128 0xb
 17418 0664 21       		.uleb128 0x21
 17419 0665 01       		.sleb128 1
 17420 0666 3A       		.uleb128 0x3a
 17421 0667 0B       		.uleb128 0xb
 17422 0668 3B       		.uleb128 0x3b
 17423 0669 0B       		.uleb128 0xb
 17424 066a 39       		.uleb128 0x39
 17425 066b 21       		.uleb128 0x21
 17426 066c 0A       		.sleb128 10
 17427 066d 00       		.byte	0
 17428 066e 00       		.byte	0
 17429 066f 64       		.uleb128 0x64
 17430 0670 2E       		.uleb128 0x2e
 17431 0671 01       		.byte	0x1
 17432 0672 3F       		.uleb128 0x3f
 17433 0673 19       		.uleb128 0x19
 17434 0674 03       		.uleb128 0x3
 17435 0675 0E       		.uleb128 0xe
 17436 0676 3A       		.uleb128 0x3a
 17437 0677 0B       		.uleb128 0xb
 17438 0678 3B       		.uleb128 0x3b
 17439 0679 0B       		.uleb128 0xb
 17440 067a 39       		.uleb128 0x39
 17441 067b 21       		.uleb128 0x21
 17442 067c 10       		.sleb128 16
 17443 067d 6E       		.uleb128 0x6e
 17444 067e 0E       		.uleb128 0xe
 17445 067f 49       		.uleb128 0x49
 17446 0680 13       		.uleb128 0x13
 17447 0681 32       		.uleb128 0x32
 17448 0682 21       		.uleb128 0x21
 17449 0683 01       		.sleb128 1
 17450 0684 3C       		.uleb128 0x3c
 17451 0685 19       		.uleb128 0x19
 17452 0686 63       		.uleb128 0x63
 17453 0687 19       		.uleb128 0x19
 17454 0688 64       		.uleb128 0x64
 17455 0689 13       		.uleb128 0x13
 17456 068a 01       		.uleb128 0x1
 17457 068b 13       		.uleb128 0x13
 17458 068c 00       		.byte	0
 17459 068d 00       		.byte	0
 17460 068e 65       		.uleb128 0x65
 17461 068f 39       		.uleb128 0x39
 17462 0690 00       		.byte	0
 17463 0691 03       		.uleb128 0x3
 17464 0692 08       		.uleb128 0x8
 17465 0693 3A       		.uleb128 0x3a
GAS LISTING x64lin/../common/event.s 			page 450


 17466 0694 0B       		.uleb128 0xb
 17467 0695 3B       		.uleb128 0x3b
 17468 0696 05       		.uleb128 0x5
 17469 0697 39       		.uleb128 0x39
 17470 0698 0B       		.uleb128 0xb
 17471 0699 8901     		.uleb128 0x89
 17472 069b 19       		.uleb128 0x19
 17473 069c 00       		.byte	0
 17474 069d 00       		.byte	0
 17475 069e 66       		.uleb128 0x66
 17476 069f 0D       		.uleb128 0xd
 17477 06a0 00       		.byte	0
 17478 06a1 03       		.uleb128 0x3
 17479 06a2 0E       		.uleb128 0xe
 17480 06a3 3A       		.uleb128 0x3a
 17481 06a4 21       		.uleb128 0x21
 17482 06a5 02       		.sleb128 2
 17483 06a6 3B       		.uleb128 0x3b
 17484 06a7 0B       		.uleb128 0xb
 17485 06a8 39       		.uleb128 0x39
 17486 06a9 0B       		.uleb128 0xb
 17487 06aa 49       		.uleb128 0x49
 17488 06ab 13       		.uleb128 0x13
 17489 06ac 38       		.uleb128 0x38
 17490 06ad 21       		.uleb128 0x21
 17491 06ae 00       		.sleb128 0
 17492 06af 32       		.uleb128 0x32
 17493 06b0 21       		.uleb128 0x21
 17494 06b1 02       		.sleb128 2
 17495 06b2 00       		.byte	0
 17496 06b3 00       		.byte	0
 17497 06b4 67       		.uleb128 0x67
 17498 06b5 2E       		.uleb128 0x2e
 17499 06b6 01       		.byte	0x1
 17500 06b7 3F       		.uleb128 0x3f
 17501 06b8 19       		.uleb128 0x19
 17502 06b9 03       		.uleb128 0x3
 17503 06ba 0E       		.uleb128 0xe
 17504 06bb 3A       		.uleb128 0x3a
 17505 06bc 21       		.uleb128 0x21
 17506 06bd 0C       		.sleb128 12
 17507 06be 3B       		.uleb128 0x3b
 17508 06bf 0B       		.uleb128 0xb
 17509 06c0 39       		.uleb128 0x39
 17510 06c1 21       		.uleb128 0x21
 17511 06c2 12       		.sleb128 18
 17512 06c3 6E       		.uleb128 0x6e
 17513 06c4 0E       		.uleb128 0xe
 17514 06c5 49       		.uleb128 0x49
 17515 06c6 13       		.uleb128 0x13
 17516 06c7 32       		.uleb128 0x32
 17517 06c8 21       		.uleb128 0x21
 17518 06c9 01       		.sleb128 1
 17519 06ca 3C       		.uleb128 0x3c
 17520 06cb 19       		.uleb128 0x19
 17521 06cc 8B01     		.uleb128 0x8b
 17522 06ce 21       		.uleb128 0x21
GAS LISTING x64lin/../common/event.s 			page 451


 17523 06cf 01       		.sleb128 1
 17524 06d0 64       		.uleb128 0x64
 17525 06d1 13       		.uleb128 0x13
 17526 06d2 01       		.uleb128 0x1
 17527 06d3 13       		.uleb128 0x13
 17528 06d4 00       		.byte	0
 17529 06d5 00       		.byte	0
 17530 06d6 68       		.uleb128 0x68
 17531 06d7 2E       		.uleb128 0x2e
 17532 06d8 01       		.byte	0x1
 17533 06d9 3F       		.uleb128 0x3f
 17534 06da 19       		.uleb128 0x19
 17535 06db 03       		.uleb128 0x3
 17536 06dc 0E       		.uleb128 0xe
 17537 06dd 3A       		.uleb128 0x3a
 17538 06de 21       		.uleb128 0x21
 17539 06df 0C       		.sleb128 12
 17540 06e0 3B       		.uleb128 0x3b
 17541 06e1 0B       		.uleb128 0xb
 17542 06e2 39       		.uleb128 0x39
 17543 06e3 0B       		.uleb128 0xb
 17544 06e4 6E       		.uleb128 0x6e
 17545 06e5 0E       		.uleb128 0xe
 17546 06e6 32       		.uleb128 0x32
 17547 06e7 21       		.uleb128 0x21
 17548 06e8 01       		.sleb128 1
 17549 06e9 3C       		.uleb128 0x3c
 17550 06ea 19       		.uleb128 0x19
 17551 06eb 64       		.uleb128 0x64
 17552 06ec 13       		.uleb128 0x13
 17553 06ed 00       		.byte	0
 17554 06ee 00       		.byte	0
 17555 06ef 69       		.uleb128 0x69
 17556 06f0 2E       		.uleb128 0x2e
 17557 06f1 01       		.byte	0x1
 17558 06f2 3F       		.uleb128 0x3f
 17559 06f3 19       		.uleb128 0x19
 17560 06f4 03       		.uleb128 0x3
 17561 06f5 0E       		.uleb128 0xe
 17562 06f6 3A       		.uleb128 0x3a
 17563 06f7 21       		.uleb128 0x21
 17564 06f8 07       		.sleb128 7
 17565 06f9 3B       		.uleb128 0x3b
 17566 06fa 21       		.uleb128 0x21
 17567 06fb EF03     		.sleb128 495
 17568 06fd 39       		.uleb128 0x39
 17569 06fe 21       		.uleb128 0x21
 17570 06ff 07       		.sleb128 7
 17571 0700 6E       		.uleb128 0x6e
 17572 0701 0E       		.uleb128 0xe
 17573 0702 3C       		.uleb128 0x3c
 17574 0703 19       		.uleb128 0x19
 17575 0704 01       		.uleb128 0x1
 17576 0705 13       		.uleb128 0x13
 17577 0706 00       		.byte	0
 17578 0707 00       		.byte	0
 17579 0708 6A       		.uleb128 0x6a
GAS LISTING x64lin/../common/event.s 			page 452


 17580 0709 2E       		.uleb128 0x2e
 17581 070a 01       		.byte	0x1
 17582 070b 3F       		.uleb128 0x3f
 17583 070c 19       		.uleb128 0x19
 17584 070d 03       		.uleb128 0x3
 17585 070e 0E       		.uleb128 0xe
 17586 070f 3A       		.uleb128 0x3a
 17587 0710 0B       		.uleb128 0xb
 17588 0711 3B       		.uleb128 0x3b
 17589 0712 0B       		.uleb128 0xb
 17590 0713 39       		.uleb128 0x39
 17591 0714 21       		.uleb128 0x21
 17592 0715 18       		.sleb128 24
 17593 0716 6E       		.uleb128 0x6e
 17594 0717 0E       		.uleb128 0xe
 17595 0718 49       		.uleb128 0x49
 17596 0719 13       		.uleb128 0x13
 17597 071a 3C       		.uleb128 0x3c
 17598 071b 19       		.uleb128 0x19
 17599 071c 8B01     		.uleb128 0x8b
 17600 071e 21       		.uleb128 0x21
 17601 071f 01       		.sleb128 1
 17602 0720 64       		.uleb128 0x64
 17603 0721 13       		.uleb128 0x13
 17604 0722 01       		.uleb128 0x1
 17605 0723 13       		.uleb128 0x13
 17606 0724 00       		.byte	0
 17607 0725 00       		.byte	0
 17608 0726 6B       		.uleb128 0x6b
 17609 0727 13       		.uleb128 0x13
 17610 0728 01       		.byte	0x1
 17611 0729 03       		.uleb128 0x3
 17612 072a 0E       		.uleb128 0xe
 17613 072b 0B       		.uleb128 0xb
 17614 072c 0B       		.uleb128 0xb
 17615 072d 3A       		.uleb128 0x3a
 17616 072e 21       		.uleb128 0x21
 17617 072f 05       		.sleb128 5
 17618 0730 3B       		.uleb128 0x3b
 17619 0731 05       		.uleb128 0x5
 17620 0732 39       		.uleb128 0x39
 17621 0733 21       		.uleb128 0x21
 17622 0734 0E       		.sleb128 14
 17623 0735 32       		.uleb128 0x32
 17624 0736 21       		.uleb128 0x21
 17625 0737 02       		.sleb128 2
 17626 0738 01       		.uleb128 0x1
 17627 0739 13       		.uleb128 0x13
 17628 073a 00       		.byte	0
 17629 073b 00       		.byte	0
 17630 073c 6C       		.uleb128 0x6c
 17631 073d 2E       		.uleb128 0x2e
 17632 073e 01       		.byte	0x1
 17633 073f 3F       		.uleb128 0x3f
 17634 0740 19       		.uleb128 0x19
 17635 0741 03       		.uleb128 0x3
 17636 0742 0E       		.uleb128 0xe
GAS LISTING x64lin/../common/event.s 			page 453


 17637 0743 3A       		.uleb128 0x3a
 17638 0744 21       		.uleb128 0x21
 17639 0745 05       		.sleb128 5
 17640 0746 3B       		.uleb128 0x3b
 17641 0747 05       		.uleb128 0x5
 17642 0748 39       		.uleb128 0x39
 17643 0749 21       		.uleb128 0x21
 17644 074a 02       		.sleb128 2
 17645 074b 6E       		.uleb128 0x6e
 17646 074c 0E       		.uleb128 0xe
 17647 074d 3C       		.uleb128 0x3c
 17648 074e 19       		.uleb128 0x19
 17649 074f 64       		.uleb128 0x64
 17650 0750 13       		.uleb128 0x13
 17651 0751 00       		.byte	0
 17652 0752 00       		.byte	0
 17653 0753 6D       		.uleb128 0x6d
 17654 0754 2E       		.uleb128 0x2e
 17655 0755 01       		.byte	0x1
 17656 0756 3F       		.uleb128 0x3f
 17657 0757 19       		.uleb128 0x19
 17658 0758 03       		.uleb128 0x3
 17659 0759 0E       		.uleb128 0xe
 17660 075a 3A       		.uleb128 0x3a
 17661 075b 21       		.uleb128 0x21
 17662 075c 05       		.sleb128 5
 17663 075d 3B       		.uleb128 0x3b
 17664 075e 05       		.uleb128 0x5
 17665 075f 39       		.uleb128 0x39
 17666 0760 21       		.uleb128 0x21
 17667 0761 07       		.sleb128 7
 17668 0762 6E       		.uleb128 0x6e
 17669 0763 0E       		.uleb128 0xe
 17670 0764 32       		.uleb128 0x32
 17671 0765 21       		.uleb128 0x21
 17672 0766 01       		.sleb128 1
 17673 0767 3C       		.uleb128 0x3c
 17674 0768 19       		.uleb128 0x19
 17675 0769 63       		.uleb128 0x63
 17676 076a 19       		.uleb128 0x19
 17677 076b 64       		.uleb128 0x64
 17678 076c 13       		.uleb128 0x13
 17679 076d 01       		.uleb128 0x1
 17680 076e 13       		.uleb128 0x13
 17681 076f 00       		.byte	0
 17682 0770 00       		.byte	0
 17683 0771 6E       		.uleb128 0x6e
 17684 0772 2E       		.uleb128 0x2e
 17685 0773 01       		.byte	0x1
 17686 0774 3F       		.uleb128 0x3f
 17687 0775 19       		.uleb128 0x19
 17688 0776 03       		.uleb128 0x3
 17689 0777 0E       		.uleb128 0xe
 17690 0778 3A       		.uleb128 0x3a
 17691 0779 21       		.uleb128 0x21
 17692 077a 05       		.sleb128 5
 17693 077b 3B       		.uleb128 0x3b
GAS LISTING x64lin/../common/event.s 			page 454


 17694 077c 05       		.uleb128 0x5
 17695 077d 39       		.uleb128 0x39
 17696 077e 21       		.uleb128 0x21
 17697 077f 07       		.sleb128 7
 17698 0780 6E       		.uleb128 0x6e
 17699 0781 0E       		.uleb128 0xe
 17700 0782 49       		.uleb128 0x49
 17701 0783 13       		.uleb128 0x13
 17702 0784 32       		.uleb128 0x32
 17703 0785 21       		.uleb128 0x21
 17704 0786 02       		.sleb128 2
 17705 0787 3C       		.uleb128 0x3c
 17706 0788 19       		.uleb128 0x19
 17707 0789 01       		.uleb128 0x1
 17708 078a 13       		.uleb128 0x13
 17709 078b 00       		.byte	0
 17710 078c 00       		.byte	0
 17711 078d 6F       		.uleb128 0x6f
 17712 078e 2E       		.uleb128 0x2e
 17713 078f 01       		.byte	0x1
 17714 0790 3F       		.uleb128 0x3f
 17715 0791 19       		.uleb128 0x19
 17716 0792 03       		.uleb128 0x3
 17717 0793 0E       		.uleb128 0xe
 17718 0794 3A       		.uleb128 0x3a
 17719 0795 21       		.uleb128 0x21
 17720 0796 0B       		.sleb128 11
 17721 0797 3B       		.uleb128 0x3b
 17722 0798 05       		.uleb128 0x5
 17723 0799 39       		.uleb128 0x39
 17724 079a 21       		.uleb128 0x21
 17725 079b 07       		.sleb128 7
 17726 079c 6E       		.uleb128 0x6e
 17727 079d 0E       		.uleb128 0xe
 17728 079e 3C       		.uleb128 0x3c
 17729 079f 19       		.uleb128 0x19
 17730 07a0 63       		.uleb128 0x63
 17731 07a1 19       		.uleb128 0x19
 17732 07a2 64       		.uleb128 0x64
 17733 07a3 13       		.uleb128 0x13
 17734 07a4 01       		.uleb128 0x1
 17735 07a5 13       		.uleb128 0x13
 17736 07a6 00       		.byte	0
 17737 07a7 00       		.byte	0
 17738 07a8 70       		.uleb128 0x70
 17739 07a9 2E       		.uleb128 0x2e
 17740 07aa 01       		.byte	0x1
 17741 07ab 3F       		.uleb128 0x3f
 17742 07ac 19       		.uleb128 0x19
 17743 07ad 03       		.uleb128 0x3
 17744 07ae 0E       		.uleb128 0xe
 17745 07af 3A       		.uleb128 0x3a
 17746 07b0 21       		.uleb128 0x21
 17747 07b1 0B       		.sleb128 11
 17748 07b2 3B       		.uleb128 0x3b
 17749 07b3 05       		.uleb128 0x5
 17750 07b4 39       		.uleb128 0x39
GAS LISTING x64lin/../common/event.s 			page 455


 17751 07b5 21       		.uleb128 0x21
 17752 07b6 14       		.sleb128 20
 17753 07b7 6E       		.uleb128 0x6e
 17754 07b8 0E       		.uleb128 0xe
 17755 07b9 49       		.uleb128 0x49
 17756 07ba 13       		.uleb128 0x13
 17757 07bb 3C       		.uleb128 0x3c
 17758 07bc 19       		.uleb128 0x19
 17759 07bd 8A01     		.uleb128 0x8a
 17760 07bf 19       		.uleb128 0x19
 17761 07c0 64       		.uleb128 0x64
 17762 07c1 13       		.uleb128 0x13
 17763 07c2 01       		.uleb128 0x1
 17764 07c3 13       		.uleb128 0x13
 17765 07c4 00       		.byte	0
 17766 07c5 00       		.byte	0
 17767 07c6 71       		.uleb128 0x71
 17768 07c7 2E       		.uleb128 0x2e
 17769 07c8 00       		.byte	0
 17770 07c9 3F       		.uleb128 0x3f
 17771 07ca 19       		.uleb128 0x19
 17772 07cb 03       		.uleb128 0x3
 17773 07cc 0E       		.uleb128 0xe
 17774 07cd 3A       		.uleb128 0x3a
 17775 07ce 21       		.uleb128 0x21
 17776 07cf 29       		.sleb128 41
 17777 07d0 3B       		.uleb128 0x3b
 17778 07d1 0B       		.uleb128 0xb
 17779 07d2 39       		.uleb128 0x39
 17780 07d3 21       		.uleb128 0x21
 17781 07d4 03       		.sleb128 3
 17782 07d5 6E       		.uleb128 0x6e
 17783 07d6 0E       		.uleb128 0xe
 17784 07d7 8701     		.uleb128 0x87
 17785 07d9 19       		.uleb128 0x19
 17786 07da 3C       		.uleb128 0x3c
 17787 07db 19       		.uleb128 0x19
 17788 07dc 00       		.byte	0
 17789 07dd 00       		.byte	0
 17790 07de 72       		.uleb128 0x72
 17791 07df 2E       		.uleb128 0x2e
 17792 07e0 00       		.byte	0
 17793 07e1 3F       		.uleb128 0x3f
 17794 07e2 19       		.uleb128 0x19
 17795 07e3 03       		.uleb128 0x3
 17796 07e4 0E       		.uleb128 0xe
 17797 07e5 3A       		.uleb128 0x3a
 17798 07e6 0B       		.uleb128 0xb
 17799 07e7 3B       		.uleb128 0x3b
 17800 07e8 05       		.uleb128 0x5
 17801 07e9 39       		.uleb128 0x39
 17802 07ea 0B       		.uleb128 0xb
 17803 07eb 49       		.uleb128 0x49
 17804 07ec 13       		.uleb128 0x13
 17805 07ed 3C       		.uleb128 0x3c
 17806 07ee 19       		.uleb128 0x19
 17807 07ef 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 456


 17808 07f0 00       		.byte	0
 17809 07f1 73       		.uleb128 0x73
 17810 07f2 15       		.uleb128 0x15
 17811 07f3 01       		.byte	0x1
 17812 07f4 49       		.uleb128 0x49
 17813 07f5 13       		.uleb128 0x13
 17814 07f6 01       		.uleb128 0x1
 17815 07f7 13       		.uleb128 0x13
 17816 07f8 00       		.byte	0
 17817 07f9 00       		.byte	0
 17818 07fa 74       		.uleb128 0x74
 17819 07fb 34       		.uleb128 0x34
 17820 07fc 00       		.byte	0
 17821 07fd 03       		.uleb128 0x3
 17822 07fe 08       		.uleb128 0x8
 17823 07ff 3A       		.uleb128 0x3a
 17824 0800 21       		.uleb128 0x21
 17825 0801 D000     		.sleb128 80
 17826 0803 3B       		.uleb128 0x3b
 17827 0804 0B       		.uleb128 0xb
 17828 0805 39       		.uleb128 0x39
 17829 0806 0B       		.uleb128 0xb
 17830 0807 49       		.uleb128 0x49
 17831 0808 13       		.uleb128 0x13
 17832 0809 3C       		.uleb128 0x3c
 17833 080a 19       		.uleb128 0x19
 17834 080b 1C       		.uleb128 0x1c
 17835 080c 0A       		.uleb128 0xa
 17836 080d 6C       		.uleb128 0x6c
 17837 080e 19       		.uleb128 0x19
 17838 080f 00       		.byte	0
 17839 0810 00       		.byte	0
 17840 0811 75       		.uleb128 0x75
 17841 0812 34       		.uleb128 0x34
 17842 0813 00       		.byte	0
 17843 0814 03       		.uleb128 0x3
 17844 0815 0E       		.uleb128 0xe
 17845 0816 3A       		.uleb128 0x3a
 17846 0817 21       		.uleb128 0x21
 17847 0818 D000     		.sleb128 80
 17848 081a 3B       		.uleb128 0x3b
 17849 081b 0B       		.uleb128 0xb
 17850 081c 39       		.uleb128 0x39
 17851 081d 0B       		.uleb128 0xb
 17852 081e 49       		.uleb128 0x49
 17853 081f 13       		.uleb128 0x13
 17854 0820 3C       		.uleb128 0x3c
 17855 0821 19       		.uleb128 0x19
 17856 0822 1C       		.uleb128 0x1c
 17857 0823 0A       		.uleb128 0xa
 17858 0824 6C       		.uleb128 0x6c
 17859 0825 19       		.uleb128 0x19
 17860 0826 00       		.byte	0
 17861 0827 00       		.byte	0
 17862 0828 76       		.uleb128 0x76
 17863 0829 2E       		.uleb128 0x2e
 17864 082a 01       		.byte	0x1
GAS LISTING x64lin/../common/event.s 			page 457


 17865 082b 3F       		.uleb128 0x3f
 17866 082c 19       		.uleb128 0x19
 17867 082d 03       		.uleb128 0x3
 17868 082e 0E       		.uleb128 0xe
 17869 082f 6E       		.uleb128 0x6e
 17870 0830 0E       		.uleb128 0xe
 17871 0831 34       		.uleb128 0x34
 17872 0832 19       		.uleb128 0x19
 17873 0833 3C       		.uleb128 0x3c
 17874 0834 19       		.uleb128 0x19
 17875 0835 64       		.uleb128 0x64
 17876 0836 13       		.uleb128 0x13
 17877 0837 01       		.uleb128 0x1
 17878 0838 13       		.uleb128 0x13
 17879 0839 00       		.byte	0
 17880 083a 00       		.byte	0
 17881 083b 77       		.uleb128 0x77
 17882 083c 34       		.uleb128 0x34
 17883 083d 00       		.byte	0
 17884 083e 03       		.uleb128 0x3
 17885 083f 0E       		.uleb128 0xe
 17886 0840 3A       		.uleb128 0x3a
 17887 0841 21       		.uleb128 0x21
 17888 0842 0D       		.sleb128 13
 17889 0843 3B       		.uleb128 0x3b
 17890 0844 0B       		.uleb128 0xb
 17891 0845 39       		.uleb128 0x39
 17892 0846 21       		.uleb128 0x21
 17893 0847 17       		.sleb128 23
 17894 0848 49       		.uleb128 0x49
 17895 0849 13       		.uleb128 0x13
 17896 084a 00       		.byte	0
 17897 084b 00       		.byte	0
 17898 084c 78       		.uleb128 0x78
 17899 084d 2E       		.uleb128 0x2e
 17900 084e 00       		.byte	0
 17901 084f 47       		.uleb128 0x47
 17902 0850 13       		.uleb128 0x13
 17903 0851 20       		.uleb128 0x20
 17904 0852 21       		.uleb128 0x21
 17905 0853 03       		.sleb128 3
 17906 0854 00       		.byte	0
 17907 0855 00       		.byte	0
 17908 0856 79       		.uleb128 0x79
 17909 0857 34       		.uleb128 0x34
 17910 0858 00       		.byte	0
 17911 0859 03       		.uleb128 0x3
 17912 085a 08       		.uleb128 0x8
 17913 085b 3A       		.uleb128 0x3a
 17914 085c 21       		.uleb128 0x21
 17915 085d 0E       		.sleb128 14
 17916 085e 3B       		.uleb128 0x3b
 17917 085f 05       		.uleb128 0x5
 17918 0860 39       		.uleb128 0x39
 17919 0861 0B       		.uleb128 0xb
 17920 0862 49       		.uleb128 0x49
 17921 0863 13       		.uleb128 0x13
GAS LISTING x64lin/../common/event.s 			page 458


 17922 0864 00       		.byte	0
 17923 0865 00       		.byte	0
 17924 0866 7A       		.uleb128 0x7a
 17925 0867 888201   		.uleb128 0x4108
 17926 086a 01       		.byte	0x1
 17927 086b 3A       		.uleb128 0x3a
 17928 086c 0B       		.uleb128 0xb
 17929 086d 3B       		.uleb128 0x3b
 17930 086e 05       		.uleb128 0x5
 17931 086f 39       		.uleb128 0x39
 17932 0870 0B       		.uleb128 0xb
 17933 0871 00       		.byte	0
 17934 0872 00       		.byte	0
 17935 0873 7B       		.uleb128 0x7b
 17936 0874 888201   		.uleb128 0x4108
 17937 0877 01       		.byte	0x1
 17938 0878 3A       		.uleb128 0x3a
 17939 0879 0B       		.uleb128 0xb
 17940 087a 3B       		.uleb128 0x3b
 17941 087b 0B       		.uleb128 0xb
 17942 087c 39       		.uleb128 0x39
 17943 087d 0B       		.uleb128 0xb
 17944 087e 00       		.byte	0
 17945 087f 00       		.byte	0
 17946 0880 7C       		.uleb128 0x7c
 17947 0881 05       		.uleb128 0x5
 17948 0882 00       		.byte	0
 17949 0883 03       		.uleb128 0x3
 17950 0884 0E       		.uleb128 0xe
 17951 0885 3A       		.uleb128 0x3a
 17952 0886 21       		.uleb128 0x21
 17953 0887 01       		.sleb128 1
 17954 0888 3B       		.uleb128 0x3b
 17955 0889 21       		.uleb128 0x21
 17956 088a 04       		.sleb128 4
 17957 088b 39       		.uleb128 0x39
 17958 088c 0B       		.uleb128 0xb
 17959 088d 49       		.uleb128 0x49
 17960 088e 13       		.uleb128 0x13
 17961 088f 02       		.uleb128 0x2
 17962 0890 17       		.uleb128 0x17
 17963 0891 B742     		.uleb128 0x2137
 17964 0893 17       		.uleb128 0x17
 17965 0894 00       		.byte	0
 17966 0895 00       		.byte	0
 17967 0896 7D       		.uleb128 0x7d
 17968 0897 48       		.uleb128 0x48
 17969 0898 01       		.byte	0x1
 17970 0899 7D       		.uleb128 0x7d
 17971 089a 01       		.uleb128 0x1
 17972 089b 7F       		.uleb128 0x7f
 17973 089c 13       		.uleb128 0x13
 17974 089d 01       		.uleb128 0x1
 17975 089e 13       		.uleb128 0x13
 17976 089f 00       		.byte	0
 17977 08a0 00       		.byte	0
 17978 08a1 7E       		.uleb128 0x7e
GAS LISTING x64lin/../common/event.s 			page 459


 17979 08a2 2E       		.uleb128 0x2e
 17980 08a3 01       		.byte	0x1
 17981 08a4 03       		.uleb128 0x3
 17982 08a5 0E       		.uleb128 0xe
 17983 08a6 3A       		.uleb128 0x3a
 17984 08a7 21       		.uleb128 0x21
 17985 08a8 03       		.sleb128 3
 17986 08a9 3B       		.uleb128 0x3b
 17987 08aa 05       		.uleb128 0x5
 17988 08ab 39       		.uleb128 0x39
 17989 08ac 21       		.uleb128 0x21
 17990 08ad 01       		.sleb128 1
 17991 08ae 49       		.uleb128 0x49
 17992 08af 13       		.uleb128 0x13
 17993 08b0 20       		.uleb128 0x20
 17994 08b1 21       		.uleb128 0x21
 17995 08b2 03       		.sleb128 3
 17996 08b3 01       		.uleb128 0x1
 17997 08b4 13       		.uleb128 0x13
 17998 08b5 00       		.byte	0
 17999 08b6 00       		.byte	0
 18000 08b7 7F       		.uleb128 0x7f
 18001 08b8 2E       		.uleb128 0x2e
 18002 08b9 00       		.byte	0
 18003 08ba 3F       		.uleb128 0x3f
 18004 08bb 19       		.uleb128 0x19
 18005 08bc 3C       		.uleb128 0x3c
 18006 08bd 19       		.uleb128 0x19
 18007 08be 6E       		.uleb128 0x6e
 18008 08bf 0E       		.uleb128 0xe
 18009 08c0 03       		.uleb128 0x3
 18010 08c1 0E       		.uleb128 0xe
 18011 08c2 00       		.byte	0
 18012 08c3 00       		.byte	0
 18013 08c4 8001     		.uleb128 0x80
 18014 08c6 11       		.uleb128 0x11
 18015 08c7 01       		.byte	0x1
 18016 08c8 25       		.uleb128 0x25
 18017 08c9 0E       		.uleb128 0xe
 18018 08ca 13       		.uleb128 0x13
 18019 08cb 0B       		.uleb128 0xb
 18020 08cc 03       		.uleb128 0x3
 18021 08cd 1F       		.uleb128 0x1f
 18022 08ce 1B       		.uleb128 0x1b
 18023 08cf 1F       		.uleb128 0x1f
 18024 08d0 55       		.uleb128 0x55
 18025 08d1 17       		.uleb128 0x17
 18026 08d2 11       		.uleb128 0x11
 18027 08d3 01       		.uleb128 0x1
 18028 08d4 10       		.uleb128 0x10
 18029 08d5 17       		.uleb128 0x17
 18030 08d6 00       		.byte	0
 18031 08d7 00       		.byte	0
 18032 08d8 8101     		.uleb128 0x81
 18033 08da 39       		.uleb128 0x39
 18034 08db 01       		.byte	0x1
 18035 08dc 03       		.uleb128 0x3
GAS LISTING x64lin/../common/event.s 			page 460


 18036 08dd 08       		.uleb128 0x8
 18037 08de 3A       		.uleb128 0x3a
 18038 08df 0B       		.uleb128 0xb
 18039 08e0 3B       		.uleb128 0x3b
 18040 08e1 05       		.uleb128 0x5
 18041 08e2 39       		.uleb128 0x39
 18042 08e3 0B       		.uleb128 0xb
 18043 08e4 01       		.uleb128 0x1
 18044 08e5 13       		.uleb128 0x13
 18045 08e6 00       		.byte	0
 18046 08e7 00       		.byte	0
 18047 08e8 8201     		.uleb128 0x82
 18048 08ea 39       		.uleb128 0x39
 18049 08eb 00       		.byte	0
 18050 08ec 03       		.uleb128 0x3
 18051 08ed 0E       		.uleb128 0xe
 18052 08ee 3A       		.uleb128 0x3a
 18053 08ef 0B       		.uleb128 0xb
 18054 08f0 3B       		.uleb128 0x3b
 18055 08f1 0B       		.uleb128 0xb
 18056 08f2 39       		.uleb128 0x39
 18057 08f3 0B       		.uleb128 0xb
 18058 08f4 8901     		.uleb128 0x89
 18059 08f6 19       		.uleb128 0x19
 18060 08f7 00       		.byte	0
 18061 08f8 00       		.byte	0
 18062 08f9 8301     		.uleb128 0x83
 18063 08fb 04       		.uleb128 0x4
 18064 08fc 00       		.byte	0
 18065 08fd 03       		.uleb128 0x3
 18066 08fe 0E       		.uleb128 0xe
 18067 08ff 6D       		.uleb128 0x6d
 18068 0900 19       		.uleb128 0x19
 18069 0901 3E       		.uleb128 0x3e
 18070 0902 0B       		.uleb128 0xb
 18071 0903 0B       		.uleb128 0xb
 18072 0904 0B       		.uleb128 0xb
 18073 0905 49       		.uleb128 0x49
 18074 0906 13       		.uleb128 0x13
 18075 0907 3A       		.uleb128 0x3a
 18076 0908 0B       		.uleb128 0xb
 18077 0909 3B       		.uleb128 0x3b
 18078 090a 0B       		.uleb128 0xb
 18079 090b 39       		.uleb128 0x39
 18080 090c 0B       		.uleb128 0xb
 18081 090d 00       		.byte	0
 18082 090e 00       		.byte	0
 18083 090f 8401     		.uleb128 0x84
 18084 0911 2E       		.uleb128 0x2e
 18085 0912 01       		.byte	0x1
 18086 0913 3F       		.uleb128 0x3f
 18087 0914 19       		.uleb128 0x19
 18088 0915 03       		.uleb128 0x3
 18089 0916 0E       		.uleb128 0xe
 18090 0917 3A       		.uleb128 0x3a
 18091 0918 0B       		.uleb128 0xb
 18092 0919 3B       		.uleb128 0x3b
GAS LISTING x64lin/../common/event.s 			page 461


 18093 091a 0B       		.uleb128 0xb
 18094 091b 39       		.uleb128 0x39
 18095 091c 0B       		.uleb128 0xb
 18096 091d 6E       		.uleb128 0x6e
 18097 091e 0E       		.uleb128 0xe
 18098 091f 3C       		.uleb128 0x3c
 18099 0920 19       		.uleb128 0x19
 18100 0921 64       		.uleb128 0x64
 18101 0922 13       		.uleb128 0x13
 18102 0923 00       		.byte	0
 18103 0924 00       		.byte	0
 18104 0925 8501     		.uleb128 0x85
 18105 0927 2E       		.uleb128 0x2e
 18106 0928 01       		.byte	0x1
 18107 0929 3F       		.uleb128 0x3f
 18108 092a 19       		.uleb128 0x19
 18109 092b 03       		.uleb128 0x3
 18110 092c 0E       		.uleb128 0xe
 18111 092d 3A       		.uleb128 0x3a
 18112 092e 0B       		.uleb128 0xb
 18113 092f 3B       		.uleb128 0x3b
 18114 0930 0B       		.uleb128 0xb
 18115 0931 39       		.uleb128 0x39
 18116 0932 0B       		.uleb128 0xb
 18117 0933 6E       		.uleb128 0x6e
 18118 0934 0E       		.uleb128 0xe
 18119 0935 3C       		.uleb128 0x3c
 18120 0936 19       		.uleb128 0x19
 18121 0937 63       		.uleb128 0x63
 18122 0938 19       		.uleb128 0x19
 18123 0939 64       		.uleb128 0x64
 18124 093a 13       		.uleb128 0x13
 18125 093b 01       		.uleb128 0x1
 18126 093c 13       		.uleb128 0x13
 18127 093d 00       		.byte	0
 18128 093e 00       		.byte	0
 18129 093f 8601     		.uleb128 0x86
 18130 0941 2E       		.uleb128 0x2e
 18131 0942 01       		.byte	0x1
 18132 0943 3F       		.uleb128 0x3f
 18133 0944 19       		.uleb128 0x19
 18134 0945 03       		.uleb128 0x3
 18135 0946 0E       		.uleb128 0xe
 18136 0947 3A       		.uleb128 0x3a
 18137 0948 0B       		.uleb128 0xb
 18138 0949 3B       		.uleb128 0x3b
 18139 094a 0B       		.uleb128 0xb
 18140 094b 39       		.uleb128 0x39
 18141 094c 0B       		.uleb128 0xb
 18142 094d 6E       		.uleb128 0x6e
 18143 094e 0E       		.uleb128 0xe
 18144 094f 49       		.uleb128 0x49
 18145 0950 13       		.uleb128 0x13
 18146 0951 32       		.uleb128 0x32
 18147 0952 0B       		.uleb128 0xb
 18148 0953 3C       		.uleb128 0x3c
 18149 0954 19       		.uleb128 0x19
GAS LISTING x64lin/../common/event.s 			page 462


 18150 0955 8A01     		.uleb128 0x8a
 18151 0957 19       		.uleb128 0x19
 18152 0958 64       		.uleb128 0x64
 18153 0959 13       		.uleb128 0x13
 18154 095a 00       		.byte	0
 18155 095b 00       		.byte	0
 18156 095c 8701     		.uleb128 0x87
 18157 095e 3A       		.uleb128 0x3a
 18158 095f 00       		.byte	0
 18159 0960 3A       		.uleb128 0x3a
 18160 0961 0B       		.uleb128 0xb
 18161 0962 3B       		.uleb128 0x3b
 18162 0963 05       		.uleb128 0x5
 18163 0964 39       		.uleb128 0x39
 18164 0965 0B       		.uleb128 0xb
 18165 0966 18       		.uleb128 0x18
 18166 0967 13       		.uleb128 0x13
 18167 0968 00       		.byte	0
 18168 0969 00       		.byte	0
 18169 096a 8801     		.uleb128 0x88
 18170 096c 39       		.uleb128 0x39
 18171 096d 01       		.byte	0x1
 18172 096e 03       		.uleb128 0x3
 18173 096f 0E       		.uleb128 0xe
 18174 0970 3A       		.uleb128 0x3a
 18175 0971 0B       		.uleb128 0xb
 18176 0972 3B       		.uleb128 0x3b
 18177 0973 05       		.uleb128 0x5
 18178 0974 39       		.uleb128 0x39
 18179 0975 0B       		.uleb128 0xb
 18180 0976 8901     		.uleb128 0x89
 18181 0978 19       		.uleb128 0x19
 18182 0979 01       		.uleb128 0x1
 18183 097a 13       		.uleb128 0x13
 18184 097b 00       		.byte	0
 18185 097c 00       		.byte	0
 18186 097d 8901     		.uleb128 0x89
 18187 097f 2E       		.uleb128 0x2e
 18188 0980 01       		.byte	0x1
 18189 0981 3F       		.uleb128 0x3f
 18190 0982 19       		.uleb128 0x19
 18191 0983 03       		.uleb128 0x3
 18192 0984 0E       		.uleb128 0xe
 18193 0985 3A       		.uleb128 0x3a
 18194 0986 0B       		.uleb128 0xb
 18195 0987 3B       		.uleb128 0x3b
 18196 0988 05       		.uleb128 0x5
 18197 0989 39       		.uleb128 0x39
 18198 098a 0B       		.uleb128 0xb
 18199 098b 6E       		.uleb128 0x6e
 18200 098c 0E       		.uleb128 0xe
 18201 098d 49       		.uleb128 0x49
 18202 098e 13       		.uleb128 0x13
 18203 098f 32       		.uleb128 0x32
 18204 0990 0B       		.uleb128 0xb
 18205 0991 3C       		.uleb128 0x3c
 18206 0992 19       		.uleb128 0x19
GAS LISTING x64lin/../common/event.s 			page 463


 18207 0993 8B01     		.uleb128 0x8b
 18208 0995 0B       		.uleb128 0xb
 18209 0996 64       		.uleb128 0x64
 18210 0997 13       		.uleb128 0x13
 18211 0998 01       		.uleb128 0x1
 18212 0999 13       		.uleb128 0x13
 18213 099a 00       		.byte	0
 18214 099b 00       		.byte	0
 18215 099c 8A01     		.uleb128 0x8a
 18216 099e 2E       		.uleb128 0x2e
 18217 099f 01       		.byte	0x1
 18218 09a0 3F       		.uleb128 0x3f
 18219 09a1 19       		.uleb128 0x19
 18220 09a2 03       		.uleb128 0x3
 18221 09a3 0E       		.uleb128 0xe
 18222 09a4 3A       		.uleb128 0x3a
 18223 09a5 0B       		.uleb128 0xb
 18224 09a6 3B       		.uleb128 0x3b
 18225 09a7 05       		.uleb128 0x5
 18226 09a8 39       		.uleb128 0x39
 18227 09a9 0B       		.uleb128 0xb
 18228 09aa 6E       		.uleb128 0x6e
 18229 09ab 0E       		.uleb128 0xe
 18230 09ac 49       		.uleb128 0x49
 18231 09ad 13       		.uleb128 0x13
 18232 09ae 32       		.uleb128 0x32
 18233 09af 0B       		.uleb128 0xb
 18234 09b0 3C       		.uleb128 0x3c
 18235 09b1 19       		.uleb128 0x19
 18236 09b2 63       		.uleb128 0x63
 18237 09b3 19       		.uleb128 0x19
 18238 09b4 64       		.uleb128 0x64
 18239 09b5 13       		.uleb128 0x13
 18240 09b6 01       		.uleb128 0x1
 18241 09b7 13       		.uleb128 0x13
 18242 09b8 00       		.byte	0
 18243 09b9 00       		.byte	0
 18244 09ba 8B01     		.uleb128 0x8b
 18245 09bc 2E       		.uleb128 0x2e
 18246 09bd 01       		.byte	0x1
 18247 09be 3F       		.uleb128 0x3f
 18248 09bf 19       		.uleb128 0x19
 18249 09c0 03       		.uleb128 0x3
 18250 09c1 0E       		.uleb128 0xe
 18251 09c2 3A       		.uleb128 0x3a
 18252 09c3 0B       		.uleb128 0xb
 18253 09c4 3B       		.uleb128 0x3b
 18254 09c5 05       		.uleb128 0x5
 18255 09c6 39       		.uleb128 0x39
 18256 09c7 0B       		.uleb128 0xb
 18257 09c8 6E       		.uleb128 0x6e
 18258 09c9 0E       		.uleb128 0xe
 18259 09ca 32       		.uleb128 0x32
 18260 09cb 0B       		.uleb128 0xb
 18261 09cc 3C       		.uleb128 0x3c
 18262 09cd 19       		.uleb128 0x19
 18263 09ce 8A01     		.uleb128 0x8a
GAS LISTING x64lin/../common/event.s 			page 464


 18264 09d0 19       		.uleb128 0x19
 18265 09d1 64       		.uleb128 0x64
 18266 09d2 13       		.uleb128 0x13
 18267 09d3 01       		.uleb128 0x1
 18268 09d4 13       		.uleb128 0x13
 18269 09d5 00       		.byte	0
 18270 09d6 00       		.byte	0
 18271 09d7 8C01     		.uleb128 0x8c
 18272 09d9 2E       		.uleb128 0x2e
 18273 09da 01       		.byte	0x1
 18274 09db 3F       		.uleb128 0x3f
 18275 09dc 19       		.uleb128 0x19
 18276 09dd 03       		.uleb128 0x3
 18277 09de 0E       		.uleb128 0xe
 18278 09df 3A       		.uleb128 0x3a
 18279 09e0 0B       		.uleb128 0xb
 18280 09e1 3B       		.uleb128 0x3b
 18281 09e2 05       		.uleb128 0x5
 18282 09e3 39       		.uleb128 0x39
 18283 09e4 0B       		.uleb128 0xb
 18284 09e5 6E       		.uleb128 0x6e
 18285 09e6 0E       		.uleb128 0xe
 18286 09e7 49       		.uleb128 0x49
 18287 09e8 13       		.uleb128 0x13
 18288 09e9 32       		.uleb128 0x32
 18289 09ea 0B       		.uleb128 0xb
 18290 09eb 3C       		.uleb128 0x3c
 18291 09ec 19       		.uleb128 0x19
 18292 09ed 8A01     		.uleb128 0x8a
 18293 09ef 19       		.uleb128 0x19
 18294 09f0 64       		.uleb128 0x64
 18295 09f1 13       		.uleb128 0x13
 18296 09f2 01       		.uleb128 0x1
 18297 09f3 13       		.uleb128 0x13
 18298 09f4 00       		.byte	0
 18299 09f5 00       		.byte	0
 18300 09f6 8D01     		.uleb128 0x8d
 18301 09f8 2F       		.uleb128 0x2f
 18302 09f9 00       		.byte	0
 18303 09fa 03       		.uleb128 0x3
 18304 09fb 08       		.uleb128 0x8
 18305 09fc 49       		.uleb128 0x49
 18306 09fd 13       		.uleb128 0x13
 18307 09fe 1E       		.uleb128 0x1e
 18308 09ff 19       		.uleb128 0x19
 18309 0a00 00       		.byte	0
 18310 0a01 00       		.byte	0
 18311 0a02 8E01     		.uleb128 0x8e
 18312 0a04 2E       		.uleb128 0x2e
 18313 0a05 01       		.byte	0x1
 18314 0a06 3F       		.uleb128 0x3f
 18315 0a07 19       		.uleb128 0x19
 18316 0a08 03       		.uleb128 0x3
 18317 0a09 0E       		.uleb128 0xe
 18318 0a0a 3A       		.uleb128 0x3a
 18319 0a0b 0B       		.uleb128 0xb
 18320 0a0c 3B       		.uleb128 0x3b
GAS LISTING x64lin/../common/event.s 			page 465


 18321 0a0d 05       		.uleb128 0x5
 18322 0a0e 39       		.uleb128 0x39
 18323 0a0f 0B       		.uleb128 0xb
 18324 0a10 6E       		.uleb128 0x6e
 18325 0a11 0E       		.uleb128 0xe
 18326 0a12 3C       		.uleb128 0x3c
 18327 0a13 19       		.uleb128 0x19
 18328 0a14 00       		.byte	0
 18329 0a15 00       		.byte	0
 18330 0a16 8F01     		.uleb128 0x8f
 18331 0a18 2E       		.uleb128 0x2e
 18332 0a19 01       		.byte	0x1
 18333 0a1a 3F       		.uleb128 0x3f
 18334 0a1b 19       		.uleb128 0x19
 18335 0a1c 03       		.uleb128 0x3
 18336 0a1d 0E       		.uleb128 0xe
 18337 0a1e 3A       		.uleb128 0x3a
 18338 0a1f 0B       		.uleb128 0xb
 18339 0a20 3B       		.uleb128 0x3b
 18340 0a21 05       		.uleb128 0x5
 18341 0a22 39       		.uleb128 0x39
 18342 0a23 0B       		.uleb128 0xb
 18343 0a24 6E       		.uleb128 0x6e
 18344 0a25 0E       		.uleb128 0xe
 18345 0a26 49       		.uleb128 0x49
 18346 0a27 13       		.uleb128 0x13
 18347 0a28 3C       		.uleb128 0x3c
 18348 0a29 19       		.uleb128 0x19
 18349 0a2a 8B01     		.uleb128 0x8b
 18350 0a2c 0B       		.uleb128 0xb
 18351 0a2d 64       		.uleb128 0x64
 18352 0a2e 13       		.uleb128 0x13
 18353 0a2f 01       		.uleb128 0x1
 18354 0a30 13       		.uleb128 0x13
 18355 0a31 00       		.byte	0
 18356 0a32 00       		.byte	0
 18357 0a33 9001     		.uleb128 0x90
 18358 0a35 0D       		.uleb128 0xd
 18359 0a36 00       		.byte	0
 18360 0a37 03       		.uleb128 0x3
 18361 0a38 0E       		.uleb128 0xe
 18362 0a39 3A       		.uleb128 0x3a
 18363 0a3a 0B       		.uleb128 0xb
 18364 0a3b 3B       		.uleb128 0x3b
 18365 0a3c 05       		.uleb128 0x5
 18366 0a3d 39       		.uleb128 0x39
 18367 0a3e 0B       		.uleb128 0xb
 18368 0a3f 49       		.uleb128 0x49
 18369 0a40 13       		.uleb128 0x13
 18370 0a41 38       		.uleb128 0x38
 18371 0a42 0B       		.uleb128 0xb
 18372 0a43 32       		.uleb128 0x32
 18373 0a44 0B       		.uleb128 0xb
 18374 0a45 00       		.byte	0
 18375 0a46 00       		.byte	0
 18376 0a47 9101     		.uleb128 0x91
 18377 0a49 0D       		.uleb128 0xd
GAS LISTING x64lin/../common/event.s 			page 466


 18378 0a4a 00       		.byte	0
 18379 0a4b 03       		.uleb128 0x3
 18380 0a4c 08       		.uleb128 0x8
 18381 0a4d 3A       		.uleb128 0x3a
 18382 0a4e 0B       		.uleb128 0xb
 18383 0a4f 3B       		.uleb128 0x3b
 18384 0a50 0B       		.uleb128 0xb
 18385 0a51 39       		.uleb128 0x39
 18386 0a52 0B       		.uleb128 0xb
 18387 0a53 49       		.uleb128 0x49
 18388 0a54 13       		.uleb128 0x13
 18389 0a55 38       		.uleb128 0x38
 18390 0a56 0B       		.uleb128 0xb
 18391 0a57 32       		.uleb128 0x32
 18392 0a58 0B       		.uleb128 0xb
 18393 0a59 00       		.byte	0
 18394 0a5a 00       		.byte	0
 18395 0a5b 9201     		.uleb128 0x92
 18396 0a5d 2E       		.uleb128 0x2e
 18397 0a5e 01       		.byte	0x1
 18398 0a5f 3F       		.uleb128 0x3f
 18399 0a60 19       		.uleb128 0x19
 18400 0a61 03       		.uleb128 0x3
 18401 0a62 08       		.uleb128 0x8
 18402 0a63 3A       		.uleb128 0x3a
 18403 0a64 0B       		.uleb128 0xb
 18404 0a65 3B       		.uleb128 0x3b
 18405 0a66 05       		.uleb128 0x5
 18406 0a67 39       		.uleb128 0x39
 18407 0a68 0B       		.uleb128 0xb
 18408 0a69 6E       		.uleb128 0x6e
 18409 0a6a 0E       		.uleb128 0xe
 18410 0a6b 32       		.uleb128 0x32
 18411 0a6c 0B       		.uleb128 0xb
 18412 0a6d 3C       		.uleb128 0x3c
 18413 0a6e 19       		.uleb128 0x19
 18414 0a6f 64       		.uleb128 0x64
 18415 0a70 13       		.uleb128 0x13
 18416 0a71 01       		.uleb128 0x1
 18417 0a72 13       		.uleb128 0x13
 18418 0a73 00       		.byte	0
 18419 0a74 00       		.byte	0
 18420 0a75 9301     		.uleb128 0x93
 18421 0a77 2F       		.uleb128 0x2f
 18422 0a78 00       		.byte	0
 18423 0a79 03       		.uleb128 0x3
 18424 0a7a 0E       		.uleb128 0xe
 18425 0a7b 49       		.uleb128 0x49
 18426 0a7c 13       		.uleb128 0x13
 18427 0a7d 1E       		.uleb128 0x1e
 18428 0a7e 19       		.uleb128 0x19
 18429 0a7f 00       		.byte	0
 18430 0a80 00       		.byte	0
 18431 0a81 9401     		.uleb128 0x94
 18432 0a83 2E       		.uleb128 0x2e
 18433 0a84 01       		.byte	0x1
 18434 0a85 3F       		.uleb128 0x3f
GAS LISTING x64lin/../common/event.s 			page 467


 18435 0a86 19       		.uleb128 0x19
 18436 0a87 03       		.uleb128 0x3
 18437 0a88 0E       		.uleb128 0xe
 18438 0a89 3A       		.uleb128 0x3a
 18439 0a8a 0B       		.uleb128 0xb
 18440 0a8b 3B       		.uleb128 0x3b
 18441 0a8c 05       		.uleb128 0x5
 18442 0a8d 39       		.uleb128 0x39
 18443 0a8e 0B       		.uleb128 0xb
 18444 0a8f 6E       		.uleb128 0x6e
 18445 0a90 0E       		.uleb128 0xe
 18446 0a91 49       		.uleb128 0x49
 18447 0a92 13       		.uleb128 0x13
 18448 0a93 3C       		.uleb128 0x3c
 18449 0a94 19       		.uleb128 0x19
 18450 0a95 00       		.byte	0
 18451 0a96 00       		.byte	0
 18452 0a97 9501     		.uleb128 0x95
 18453 0a99 39       		.uleb128 0x39
 18454 0a9a 01       		.byte	0x1
 18455 0a9b 03       		.uleb128 0x3
 18456 0a9c 0E       		.uleb128 0xe
 18457 0a9d 3A       		.uleb128 0x3a
 18458 0a9e 0B       		.uleb128 0xb
 18459 0a9f 3B       		.uleb128 0x3b
 18460 0aa0 05       		.uleb128 0x5
 18461 0aa1 39       		.uleb128 0x39
 18462 0aa2 0B       		.uleb128 0xb
 18463 0aa3 01       		.uleb128 0x1
 18464 0aa4 13       		.uleb128 0x13
 18465 0aa5 00       		.byte	0
 18466 0aa6 00       		.byte	0
 18467 0aa7 9601     		.uleb128 0x96
 18468 0aa9 2E       		.uleb128 0x2e
 18469 0aaa 01       		.byte	0x1
 18470 0aab 3F       		.uleb128 0x3f
 18471 0aac 19       		.uleb128 0x19
 18472 0aad 03       		.uleb128 0x3
 18473 0aae 08       		.uleb128 0x8
 18474 0aaf 3A       		.uleb128 0x3a
 18475 0ab0 0B       		.uleb128 0xb
 18476 0ab1 3B       		.uleb128 0x3b
 18477 0ab2 0B       		.uleb128 0xb
 18478 0ab3 39       		.uleb128 0x39
 18479 0ab4 0B       		.uleb128 0xb
 18480 0ab5 6E       		.uleb128 0x6e
 18481 0ab6 0E       		.uleb128 0xe
 18482 0ab7 49       		.uleb128 0x49
 18483 0ab8 13       		.uleb128 0x13
 18484 0ab9 3C       		.uleb128 0x3c
 18485 0aba 19       		.uleb128 0x19
 18486 0abb 01       		.uleb128 0x1
 18487 0abc 13       		.uleb128 0x13
 18488 0abd 00       		.byte	0
 18489 0abe 00       		.byte	0
 18490 0abf 9701     		.uleb128 0x97
 18491 0ac1 04       		.uleb128 0x4
GAS LISTING x64lin/../common/event.s 			page 468


 18492 0ac2 01       		.byte	0x1
 18493 0ac3 03       		.uleb128 0x3
 18494 0ac4 0E       		.uleb128 0xe
 18495 0ac5 3E       		.uleb128 0x3e
 18496 0ac6 0B       		.uleb128 0xb
 18497 0ac7 0B       		.uleb128 0xb
 18498 0ac8 0B       		.uleb128 0xb
 18499 0ac9 49       		.uleb128 0x49
 18500 0aca 13       		.uleb128 0x13
 18501 0acb 3A       		.uleb128 0x3a
 18502 0acc 0B       		.uleb128 0xb
 18503 0acd 3B       		.uleb128 0x3b
 18504 0ace 0B       		.uleb128 0xb
 18505 0acf 39       		.uleb128 0x39
 18506 0ad0 0B       		.uleb128 0xb
 18507 0ad1 01       		.uleb128 0x1
 18508 0ad2 13       		.uleb128 0x13
 18509 0ad3 00       		.byte	0
 18510 0ad4 00       		.byte	0
 18511 0ad5 9801     		.uleb128 0x98
 18512 0ad7 34       		.uleb128 0x34
 18513 0ad8 00       		.byte	0
 18514 0ad9 03       		.uleb128 0x3
 18515 0ada 0E       		.uleb128 0xe
 18516 0adb 3A       		.uleb128 0x3a
 18517 0adc 0B       		.uleb128 0xb
 18518 0add 3B       		.uleb128 0x3b
 18519 0ade 0B       		.uleb128 0xb
 18520 0adf 39       		.uleb128 0x39
 18521 0ae0 0B       		.uleb128 0xb
 18522 0ae1 49       		.uleb128 0x49
 18523 0ae2 13       		.uleb128 0x13
 18524 0ae3 3C       		.uleb128 0x3c
 18525 0ae4 19       		.uleb128 0x19
 18526 0ae5 1C       		.uleb128 0x1c
 18527 0ae6 0B       		.uleb128 0xb
 18528 0ae7 00       		.byte	0
 18529 0ae8 00       		.byte	0
 18530 0ae9 9901     		.uleb128 0x99
 18531 0aeb 24       		.uleb128 0x24
 18532 0aec 00       		.byte	0
 18533 0aed 0B       		.uleb128 0xb
 18534 0aee 0B       		.uleb128 0xb
 18535 0aef 3E       		.uleb128 0x3e
 18536 0af0 0B       		.uleb128 0xb
 18537 0af1 03       		.uleb128 0x3
 18538 0af2 08       		.uleb128 0x8
 18539 0af3 00       		.byte	0
 18540 0af4 00       		.byte	0
 18541 0af5 9A01     		.uleb128 0x9a
 18542 0af7 3A       		.uleb128 0x3a
 18543 0af8 00       		.byte	0
 18544 0af9 3A       		.uleb128 0x3a
 18545 0afa 0B       		.uleb128 0xb
 18546 0afb 3B       		.uleb128 0x3b
 18547 0afc 0B       		.uleb128 0xb
 18548 0afd 39       		.uleb128 0x39
GAS LISTING x64lin/../common/event.s 			page 469


 18549 0afe 0B       		.uleb128 0xb
 18550 0aff 18       		.uleb128 0x18
 18551 0b00 13       		.uleb128 0x13
 18552 0b01 00       		.byte	0
 18553 0b02 00       		.byte	0
 18554 0b03 9B01     		.uleb128 0x9b
 18555 0b05 13       		.uleb128 0x13
 18556 0b06 01       		.byte	0x1
 18557 0b07 03       		.uleb128 0x3
 18558 0b08 0E       		.uleb128 0xe
 18559 0b09 0B       		.uleb128 0xb
 18560 0b0a 0B       		.uleb128 0xb
 18561 0b0b 3A       		.uleb128 0x3a
 18562 0b0c 0B       		.uleb128 0xb
 18563 0b0d 3B       		.uleb128 0x3b
 18564 0b0e 0B       		.uleb128 0xb
 18565 0b0f 01       		.uleb128 0x1
 18566 0b10 13       		.uleb128 0x13
 18567 0b11 00       		.byte	0
 18568 0b12 00       		.byte	0
 18569 0b13 9C01     		.uleb128 0x9c
 18570 0b15 0F       		.uleb128 0xf
 18571 0b16 00       		.byte	0
 18572 0b17 0B       		.uleb128 0xb
 18573 0b18 0B       		.uleb128 0xb
 18574 0b19 00       		.byte	0
 18575 0b1a 00       		.byte	0
 18576 0b1b 9D01     		.uleb128 0x9d
 18577 0b1d 17       		.uleb128 0x17
 18578 0b1e 01       		.byte	0x1
 18579 0b1f 0B       		.uleb128 0xb
 18580 0b20 0B       		.uleb128 0xb
 18581 0b21 3A       		.uleb128 0x3a
 18582 0b22 0B       		.uleb128 0xb
 18583 0b23 3B       		.uleb128 0x3b
 18584 0b24 0B       		.uleb128 0xb
 18585 0b25 39       		.uleb128 0x39
 18586 0b26 0B       		.uleb128 0xb
 18587 0b27 01       		.uleb128 0x1
 18588 0b28 13       		.uleb128 0x13
 18589 0b29 00       		.byte	0
 18590 0b2a 00       		.byte	0
 18591 0b2b 9E01     		.uleb128 0x9e
 18592 0b2d 13       		.uleb128 0x13
 18593 0b2e 01       		.byte	0x1
 18594 0b2f 03       		.uleb128 0x3
 18595 0b30 08       		.uleb128 0x8
 18596 0b31 0B       		.uleb128 0xb
 18597 0b32 0B       		.uleb128 0xb
 18598 0b33 3A       		.uleb128 0x3a
 18599 0b34 0B       		.uleb128 0xb
 18600 0b35 3B       		.uleb128 0x3b
 18601 0b36 0B       		.uleb128 0xb
 18602 0b37 39       		.uleb128 0x39
 18603 0b38 0B       		.uleb128 0xb
 18604 0b39 01       		.uleb128 0x1
 18605 0b3a 13       		.uleb128 0x13
GAS LISTING x64lin/../common/event.s 			page 470


 18606 0b3b 00       		.byte	0
 18607 0b3c 00       		.byte	0
 18608 0b3d 9F01     		.uleb128 0x9f
 18609 0b3f 26       		.uleb128 0x26
 18610 0b40 00       		.byte	0
 18611 0b41 00       		.byte	0
 18612 0b42 00       		.byte	0
 18613 0b43 A001     		.uleb128 0xa0
 18614 0b45 13       		.uleb128 0x13
 18615 0b46 01       		.byte	0x1
 18616 0b47 0B       		.uleb128 0xb
 18617 0b48 0B       		.uleb128 0xb
 18618 0b49 3A       		.uleb128 0x3a
 18619 0b4a 0B       		.uleb128 0xb
 18620 0b4b 3B       		.uleb128 0x3b
 18621 0b4c 0B       		.uleb128 0xb
 18622 0b4d 39       		.uleb128 0x39
 18623 0b4e 0B       		.uleb128 0xb
 18624 0b4f 01       		.uleb128 0x1
 18625 0b50 13       		.uleb128 0x13
 18626 0b51 00       		.byte	0
 18627 0b52 00       		.byte	0
 18628 0b53 A101     		.uleb128 0xa1
 18629 0b55 15       		.uleb128 0x15
 18630 0b56 00       		.byte	0
 18631 0b57 00       		.byte	0
 18632 0b58 00       		.byte	0
 18633 0b59 A201     		.uleb128 0xa2
 18634 0b5b 2E       		.uleb128 0x2e
 18635 0b5c 01       		.byte	0x1
 18636 0b5d 3F       		.uleb128 0x3f
 18637 0b5e 19       		.uleb128 0x19
 18638 0b5f 03       		.uleb128 0x3
 18639 0b60 08       		.uleb128 0x8
 18640 0b61 3A       		.uleb128 0x3a
 18641 0b62 0B       		.uleb128 0xb
 18642 0b63 3B       		.uleb128 0x3b
 18643 0b64 05       		.uleb128 0x5
 18644 0b65 39       		.uleb128 0x39
 18645 0b66 0B       		.uleb128 0xb
 18646 0b67 49       		.uleb128 0x49
 18647 0b68 13       		.uleb128 0x13
 18648 0b69 3C       		.uleb128 0x3c
 18649 0b6a 19       		.uleb128 0x19
 18650 0b6b 01       		.uleb128 0x1
 18651 0b6c 13       		.uleb128 0x13
 18652 0b6d 00       		.byte	0
 18653 0b6e 00       		.byte	0
 18654 0b6f A301     		.uleb128 0xa3
 18655 0b71 2E       		.uleb128 0x2e
 18656 0b72 01       		.byte	0x1
 18657 0b73 3F       		.uleb128 0x3f
 18658 0b74 19       		.uleb128 0x19
 18659 0b75 03       		.uleb128 0x3
 18660 0b76 0E       		.uleb128 0xe
 18661 0b77 3A       		.uleb128 0x3a
 18662 0b78 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 471


 18663 0b79 3B       		.uleb128 0x3b
 18664 0b7a 05       		.uleb128 0x5
 18665 0b7b 39       		.uleb128 0x39
 18666 0b7c 0B       		.uleb128 0xb
 18667 0b7d 8701     		.uleb128 0x87
 18668 0b7f 19       		.uleb128 0x19
 18669 0b80 3C       		.uleb128 0x3c
 18670 0b81 19       		.uleb128 0x19
 18671 0b82 01       		.uleb128 0x1
 18672 0b83 13       		.uleb128 0x13
 18673 0b84 00       		.byte	0
 18674 0b85 00       		.byte	0
 18675 0b86 A401     		.uleb128 0xa4
 18676 0b88 3B       		.uleb128 0x3b
 18677 0b89 00       		.byte	0
 18678 0b8a 03       		.uleb128 0x3
 18679 0b8b 0E       		.uleb128 0xe
 18680 0b8c 00       		.byte	0
 18681 0b8d 00       		.byte	0
 18682 0b8e A501     		.uleb128 0xa5
 18683 0b90 16       		.uleb128 0x16
 18684 0b91 00       		.byte	0
 18685 0b92 03       		.uleb128 0x3
 18686 0b93 0E       		.uleb128 0xe
 18687 0b94 3A       		.uleb128 0x3a
 18688 0b95 0B       		.uleb128 0xb
 18689 0b96 3B       		.uleb128 0x3b
 18690 0b97 0B       		.uleb128 0xb
 18691 0b98 39       		.uleb128 0x39
 18692 0b99 0B       		.uleb128 0xb
 18693 0b9a 00       		.byte	0
 18694 0b9b 00       		.byte	0
 18695 0b9c A601     		.uleb128 0xa6
 18696 0b9e 39       		.uleb128 0x39
 18697 0b9f 01       		.byte	0x1
 18698 0ba0 03       		.uleb128 0x3
 18699 0ba1 0E       		.uleb128 0xe
 18700 0ba2 3A       		.uleb128 0x3a
 18701 0ba3 0B       		.uleb128 0xb
 18702 0ba4 3B       		.uleb128 0x3b
 18703 0ba5 0B       		.uleb128 0xb
 18704 0ba6 39       		.uleb128 0x39
 18705 0ba7 0B       		.uleb128 0xb
 18706 0ba8 00       		.byte	0
 18707 0ba9 00       		.byte	0
 18708 0baa A701     		.uleb128 0xa7
 18709 0bac 39       		.uleb128 0x39
 18710 0bad 01       		.byte	0x1
 18711 0bae 03       		.uleb128 0x3
 18712 0baf 08       		.uleb128 0x8
 18713 0bb0 3A       		.uleb128 0x3a
 18714 0bb1 0B       		.uleb128 0xb
 18715 0bb2 3B       		.uleb128 0x3b
 18716 0bb3 0B       		.uleb128 0xb
 18717 0bb4 39       		.uleb128 0x39
 18718 0bb5 0B       		.uleb128 0xb
 18719 0bb6 8901     		.uleb128 0x89
GAS LISTING x64lin/../common/event.s 			page 472


 18720 0bb8 19       		.uleb128 0x19
 18721 0bb9 00       		.byte	0
 18722 0bba 00       		.byte	0
 18723 0bbb A801     		.uleb128 0xa8
 18724 0bbd 04       		.uleb128 0x4
 18725 0bbe 01       		.byte	0x1
 18726 0bbf 03       		.uleb128 0x3
 18727 0bc0 0E       		.uleb128 0xe
 18728 0bc1 6D       		.uleb128 0x6d
 18729 0bc2 19       		.uleb128 0x19
 18730 0bc3 3E       		.uleb128 0x3e
 18731 0bc4 0B       		.uleb128 0xb
 18732 0bc5 0B       		.uleb128 0xb
 18733 0bc6 0B       		.uleb128 0xb
 18734 0bc7 49       		.uleb128 0x49
 18735 0bc8 13       		.uleb128 0x13
 18736 0bc9 3A       		.uleb128 0x3a
 18737 0bca 0B       		.uleb128 0xb
 18738 0bcb 3B       		.uleb128 0x3b
 18739 0bcc 0B       		.uleb128 0xb
 18740 0bcd 39       		.uleb128 0x39
 18741 0bce 0B       		.uleb128 0xb
 18742 0bcf 01       		.uleb128 0x1
 18743 0bd0 13       		.uleb128 0x13
 18744 0bd1 00       		.byte	0
 18745 0bd2 00       		.byte	0
 18746 0bd3 A901     		.uleb128 0xa9
 18747 0bd5 13       		.uleb128 0x13
 18748 0bd6 01       		.byte	0x1
 18749 0bd7 03       		.uleb128 0x3
 18750 0bd8 0E       		.uleb128 0xe
 18751 0bd9 0B       		.uleb128 0xb
 18752 0bda 0B       		.uleb128 0xb
 18753 0bdb 3A       		.uleb128 0x3a
 18754 0bdc 0B       		.uleb128 0xb
 18755 0bdd 3B       		.uleb128 0x3b
 18756 0bde 0B       		.uleb128 0xb
 18757 0bdf 39       		.uleb128 0x39
 18758 0be0 0B       		.uleb128 0xb
 18759 0be1 1D       		.uleb128 0x1d
 18760 0be2 13       		.uleb128 0x13
 18761 0be3 01       		.uleb128 0x1
 18762 0be4 13       		.uleb128 0x13
 18763 0be5 00       		.byte	0
 18764 0be6 00       		.byte	0
 18765 0be7 AA01     		.uleb128 0xaa
 18766 0be9 0D       		.uleb128 0xd
 18767 0bea 00       		.byte	0
 18768 0beb 03       		.uleb128 0x3
 18769 0bec 0E       		.uleb128 0xe
 18770 0bed 49       		.uleb128 0x49
 18771 0bee 13       		.uleb128 0x13
 18772 0bef 38       		.uleb128 0x38
 18773 0bf0 0B       		.uleb128 0xb
 18774 0bf1 34       		.uleb128 0x34
 18775 0bf2 19       		.uleb128 0x19
 18776 0bf3 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 473


 18777 0bf4 00       		.byte	0
 18778 0bf5 AB01     		.uleb128 0xab
 18779 0bf7 2E       		.uleb128 0x2e
 18780 0bf8 01       		.byte	0x1
 18781 0bf9 3F       		.uleb128 0x3f
 18782 0bfa 19       		.uleb128 0x19
 18783 0bfb 03       		.uleb128 0x3
 18784 0bfc 0E       		.uleb128 0xe
 18785 0bfd 3A       		.uleb128 0x3a
 18786 0bfe 0B       		.uleb128 0xb
 18787 0bff 3B       		.uleb128 0x3b
 18788 0c00 0B       		.uleb128 0xb
 18789 0c01 39       		.uleb128 0x39
 18790 0c02 0B       		.uleb128 0xb
 18791 0c03 6E       		.uleb128 0x6e
 18792 0c04 0E       		.uleb128 0xe
 18793 0c05 4C       		.uleb128 0x4c
 18794 0c06 0B       		.uleb128 0xb
 18795 0c07 1D       		.uleb128 0x1d
 18796 0c08 13       		.uleb128 0x13
 18797 0c09 3C       		.uleb128 0x3c
 18798 0c0a 19       		.uleb128 0x19
 18799 0c0b 8B01     		.uleb128 0x8b
 18800 0c0d 0B       		.uleb128 0xb
 18801 0c0e 64       		.uleb128 0x64
 18802 0c0f 13       		.uleb128 0x13
 18803 0c10 00       		.byte	0
 18804 0c11 00       		.byte	0
 18805 0c12 AC01     		.uleb128 0xac
 18806 0c14 0F       		.uleb128 0xf
 18807 0c15 00       		.byte	0
 18808 0c16 0B       		.uleb128 0xb
 18809 0c17 0B       		.uleb128 0xb
 18810 0c18 03       		.uleb128 0x3
 18811 0c19 0E       		.uleb128 0xe
 18812 0c1a 49       		.uleb128 0x49
 18813 0c1b 13       		.uleb128 0x13
 18814 0c1c 00       		.byte	0
 18815 0c1d 00       		.byte	0
 18816 0c1e AD01     		.uleb128 0xad
 18817 0c20 05       		.uleb128 0x5
 18818 0c21 00       		.byte	0
 18819 0c22 03       		.uleb128 0x3
 18820 0c23 0E       		.uleb128 0xe
 18821 0c24 3A       		.uleb128 0x3a
 18822 0c25 0B       		.uleb128 0xb
 18823 0c26 3B       		.uleb128 0x3b
 18824 0c27 0B       		.uleb128 0xb
 18825 0c28 39       		.uleb128 0x39
 18826 0c29 0B       		.uleb128 0xb
 18827 0c2a 49       		.uleb128 0x49
 18828 0c2b 13       		.uleb128 0x13
 18829 0c2c 00       		.byte	0
 18830 0c2d 00       		.byte	0
 18831 0c2e AE01     		.uleb128 0xae
 18832 0c30 2E       		.uleb128 0x2e
 18833 0c31 01       		.byte	0x1
GAS LISTING x64lin/../common/event.s 			page 474


 18834 0c32 3F       		.uleb128 0x3f
 18835 0c33 19       		.uleb128 0x19
 18836 0c34 03       		.uleb128 0x3
 18837 0c35 0E       		.uleb128 0xe
 18838 0c36 3A       		.uleb128 0x3a
 18839 0c37 0B       		.uleb128 0xb
 18840 0c38 3B       		.uleb128 0x3b
 18841 0c39 0B       		.uleb128 0xb
 18842 0c3a 39       		.uleb128 0x39
 18843 0c3b 0B       		.uleb128 0xb
 18844 0c3c 6E       		.uleb128 0x6e
 18845 0c3d 0E       		.uleb128 0xe
 18846 0c3e 55       		.uleb128 0x55
 18847 0c3f 17       		.uleb128 0x17
 18848 0c40 40       		.uleb128 0x40
 18849 0c41 18       		.uleb128 0x18
 18850 0c42 7A       		.uleb128 0x7a
 18851 0c43 19       		.uleb128 0x19
 18852 0c44 01       		.uleb128 0x1
 18853 0c45 13       		.uleb128 0x13
 18854 0c46 00       		.byte	0
 18855 0c47 00       		.byte	0
 18856 0c48 AF01     		.uleb128 0xaf
 18857 0c4a 34       		.uleb128 0x34
 18858 0c4b 00       		.byte	0
 18859 0c4c 03       		.uleb128 0x3
 18860 0c4d 0E       		.uleb128 0xe
 18861 0c4e 3A       		.uleb128 0x3a
 18862 0c4f 0B       		.uleb128 0xb
 18863 0c50 3B       		.uleb128 0x3b
 18864 0c51 0B       		.uleb128 0xb
 18865 0c52 39       		.uleb128 0x39
 18866 0c53 0B       		.uleb128 0xb
 18867 0c54 49       		.uleb128 0x49
 18868 0c55 13       		.uleb128 0x13
 18869 0c56 02       		.uleb128 0x2
 18870 0c57 17       		.uleb128 0x17
 18871 0c58 B742     		.uleb128 0x2137
 18872 0c5a 17       		.uleb128 0x17
 18873 0c5b 00       		.byte	0
 18874 0c5c 00       		.byte	0
 18875 0c5d B001     		.uleb128 0xb0
 18876 0c5f 0B       		.uleb128 0xb
 18877 0c60 01       		.byte	0x1
 18878 0c61 31       		.uleb128 0x31
 18879 0c62 13       		.uleb128 0x13
 18880 0c63 55       		.uleb128 0x55
 18881 0c64 17       		.uleb128 0x17
 18882 0c65 01       		.uleb128 0x1
 18883 0c66 13       		.uleb128 0x13
 18884 0c67 00       		.byte	0
 18885 0c68 00       		.byte	0
 18886 0c69 B101     		.uleb128 0xb1
 18887 0c6b 48       		.uleb128 0x48
 18888 0c6c 01       		.byte	0x1
 18889 0c6d 7D       		.uleb128 0x7d
 18890 0c6e 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 475


 18891 0c6f 8201     		.uleb128 0x82
 18892 0c71 19       		.uleb128 0x19
 18893 0c72 7F       		.uleb128 0x7f
 18894 0c73 13       		.uleb128 0x13
 18895 0c74 00       		.byte	0
 18896 0c75 00       		.byte	0
 18897 0c76 B201     		.uleb128 0xb2
 18898 0c78 34       		.uleb128 0x34
 18899 0c79 00       		.byte	0
 18900 0c7a 03       		.uleb128 0x3
 18901 0c7b 08       		.uleb128 0x8
 18902 0c7c 3A       		.uleb128 0x3a
 18903 0c7d 0B       		.uleb128 0xb
 18904 0c7e 3B       		.uleb128 0x3b
 18905 0c7f 0B       		.uleb128 0xb
 18906 0c80 39       		.uleb128 0x39
 18907 0c81 0B       		.uleb128 0xb
 18908 0c82 49       		.uleb128 0x49
 18909 0c83 13       		.uleb128 0x13
 18910 0c84 00       		.byte	0
 18911 0c85 00       		.byte	0
 18912 0c86 B301     		.uleb128 0xb3
 18913 0c88 2E       		.uleb128 0x2e
 18914 0c89 00       		.byte	0
 18915 0c8a 03       		.uleb128 0x3
 18916 0c8b 0E       		.uleb128 0xe
 18917 0c8c 3A       		.uleb128 0x3a
 18918 0c8d 0B       		.uleb128 0xb
 18919 0c8e 3B       		.uleb128 0x3b
 18920 0c8f 05       		.uleb128 0x5
 18921 0c90 39       		.uleb128 0x39
 18922 0c91 0B       		.uleb128 0xb
 18923 0c92 49       		.uleb128 0x49
 18924 0c93 13       		.uleb128 0x13
 18925 0c94 20       		.uleb128 0x20
 18926 0c95 0B       		.uleb128 0xb
 18927 0c96 00       		.byte	0
 18928 0c97 00       		.byte	0
 18929 0c98 B401     		.uleb128 0xb4
 18930 0c9a 2E       		.uleb128 0x2e
 18931 0c9b 01       		.byte	0x1
 18932 0c9c 3F       		.uleb128 0x3f
 18933 0c9d 19       		.uleb128 0x19
 18934 0c9e 03       		.uleb128 0x3
 18935 0c9f 0E       		.uleb128 0xe
 18936 0ca0 3A       		.uleb128 0x3a
 18937 0ca1 0B       		.uleb128 0xb
 18938 0ca2 3B       		.uleb128 0x3b
 18939 0ca3 0B       		.uleb128 0xb
 18940 0ca4 39       		.uleb128 0x39
 18941 0ca5 0B       		.uleb128 0xb
 18942 0ca6 6E       		.uleb128 0x6e
 18943 0ca7 0E       		.uleb128 0xe
 18944 0ca8 49       		.uleb128 0x49
 18945 0ca9 13       		.uleb128 0x13
 18946 0caa 20       		.uleb128 0x20
 18947 0cab 0B       		.uleb128 0xb
GAS LISTING x64lin/../common/event.s 			page 476


 18948 0cac 01       		.uleb128 0x1
 18949 0cad 13       		.uleb128 0x13
 18950 0cae 00       		.byte	0
 18951 0caf 00       		.byte	0
 18952 0cb0 00       		.byte	0
 18953              		.section	.debug_loclists,"",@progbits
 18954 0000 F80F0000 		.long	.Ldebug_loc3-.Ldebug_loc2
 18955              	.Ldebug_loc2:
 18956 0004 0500     		.value	0x5
 18957 0006 08       		.byte	0x8
 18958 0007 00       		.byte	0
 18959 0008 00000000 		.long	0
 18960              	.Ldebug_loc0:
 18961              	.LVUS1:
 18962 000c 00       		.uleb128 0
 18963 000d 00       		.uleb128 .LVU13
 18964 000e 00       		.uleb128 .LVU13
 18965 000f 00       		.uleb128 .LVU62
 18966 0010 00       		.uleb128 .LVU62
 18967 0011 00       		.uleb128 .LVU64
 18968 0012 00       		.uleb128 .LVU64
 18969 0013 00       		.uleb128 .LVU66
 18970 0014 00       		.uleb128 .LVU66
 18971 0015 00       		.uleb128 .LVU66
 18972 0016 00       		.uleb128 .LVU66
 18973 0017 00       		.uleb128 0
 18974 0018 00       		.uleb128 0
 18975 0019 00       		.uleb128 0
 18976              	.LLST1:
 18977 001a 06       		.byte	0x6
 18978 001b 00000000 		.quad	.LVL0
 18978      00000000 
 18979 0023 04       		.byte	0x4
 18980 0024 00       		.uleb128 .LVL0-.LVL0
 18981 0025 1B       		.uleb128 .LVL3-.LVL0
 18982 0026 01       		.uleb128 0x1
 18983 0027 55       		.byte	0x55
 18984 0028 04       		.byte	0x4
 18985 0029 1B       		.uleb128 .LVL3-.LVL0
 18986 002a 66       		.uleb128 .LVL13-.LVL0
 18987 002b 01       		.uleb128 0x1
 18988 002c 53       		.byte	0x53
 18989 002d 04       		.byte	0x4
 18990 002e 66       		.uleb128 .LVL13-.LVL0
 18991 002f 69       		.uleb128 .LVL15-.LVL0
 18992 0030 04       		.uleb128 0x4
 18993 0031 7C       		.byte	0x7c
 18994 0032 B07F     		.sleb128 -80
 18995 0034 9F       		.byte	0x9f
 18996 0035 04       		.byte	0x4
 18997 0036 69       		.uleb128 .LVL15-.LVL0
 18998 0037 73       		.uleb128 .LVL16-1-.LVL0
 18999 0038 04       		.uleb128 0x4
 19000 0039 75       		.byte	0x75
 19001 003a B07F     		.sleb128 -80
 19002 003c 9F       		.byte	0x9f
 19003 003d 04       		.byte	0x4
GAS LISTING x64lin/../common/event.s 			page 477


 19004 003e 73       		.uleb128 .LVL16-1-.LVL0
 19005 003f 74       		.uleb128 .LVL16-.LVL0
 19006 0040 04       		.uleb128 0x4
 19007 0041 A3       		.byte	0xa3
 19008 0042 01       		.uleb128 0x1
 19009 0043 55       		.byte	0x55
 19010 0044 9F       		.byte	0x9f
 19011 0045 04       		.byte	0x4
 19012 0046 74       		.uleb128 .LVL16-.LVL0
 19013 0047 8705     		.uleb128 .LHOTE1-.LVL0
 19014 0049 01       		.uleb128 0x1
 19015 004a 53       		.byte	0x53
 19016 004b 08       		.byte	0x8
 19017 004c 00000000 		.quad	.LFSB5359
 19017      00000000 
 19018 0054 13       		.uleb128 .LCOLDE1-.LFSB5359
 19019 0055 01       		.uleb128 0x1
 19020 0056 53       		.byte	0x53
 19021 0057 00       		.byte	0
 19022              	.LVUS2:
 19023 0058 00       		.uleb128 0
 19024 0059 00       		.uleb128 .LVU16
 19025 005a 00       		.uleb128 .LVU16
 19026 005b 00       		.uleb128 .LVU63
 19027 005c 00       		.uleb128 .LVU63
 19028 005d 00       		.uleb128 .LVU66
 19029 005e 00       		.uleb128 .LVU66
 19030 005f 00       		.uleb128 .LVU225
 19031 0060 00       		.uleb128 .LVU225
 19032 0061 00       		.uleb128 0
 19033 0062 00       		.uleb128 0
 19034 0063 00       		.uleb128 0
 19035              	.LLST2:
 19036 0064 06       		.byte	0x6
 19037 0065 00000000 		.quad	.LVL0
 19037      00000000 
 19038 006d 04       		.byte	0x4
 19039 006e 00       		.uleb128 .LVL0-.LVL0
 19040 006f 23       		.uleb128 .LVL4-1-.LVL0
 19041 0070 02       		.uleb128 0x2
 19042 0071 74       		.byte	0x74
 19043 0072 00       		.sleb128 0
 19044 0073 04       		.byte	0x4
 19045 0074 23       		.uleb128 .LVL4-1-.LVL0
 19046 0075 67       		.uleb128 .LVL14-.LVL0
 19047 0076 02       		.uleb128 0x2
 19048 0077 76       		.byte	0x76
 19049 0078 00       		.sleb128 0
 19050 0079 04       		.byte	0x4
 19051 007a 67       		.uleb128 .LVL14-.LVL0
 19052 007b 74       		.uleb128 .LVL16-.LVL0
 19053 007c 03       		.uleb128 0x3
 19054 007d A3       		.byte	0xa3
 19055 007e 01       		.uleb128 0x1
 19056 007f 54       		.byte	0x54
 19057 0080 04       		.byte	0x4
 19058 0081 74       		.uleb128 .LVL16-.LVL0
GAS LISTING x64lin/../common/event.s 			page 478


 19059 0082 8205     		.uleb128 .LVL54-.LVL0
 19060 0084 02       		.uleb128 0x2
 19061 0085 76       		.byte	0x76
 19062 0086 00       		.sleb128 0
 19063 0087 04       		.byte	0x4
 19064 0088 8205     		.uleb128 .LVL54-.LVL0
 19065 008a 8705     		.uleb128 .LHOTE1-.LVL0
 19066 008c 03       		.uleb128 0x3
 19067 008d A3       		.byte	0xa3
 19068 008e 01       		.uleb128 0x1
 19069 008f 54       		.byte	0x54
 19070 0090 08       		.byte	0x8
 19071 0091 00000000 		.quad	.LFSB5359
 19071      00000000 
 19072 0099 13       		.uleb128 .LCOLDE1-.LFSB5359
 19073 009a 03       		.uleb128 0x3
 19074 009b A3       		.byte	0xa3
 19075 009c 01       		.uleb128 0x1
 19076 009d 54       		.byte	0x54
 19077 009e 00       		.byte	0
 19078              	.LVUS3:
 19079 009f 02       		.uleb128 .LVU4
 19080 00a0 00       		.uleb128 .LVU8
 19081 00a1 00       		.uleb128 .LVU8
 19082 00a2 00       		.uleb128 .LVU64
 19083 00a3 00       		.uleb128 .LVU64
 19084 00a4 00       		.uleb128 .LVU66
 19085 00a5 00       		.uleb128 .LVU66
 19086 00a6 00       		.uleb128 .LVU66
 19087 00a7 00       		.uleb128 .LVU66
 19088 00a8 00       		.uleb128 0
 19089 00a9 00       		.uleb128 0
 19090 00aa 00       		.uleb128 .LVU234
 19091              	.LLST3:
 19092 00ab 06       		.byte	0x6
 19093 00ac 00000000 		.quad	.LVL1
 19093      00000000 
 19094 00b4 04       		.byte	0x4
 19095 00b5 00       		.uleb128 .LVL1-.LVL1
 19096 00b6 0C       		.uleb128 .LVL2-.LVL1
 19097 00b7 06       		.uleb128 0x6
 19098 00b8 75       		.byte	0x75
 19099 00b9 D000     		.sleb128 80
 19100 00bb 9F       		.byte	0x9f
 19101 00bc 93       		.byte	0x93
 19102 00bd 08       		.uleb128 0x8
 19103 00be 04       		.byte	0x4
 19104 00bf 0C       		.uleb128 .LVL2-.LVL1
 19105 00c0 65       		.uleb128 .LVL15-.LVL1
 19106 00c1 03       		.uleb128 0x3
 19107 00c2 5C       		.byte	0x5c
 19108 00c3 93       		.byte	0x93
 19109 00c4 08       		.uleb128 0x8
 19110 00c5 04       		.byte	0x4
 19111 00c6 65       		.uleb128 .LVL15-.LVL1
 19112 00c7 6F       		.uleb128 .LVL16-1-.LVL1
 19113 00c8 03       		.uleb128 0x3
GAS LISTING x64lin/../common/event.s 			page 479


 19114 00c9 55       		.byte	0x55
 19115 00ca 93       		.byte	0x93
 19116 00cb 08       		.uleb128 0x8
 19117 00cc 04       		.byte	0x4
 19118 00cd 6F       		.uleb128 .LVL16-1-.LVL1
 19119 00ce 70       		.uleb128 .LVL16-.LVL1
 19120 00cf 08       		.uleb128 0x8
 19121 00d0 A3       		.byte	0xa3
 19122 00d1 01       		.uleb128 0x1
 19123 00d2 55       		.byte	0x55
 19124 00d3 23       		.byte	0x23
 19125 00d4 50       		.uleb128 0x50
 19126 00d5 9F       		.byte	0x9f
 19127 00d6 93       		.byte	0x93
 19128 00d7 08       		.uleb128 0x8
 19129 00d8 04       		.byte	0x4
 19130 00d9 70       		.uleb128 .LVL16-.LVL1
 19131 00da 8305     		.uleb128 .LHOTE1-.LVL1
 19132 00dc 03       		.uleb128 0x3
 19133 00dd 5C       		.byte	0x5c
 19134 00de 93       		.byte	0x93
 19135 00df 08       		.uleb128 0x8
 19136 00e0 08       		.byte	0x8
 19137 00e1 00000000 		.quad	.LFSB5359
 19137      00000000 
 19138 00e9 0B       		.uleb128 .LVL56-.LFSB5359
 19139 00ea 03       		.uleb128 0x3
 19140 00eb 5C       		.byte	0x5c
 19141 00ec 93       		.byte	0x93
 19142 00ed 08       		.uleb128 0x8
 19143 00ee 00       		.byte	0
 19144              	.LVUS5:
 19145 00ef 01       		.uleb128 .LVU3
 19146 00f0 00       		.uleb128 .LVU8
 19147 00f1 00       		.uleb128 .LVU8
 19148 00f2 00       		.uleb128 .LVU18
 19149 00f3 00       		.uleb128 .LVU218
 19150 00f4 00       		.uleb128 .LVU221
 19151              	.LLST5:
 19152 00f5 06       		.byte	0x6
 19153 00f6 00000000 		.quad	.LVL1
 19153      00000000 
 19154 00fe 04       		.byte	0x4
 19155 00ff 00       		.uleb128 .LVL1-.LVL1
 19156 0100 0C       		.uleb128 .LVL2-.LVL1
 19157 0101 04       		.uleb128 0x4
 19158 0102 75       		.byte	0x75
 19159 0103 D000     		.sleb128 80
 19160 0105 9F       		.byte	0x9f
 19161 0106 04       		.byte	0x4
 19162 0107 0C       		.uleb128 .LVL2-.LVL1
 19163 0108 28       		.uleb128 .LVL5-.LVL1
 19164 0109 01       		.uleb128 0x1
 19165 010a 5C       		.byte	0x5c
 19166 010b 04       		.byte	0x4
 19167 010c E404     		.uleb128 .LVL51-.LVL1
 19168 010e EB04     		.uleb128 .LVL52-.LVL1
GAS LISTING x64lin/../common/event.s 			page 480


 19169 0110 01       		.uleb128 0x1
 19170 0111 5C       		.byte	0x5c
 19171 0112 00       		.byte	0
 19172              	.LVUS6:
 19173 0113 01       		.uleb128 .LVU3
 19174 0114 00       		.uleb128 .LVU18
 19175 0115 00       		.uleb128 .LVU218
 19176 0116 00       		.uleb128 .LVU221
 19177              	.LLST6:
 19178 0117 06       		.byte	0x6
 19179 0118 00000000 		.quad	.LVL1
 19179      00000000 
 19180 0120 04       		.byte	0x4
 19181 0121 00       		.uleb128 .LVL1-.LVL1
 19182 0122 28       		.uleb128 .LVL5-.LVL1
 19183 0123 06       		.uleb128 0x6
 19184 0124 A0       		.byte	0xa0
 19185 0125 00000000 		.long	.Ldebug_info0+29011
 19186 0129 00       		.sleb128 0
 19187 012a 04       		.byte	0x4
 19188 012b E404     		.uleb128 .LVL51-.LVL1
 19189 012d EB04     		.uleb128 .LVL52-.LVL1
 19190 012f 06       		.uleb128 0x6
 19191 0130 A0       		.byte	0xa0
 19192 0131 00000000 		.long	.Ldebug_info0+29011
 19193 0135 00       		.sleb128 0
 19194 0136 00       		.byte	0
 19195              	.LVUS7:
 19196 0137 02       		.uleb128 .LVU4
 19197 0138 00       		.uleb128 .LVU8
 19198 0139 00       		.uleb128 .LVU8
 19199 013a 00       		.uleb128 .LVU18
 19200 013b 00       		.uleb128 .LVU218
 19201 013c 00       		.uleb128 .LVU221
 19202              	.LLST7:
 19203 013d 06       		.byte	0x6
 19204 013e 00000000 		.quad	.LVL1
 19204      00000000 
 19205 0146 04       		.byte	0x4
 19206 0147 00       		.uleb128 .LVL1-.LVL1
 19207 0148 0C       		.uleb128 .LVL2-.LVL1
 19208 0149 04       		.uleb128 0x4
 19209 014a 75       		.byte	0x75
 19210 014b D000     		.sleb128 80
 19211 014d 9F       		.byte	0x9f
 19212 014e 04       		.byte	0x4
 19213 014f 0C       		.uleb128 .LVL2-.LVL1
 19214 0150 28       		.uleb128 .LVL5-.LVL1
 19215 0151 01       		.uleb128 0x1
 19216 0152 5C       		.byte	0x5c
 19217 0153 04       		.byte	0x4
 19218 0154 E404     		.uleb128 .LVL51-.LVL1
 19219 0156 EB04     		.uleb128 .LVL52-.LVL1
 19220 0158 01       		.uleb128 0x1
 19221 0159 5C       		.byte	0x5c
 19222 015a 00       		.byte	0
 19223              	.LVUS8:
GAS LISTING x64lin/../common/event.s 			page 481


 19224 015b 00       		.uleb128 .LVU16
 19225 015c 00       		.uleb128 .LVU25
 19226 015d 00       		.uleb128 .LVU218
 19227 015e 00       		.uleb128 .LVU221
 19228              	.LLST8:
 19229 015f 06       		.byte	0x6
 19230 0160 00000000 		.quad	.LVL4
 19230      00000000 
 19231 0168 04       		.byte	0x4
 19232 0169 00       		.uleb128 .LVL4-.LVL4
 19233 016a 10       		.uleb128 .LVL6-.LVL4
 19234 016b 01       		.uleb128 0x1
 19235 016c 50       		.byte	0x50
 19236 016d 04       		.byte	0x4
 19237 016e C404     		.uleb128 .LVL51-.LVL4
 19238 0170 CA04     		.uleb128 .LVL52-1-.LVL4
 19239 0172 01       		.uleb128 0x1
 19240 0173 50       		.byte	0x50
 19241 0174 00       		.byte	0
 19242              	.LVUS10:
 19243 0175 00       		.uleb128 .LVU8
 19244 0176 00       		.uleb128 .LVU16
 19245              	.LLST10:
 19246 0177 08       		.byte	0x8
 19247 0178 00000000 		.quad	.LVL2
 19247      00000000 
 19248 0180 14       		.uleb128 .LVL4-.LVL2
 19249 0181 01       		.uleb128 0x1
 19250 0182 5C       		.byte	0x5c
 19251 0183 00       		.byte	0
 19252              	.LVUS12:
 19253 0184 02       		.uleb128 .LVU20
 19254 0185 03       		.uleb128 .LVU50
 19255 0186 00       		.uleb128 .LVU66
 19256 0187 00       		.uleb128 .LVU218
 19257 0188 00       		.uleb128 .LVU221
 19258 0189 00       		.uleb128 .LVU225
 19259 018a 00       		.uleb128 .LVU225
 19260 018b 00       		.uleb128 0
 19261 018c 00       		.uleb128 0
 19262 018d 00       		.uleb128 0
 19263              	.LLST12:
 19264 018e 06       		.byte	0x6
 19265 018f 00000000 		.quad	.LVL5
 19265      00000000 
 19266 0197 04       		.byte	0x4
 19267 0198 00       		.uleb128 .LVL5-.LVL5
 19268 0199 29       		.uleb128 .LVL11-.LVL5
 19269 019a 01       		.uleb128 0x1
 19270 019b 56       		.byte	0x56
 19271 019c 04       		.byte	0x4
 19272 019d 48       		.uleb128 .LVL16-.LVL5
 19273 019e BC04     		.uleb128 .LVL51-.LVL5
 19274 01a0 01       		.uleb128 0x1
 19275 01a1 56       		.byte	0x56
 19276 01a2 04       		.byte	0x4
 19277 01a3 C304     		.uleb128 .LVL52-.LVL5
GAS LISTING x64lin/../common/event.s 			page 482


 19278 01a5 D604     		.uleb128 .LVL54-.LVL5
 19279 01a7 01       		.uleb128 0x1
 19280 01a8 56       		.byte	0x56
 19281 01a9 04       		.byte	0x4
 19282 01aa D604     		.uleb128 .LVL54-.LVL5
 19283 01ac DB04     		.uleb128 .LHOTE1-.LVL5
 19284 01ae 04       		.uleb128 0x4
 19285 01af A3       		.byte	0xa3
 19286 01b0 01       		.uleb128 0x1
 19287 01b1 54       		.byte	0x54
 19288 01b2 9F       		.byte	0x9f
 19289 01b3 08       		.byte	0x8
 19290 01b4 00000000 		.quad	.LFSB5359
 19290      00000000 
 19291 01bc 13       		.uleb128 .LCOLDE1-.LFSB5359
 19292 01bd 04       		.uleb128 0x4
 19293 01be A3       		.byte	0xa3
 19294 01bf 01       		.uleb128 0x1
 19295 01c0 54       		.byte	0x54
 19296 01c1 9F       		.byte	0x9f
 19297 01c2 00       		.byte	0
 19298              	.LVUS13:
 19299 01c3 02       		.uleb128 .LVU20
 19300 01c4 03       		.uleb128 .LVU50
 19301 01c5 00       		.uleb128 .LVU66
 19302 01c6 00       		.uleb128 .LVU218
 19303 01c7 00       		.uleb128 .LVU221
 19304 01c8 00       		.uleb128 0
 19305 01c9 00       		.uleb128 0
 19306 01ca 00       		.uleb128 0
 19307              	.LLST13:
 19308 01cb 06       		.byte	0x6
 19309 01cc 00000000 		.quad	.LVL5
 19309      00000000 
 19310 01d4 04       		.byte	0x4
 19311 01d5 00       		.uleb128 .LVL5-.LVL5
 19312 01d6 29       		.uleb128 .LVL11-.LVL5
 19313 01d7 01       		.uleb128 0x1
 19314 01d8 53       		.byte	0x53
 19315 01d9 04       		.byte	0x4
 19316 01da 48       		.uleb128 .LVL16-.LVL5
 19317 01db BC04     		.uleb128 .LVL51-.LVL5
 19318 01dd 01       		.uleb128 0x1
 19319 01de 53       		.byte	0x53
 19320 01df 04       		.byte	0x4
 19321 01e0 C304     		.uleb128 .LVL52-.LVL5
 19322 01e2 DB04     		.uleb128 .LHOTE1-.LVL5
 19323 01e4 01       		.uleb128 0x1
 19324 01e5 53       		.byte	0x53
 19325 01e6 08       		.byte	0x8
 19326 01e7 00000000 		.quad	.LFSB5359
 19326      00000000 
 19327 01ef 13       		.uleb128 .LCOLDE1-.LFSB5359
 19328 01f0 01       		.uleb128 0x1
 19329 01f1 53       		.byte	0x53
 19330 01f2 00       		.byte	0
 19331              	.LVUS14:
GAS LISTING x64lin/../common/event.s 			page 483


 19332 01f3 03       		.uleb128 .LVU21
 19333 01f4 03       		.uleb128 .LVU50
 19334 01f5 00       		.uleb128 .LVU66
 19335 01f6 00       		.uleb128 .LVU218
 19336 01f7 00       		.uleb128 .LVU221
 19337 01f8 00       		.uleb128 .LVU225
 19338 01f9 00       		.uleb128 .LVU225
 19339 01fa 00       		.uleb128 0
 19340 01fb 00       		.uleb128 0
 19341 01fc 00       		.uleb128 0
 19342              	.LLST14:
 19343 01fd 06       		.byte	0x6
 19344 01fe 00000000 		.quad	.LVL5
 19344      00000000 
 19345 0206 04       		.byte	0x4
 19346 0207 00       		.uleb128 .LVL5-.LVL5
 19347 0208 29       		.uleb128 .LVL11-.LVL5
 19348 0209 01       		.uleb128 0x1
 19349 020a 56       		.byte	0x56
 19350 020b 04       		.byte	0x4
 19351 020c 48       		.uleb128 .LVL16-.LVL5
 19352 020d BC04     		.uleb128 .LVL51-.LVL5
 19353 020f 01       		.uleb128 0x1
 19354 0210 56       		.byte	0x56
 19355 0211 04       		.byte	0x4
 19356 0212 C304     		.uleb128 .LVL52-.LVL5
 19357 0214 D604     		.uleb128 .LVL54-.LVL5
 19358 0216 01       		.uleb128 0x1
 19359 0217 56       		.byte	0x56
 19360 0218 04       		.byte	0x4
 19361 0219 D604     		.uleb128 .LVL54-.LVL5
 19362 021b DB04     		.uleb128 .LHOTE1-.LVL5
 19363 021d 04       		.uleb128 0x4
 19364 021e A3       		.byte	0xa3
 19365 021f 01       		.uleb128 0x1
 19366 0220 54       		.byte	0x54
 19367 0221 9F       		.byte	0x9f
 19368 0222 08       		.byte	0x8
 19369 0223 00000000 		.quad	.LFSB5359
 19369      00000000 
 19370 022b 00       		.uleb128 .LVL55-.LFSB5359
 19371 022c 04       		.uleb128 0x4
 19372 022d A3       		.byte	0xa3
 19373 022e 01       		.uleb128 0x1
 19374 022f 54       		.byte	0x54
 19375 0230 9F       		.byte	0x9f
 19376 0231 00       		.byte	0
 19377              	.LVUS15:
 19378 0232 03       		.uleb128 .LVU21
 19379 0233 03       		.uleb128 .LVU50
 19380 0234 00       		.uleb128 .LVU66
 19381 0235 00       		.uleb128 .LVU218
 19382 0236 00       		.uleb128 .LVU221
 19383 0237 00       		.uleb128 0
 19384 0238 00       		.uleb128 0
 19385 0239 00       		.uleb128 0
 19386              	.LLST15:
GAS LISTING x64lin/../common/event.s 			page 484


 19387 023a 06       		.byte	0x6
 19388 023b 00000000 		.quad	.LVL5
 19388      00000000 
 19389 0243 04       		.byte	0x4
 19390 0244 00       		.uleb128 .LVL5-.LVL5
 19391 0245 29       		.uleb128 .LVL11-.LVL5
 19392 0246 01       		.uleb128 0x1
 19393 0247 53       		.byte	0x53
 19394 0248 04       		.byte	0x4
 19395 0249 48       		.uleb128 .LVL16-.LVL5
 19396 024a BC04     		.uleb128 .LVL51-.LVL5
 19397 024c 01       		.uleb128 0x1
 19398 024d 53       		.byte	0x53
 19399 024e 04       		.byte	0x4
 19400 024f C304     		.uleb128 .LVL52-.LVL5
 19401 0251 DB04     		.uleb128 .LHOTE1-.LVL5
 19402 0253 01       		.uleb128 0x1
 19403 0254 53       		.byte	0x53
 19404 0255 08       		.byte	0x8
 19405 0256 00000000 		.quad	.LFSB5359
 19405      00000000 
 19406 025e 00       		.uleb128 .LVL55-.LFSB5359
 19407 025f 01       		.uleb128 0x1
 19408 0260 53       		.byte	0x53
 19409 0261 00       		.byte	0
 19410              	.LVUS16:
 19411 0262 04       		.uleb128 .LVU22
 19412 0263 03       		.uleb128 .LVU50
 19413 0264 00       		.uleb128 .LVU66
 19414 0265 00       		.uleb128 .LVU218
 19415 0266 00       		.uleb128 .LVU221
 19416 0267 00       		.uleb128 .LVU225
 19417 0268 00       		.uleb128 .LVU225
 19418 0269 00       		.uleb128 0
 19419 026a 00       		.uleb128 0
 19420 026b 00       		.uleb128 0
 19421              	.LLST16:
 19422 026c 06       		.byte	0x6
 19423 026d 00000000 		.quad	.LVL5
 19423      00000000 
 19424 0275 04       		.byte	0x4
 19425 0276 00       		.uleb128 .LVL5-.LVL5
 19426 0277 29       		.uleb128 .LVL11-.LVL5
 19427 0278 01       		.uleb128 0x1
 19428 0279 56       		.byte	0x56
 19429 027a 04       		.byte	0x4
 19430 027b 48       		.uleb128 .LVL16-.LVL5
 19431 027c BC04     		.uleb128 .LVL51-.LVL5
 19432 027e 01       		.uleb128 0x1
 19433 027f 56       		.byte	0x56
 19434 0280 04       		.byte	0x4
 19435 0281 C304     		.uleb128 .LVL52-.LVL5
 19436 0283 D604     		.uleb128 .LVL54-.LVL5
 19437 0285 01       		.uleb128 0x1
 19438 0286 56       		.byte	0x56
 19439 0287 04       		.byte	0x4
 19440 0288 D604     		.uleb128 .LVL54-.LVL5
GAS LISTING x64lin/../common/event.s 			page 485


 19441 028a DB04     		.uleb128 .LHOTE1-.LVL5
 19442 028c 04       		.uleb128 0x4
 19443 028d A3       		.byte	0xa3
 19444 028e 01       		.uleb128 0x1
 19445 028f 54       		.byte	0x54
 19446 0290 9F       		.byte	0x9f
 19447 0291 08       		.byte	0x8
 19448 0292 00000000 		.quad	.LFSB5359
 19448      00000000 
 19449 029a 13       		.uleb128 .LCOLDE1-.LFSB5359
 19450 029b 04       		.uleb128 0x4
 19451 029c A3       		.byte	0xa3
 19452 029d 01       		.uleb128 0x1
 19453 029e 54       		.byte	0x54
 19454 029f 9F       		.byte	0x9f
 19455 02a0 00       		.byte	0
 19456              	.LVUS17:
 19457 02a1 04       		.uleb128 .LVU22
 19458 02a2 03       		.uleb128 .LVU50
 19459 02a3 00       		.uleb128 .LVU66
 19460 02a4 00       		.uleb128 .LVU218
 19461 02a5 00       		.uleb128 .LVU221
 19462 02a6 00       		.uleb128 0
 19463 02a7 00       		.uleb128 0
 19464 02a8 00       		.uleb128 0
 19465              	.LLST17:
 19466 02a9 06       		.byte	0x6
 19467 02aa 00000000 		.quad	.LVL5
 19467      00000000 
 19468 02b2 04       		.byte	0x4
 19469 02b3 00       		.uleb128 .LVL5-.LVL5
 19470 02b4 29       		.uleb128 .LVL11-.LVL5
 19471 02b5 01       		.uleb128 0x1
 19472 02b6 53       		.byte	0x53
 19473 02b7 04       		.byte	0x4
 19474 02b8 48       		.uleb128 .LVL16-.LVL5
 19475 02b9 BC04     		.uleb128 .LVL51-.LVL5
 19476 02bb 01       		.uleb128 0x1
 19477 02bc 53       		.byte	0x53
 19478 02bd 04       		.byte	0x4
 19479 02be C304     		.uleb128 .LVL52-.LVL5
 19480 02c0 DB04     		.uleb128 .LHOTE1-.LVL5
 19481 02c2 01       		.uleb128 0x1
 19482 02c3 53       		.byte	0x53
 19483 02c4 08       		.byte	0x8
 19484 02c5 00000000 		.quad	.LFSB5359
 19484      00000000 
 19485 02cd 13       		.uleb128 .LCOLDE1-.LFSB5359
 19486 02ce 01       		.uleb128 0x1
 19487 02cf 53       		.byte	0x53
 19488 02d0 00       		.byte	0
 19489              	.LVUS19:
 19490 02d1 00       		.uleb128 .LVU27
 19491 02d2 00       		.uleb128 .LVU45
 19492              	.LLST19:
 19493 02d3 08       		.byte	0x8
 19494 02d4 00000000 		.quad	.LVL7
GAS LISTING x64lin/../common/event.s 			page 486


 19494      00000000 
 19495 02dc 14       		.uleb128 .LVL10-.LVL7
 19496 02dd 01       		.uleb128 0x1
 19497 02de 56       		.byte	0x56
 19498 02df 00       		.byte	0
 19499              	.LVUS20:
 19500 02e0 00       		.uleb128 .LVU27
 19501 02e1 00       		.uleb128 .LVU40
 19502 02e2 00       		.uleb128 .LVU40
 19503 02e3 00       		.uleb128 .LVU45
 19504              	.LLST20:
 19505 02e4 06       		.byte	0x6
 19506 02e5 00000000 		.quad	.LVL7
 19506      00000000 
 19507 02ed 04       		.byte	0x4
 19508 02ee 00       		.uleb128 .LVL7-.LVL7
 19509 02ef 08       		.uleb128 .LVL8-.LVL7
 19510 02f0 01       		.uleb128 0x1
 19511 02f1 50       		.byte	0x50
 19512 02f2 04       		.byte	0x4
 19513 02f3 08       		.uleb128 .LVL8-.LVL7
 19514 02f4 14       		.uleb128 .LVL10-.LVL7
 19515 02f5 02       		.uleb128 0x2
 19516 02f6 73       		.byte	0x73
 19517 02f7 30       		.sleb128 48
 19518 02f8 00       		.byte	0
 19519              	.LVUS21:
 19520 02f9 00       		.uleb128 .LVU27
 19521 02fa 00       		.uleb128 .LVU45
 19522              	.LLST21:
 19523 02fb 08       		.byte	0x8
 19524 02fc 00000000 		.quad	.LVL7
 19524      00000000 
 19525 0304 14       		.uleb128 .LVL10-.LVL7
 19526 0305 01       		.uleb128 0x1
 19527 0306 53       		.byte	0x53
 19528 0307 00       		.byte	0
 19529              	.LVUS22:
 19530 0308 01       		.uleb128 .LVU28
 19531 0309 00       		.uleb128 .LVU45
 19532              	.LLST22:
 19533 030a 08       		.byte	0x8
 19534 030b 00000000 		.quad	.LVL7
 19534      00000000 
 19535 0313 14       		.uleb128 .LVL10-.LVL7
 19536 0314 01       		.uleb128 0x1
 19537 0315 56       		.byte	0x56
 19538 0316 00       		.byte	0
 19539              	.LVUS23:
 19540 0317 01       		.uleb128 .LVU28
 19541 0318 00       		.uleb128 .LVU40
 19542 0319 00       		.uleb128 .LVU40
 19543 031a 00       		.uleb128 .LVU45
 19544              	.LLST23:
 19545 031b 06       		.byte	0x6
 19546 031c 00000000 		.quad	.LVL7
 19546      00000000 
GAS LISTING x64lin/../common/event.s 			page 487


 19547 0324 04       		.byte	0x4
 19548 0325 00       		.uleb128 .LVL7-.LVL7
 19549 0326 08       		.uleb128 .LVL8-.LVL7
 19550 0327 01       		.uleb128 0x1
 19551 0328 50       		.byte	0x50
 19552 0329 04       		.byte	0x4
 19553 032a 08       		.uleb128 .LVL8-.LVL7
 19554 032b 14       		.uleb128 .LVL10-.LVL7
 19555 032c 02       		.uleb128 0x2
 19556 032d 73       		.byte	0x73
 19557 032e 30       		.sleb128 48
 19558 032f 00       		.byte	0
 19559              	.LVUS24:
 19560 0330 02       		.uleb128 .LVU29
 19561 0331 00       		.uleb128 .LVU45
 19562              	.LLST24:
 19563 0332 08       		.byte	0x8
 19564 0333 00000000 		.quad	.LVL7
 19564      00000000 
 19565 033b 14       		.uleb128 .LVL10-.LVL7
 19566 033c 01       		.uleb128 0x1
 19567 033d 56       		.byte	0x56
 19568 033e 00       		.byte	0
 19569              	.LVUS25:
 19570 033f 02       		.uleb128 .LVU29
 19571 0340 00       		.uleb128 .LVU40
 19572 0341 00       		.uleb128 .LVU40
 19573 0342 00       		.uleb128 .LVU45
 19574              	.LLST25:
 19575 0343 06       		.byte	0x6
 19576 0344 00000000 		.quad	.LVL7
 19576      00000000 
 19577 034c 04       		.byte	0x4
 19578 034d 00       		.uleb128 .LVL7-.LVL7
 19579 034e 08       		.uleb128 .LVL8-.LVL7
 19580 034f 01       		.uleb128 0x1
 19581 0350 50       		.byte	0x50
 19582 0351 04       		.byte	0x4
 19583 0352 08       		.uleb128 .LVL8-.LVL7
 19584 0353 14       		.uleb128 .LVL10-.LVL7
 19585 0354 02       		.uleb128 0x2
 19586 0355 73       		.byte	0x73
 19587 0356 30       		.sleb128 48
 19588 0357 00       		.byte	0
 19589              	.LVUS26:
 19590 0358 03       		.uleb128 .LVU30
 19591 0359 00       		.uleb128 .LVU45
 19592              	.LLST26:
 19593 035a 08       		.byte	0x8
 19594 035b 00000000 		.quad	.LVL7
 19594      00000000 
 19595 0363 14       		.uleb128 .LVL10-.LVL7
 19596 0364 01       		.uleb128 0x1
 19597 0365 56       		.byte	0x56
 19598 0366 00       		.byte	0
 19599              	.LVUS27:
 19600 0367 03       		.uleb128 .LVU30
GAS LISTING x64lin/../common/event.s 			page 488


 19601 0368 00       		.uleb128 .LVU40
 19602 0369 00       		.uleb128 .LVU40
 19603 036a 00       		.uleb128 .LVU45
 19604              	.LLST27:
 19605 036b 06       		.byte	0x6
 19606 036c 00000000 		.quad	.LVL7
 19606      00000000 
 19607 0374 04       		.byte	0x4
 19608 0375 00       		.uleb128 .LVL7-.LVL7
 19609 0376 08       		.uleb128 .LVL8-.LVL7
 19610 0377 01       		.uleb128 0x1
 19611 0378 50       		.byte	0x50
 19612 0379 04       		.byte	0x4
 19613 037a 08       		.uleb128 .LVL8-.LVL7
 19614 037b 14       		.uleb128 .LVL10-.LVL7
 19615 037c 02       		.uleb128 0x2
 19616 037d 73       		.byte	0x73
 19617 037e 30       		.sleb128 48
 19618 037f 00       		.byte	0
 19619              	.LVUS28:
 19620 0380 04       		.uleb128 .LVU31
 19621 0381 00       		.uleb128 .LVU45
 19622              	.LLST28:
 19623 0382 08       		.byte	0x8
 19624 0383 00000000 		.quad	.LVL7
 19624      00000000 
 19625 038b 14       		.uleb128 .LVL10-.LVL7
 19626 038c 01       		.uleb128 0x1
 19627 038d 56       		.byte	0x56
 19628 038e 00       		.byte	0
 19629              	.LVUS29:
 19630 038f 04       		.uleb128 .LVU31
 19631 0390 00       		.uleb128 .LVU40
 19632 0391 00       		.uleb128 .LVU40
 19633 0392 00       		.uleb128 .LVU45
 19634              	.LLST29:
 19635 0393 06       		.byte	0x6
 19636 0394 00000000 		.quad	.LVL7
 19636      00000000 
 19637 039c 04       		.byte	0x4
 19638 039d 00       		.uleb128 .LVL7-.LVL7
 19639 039e 08       		.uleb128 .LVL8-.LVL7
 19640 039f 01       		.uleb128 0x1
 19641 03a0 50       		.byte	0x50
 19642 03a1 04       		.byte	0x4
 19643 03a2 08       		.uleb128 .LVL8-.LVL7
 19644 03a3 14       		.uleb128 .LVL10-.LVL7
 19645 03a4 02       		.uleb128 0x2
 19646 03a5 73       		.byte	0x73
 19647 03a6 30       		.sleb128 48
 19648 03a7 00       		.byte	0
 19649              	.LVUS30:
 19650 03a8 05       		.uleb128 .LVU32
 19651 03a9 06       		.uleb128 .LVU33
 19652              	.LLST30:
 19653 03aa 08       		.byte	0x8
 19654 03ab 00000000 		.quad	.LVL7
GAS LISTING x64lin/../common/event.s 			page 489


 19654      00000000 
 19655 03b3 00       		.uleb128 .LVL7-.LVL7
 19656 03b4 01       		.uleb128 0x1
 19657 03b5 56       		.byte	0x56
 19658 03b6 00       		.byte	0
 19659              	.LVUS32:
 19660 03b7 06       		.uleb128 .LVU33
 19661 03b8 00       		.uleb128 .LVU41
 19662              	.LLST32:
 19663 03b9 08       		.byte	0x8
 19664 03ba 00000000 		.quad	.LVL7
 19664      00000000 
 19665 03c2 0C       		.uleb128 .LVL9-.LVL7
 19666 03c3 01       		.uleb128 0x1
 19667 03c4 56       		.byte	0x56
 19668 03c5 00       		.byte	0
 19669              	.LVUS33:
 19670 03c6 06       		.uleb128 .LVU33
 19671 03c7 00       		.uleb128 .LVU40
 19672 03c8 00       		.uleb128 .LVU40
 19673 03c9 00       		.uleb128 .LVU41
 19674              	.LLST33:
 19675 03ca 06       		.byte	0x6
 19676 03cb 00000000 		.quad	.LVL7
 19676      00000000 
 19677 03d3 04       		.byte	0x4
 19678 03d4 00       		.uleb128 .LVL7-.LVL7
 19679 03d5 08       		.uleb128 .LVL8-.LVL7
 19680 03d6 01       		.uleb128 0x1
 19681 03d7 50       		.byte	0x50
 19682 03d8 04       		.byte	0x4
 19683 03d9 08       		.uleb128 .LVL8-.LVL7
 19684 03da 0C       		.uleb128 .LVL9-.LVL7
 19685 03db 02       		.uleb128 0x2
 19686 03dc 73       		.byte	0x73
 19687 03dd 30       		.sleb128 48
 19688 03de 00       		.byte	0
 19689              	.LVUS34:
 19690 03df 08       		.uleb128 .LVU35
 19691 03e0 00       		.uleb128 .LVU41
 19692              	.LLST34:
 19693 03e1 08       		.byte	0x8
 19694 03e2 00000000 		.quad	.LVL7
 19694      00000000 
 19695 03ea 0C       		.uleb128 .LVL9-.LVL7
 19696 03eb 01       		.uleb128 0x1
 19697 03ec 56       		.byte	0x56
 19698 03ed 00       		.byte	0
 19699              	.LVUS35:
 19700 03ee 08       		.uleb128 .LVU35
 19701 03ef 00       		.uleb128 .LVU40
 19702 03f0 00       		.uleb128 .LVU40
 19703 03f1 00       		.uleb128 .LVU41
 19704              	.LLST35:
 19705 03f2 06       		.byte	0x6
 19706 03f3 00000000 		.quad	.LVL7
 19706      00000000 
GAS LISTING x64lin/../common/event.s 			page 490


 19707 03fb 04       		.byte	0x4
 19708 03fc 00       		.uleb128 .LVL7-.LVL7
 19709 03fd 08       		.uleb128 .LVL8-.LVL7
 19710 03fe 01       		.uleb128 0x1
 19711 03ff 50       		.byte	0x50
 19712 0400 04       		.byte	0x4
 19713 0401 08       		.uleb128 .LVL8-.LVL7
 19714 0402 0C       		.uleb128 .LVL9-.LVL7
 19715 0403 02       		.uleb128 0x2
 19716 0404 73       		.byte	0x73
 19717 0405 30       		.sleb128 48
 19718 0406 00       		.byte	0
 19719              	.LVUS36:
 19720 0407 09       		.uleb128 .LVU36
 19721 0408 0A       		.uleb128 .LVU37
 19722              	.LLST36:
 19723 0409 08       		.byte	0x8
 19724 040a 00000000 		.quad	.LVL7
 19724      00000000 
 19725 0412 00       		.uleb128 .LVL7-.LVL7
 19726 0413 01       		.uleb128 0x1
 19727 0414 56       		.byte	0x56
 19728 0415 00       		.byte	0
 19729              	.LVUS37:
 19730 0416 09       		.uleb128 .LVU36
 19731 0417 0A       		.uleb128 .LVU37
 19732              	.LLST37:
 19733 0418 08       		.byte	0x8
 19734 0419 00000000 		.quad	.LVL7
 19734      00000000 
 19735 0421 00       		.uleb128 .LVL7-.LVL7
 19736 0422 01       		.uleb128 0x1
 19737 0423 50       		.byte	0x50
 19738 0424 00       		.byte	0
 19739              	.LVUS38:
 19740 0425 00       		.uleb128 .LVU41
 19741 0426 02       		.uleb128 .LVU43
 19742              	.LLST38:
 19743 0427 08       		.byte	0x8
 19744 0428 00000000 		.quad	.LVL9
 19744      00000000 
 19745 0430 00       		.uleb128 .LVL9-.LVL9
 19746 0431 01       		.uleb128 0x1
 19747 0432 56       		.byte	0x56
 19748 0433 00       		.byte	0
 19749              	.LVUS39:
 19750 0434 00       		.uleb128 .LVU47
 19751 0435 03       		.uleb128 .LVU50
 19752              	.LLST39:
 19753 0436 08       		.byte	0x8
 19754 0437 00000000 		.quad	.LVL11
 19754      00000000 
 19755 043f 00       		.uleb128 .LVL11-.LVL11
 19756 0440 01       		.uleb128 0x1
 19757 0441 53       		.byte	0x53
 19758 0442 00       		.byte	0
 19759              	.LVUS40:
GAS LISTING x64lin/../common/event.s 			page 491


 19760 0443 01       		.uleb128 .LVU48
 19761 0444 03       		.uleb128 .LVU50
 19762              	.LLST40:
 19763 0445 08       		.byte	0x8
 19764 0446 00000000 		.quad	.LVL11
 19764      00000000 
 19765 044e 00       		.uleb128 .LVL11-.LVL11
 19766 044f 01       		.uleb128 0x1
 19767 0450 53       		.byte	0x53
 19768 0451 00       		.byte	0
 19769              	.LVUS41:
 19770 0452 02       		.uleb128 .LVU49
 19771 0453 03       		.uleb128 .LVU50
 19772              	.LLST41:
 19773 0454 08       		.byte	0x8
 19774 0455 00000000 		.quad	.LVL11
 19774      00000000 
 19775 045d 00       		.uleb128 .LVL11-.LVL11
 19776 045e 03       		.uleb128 0x3
 19777 045f 73       		.byte	0x73
 19778 0460 30       		.sleb128 48
 19779 0461 9F       		.byte	0x9f
 19780 0462 00       		.byte	0
 19781              	.LVUS42:
 19782 0463 02       		.uleb128 .LVU49
 19783 0464 03       		.uleb128 .LVU50
 19784              	.LLST42:
 19785 0465 08       		.byte	0x8
 19786 0466 00000000 		.quad	.LVL11
 19786      00000000 
 19787 046e 00       		.uleb128 .LVL11-.LVL11
 19788 046f 06       		.uleb128 0x6
 19789 0470 A0       		.byte	0xa0
 19790 0471 00000000 		.long	.Ldebug_info0+29926
 19791 0475 00       		.sleb128 0
 19792 0476 00       		.byte	0
 19793              	.LVUS44:
 19794 0477 00       		.uleb128 .LVU66
 19795 0478 00       		.uleb128 .LVU218
 19796 0479 00       		.uleb128 .LVU221
 19797 047a 00       		.uleb128 .LVU225
 19798 047b 00       		.uleb128 .LVU225
 19799 047c 00       		.uleb128 0
 19800 047d 00       		.uleb128 0
 19801 047e 00       		.uleb128 0
 19802              	.LLST44:
 19803 047f 06       		.byte	0x6
 19804 0480 00000000 		.quad	.LVL16
 19804      00000000 
 19805 0488 04       		.byte	0x4
 19806 0489 00       		.uleb128 .LVL16-.LVL16
 19807 048a F403     		.uleb128 .LVL51-.LVL16
 19808 048c 01       		.uleb128 0x1
 19809 048d 56       		.byte	0x56
 19810 048e 04       		.byte	0x4
 19811 048f FB03     		.uleb128 .LVL52-.LVL16
 19812 0491 8E04     		.uleb128 .LVL54-.LVL16
GAS LISTING x64lin/../common/event.s 			page 492


 19813 0493 01       		.uleb128 0x1
 19814 0494 56       		.byte	0x56
 19815 0495 04       		.byte	0x4
 19816 0496 8E04     		.uleb128 .LVL54-.LVL16
 19817 0498 9304     		.uleb128 .LHOTE1-.LVL16
 19818 049a 04       		.uleb128 0x4
 19819 049b A3       		.byte	0xa3
 19820 049c 01       		.uleb128 0x1
 19821 049d 54       		.byte	0x54
 19822 049e 9F       		.byte	0x9f
 19823 049f 08       		.byte	0x8
 19824 04a0 00000000 		.quad	.LFSB5359
 19824      00000000 
 19825 04a8 13       		.uleb128 .LCOLDE1-.LFSB5359
 19826 04a9 04       		.uleb128 0x4
 19827 04aa A3       		.byte	0xa3
 19828 04ab 01       		.uleb128 0x1
 19829 04ac 54       		.byte	0x54
 19830 04ad 9F       		.byte	0x9f
 19831 04ae 00       		.byte	0
 19832              	.LVUS45:
 19833 04af 00       		.uleb128 .LVU66
 19834 04b0 00       		.uleb128 .LVU218
 19835 04b1 00       		.uleb128 .LVU221
 19836 04b2 00       		.uleb128 0
 19837 04b3 00       		.uleb128 0
 19838 04b4 00       		.uleb128 0
 19839              	.LLST45:
 19840 04b5 06       		.byte	0x6
 19841 04b6 00000000 		.quad	.LVL16
 19841      00000000 
 19842 04be 04       		.byte	0x4
 19843 04bf 00       		.uleb128 .LVL16-.LVL16
 19844 04c0 F403     		.uleb128 .LVL51-.LVL16
 19845 04c2 01       		.uleb128 0x1
 19846 04c3 53       		.byte	0x53
 19847 04c4 04       		.byte	0x4
 19848 04c5 FB03     		.uleb128 .LVL52-.LVL16
 19849 04c7 9304     		.uleb128 .LHOTE1-.LVL16
 19850 04c9 01       		.uleb128 0x1
 19851 04ca 53       		.byte	0x53
 19852 04cb 08       		.byte	0x8
 19853 04cc 00000000 		.quad	.LFSB5359
 19853      00000000 
 19854 04d4 13       		.uleb128 .LCOLDE1-.LFSB5359
 19855 04d5 01       		.uleb128 0x1
 19856 04d6 53       		.byte	0x53
 19857 04d7 00       		.byte	0
 19858              	.LVUS47:
 19859 04d8 02       		.uleb128 .LVU68
 19860 04d9 00       		.uleb128 .LVU74
 19861              	.LLST47:
 19862 04da 08       		.byte	0x8
 19863 04db 00000000 		.quad	.LVL16
 19863      00000000 
 19864 04e3 23       		.uleb128 .LVL17-.LVL16
 19865 04e4 01       		.uleb128 0x1
GAS LISTING x64lin/../common/event.s 			page 493


 19866 04e5 53       		.byte	0x53
 19867 04e6 00       		.byte	0
 19868              	.LVUS48:
 19869 04e7 03       		.uleb128 .LVU69
 19870 04e8 00       		.uleb128 .LVU74
 19871              	.LLST48:
 19872 04e9 08       		.byte	0x8
 19873 04ea 00000000 		.quad	.LVL16
 19873      00000000 
 19874 04f2 23       		.uleb128 .LVL17-.LVL16
 19875 04f3 03       		.uleb128 0x3
 19876 04f4 73       		.byte	0x73
 19877 04f5 10       		.sleb128 16
 19878 04f6 9F       		.byte	0x9f
 19879 04f7 00       		.byte	0
 19880              	.LVUS49:
 19881 04f8 03       		.uleb128 .LVU69
 19882 04f9 00       		.uleb128 .LVU74
 19883              	.LLST49:
 19884 04fa 08       		.byte	0x8
 19885 04fb 00000000 		.quad	.LVL16
 19885      00000000 
 19886 0503 23       		.uleb128 .LVL17-.LVL16
 19887 0504 03       		.uleb128 0x3
 19888 0505 73       		.byte	0x73
 19889 0506 30       		.sleb128 48
 19890 0507 9F       		.byte	0x9f
 19891 0508 00       		.byte	0
 19892              	.LVUS51:
 19893 0509 00       		.uleb128 .LVU82
 19894 050a 00       		.uleb128 .LVU90
 19895 050b 00       		.uleb128 .LVU125
 19896 050c 00       		.uleb128 .LVU218
 19897              	.LLST51:
 19898 050d 06       		.byte	0x6
 19899 050e 00000000 		.quad	.LVL18
 19899      00000000 
 19900 0516 04       		.byte	0x4
 19901 0517 00       		.uleb128 .LVL18-.LVL18
 19902 0518 1D       		.uleb128 .LVL19-.LVL18
 19903 0519 02       		.uleb128 0x2
 19904 051a 31       		.byte	0x31
 19905 051b 9F       		.byte	0x9f
 19906 051c 04       		.byte	0x4
 19907 051d 6A       		.uleb128 .LVL27-.LVL18
 19908 051e 9F03     		.uleb128 .LVL51-.LVL18
 19909 0520 02       		.uleb128 0x2
 19910 0521 31       		.byte	0x31
 19911 0522 9F       		.byte	0x9f
 19912 0523 00       		.byte	0
 19913              	.LVUS52:
 19914 0524 00       		.uleb128 .LVU82
 19915 0525 00       		.uleb128 .LVU90
 19916 0526 00       		.uleb128 .LVU125
 19917 0527 00       		.uleb128 .LVU218
 19918              	.LLST52:
 19919 0528 06       		.byte	0x6
GAS LISTING x64lin/../common/event.s 			page 494


 19920 0529 00000000 		.quad	.LVL18
 19920      00000000 
 19921 0531 04       		.byte	0x4
 19922 0532 00       		.uleb128 .LVL18-.LVL18
 19923 0533 1D       		.uleb128 .LVL19-.LVL18
 19924 0534 01       		.uleb128 0x1
 19925 0535 53       		.byte	0x53
 19926 0536 04       		.byte	0x4
 19927 0537 6A       		.uleb128 .LVL27-.LVL18
 19928 0538 9F03     		.uleb128 .LVL51-.LVL18
 19929 053a 01       		.uleb128 0x1
 19930 053b 53       		.byte	0x53
 19931 053c 00       		.byte	0
 19932              	.LVUS54:
 19933 053d 00       		.uleb128 .LVU125
 19934 053e 00       		.uleb128 .LVU187
 19935 053f 00       		.uleb128 .LVU188
 19936 0540 00       		.uleb128 .LVU218
 19937              	.LLST54:
 19938 0541 06       		.byte	0x6
 19939 0542 00000000 		.quad	.LVL27
 19939      00000000 
 19940 054a 04       		.byte	0x4
 19941 054b 00       		.uleb128 .LVL27-.LVL27
 19942 054c D401     		.uleb128 .LVL40-.LVL27
 19943 054e 02       		.uleb128 0x2
 19944 054f 30       		.byte	0x30
 19945 0550 9F       		.byte	0x9f
 19946 0551 04       		.byte	0x4
 19947 0552 D901     		.uleb128 .LVL41-.LVL27
 19948 0554 B502     		.uleb128 .LVL51-.LVL27
 19949 0556 02       		.uleb128 0x2
 19950 0557 30       		.byte	0x30
 19951 0558 9F       		.byte	0x9f
 19952 0559 00       		.byte	0
 19953              	.LVUS55:
 19954 055a 00       		.uleb128 .LVU125
 19955 055b 00       		.uleb128 .LVU187
 19956 055c 00       		.uleb128 .LVU188
 19957 055d 00       		.uleb128 .LVU218
 19958              	.LLST55:
 19959 055e 06       		.byte	0x6
 19960 055f 00000000 		.quad	.LVL27
 19960      00000000 
 19961 0567 04       		.byte	0x4
 19962 0568 00       		.uleb128 .LVL27-.LVL27
 19963 0569 D401     		.uleb128 .LVL40-.LVL27
 19964 056b 02       		.uleb128 0x2
 19965 056c 31       		.byte	0x31
 19966 056d 9F       		.byte	0x9f
 19967 056e 04       		.byte	0x4
 19968 056f D901     		.uleb128 .LVL41-.LVL27
 19969 0571 B502     		.uleb128 .LVL51-.LVL27
 19970 0573 02       		.uleb128 0x2
 19971 0574 31       		.byte	0x31
 19972 0575 9F       		.byte	0x9f
 19973 0576 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 495


 19974              	.LVUS56:
 19975 0577 00       		.uleb128 .LVU125
 19976 0578 00       		.uleb128 .LVU187
 19977 0579 00       		.uleb128 .LVU188
 19978 057a 00       		.uleb128 .LVU218
 19979              	.LLST56:
 19980 057b 06       		.byte	0x6
 19981 057c 00000000 		.quad	.LVL27
 19981      00000000 
 19982 0584 04       		.byte	0x4
 19983 0585 00       		.uleb128 .LVL27-.LVL27
 19984 0586 D401     		.uleb128 .LVL40-.LVL27
 19985 0588 01       		.uleb128 0x1
 19986 0589 53       		.byte	0x53
 19987 058a 04       		.byte	0x4
 19988 058b D901     		.uleb128 .LVL41-.LVL27
 19989 058d B502     		.uleb128 .LVL51-.LVL27
 19990 058f 01       		.uleb128 0x1
 19991 0590 53       		.byte	0x53
 19992 0591 00       		.byte	0
 19993              	.LVUS57:
 19994 0592 01       		.uleb128 .LVU126
 19995 0593 00       		.uleb128 .LVU127
 19996 0594 00       		.uleb128 .LVU127
 19997 0595 00       		.uleb128 .LVU187
 19998 0596 00       		.uleb128 .LVU188
 19999 0597 00       		.uleb128 .LVU218
 20000              	.LLST57:
 20001 0598 06       		.byte	0x6
 20002 0599 00000000 		.quad	.LVL27
 20002      00000000 
 20003 05a1 04       		.byte	0x4
 20004 05a2 00       		.uleb128 .LVL27-.LVL27
 20005 05a3 09       		.uleb128 .LVL28-.LVL27
 20006 05a4 03       		.uleb128 0x3
 20007 05a5 7D       		.byte	0x7d
 20008 05a6 01       		.sleb128 1
 20009 05a7 9F       		.byte	0x9f
 20010 05a8 04       		.byte	0x4
 20011 05a9 09       		.uleb128 .LVL28-.LVL27
 20012 05aa D401     		.uleb128 .LVL40-.LVL27
 20013 05ac 07       		.uleb128 0x7
 20014 05ad 7E       		.byte	0x7e
 20015 05ae 00       		.sleb128 0
 20016 05af 33       		.byte	0x33
 20017 05b0 26       		.byte	0x26
 20018 05b1 23       		.byte	0x23
 20019 05b2 01       		.uleb128 0x1
 20020 05b3 9F       		.byte	0x9f
 20021 05b4 04       		.byte	0x4
 20022 05b5 D901     		.uleb128 .LVL41-.LVL27
 20023 05b7 B502     		.uleb128 .LVL51-.LVL27
 20024 05b9 07       		.uleb128 0x7
 20025 05ba 7E       		.byte	0x7e
 20026 05bb 00       		.sleb128 0
 20027 05bc 33       		.byte	0x33
 20028 05bd 26       		.byte	0x26
GAS LISTING x64lin/../common/event.s 			page 496


 20029 05be 23       		.byte	0x23
 20030 05bf 01       		.uleb128 0x1
 20031 05c0 9F       		.byte	0x9f
 20032 05c1 00       		.byte	0
 20033              	.LVUS58:
 20034 05c2 00       		.uleb128 .LVU127
 20035 05c3 00       		.uleb128 .LVU148
 20036 05c4 00       		.uleb128 .LVU148
 20037 05c5 00       		.uleb128 .LVU187
 20038 05c6 00       		.uleb128 .LVU188
 20039 05c7 00       		.uleb128 .LVU192
 20040 05c8 00       		.uleb128 .LVU192
 20041 05c9 00       		.uleb128 .LVU214
 20042 05ca 00       		.uleb128 .LVU214
 20043 05cb 00       		.uleb128 .LVU218
 20044              	.LLST58:
 20045 05cc 06       		.byte	0x6
 20046 05cd 00000000 		.quad	.LVL28
 20046      00000000 
 20047 05d5 04       		.byte	0x4
 20048 05d6 00       		.uleb128 .LVL28-.LVL28
 20049 05d7 52       		.uleb128 .LVL33-.LVL28
 20050 05d8 01       		.uleb128 0x1
 20051 05d9 5D       		.byte	0x5d
 20052 05da 04       		.byte	0x4
 20053 05db 52       		.uleb128 .LVL33-.LVL28
 20054 05dc CB01     		.uleb128 .LVL40-.LVL28
 20055 05de 07       		.uleb128 0x7
 20056 05df 7E       		.byte	0x7e
 20057 05e0 00       		.sleb128 0
 20058 05e1 33       		.byte	0x33
 20059 05e2 26       		.byte	0x26
 20060 05e3 23       		.byte	0x23
 20061 05e4 02       		.uleb128 0x2
 20062 05e5 9F       		.byte	0x9f
 20063 05e6 04       		.byte	0x4
 20064 05e7 D001     		.uleb128 .LVL41-.LVL28
 20065 05e9 E201     		.uleb128 .LVL42-.LVL28
 20066 05eb 01       		.uleb128 0x1
 20067 05ec 5D       		.byte	0x5d
 20068 05ed 04       		.byte	0x4
 20069 05ee E201     		.uleb128 .LVL42-.LVL28
 20070 05f0 9D02     		.uleb128 .LVL49-.LVL28
 20071 05f2 07       		.uleb128 0x7
 20072 05f3 7E       		.byte	0x7e
 20073 05f4 00       		.sleb128 0
 20074 05f5 33       		.byte	0x33
 20075 05f6 26       		.byte	0x26
 20076 05f7 23       		.byte	0x23
 20077 05f8 02       		.uleb128 0x2
 20078 05f9 9F       		.byte	0x9f
 20079 05fa 04       		.byte	0x4
 20080 05fb 9D02     		.uleb128 .LVL49-.LVL28
 20081 05fd AC02     		.uleb128 .LVL51-.LVL28
 20082 05ff 01       		.uleb128 0x1
 20083 0600 5D       		.byte	0x5d
 20084 0601 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 497


 20085              	.LVUS59:
 20086 0602 00       		.uleb128 .LVU148
 20087 0603 00       		.uleb128 .LVU187
 20088 0604 00       		.uleb128 .LVU192
 20089 0605 00       		.uleb128 .LVU214
 20090              	.LLST59:
 20091 0606 06       		.byte	0x6
 20092 0607 00000000 		.quad	.LVL33
 20092      00000000 
 20093 060f 04       		.byte	0x4
 20094 0610 00       		.uleb128 .LVL33-.LVL33
 20095 0611 79       		.uleb128 .LVL40-.LVL33
 20096 0612 01       		.uleb128 0x1
 20097 0613 5D       		.byte	0x5d
 20098 0614 04       		.byte	0x4
 20099 0615 9001     		.uleb128 .LVL42-.LVL33
 20100 0617 CB01     		.uleb128 .LVL49-.LVL33
 20101 0619 01       		.uleb128 0x1
 20102 061a 5D       		.byte	0x5d
 20103 061b 00       		.byte	0
 20104              	.LVUS61:
 20105 061c 00       		.uleb128 .LVU130
 20106 061d 00       		.uleb128 .LVU173
 20107 061e 00       		.uleb128 .LVU214
 20108 061f 00       		.uleb128 .LVU218
 20109              	.LLST61:
 20110 0620 06       		.byte	0x6
 20111 0621 00000000 		.quad	.LVL29
 20111      00000000 
 20112 0629 04       		.byte	0x4
 20113 062a 00       		.uleb128 .LVL29-.LVL29
 20114 062b 6B       		.uleb128 .LVL38-.LVL29
 20115 062c 01       		.uleb128 0x1
 20116 062d 5F       		.byte	0x5f
 20117 062e 04       		.byte	0x4
 20118 062f FE01     		.uleb128 .LVL49-.LVL29
 20119 0631 8D02     		.uleb128 .LVL51-.LVL29
 20120 0633 01       		.uleb128 0x1
 20121 0634 5F       		.byte	0x5f
 20122 0635 00       		.byte	0
 20123              	.LVUS62:
 20124 0636 02       		.uleb128 .LVU142
 20125 0637 00       		.uleb128 .LVU144
 20126 0638 00       		.uleb128 .LVU144
 20127 0639 00       		.uleb128 .LVU157
 20128 063a 00       		.uleb128 .LVU157
 20129 063b 00       		.uleb128 .LVU173
 20130              	.LLST62:
 20131 063c 06       		.byte	0x6
 20132 063d 00000000 		.quad	.LVL31
 20132      00000000 
 20133 0645 04       		.byte	0x4
 20134 0646 00       		.uleb128 .LVL31-.LVL31
 20135 0647 03       		.uleb128 .LVL32-.LVL31
 20136 0648 01       		.uleb128 0x1
 20137 0649 50       		.byte	0x50
 20138 064a 04       		.byte	0x4
GAS LISTING x64lin/../common/event.s 			page 498


 20139 064b 03       		.uleb128 .LVL32-.LVL31
 20140 064c 28       		.uleb128 .LVL36-1-.LVL31
 20141 064d 01       		.uleb128 0x1
 20142 064e 52       		.byte	0x52
 20143 064f 04       		.byte	0x4
 20144 0650 28       		.uleb128 .LVL36-1-.LVL31
 20145 0651 49       		.uleb128 .LVL38-.LVL31
 20146 0652 03       		.uleb128 0x3
 20147 0653 91       		.byte	0x91
 20148 0654 B87F     		.sleb128 -72
 20149 0656 00       		.byte	0
 20150              	.LVUS64:
 20151 0657 00       		.uleb128 .LVU130
 20152 0658 02       		.uleb128 .LVU142
 20153 0659 00       		.uleb128 .LVU214
 20154 065a 00       		.uleb128 .LVU218
 20155              	.LLST64:
 20156 065b 06       		.byte	0x6
 20157 065c 00000000 		.quad	.LVL29
 20157      00000000 
 20158 0664 04       		.byte	0x4
 20159 0665 00       		.uleb128 .LVL29-.LVL29
 20160 0666 22       		.uleb128 .LVL31-.LVL29
 20161 0667 01       		.uleb128 0x1
 20162 0668 5F       		.byte	0x5f
 20163 0669 04       		.byte	0x4
 20164 066a FE01     		.uleb128 .LVL49-.LVL29
 20165 066c 8D02     		.uleb128 .LVL51-.LVL29
 20166 066e 01       		.uleb128 0x1
 20167 066f 5F       		.byte	0x5f
 20168 0670 00       		.byte	0
 20169              	.LVUS65:
 20170 0671 00       		.uleb128 .LVU130
 20171 0672 02       		.uleb128 .LVU142
 20172 0673 00       		.uleb128 .LVU214
 20173 0674 00       		.uleb128 .LVU218
 20174              	.LLST65:
 20175 0675 06       		.byte	0x6
 20176 0676 00000000 		.quad	.LVL29
 20176      00000000 
 20177 067e 04       		.byte	0x4
 20178 067f 00       		.uleb128 .LVL29-.LVL29
 20179 0680 22       		.uleb128 .LVL31-.LVL29
 20180 0681 01       		.uleb128 0x1
 20181 0682 53       		.byte	0x53
 20182 0683 04       		.byte	0x4
 20183 0684 FE01     		.uleb128 .LVL49-.LVL29
 20184 0686 8D02     		.uleb128 .LVL51-.LVL29
 20185 0688 01       		.uleb128 0x1
 20186 0689 53       		.byte	0x53
 20187 068a 00       		.byte	0
 20188              	.LVUS66:
 20189 068b 01       		.uleb128 .LVU131
 20190 068c 04       		.uleb128 .LVU134
 20191              	.LLST66:
 20192 068d 08       		.byte	0x8
 20193 068e 00000000 		.quad	.LVL29
GAS LISTING x64lin/../common/event.s 			page 499


 20193      00000000 
 20194 0696 00       		.uleb128 .LVL29-.LVL29
 20195 0697 01       		.uleb128 0x1
 20196 0698 53       		.byte	0x53
 20197 0699 00       		.byte	0
 20198              	.LVUS67:
 20199 069a 02       		.uleb128 .LVU132
 20200 069b 04       		.uleb128 .LVU134
 20201              	.LLST67:
 20202 069c 08       		.byte	0x8
 20203 069d 00000000 		.quad	.LVL29
 20203      00000000 
 20204 06a5 00       		.uleb128 .LVL29-.LVL29
 20205 06a6 01       		.uleb128 0x1
 20206 06a7 53       		.byte	0x53
 20207 06a8 00       		.byte	0
 20208              	.LVUS68:
 20209 06a9 02       		.uleb128 .LVU132
 20210 06aa 04       		.uleb128 .LVU134
 20211              	.LLST68:
 20212 06ab 08       		.byte	0x8
 20213 06ac 00000000 		.quad	.LVL29
 20213      00000000 
 20214 06b4 00       		.uleb128 .LVL29-.LVL29
 20215 06b5 06       		.uleb128 0x6
 20216 06b6 A0       		.byte	0xa0
 20217 06b7 00000000 		.long	.Ldebug_info0+30431
 20218 06bb 00       		.sleb128 0
 20219 06bc 00       		.byte	0
 20220              	.LVUS69:
 20221 06bd 03       		.uleb128 .LVU133
 20222 06be 04       		.uleb128 .LVU134
 20223              	.LLST69:
 20224 06bf 08       		.byte	0x8
 20225 06c0 00000000 		.quad	.LVL29
 20225      00000000 
 20226 06c8 00       		.uleb128 .LVL29-.LVL29
 20227 06c9 06       		.uleb128 0x6
 20228 06ca A0       		.byte	0xa0
 20229 06cb 00000000 		.long	.Ldebug_info0+30431
 20230 06cf 00       		.sleb128 0
 20231 06d0 00       		.byte	0
 20232              	.LVUS71:
 20233 06d1 04       		.uleb128 .LVU134
 20234 06d2 00       		.uleb128 .LVU140
 20235 06d3 00       		.uleb128 .LVU214
 20236 06d4 00       		.uleb128 .LVU218
 20237              	.LLST71:
 20238 06d5 06       		.byte	0x6
 20239 06d6 00000000 		.quad	.LVL29
 20239      00000000 
 20240 06de 04       		.byte	0x4
 20241 06df 00       		.uleb128 .LVL29-.LVL29
 20242 06e0 22       		.uleb128 .LVL31-.LVL29
 20243 06e1 01       		.uleb128 0x1
 20244 06e2 5F       		.byte	0x5f
 20245 06e3 04       		.byte	0x4
GAS LISTING x64lin/../common/event.s 			page 500


 20246 06e4 FE01     		.uleb128 .LVL49-.LVL29
 20247 06e6 8D02     		.uleb128 .LVL51-.LVL29
 20248 06e8 01       		.uleb128 0x1
 20249 06e9 5F       		.byte	0x5f
 20250 06ea 00       		.byte	0
 20251              	.LVUS72:
 20252 06eb 04       		.uleb128 .LVU134
 20253 06ec 00       		.uleb128 .LVU140
 20254 06ed 00       		.uleb128 .LVU214
 20255 06ee 00       		.uleb128 .LVU218
 20256              	.LLST72:
 20257 06ef 06       		.byte	0x6
 20258 06f0 00000000 		.quad	.LVL29
 20258      00000000 
 20259 06f8 04       		.byte	0x4
 20260 06f9 00       		.uleb128 .LVL29-.LVL29
 20261 06fa 22       		.uleb128 .LVL31-.LVL29
 20262 06fb 06       		.uleb128 0x6
 20263 06fc A0       		.byte	0xa0
 20264 06fd 00000000 		.long	.Ldebug_info0+30431
 20265 0701 00       		.sleb128 0
 20266 0702 04       		.byte	0x4
 20267 0703 FE01     		.uleb128 .LVL49-.LVL29
 20268 0705 8D02     		.uleb128 .LVL51-.LVL29
 20269 0707 06       		.uleb128 0x6
 20270 0708 A0       		.byte	0xa0
 20271 0709 00000000 		.long	.Ldebug_info0+30431
 20272 070d 00       		.sleb128 0
 20273 070e 00       		.byte	0
 20274              	.LVUS73:
 20275 070f 06       		.uleb128 .LVU136
 20276 0710 00       		.uleb128 .LVU140
 20277 0711 00       		.uleb128 .LVU214
 20278 0712 00       		.uleb128 .LVU218
 20279              	.LLST73:
 20280 0713 06       		.byte	0x6
 20281 0714 00000000 		.quad	.LVL29
 20281      00000000 
 20282 071c 04       		.byte	0x4
 20283 071d 00       		.uleb128 .LVL29-.LVL29
 20284 071e 22       		.uleb128 .LVL31-.LVL29
 20285 071f 01       		.uleb128 0x1
 20286 0720 5F       		.byte	0x5f
 20287 0721 04       		.byte	0x4
 20288 0722 FE01     		.uleb128 .LVL49-.LVL29
 20289 0724 8D02     		.uleb128 .LVL51-.LVL29
 20290 0726 01       		.uleb128 0x1
 20291 0727 5F       		.byte	0x5f
 20292 0728 00       		.byte	0
 20293              	.LVUS74:
 20294 0729 06       		.uleb128 .LVU136
 20295 072a 00       		.uleb128 .LVU140
 20296 072b 00       		.uleb128 .LVU214
 20297 072c 00       		.uleb128 .LVU218
 20298              	.LLST74:
 20299 072d 06       		.byte	0x6
 20300 072e 00000000 		.quad	.LVL29
GAS LISTING x64lin/../common/event.s 			page 501


 20300      00000000 
 20301 0736 04       		.byte	0x4
 20302 0737 00       		.uleb128 .LVL29-.LVL29
 20303 0738 22       		.uleb128 .LVL31-.LVL29
 20304 0739 06       		.uleb128 0x6
 20305 073a A0       		.byte	0xa0
 20306 073b 00000000 		.long	.Ldebug_info0+30431
 20307 073f 00       		.sleb128 0
 20308 0740 04       		.byte	0x4
 20309 0741 FE01     		.uleb128 .LVL49-.LVL29
 20310 0743 8D02     		.uleb128 .LVL51-.LVL29
 20311 0745 06       		.uleb128 0x6
 20312 0746 A0       		.byte	0xa0
 20313 0747 00000000 		.long	.Ldebug_info0+30431
 20314 074b 00       		.sleb128 0
 20315 074c 00       		.byte	0
 20316              	.LVUS75:
 20317 074d 08       		.uleb128 .LVU138
 20318 074e 00       		.uleb128 .LVU140
 20319 074f 00       		.uleb128 .LVU214
 20320 0750 00       		.uleb128 .LVU218
 20321              	.LLST75:
 20322 0751 06       		.byte	0x6
 20323 0752 00000000 		.quad	.LVL29
 20323      00000000 
 20324 075a 04       		.byte	0x4
 20325 075b 00       		.uleb128 .LVL29-.LVL29
 20326 075c 22       		.uleb128 .LVL31-.LVL29
 20327 075d 06       		.uleb128 0x6
 20328 075e A0       		.byte	0xa0
 20329 075f 00000000 		.long	.Ldebug_info0+30431
 20330 0763 00       		.sleb128 0
 20331 0764 04       		.byte	0x4
 20332 0765 FE01     		.uleb128 .LVL49-.LVL29
 20333 0767 8D02     		.uleb128 .LVL51-.LVL29
 20334 0769 06       		.uleb128 0x6
 20335 076a A0       		.byte	0xa0
 20336 076b 00000000 		.long	.Ldebug_info0+30431
 20337 076f 00       		.sleb128 0
 20338 0770 00       		.byte	0
 20339              	.LVUS76:
 20340 0771 08       		.uleb128 .LVU138
 20341 0772 00       		.uleb128 .LVU140
 20342 0773 00       		.uleb128 .LVU214
 20343 0774 00       		.uleb128 .LVU218
 20344              	.LLST76:
 20345 0775 06       		.byte	0x6
 20346 0776 00000000 		.quad	.LVL29
 20346      00000000 
 20347 077e 04       		.byte	0x4
 20348 077f 00       		.uleb128 .LVL29-.LVL29
 20349 0780 22       		.uleb128 .LVL31-.LVL29
 20350 0781 02       		.uleb128 0x2
 20351 0782 30       		.byte	0x30
 20352 0783 9F       		.byte	0x9f
 20353 0784 04       		.byte	0x4
 20354 0785 FE01     		.uleb128 .LVL49-.LVL29
GAS LISTING x64lin/../common/event.s 			page 502


 20355 0787 8D02     		.uleb128 .LVL51-.LVL29
 20356 0789 02       		.uleb128 0x2
 20357 078a 30       		.byte	0x30
 20358 078b 9F       		.byte	0x9f
 20359 078c 00       		.byte	0
 20360              	.LVUS77:
 20361 078d 07       		.uleb128 .LVU137
 20362 078e 00       		.uleb128 .LVU140
 20363 078f 00       		.uleb128 .LVU214
 20364 0790 00       		.uleb128 .LVU218
 20365              	.LLST77:
 20366 0791 06       		.byte	0x6
 20367 0792 00000000 		.quad	.LVL29
 20367      00000000 
 20368 079a 04       		.byte	0x4
 20369 079b 00       		.uleb128 .LVL29-.LVL29
 20370 079c 22       		.uleb128 .LVL31-.LVL29
 20371 079d 01       		.uleb128 0x1
 20372 079e 5F       		.byte	0x5f
 20373 079f 04       		.byte	0x4
 20374 07a0 FE01     		.uleb128 .LVL49-.LVL29
 20375 07a2 8D02     		.uleb128 .LVL51-.LVL29
 20376 07a4 01       		.uleb128 0x1
 20377 07a5 5F       		.byte	0x5f
 20378 07a6 00       		.byte	0
 20379              	.LVUS78:
 20380 07a7 00       		.uleb128 .LVU140
 20381 07a8 00       		.uleb128 .LVU173
 20382              	.LLST78:
 20383 07a9 08       		.byte	0x8
 20384 07aa 00000000 		.quad	.LVL31
 20384      00000000 
 20385 07b2 49       		.uleb128 .LVL38-.LVL31
 20386 07b3 06       		.uleb128 0x6
 20387 07b4 A0       		.byte	0xa0
 20388 07b5 00000000 		.long	.Ldebug_info0+30431
 20389 07b9 00       		.sleb128 0
 20390 07ba 00       		.byte	0
 20391              	.LVUS79:
 20392 07bb 00       		.uleb128 .LVU149
 20393 07bc 00       		.uleb128 .LVU157
 20394              	.LLST79:
 20395 07bd 08       		.byte	0x8
 20396 07be 00000000 		.quad	.LVL34
 20396      00000000 
 20397 07c6 10       		.uleb128 .LVL36-.LVL34
 20398 07c7 01       		.uleb128 0x1
 20399 07c8 5D       		.byte	0x5d
 20400 07c9 00       		.byte	0
 20401              	.LVUS80:
 20402 07ca 00       		.uleb128 .LVU149
 20403 07cb 00       		.uleb128 .LVU156
 20404 07cc 00       		.uleb128 .LVU156
 20405 07cd 00       		.uleb128 .LVU157
 20406              	.LLST80:
 20407 07ce 06       		.byte	0x6
 20408 07cf 00000000 		.quad	.LVL34
GAS LISTING x64lin/../common/event.s 			page 503


 20408      00000000 
 20409 07d7 04       		.byte	0x4
 20410 07d8 00       		.uleb128 .LVL34-.LVL34
 20411 07d9 08       		.uleb128 .LVL35-.LVL34
 20412 07da 01       		.uleb128 0x1
 20413 07db 51       		.byte	0x51
 20414 07dc 04       		.byte	0x4
 20415 07dd 08       		.uleb128 .LVL35-.LVL34
 20416 07de 0F       		.uleb128 .LVL36-1-.LVL34
 20417 07df 03       		.uleb128 0x3
 20418 07e0 70       		.byte	0x70
 20419 07e1 08       		.sleb128 8
 20420 07e2 9F       		.byte	0x9f
 20421 07e3 00       		.byte	0
 20422              	.LVUS81:
 20423 07e4 00       		.uleb128 .LVU148
 20424 07e5 00       		.uleb128 .LVU157
 20425              	.LLST81:
 20426 07e6 08       		.byte	0x8
 20427 07e7 00000000 		.quad	.LVL33
 20427      00000000 
 20428 07ef 17       		.uleb128 .LVL36-1-.LVL33
 20429 07f0 01       		.uleb128 0x1
 20430 07f1 54       		.byte	0x54
 20431 07f2 00       		.byte	0
 20432              	.LVUS82:
 20433 07f3 01       		.uleb128 .LVU150
 20434 07f4 00       		.uleb128 .LVU157
 20435              	.LLST82:
 20436 07f5 08       		.byte	0x8
 20437 07f6 00000000 		.quad	.LVL34
 20437      00000000 
 20438 07fe 10       		.uleb128 .LVL36-.LVL34
 20439 07ff 01       		.uleb128 0x1
 20440 0800 5D       		.byte	0x5d
 20441 0801 00       		.byte	0
 20442              	.LVUS83:
 20443 0802 01       		.uleb128 .LVU150
 20444 0803 00       		.uleb128 .LVU156
 20445 0804 00       		.uleb128 .LVU156
 20446 0805 00       		.uleb128 .LVU157
 20447              	.LLST83:
 20448 0806 06       		.byte	0x6
 20449 0807 00000000 		.quad	.LVL34
 20449      00000000 
 20450 080f 04       		.byte	0x4
 20451 0810 00       		.uleb128 .LVL34-.LVL34
 20452 0811 08       		.uleb128 .LVL35-.LVL34
 20453 0812 01       		.uleb128 0x1
 20454 0813 51       		.byte	0x51
 20455 0814 04       		.byte	0x4
 20456 0815 08       		.uleb128 .LVL35-.LVL34
 20457 0816 0F       		.uleb128 .LVL36-1-.LVL34
 20458 0817 03       		.uleb128 0x3
 20459 0818 70       		.byte	0x70
 20460 0819 08       		.sleb128 8
 20461 081a 9F       		.byte	0x9f
GAS LISTING x64lin/../common/event.s 			page 504


 20462 081b 00       		.byte	0
 20463              	.LVUS84:
 20464 081c 01       		.uleb128 .LVU150
 20465 081d 00       		.uleb128 .LVU157
 20466              	.LLST84:
 20467 081e 08       		.byte	0x8
 20468 081f 00000000 		.quad	.LVL34
 20468      00000000 
 20469 0827 0F       		.uleb128 .LVL36-1-.LVL34
 20470 0828 01       		.uleb128 0x1
 20471 0829 54       		.byte	0x54
 20472 082a 00       		.byte	0
 20473              	.LVUS85:
 20474 082b 02       		.uleb128 .LVU151
 20475 082c 00       		.uleb128 .LVU157
 20476              	.LLST85:
 20477 082d 08       		.byte	0x8
 20478 082e 00000000 		.quad	.LVL34
 20478      00000000 
 20479 0836 10       		.uleb128 .LVL36-.LVL34
 20480 0837 01       		.uleb128 0x1
 20481 0838 5D       		.byte	0x5d
 20482 0839 00       		.byte	0
 20483              	.LVUS86:
 20484 083a 02       		.uleb128 .LVU151
 20485 083b 00       		.uleb128 .LVU156
 20486 083c 00       		.uleb128 .LVU156
 20487 083d 00       		.uleb128 .LVU157
 20488              	.LLST86:
 20489 083e 06       		.byte	0x6
 20490 083f 00000000 		.quad	.LVL34
 20490      00000000 
 20491 0847 04       		.byte	0x4
 20492 0848 00       		.uleb128 .LVL34-.LVL34
 20493 0849 08       		.uleb128 .LVL35-.LVL34
 20494 084a 01       		.uleb128 0x1
 20495 084b 51       		.byte	0x51
 20496 084c 04       		.byte	0x4
 20497 084d 08       		.uleb128 .LVL35-.LVL34
 20498 084e 0F       		.uleb128 .LVL36-1-.LVL34
 20499 084f 03       		.uleb128 0x3
 20500 0850 70       		.byte	0x70
 20501 0851 08       		.sleb128 8
 20502 0852 9F       		.byte	0x9f
 20503 0853 00       		.byte	0
 20504              	.LVUS87:
 20505 0854 02       		.uleb128 .LVU151
 20506 0855 00       		.uleb128 .LVU157
 20507              	.LLST87:
 20508 0856 08       		.byte	0x8
 20509 0857 00000000 		.quad	.LVL34
 20509      00000000 
 20510 085f 0F       		.uleb128 .LVL36-1-.LVL34
 20511 0860 01       		.uleb128 0x1
 20512 0861 54       		.byte	0x54
 20513 0862 00       		.byte	0
 20514              	.LVUS88:
GAS LISTING x64lin/../common/event.s 			page 505


 20515 0863 03       		.uleb128 .LVU152
 20516 0864 00       		.uleb128 .LVU157
 20517              	.LLST88:
 20518 0865 08       		.byte	0x8
 20519 0866 00000000 		.quad	.LVL34
 20519      00000000 
 20520 086e 10       		.uleb128 .LVL36-.LVL34
 20521 086f 01       		.uleb128 0x1
 20522 0870 5D       		.byte	0x5d
 20523 0871 00       		.byte	0
 20524              	.LVUS89:
 20525 0872 03       		.uleb128 .LVU152
 20526 0873 00       		.uleb128 .LVU156
 20527 0874 00       		.uleb128 .LVU156
 20528 0875 00       		.uleb128 .LVU157
 20529              	.LLST89:
 20530 0876 06       		.byte	0x6
 20531 0877 00000000 		.quad	.LVL34
 20531      00000000 
 20532 087f 04       		.byte	0x4
 20533 0880 00       		.uleb128 .LVL34-.LVL34
 20534 0881 08       		.uleb128 .LVL35-.LVL34
 20535 0882 01       		.uleb128 0x1
 20536 0883 51       		.byte	0x51
 20537 0884 04       		.byte	0x4
 20538 0885 08       		.uleb128 .LVL35-.LVL34
 20539 0886 0F       		.uleb128 .LVL36-1-.LVL34
 20540 0887 03       		.uleb128 0x3
 20541 0888 70       		.byte	0x70
 20542 0889 08       		.sleb128 8
 20543 088a 9F       		.byte	0x9f
 20544 088b 00       		.byte	0
 20545              	.LVUS90:
 20546 088c 03       		.uleb128 .LVU152
 20547 088d 00       		.uleb128 .LVU157
 20548              	.LLST90:
 20549 088e 08       		.byte	0x8
 20550 088f 00000000 		.quad	.LVL34
 20550      00000000 
 20551 0897 0F       		.uleb128 .LVL36-1-.LVL34
 20552 0898 01       		.uleb128 0x1
 20553 0899 54       		.byte	0x54
 20554 089a 00       		.byte	0
 20555              	.LVUS91:
 20556 089b 04       		.uleb128 .LVU153
 20557 089c 00       		.uleb128 .LVU157
 20558              	.LLST91:
 20559 089d 08       		.byte	0x8
 20560 089e 00000000 		.quad	.LVL34
 20560      00000000 
 20561 08a6 10       		.uleb128 .LVL36-.LVL34
 20562 08a7 01       		.uleb128 0x1
 20563 08a8 5D       		.byte	0x5d
 20564 08a9 00       		.byte	0
 20565              	.LVUS92:
 20566 08aa 04       		.uleb128 .LVU153
 20567 08ab 00       		.uleb128 .LVU156
GAS LISTING x64lin/../common/event.s 			page 506


 20568 08ac 00       		.uleb128 .LVU156
 20569 08ad 00       		.uleb128 .LVU157
 20570              	.LLST92:
 20571 08ae 06       		.byte	0x6
 20572 08af 00000000 		.quad	.LVL34
 20572      00000000 
 20573 08b7 04       		.byte	0x4
 20574 08b8 00       		.uleb128 .LVL34-.LVL34
 20575 08b9 08       		.uleb128 .LVL35-.LVL34
 20576 08ba 01       		.uleb128 0x1
 20577 08bb 51       		.byte	0x51
 20578 08bc 04       		.byte	0x4
 20579 08bd 08       		.uleb128 .LVL35-.LVL34
 20580 08be 0F       		.uleb128 .LVL36-1-.LVL34
 20581 08bf 03       		.uleb128 0x3
 20582 08c0 70       		.byte	0x70
 20583 08c1 08       		.sleb128 8
 20584 08c2 9F       		.byte	0x9f
 20585 08c3 00       		.byte	0
 20586              	.LVUS93:
 20587 08c4 04       		.uleb128 .LVU153
 20588 08c5 00       		.uleb128 .LVU157
 20589              	.LLST93:
 20590 08c6 08       		.byte	0x8
 20591 08c7 00000000 		.quad	.LVL34
 20591      00000000 
 20592 08cf 0F       		.uleb128 .LVL36-1-.LVL34
 20593 08d0 01       		.uleb128 0x1
 20594 08d1 54       		.byte	0x54
 20595 08d2 00       		.byte	0
 20596              	.LVUS94:
 20597 08d3 05       		.uleb128 .LVU154
 20598 08d4 00       		.uleb128 .LVU156
 20599 08d5 00       		.uleb128 .LVU156
 20600 08d6 00       		.uleb128 .LVU157
 20601              	.LLST94:
 20602 08d7 06       		.byte	0x6
 20603 08d8 00000000 		.quad	.LVL34
 20603      00000000 
 20604 08e0 04       		.byte	0x4
 20605 08e1 00       		.uleb128 .LVL34-.LVL34
 20606 08e2 08       		.uleb128 .LVL35-.LVL34
 20607 08e3 08       		.uleb128 0x8
 20608 08e4 71       		.byte	0x71
 20609 08e5 00       		.sleb128 0
 20610 08e6 74       		.byte	0x74
 20611 08e7 00       		.sleb128 0
 20612 08e8 1C       		.byte	0x1c
 20613 08e9 38       		.byte	0x38
 20614 08ea 1B       		.byte	0x1b
 20615 08eb 9F       		.byte	0x9f
 20616 08ec 04       		.byte	0x4
 20617 08ed 08       		.uleb128 .LVL35-.LVL34
 20618 08ee 0F       		.uleb128 .LVL36-1-.LVL34
 20619 08ef 05       		.uleb128 0x5
 20620 08f0 71       		.byte	0x71
 20621 08f1 00       		.sleb128 0
GAS LISTING x64lin/../common/event.s 			page 507


 20622 08f2 38       		.byte	0x38
 20623 08f3 1B       		.byte	0x1b
 20624 08f4 9F       		.byte	0x9f
 20625 08f5 00       		.byte	0
 20626              	.LVUS95:
 20627 08f6 00       		.uleb128 .LVU157
 20628 08f7 00       		.uleb128 .LVU167
 20629              	.LLST95:
 20630 08f8 08       		.byte	0x8
 20631 08f9 00000000 		.quad	.LVL36
 20631      00000000 
 20632 0901 13       		.uleb128 .LVL37-1-.LVL36
 20633 0902 02       		.uleb128 0x2
 20634 0903 73       		.byte	0x73
 20635 0904 08       		.sleb128 8
 20636 0905 00       		.byte	0
 20637              	.LVUS96:
 20638 0906 00       		.uleb128 .LVU157
 20639 0907 00       		.uleb128 .LVU167
 20640              	.LLST96:
 20641 0908 08       		.byte	0x8
 20642 0909 00000000 		.quad	.LVL36
 20642      00000000 
 20643 0911 13       		.uleb128 .LVL37-1-.LVL36
 20644 0912 02       		.uleb128 0x2
 20645 0913 73       		.byte	0x73
 20646 0914 00       		.sleb128 0
 20647 0915 00       		.byte	0
 20648              	.LVUS97:
 20649 0916 00       		.uleb128 .LVU157
 20650 0917 02       		.uleb128 .LVU169
 20651              	.LLST97:
 20652 0918 08       		.byte	0x8
 20653 0919 00000000 		.quad	.LVL36
 20653      00000000 
 20654 0921 14       		.uleb128 .LVL37-.LVL36
 20655 0922 01       		.uleb128 0x1
 20656 0923 53       		.byte	0x53
 20657 0924 00       		.byte	0
 20658              	.LVUS98:
 20659 0925 02       		.uleb128 .LVU159
 20660 0926 05       		.uleb128 .LVU162
 20661              	.LLST98:
 20662 0927 08       		.byte	0x8
 20663 0928 00000000 		.quad	.LVL36
 20663      00000000 
 20664 0930 00       		.uleb128 .LVL36-.LVL36
 20665 0931 01       		.uleb128 0x1
 20666 0932 53       		.byte	0x53
 20667 0933 00       		.byte	0
 20668              	.LVUS99:
 20669 0934 03       		.uleb128 .LVU160
 20670 0935 05       		.uleb128 .LVU162
 20671              	.LLST99:
 20672 0936 08       		.byte	0x8
 20673 0937 00000000 		.quad	.LVL36
 20673      00000000 
GAS LISTING x64lin/../common/event.s 			page 508


 20674 093f 00       		.uleb128 .LVL36-.LVL36
 20675 0940 01       		.uleb128 0x1
 20676 0941 53       		.byte	0x53
 20677 0942 00       		.byte	0
 20678              	.LVUS100:
 20679 0943 03       		.uleb128 .LVU160
 20680 0944 05       		.uleb128 .LVU162
 20681              	.LLST100:
 20682 0945 08       		.byte	0x8
 20683 0946 00000000 		.quad	.LVL36
 20683      00000000 
 20684 094e 00       		.uleb128 .LVL36-.LVL36
 20685 094f 06       		.uleb128 0x6
 20686 0950 A0       		.byte	0xa0
 20687 0951 00000000 		.long	.Ldebug_info0+31341
 20688 0955 00       		.sleb128 0
 20689 0956 00       		.byte	0
 20690              	.LVUS101:
 20691 0957 04       		.uleb128 .LVU161
 20692 0958 05       		.uleb128 .LVU162
 20693              	.LLST101:
 20694 0959 08       		.byte	0x8
 20695 095a 00000000 		.quad	.LVL36
 20695      00000000 
 20696 0962 00       		.uleb128 .LVL36-.LVL36
 20697 0963 06       		.uleb128 0x6
 20698 0964 A0       		.byte	0xa0
 20699 0965 00000000 		.long	.Ldebug_info0+31341
 20700 0969 00       		.sleb128 0
 20701 096a 00       		.byte	0
 20702              	.LVUS102:
 20703 096b 05       		.uleb128 .LVU162
 20704 096c 00       		.uleb128 .LVU167
 20705              	.LLST102:
 20706 096d 08       		.byte	0x8
 20707 096e 00000000 		.quad	.LVL36
 20707      00000000 
 20708 0976 13       		.uleb128 .LVL37-1-.LVL36
 20709 0977 02       		.uleb128 0x2
 20710 0978 73       		.byte	0x73
 20711 0979 08       		.sleb128 8
 20712 097a 00       		.byte	0
 20713              	.LVUS103:
 20714 097b 05       		.uleb128 .LVU162
 20715 097c 00       		.uleb128 .LVU167
 20716              	.LLST103:
 20717 097d 08       		.byte	0x8
 20718 097e 00000000 		.quad	.LVL36
 20718      00000000 
 20719 0986 13       		.uleb128 .LVL37-1-.LVL36
 20720 0987 02       		.uleb128 0x2
 20721 0988 73       		.byte	0x73
 20722 0989 00       		.sleb128 0
 20723 098a 00       		.byte	0
 20724              	.LVUS104:
 20725 098b 05       		.uleb128 .LVU162
 20726 098c 00       		.uleb128 .LVU167
GAS LISTING x64lin/../common/event.s 			page 509


 20727              	.LLST104:
 20728 098d 08       		.byte	0x8
 20729 098e 00000000 		.quad	.LVL36
 20729      00000000 
 20730 0996 14       		.uleb128 .LVL37-.LVL36
 20731 0997 06       		.uleb128 0x6
 20732 0998 A0       		.byte	0xa0
 20733 0999 00000000 		.long	.Ldebug_info0+31341
 20734 099d 00       		.sleb128 0
 20735 099e 00       		.byte	0
 20736              	.LVUS105:
 20737 099f 07       		.uleb128 .LVU164
 20738 09a0 00       		.uleb128 .LVU167
 20739              	.LLST105:
 20740 09a1 08       		.byte	0x8
 20741 09a2 00000000 		.quad	.LVL36
 20741      00000000 
 20742 09aa 13       		.uleb128 .LVL37-1-.LVL36
 20743 09ab 02       		.uleb128 0x2
 20744 09ac 73       		.byte	0x73
 20745 09ad 08       		.sleb128 8
 20746 09ae 00       		.byte	0
 20747              	.LVUS106:
 20748 09af 07       		.uleb128 .LVU164
 20749 09b0 00       		.uleb128 .LVU167
 20750              	.LLST106:
 20751 09b1 08       		.byte	0x8
 20752 09b2 00000000 		.quad	.LVL36
 20752      00000000 
 20753 09ba 13       		.uleb128 .LVL37-1-.LVL36
 20754 09bb 02       		.uleb128 0x2
 20755 09bc 73       		.byte	0x73
 20756 09bd 00       		.sleb128 0
 20757 09be 00       		.byte	0
 20758              	.LVUS107:
 20759 09bf 07       		.uleb128 .LVU164
 20760 09c0 00       		.uleb128 .LVU167
 20761              	.LLST107:
 20762 09c1 08       		.byte	0x8
 20763 09c2 00000000 		.quad	.LVL36
 20763      00000000 
 20764 09ca 14       		.uleb128 .LVL37-.LVL36
 20765 09cb 06       		.uleb128 0x6
 20766 09cc A0       		.byte	0xa0
 20767 09cd 00000000 		.long	.Ldebug_info0+31341
 20768 09d1 00       		.sleb128 0
 20769 09d2 00       		.byte	0
 20770              	.LVUS108:
 20771 09d3 09       		.uleb128 .LVU166
 20772 09d4 00       		.uleb128 .LVU167
 20773              	.LLST108:
 20774 09d5 08       		.byte	0x8
 20775 09d6 00000000 		.quad	.LVL36
 20775      00000000 
 20776 09de 14       		.uleb128 .LVL37-.LVL36
 20777 09df 06       		.uleb128 0x6
 20778 09e0 A0       		.byte	0xa0
GAS LISTING x64lin/../common/event.s 			page 510


 20779 09e1 00000000 		.long	.Ldebug_info0+31341
 20780 09e5 00       		.sleb128 0
 20781 09e6 00       		.byte	0
 20782              	.LVUS109:
 20783 09e7 08       		.uleb128 .LVU165
 20784 09e8 00       		.uleb128 .LVU167
 20785              	.LLST109:
 20786 09e9 08       		.byte	0x8
 20787 09ea 00000000 		.quad	.LVL36
 20787      00000000 
 20788 09f2 13       		.uleb128 .LVL37-1-.LVL36
 20789 09f3 02       		.uleb128 0x2
 20790 09f4 73       		.byte	0x73
 20791 09f5 08       		.sleb128 8
 20792 09f6 00       		.byte	0
 20793              	.LVUS110:
 20794 09f7 08       		.uleb128 .LVU165
 20795 09f8 00       		.uleb128 .LVU167
 20796              	.LLST110:
 20797 09f9 08       		.byte	0x8
 20798 09fa 00000000 		.quad	.LVL36
 20798      00000000 
 20799 0a02 13       		.uleb128 .LVL37-1-.LVL36
 20800 0a03 02       		.uleb128 0x2
 20801 0a04 73       		.byte	0x73
 20802 0a05 00       		.sleb128 0
 20803 0a06 00       		.byte	0
 20804              	.LVUS111:
 20805 0a07 00       		.uleb128 .LVU167
 20806 0a08 00       		.uleb128 .LVU173
 20807              	.LLST111:
 20808 0a09 08       		.byte	0x8
 20809 0a0a 00000000 		.quad	.LVL37
 20809      00000000 
 20810 0a12 0C       		.uleb128 .LVL38-.LVL37
 20811 0a13 06       		.uleb128 0x6
 20812 0a14 A0       		.byte	0xa0
 20813 0a15 00000000 		.long	.Ldebug_info0+31341
 20814 0a19 00       		.sleb128 0
 20815 0a1a 00       		.byte	0
 20816              	.LVUS113:
 20817 0a1b 00       		.uleb128 .LVU194
 20818 0a1c 00       		.uleb128 .LVU202
 20819              	.LLST113:
 20820 0a1d 08       		.byte	0x8
 20821 0a1e 00000000 		.quad	.LVL43
 20821      00000000 
 20822 0a26 0F       		.uleb128 .LVL45-.LVL43
 20823 0a27 01       		.uleb128 0x1
 20824 0a28 5D       		.byte	0x5d
 20825 0a29 00       		.byte	0
 20826              	.LVUS114:
 20827 0a2a 00       		.uleb128 .LVU194
 20828 0a2b 00       		.uleb128 .LVU201
 20829 0a2c 00       		.uleb128 .LVU201
 20830 0a2d 00       		.uleb128 .LVU202
 20831              	.LLST114:
GAS LISTING x64lin/../common/event.s 			page 511


 20832 0a2e 06       		.byte	0x6
 20833 0a2f 00000000 		.quad	.LVL43
 20833      00000000 
 20834 0a37 04       		.byte	0x4
 20835 0a38 00       		.uleb128 .LVL43-.LVL43
 20836 0a39 0C       		.uleb128 .LVL44-1-.LVL43
 20837 0a3a 07       		.uleb128 0x7
 20838 0a3b 73       		.byte	0x73
 20839 0a3c C800     		.sleb128 72
 20840 0a3e 06       		.byte	0x6
 20841 0a3f 23       		.byte	0x23
 20842 0a40 08       		.uleb128 0x8
 20843 0a41 9F       		.byte	0x9f
 20844 0a42 04       		.byte	0x4
 20845 0a43 0C       		.uleb128 .LVL44-1-.LVL43
 20846 0a44 0F       		.uleb128 .LVL45-.LVL43
 20847 0a45 01       		.uleb128 0x1
 20848 0a46 5F       		.byte	0x5f
 20849 0a47 00       		.byte	0
 20850              	.LVUS115:
 20851 0a48 00       		.uleb128 .LVU194
 20852 0a49 00       		.uleb128 .LVU201
 20853              	.LLST115:
 20854 0a4a 08       		.byte	0x8
 20855 0a4b 00000000 		.quad	.LVL43
 20855      00000000 
 20856 0a53 0C       		.uleb128 .LVL44-1-.LVL43
 20857 0a54 01       		.uleb128 0x1
 20858 0a55 54       		.byte	0x54
 20859 0a56 00       		.byte	0
 20860              	.LVUS116:
 20861 0a57 01       		.uleb128 .LVU195
 20862 0a58 00       		.uleb128 .LVU202
 20863              	.LLST116:
 20864 0a59 08       		.byte	0x8
 20865 0a5a 00000000 		.quad	.LVL43
 20865      00000000 
 20866 0a62 0F       		.uleb128 .LVL45-.LVL43
 20867 0a63 01       		.uleb128 0x1
 20868 0a64 5D       		.byte	0x5d
 20869 0a65 00       		.byte	0
 20870              	.LVUS117:
 20871 0a66 01       		.uleb128 .LVU195
 20872 0a67 00       		.uleb128 .LVU201
 20873 0a68 00       		.uleb128 .LVU201
 20874 0a69 00       		.uleb128 .LVU202
 20875              	.LLST117:
 20876 0a6a 06       		.byte	0x6
 20877 0a6b 00000000 		.quad	.LVL43
 20877      00000000 
 20878 0a73 04       		.byte	0x4
 20879 0a74 00       		.uleb128 .LVL43-.LVL43
 20880 0a75 0C       		.uleb128 .LVL44-1-.LVL43
 20881 0a76 07       		.uleb128 0x7
 20882 0a77 73       		.byte	0x73
 20883 0a78 C800     		.sleb128 72
 20884 0a7a 06       		.byte	0x6
GAS LISTING x64lin/../common/event.s 			page 512


 20885 0a7b 23       		.byte	0x23
 20886 0a7c 08       		.uleb128 0x8
 20887 0a7d 9F       		.byte	0x9f
 20888 0a7e 04       		.byte	0x4
 20889 0a7f 0C       		.uleb128 .LVL44-1-.LVL43
 20890 0a80 0F       		.uleb128 .LVL45-.LVL43
 20891 0a81 01       		.uleb128 0x1
 20892 0a82 5F       		.byte	0x5f
 20893 0a83 00       		.byte	0
 20894              	.LVUS118:
 20895 0a84 01       		.uleb128 .LVU195
 20896 0a85 00       		.uleb128 .LVU201
 20897              	.LLST118:
 20898 0a86 08       		.byte	0x8
 20899 0a87 00000000 		.quad	.LVL43
 20899      00000000 
 20900 0a8f 0C       		.uleb128 .LVL44-1-.LVL43
 20901 0a90 01       		.uleb128 0x1
 20902 0a91 54       		.byte	0x54
 20903 0a92 00       		.byte	0
 20904              	.LVUS119:
 20905 0a93 02       		.uleb128 .LVU196
 20906 0a94 00       		.uleb128 .LVU202
 20907              	.LLST119:
 20908 0a95 08       		.byte	0x8
 20909 0a96 00000000 		.quad	.LVL43
 20909      00000000 
 20910 0a9e 0F       		.uleb128 .LVL45-.LVL43
 20911 0a9f 01       		.uleb128 0x1
 20912 0aa0 5D       		.byte	0x5d
 20913 0aa1 00       		.byte	0
 20914              	.LVUS120:
 20915 0aa2 02       		.uleb128 .LVU196
 20916 0aa3 00       		.uleb128 .LVU201
 20917 0aa4 00       		.uleb128 .LVU201
 20918 0aa5 00       		.uleb128 .LVU202
 20919              	.LLST120:
 20920 0aa6 06       		.byte	0x6
 20921 0aa7 00000000 		.quad	.LVL43
 20921      00000000 
 20922 0aaf 04       		.byte	0x4
 20923 0ab0 00       		.uleb128 .LVL43-.LVL43
 20924 0ab1 0C       		.uleb128 .LVL44-1-.LVL43
 20925 0ab2 07       		.uleb128 0x7
 20926 0ab3 73       		.byte	0x73
 20927 0ab4 C800     		.sleb128 72
 20928 0ab6 06       		.byte	0x6
 20929 0ab7 23       		.byte	0x23
 20930 0ab8 08       		.uleb128 0x8
 20931 0ab9 9F       		.byte	0x9f
 20932 0aba 04       		.byte	0x4
 20933 0abb 0C       		.uleb128 .LVL44-1-.LVL43
 20934 0abc 0F       		.uleb128 .LVL45-.LVL43
 20935 0abd 01       		.uleb128 0x1
 20936 0abe 5F       		.byte	0x5f
 20937 0abf 00       		.byte	0
 20938              	.LVUS121:
GAS LISTING x64lin/../common/event.s 			page 513


 20939 0ac0 02       		.uleb128 .LVU196
 20940 0ac1 00       		.uleb128 .LVU201
 20941              	.LLST121:
 20942 0ac2 08       		.byte	0x8
 20943 0ac3 00000000 		.quad	.LVL43
 20943      00000000 
 20944 0acb 0C       		.uleb128 .LVL44-1-.LVL43
 20945 0acc 01       		.uleb128 0x1
 20946 0acd 54       		.byte	0x54
 20947 0ace 00       		.byte	0
 20948              	.LVUS122:
 20949 0acf 03       		.uleb128 .LVU197
 20950 0ad0 00       		.uleb128 .LVU202
 20951              	.LLST122:
 20952 0ad1 08       		.byte	0x8
 20953 0ad2 00000000 		.quad	.LVL43
 20953      00000000 
 20954 0ada 0F       		.uleb128 .LVL45-.LVL43
 20955 0adb 01       		.uleb128 0x1
 20956 0adc 5D       		.byte	0x5d
 20957 0add 00       		.byte	0
 20958              	.LVUS123:
 20959 0ade 03       		.uleb128 .LVU197
 20960 0adf 00       		.uleb128 .LVU201
 20961 0ae0 00       		.uleb128 .LVU201
 20962 0ae1 00       		.uleb128 .LVU202
 20963              	.LLST123:
 20964 0ae2 06       		.byte	0x6
 20965 0ae3 00000000 		.quad	.LVL43
 20965      00000000 
 20966 0aeb 04       		.byte	0x4
 20967 0aec 00       		.uleb128 .LVL43-.LVL43
 20968 0aed 0C       		.uleb128 .LVL44-1-.LVL43
 20969 0aee 07       		.uleb128 0x7
 20970 0aef 73       		.byte	0x73
 20971 0af0 C800     		.sleb128 72
 20972 0af2 06       		.byte	0x6
 20973 0af3 23       		.byte	0x23
 20974 0af4 08       		.uleb128 0x8
 20975 0af5 9F       		.byte	0x9f
 20976 0af6 04       		.byte	0x4
 20977 0af7 0C       		.uleb128 .LVL44-1-.LVL43
 20978 0af8 0F       		.uleb128 .LVL45-.LVL43
 20979 0af9 01       		.uleb128 0x1
 20980 0afa 5F       		.byte	0x5f
 20981 0afb 00       		.byte	0
 20982              	.LVUS124:
 20983 0afc 03       		.uleb128 .LVU197
 20984 0afd 00       		.uleb128 .LVU201
 20985              	.LLST124:
 20986 0afe 08       		.byte	0x8
 20987 0aff 00000000 		.quad	.LVL43
 20987      00000000 
 20988 0b07 0C       		.uleb128 .LVL44-1-.LVL43
 20989 0b08 01       		.uleb128 0x1
 20990 0b09 54       		.byte	0x54
 20991 0b0a 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 514


 20992              	.LVUS125:
 20993 0b0b 04       		.uleb128 .LVU198
 20994 0b0c 00       		.uleb128 .LVU202
 20995              	.LLST125:
 20996 0b0d 08       		.byte	0x8
 20997 0b0e 00000000 		.quad	.LVL43
 20997      00000000 
 20998 0b16 0F       		.uleb128 .LVL45-.LVL43
 20999 0b17 01       		.uleb128 0x1
 21000 0b18 5D       		.byte	0x5d
 21001 0b19 00       		.byte	0
 21002              	.LVUS126:
 21003 0b1a 04       		.uleb128 .LVU198
 21004 0b1b 00       		.uleb128 .LVU201
 21005 0b1c 00       		.uleb128 .LVU201
 21006 0b1d 00       		.uleb128 .LVU202
 21007              	.LLST126:
 21008 0b1e 06       		.byte	0x6
 21009 0b1f 00000000 		.quad	.LVL43
 21009      00000000 
 21010 0b27 04       		.byte	0x4
 21011 0b28 00       		.uleb128 .LVL43-.LVL43
 21012 0b29 0C       		.uleb128 .LVL44-1-.LVL43
 21013 0b2a 07       		.uleb128 0x7
 21014 0b2b 73       		.byte	0x73
 21015 0b2c C800     		.sleb128 72
 21016 0b2e 06       		.byte	0x6
 21017 0b2f 23       		.byte	0x23
 21018 0b30 08       		.uleb128 0x8
 21019 0b31 9F       		.byte	0x9f
 21020 0b32 04       		.byte	0x4
 21021 0b33 0C       		.uleb128 .LVL44-1-.LVL43
 21022 0b34 0F       		.uleb128 .LVL45-.LVL43
 21023 0b35 01       		.uleb128 0x1
 21024 0b36 5F       		.byte	0x5f
 21025 0b37 00       		.byte	0
 21026              	.LVUS127:
 21027 0b38 04       		.uleb128 .LVU198
 21028 0b39 00       		.uleb128 .LVU201
 21029              	.LLST127:
 21030 0b3a 08       		.byte	0x8
 21031 0b3b 00000000 		.quad	.LVL43
 21031      00000000 
 21032 0b43 0C       		.uleb128 .LVL44-1-.LVL43
 21033 0b44 01       		.uleb128 0x1
 21034 0b45 54       		.byte	0x54
 21035 0b46 00       		.byte	0
 21036              	.LVUS128:
 21037 0b47 05       		.uleb128 .LVU199
 21038 0b48 00       		.uleb128 .LVU201
 21039              	.LLST128:
 21040 0b49 08       		.byte	0x8
 21041 0b4a 00000000 		.quad	.LVL43
 21041      00000000 
 21042 0b52 0C       		.uleb128 .LVL44-1-.LVL43
 21043 0b53 0C       		.uleb128 0xc
 21044 0b54 73       		.byte	0x73
GAS LISTING x64lin/../common/event.s 			page 515


 21045 0b55 C800     		.sleb128 72
 21046 0b57 06       		.byte	0x6
 21047 0b58 74       		.byte	0x74
 21048 0b59 00       		.sleb128 0
 21049 0b5a 1C       		.byte	0x1c
 21050 0b5b 23       		.byte	0x23
 21051 0b5c 08       		.uleb128 0x8
 21052 0b5d 38       		.byte	0x38
 21053 0b5e 1B       		.byte	0x1b
 21054 0b5f 9F       		.byte	0x9f
 21055 0b60 00       		.byte	0
 21056              	.LVUS129:
 21057 0b61 00       		.uleb128 .LVU202
 21058 0b62 00       		.uleb128 .LVU210
 21059 0b63 00       		.uleb128 .LVU210
 21060 0b64 00       		.uleb128 .LVU211
 21061 0b65 00       		.uleb128 .LVU211
 21062 0b66 00       		.uleb128 .LVU214
 21063              	.LLST129:
 21064 0b67 06       		.byte	0x6
 21065 0b68 00000000 		.quad	.LVL45
 21065      00000000 
 21066 0b70 04       		.byte	0x4
 21067 0b71 00       		.uleb128 .LVL45-.LVL45
 21068 0b72 11       		.uleb128 .LVL46-.LVL45
 21069 0b73 08       		.uleb128 0x8
 21070 0b74 7D       		.byte	0x7d
 21071 0b75 00       		.sleb128 0
 21072 0b76 7E       		.byte	0x7e
 21073 0b77 00       		.sleb128 0
 21074 0b78 22       		.byte	0x22
 21075 0b79 23       		.byte	0x23
 21076 0b7a 08       		.uleb128 0x8
 21077 0b7b 9F       		.byte	0x9f
 21078 0b7c 04       		.byte	0x4
 21079 0b7d 11       		.uleb128 .LVL46-.LVL45
 21080 0b7e 14       		.uleb128 .LVL47-.LVL45
 21081 0b7f 06       		.uleb128 0x6
 21082 0b80 7D       		.byte	0x7d
 21083 0b81 00       		.sleb128 0
 21084 0b82 75       		.byte	0x75
 21085 0b83 00       		.sleb128 0
 21086 0b84 22       		.byte	0x22
 21087 0b85 9F       		.byte	0x9f
 21088 0b86 04       		.byte	0x4
 21089 0b87 14       		.uleb128 .LVL47-.LVL45
 21090 0b88 21       		.uleb128 .LVL49-.LVL45
 21091 0b89 08       		.uleb128 0x8
 21092 0b8a 7D       		.byte	0x7d
 21093 0b8b 00       		.sleb128 0
 21094 0b8c 7E       		.byte	0x7e
 21095 0b8d 00       		.sleb128 0
 21096 0b8e 22       		.byte	0x22
 21097 0b8f 23       		.byte	0x23
 21098 0b90 08       		.uleb128 0x8
 21099 0b91 9F       		.byte	0x9f
 21100 0b92 00       		.byte	0
GAS LISTING x64lin/../common/event.s 			page 516


 21101              	.LVUS130:
 21102 0b93 00       		.uleb128 .LVU202
 21103 0b94 00       		.uleb128 .LVU213
 21104 0b95 00       		.uleb128 .LVU213
 21105 0b96 00       		.uleb128 .LVU214
 21106              	.LLST130:
 21107 0b97 06       		.byte	0x6
 21108 0b98 00000000 		.quad	.LVL45
 21108      00000000 
 21109 0ba0 04       		.byte	0x4
 21110 0ba1 00       		.uleb128 .LVL45-.LVL45
 21111 0ba2 1B       		.uleb128 .LVL48-1-.LVL45
 21112 0ba3 07       		.uleb128 0x7
 21113 0ba4 73       		.byte	0x73
 21114 0ba5 C800     		.sleb128 72
 21115 0ba7 06       		.byte	0x6
 21116 0ba8 23       		.byte	0x23
 21117 0ba9 08       		.uleb128 0x8
 21118 0baa 9F       		.byte	0x9f
 21119 0bab 04       		.byte	0x4
 21120 0bac 1B       		.uleb128 .LVL48-1-.LVL45
 21121 0bad 21       		.uleb128 .LVL49-.LVL45
 21122 0bae 01       		.uleb128 0x1
 21123 0baf 5F       		.byte	0x5f
 21124 0bb0 00       		.byte	0
 21125              	.LVUS131:
 21126 0bb1 00       		.uleb128 .LVU202
 21127 0bb2 00       		.uleb128 .LVU213
 21128              	.LLST131:
 21129 0bb3 08       		.byte	0x8
 21130 0bb4 00000000 		.quad	.LVL45
 21130      00000000 
 21131 0bbc 1B       		.uleb128 .LVL48-1-.LVL45
 21132 0bbd 01       		.uleb128 0x1
 21133 0bbe 54       		.byte	0x54
 21134 0bbf 00       		.byte	0
 21135              	.LVUS132:
 21136 0bc0 02       		.uleb128 .LVU204
 21137 0bc1 00       		.uleb128 .LVU210
 21138 0bc2 00       		.uleb128 .LVU210
 21139 0bc3 00       		.uleb128 .LVU211
 21140 0bc4 00       		.uleb128 .LVU211
 21141 0bc5 00       		.uleb128 .LVU214
 21142              	.LLST132:
 21143 0bc6 06       		.byte	0x6
 21144 0bc7 00000000 		.quad	.LVL45
 21144      00000000 
 21145 0bcf 04       		.byte	0x4
 21146 0bd0 00       		.uleb128 .LVL45-.LVL45
 21147 0bd1 11       		.uleb128 .LVL46-.LVL45
 21148 0bd2 08       		.uleb128 0x8
 21149 0bd3 7D       		.byte	0x7d
 21150 0bd4 00       		.sleb128 0
 21151 0bd5 7E       		.byte	0x7e
 21152 0bd6 00       		.sleb128 0
 21153 0bd7 22       		.byte	0x22
 21154 0bd8 23       		.byte	0x23
GAS LISTING x64lin/../common/event.s 			page 517


 21155 0bd9 08       		.uleb128 0x8
 21156 0bda 9F       		.byte	0x9f
 21157 0bdb 04       		.byte	0x4
 21158 0bdc 11       		.uleb128 .LVL46-.LVL45
 21159 0bdd 14       		.uleb128 .LVL47-.LVL45
 21160 0bde 06       		.uleb128 0x6
 21161 0bdf 7D       		.byte	0x7d
 21162 0be0 00       		.sleb128 0
 21163 0be1 75       		.byte	0x75
 21164 0be2 00       		.sleb128 0
 21165 0be3 22       		.byte	0x22
 21166 0be4 9F       		.byte	0x9f
 21167 0be5 04       		.byte	0x4
 21168 0be6 14       		.uleb128 .LVL47-.LVL45
 21169 0be7 21       		.uleb128 .LVL49-.LVL45
 21170 0be8 08       		.uleb128 0x8
 21171 0be9 7D       		.byte	0x7d
 21172 0bea 00       		.sleb128 0
 21173 0beb 7E       		.byte	0x7e
 21174 0bec 00       		.sleb128 0
 21175 0bed 22       		.byte	0x22
 21176 0bee 23       		.byte	0x23
 21177 0bef 08       		.uleb128 0x8
 21178 0bf0 9F       		.byte	0x9f
 21179 0bf1 00       		.byte	0
 21180              	.LVUS133:
 21181 0bf2 02       		.uleb128 .LVU204
 21182 0bf3 00       		.uleb128 .LVU213
 21183 0bf4 00       		.uleb128 .LVU213
 21184 0bf5 00       		.uleb128 .LVU214
 21185              	.LLST133:
 21186 0bf6 06       		.byte	0x6
 21187 0bf7 00000000 		.quad	.LVL45
 21187      00000000 
 21188 0bff 04       		.byte	0x4
 21189 0c00 00       		.uleb128 .LVL45-.LVL45
 21190 0c01 1B       		.uleb128 .LVL48-1-.LVL45
 21191 0c02 07       		.uleb128 0x7
 21192 0c03 73       		.byte	0x73
 21193 0c04 C800     		.sleb128 72
 21194 0c06 06       		.byte	0x6
 21195 0c07 23       		.byte	0x23
 21196 0c08 08       		.uleb128 0x8
 21197 0c09 9F       		.byte	0x9f
 21198 0c0a 04       		.byte	0x4
 21199 0c0b 1B       		.uleb128 .LVL48-1-.LVL45
 21200 0c0c 21       		.uleb128 .LVL49-.LVL45
 21201 0c0d 01       		.uleb128 0x1
 21202 0c0e 5F       		.byte	0x5f
 21203 0c0f 00       		.byte	0
 21204              	.LVUS134:
 21205 0c10 02       		.uleb128 .LVU204
 21206 0c11 00       		.uleb128 .LVU213
 21207              	.LLST134:
 21208 0c12 08       		.byte	0x8
 21209 0c13 00000000 		.quad	.LVL45
 21209      00000000 
GAS LISTING x64lin/../common/event.s 			page 518


 21210 0c1b 1B       		.uleb128 .LVL48-1-.LVL45
 21211 0c1c 01       		.uleb128 0x1
 21212 0c1d 54       		.byte	0x54
 21213 0c1e 00       		.byte	0
 21214              	.LVUS135:
 21215 0c1f 03       		.uleb128 .LVU205
 21216 0c20 00       		.uleb128 .LVU210
 21217 0c21 00       		.uleb128 .LVU210
 21218 0c22 00       		.uleb128 .LVU211
 21219 0c23 00       		.uleb128 .LVU211
 21220 0c24 00       		.uleb128 .LVU214
 21221              	.LLST135:
 21222 0c25 06       		.byte	0x6
 21223 0c26 00000000 		.quad	.LVL45
 21223      00000000 
 21224 0c2e 04       		.byte	0x4
 21225 0c2f 00       		.uleb128 .LVL45-.LVL45
 21226 0c30 11       		.uleb128 .LVL46-.LVL45
 21227 0c31 08       		.uleb128 0x8
 21228 0c32 7D       		.byte	0x7d
 21229 0c33 00       		.sleb128 0
 21230 0c34 7E       		.byte	0x7e
 21231 0c35 00       		.sleb128 0
 21232 0c36 22       		.byte	0x22
 21233 0c37 23       		.byte	0x23
 21234 0c38 08       		.uleb128 0x8
 21235 0c39 9F       		.byte	0x9f
 21236 0c3a 04       		.byte	0x4
 21237 0c3b 11       		.uleb128 .LVL46-.LVL45
 21238 0c3c 14       		.uleb128 .LVL47-.LVL45
 21239 0c3d 06       		.uleb128 0x6
 21240 0c3e 7D       		.byte	0x7d
 21241 0c3f 00       		.sleb128 0
 21242 0c40 75       		.byte	0x75
 21243 0c41 00       		.sleb128 0
 21244 0c42 22       		.byte	0x22
 21245 0c43 9F       		.byte	0x9f
 21246 0c44 04       		.byte	0x4
 21247 0c45 14       		.uleb128 .LVL47-.LVL45
 21248 0c46 21       		.uleb128 .LVL49-.LVL45
 21249 0c47 08       		.uleb128 0x8
 21250 0c48 7D       		.byte	0x7d
 21251 0c49 00       		.sleb128 0
 21252 0c4a 7E       		.byte	0x7e
 21253 0c4b 00       		.sleb128 0
 21254 0c4c 22       		.byte	0x22
 21255 0c4d 23       		.byte	0x23
 21256 0c4e 08       		.uleb128 0x8
 21257 0c4f 9F       		.byte	0x9f
 21258 0c50 00       		.byte	0
 21259              	.LVUS136:
 21260 0c51 03       		.uleb128 .LVU205
 21261 0c52 00       		.uleb128 .LVU213
 21262 0c53 00       		.uleb128 .LVU213
 21263 0c54 00       		.uleb128 .LVU214
 21264              	.LLST136:
 21265 0c55 06       		.byte	0x6
GAS LISTING x64lin/../common/event.s 			page 519


 21266 0c56 00000000 		.quad	.LVL45
 21266      00000000 
 21267 0c5e 04       		.byte	0x4
 21268 0c5f 00       		.uleb128 .LVL45-.LVL45
 21269 0c60 1B       		.uleb128 .LVL48-1-.LVL45
 21270 0c61 07       		.uleb128 0x7
 21271 0c62 73       		.byte	0x73
 21272 0c63 C800     		.sleb128 72
 21273 0c65 06       		.byte	0x6
 21274 0c66 23       		.byte	0x23
 21275 0c67 08       		.uleb128 0x8
 21276 0c68 9F       		.byte	0x9f
 21277 0c69 04       		.byte	0x4
 21278 0c6a 1B       		.uleb128 .LVL48-1-.LVL45
 21279 0c6b 21       		.uleb128 .LVL49-.LVL45
 21280 0c6c 01       		.uleb128 0x1
 21281 0c6d 5F       		.byte	0x5f
 21282 0c6e 00       		.byte	0
 21283              	.LVUS137:
 21284 0c6f 03       		.uleb128 .LVU205
 21285 0c70 00       		.uleb128 .LVU213
 21286              	.LLST137:
 21287 0c71 08       		.byte	0x8
 21288 0c72 00000000 		.quad	.LVL45
 21288      00000000 
 21289 0c7a 1B       		.uleb128 .LVL48-1-.LVL45
 21290 0c7b 01       		.uleb128 0x1
 21291 0c7c 54       		.byte	0x54
 21292 0c7d 00       		.byte	0
 21293              	.LVUS138:
 21294 0c7e 04       		.uleb128 .LVU206
 21295 0c7f 00       		.uleb128 .LVU210
 21296 0c80 00       		.uleb128 .LVU210
 21297 0c81 00       		.uleb128 .LVU211
 21298 0c82 00       		.uleb128 .LVU211
 21299 0c83 00       		.uleb128 .LVU214
 21300              	.LLST138:
 21301 0c84 06       		.byte	0x6
 21302 0c85 00000000 		.quad	.LVL45
 21302      00000000 
 21303 0c8d 04       		.byte	0x4
 21304 0c8e 00       		.uleb128 .LVL45-.LVL45
 21305 0c8f 11       		.uleb128 .LVL46-.LVL45
 21306 0c90 08       		.uleb128 0x8
 21307 0c91 7D       		.byte	0x7d
 21308 0c92 00       		.sleb128 0
 21309 0c93 7E       		.byte	0x7e
 21310 0c94 00       		.sleb128 0
 21311 0c95 22       		.byte	0x22
 21312 0c96 23       		.byte	0x23
 21313 0c97 08       		.uleb128 0x8
 21314 0c98 9F       		.byte	0x9f
 21315 0c99 04       		.byte	0x4
 21316 0c9a 11       		.uleb128 .LVL46-.LVL45
 21317 0c9b 14       		.uleb128 .LVL47-.LVL45
 21318 0c9c 06       		.uleb128 0x6
 21319 0c9d 7D       		.byte	0x7d
GAS LISTING x64lin/../common/event.s 			page 520


 21320 0c9e 00       		.sleb128 0
 21321 0c9f 75       		.byte	0x75
 21322 0ca0 00       		.sleb128 0
 21323 0ca1 22       		.byte	0x22
 21324 0ca2 9F       		.byte	0x9f
 21325 0ca3 04       		.byte	0x4
 21326 0ca4 14       		.uleb128 .LVL47-.LVL45
 21327 0ca5 21       		.uleb128 .LVL49-.LVL45
 21328 0ca6 08       		.uleb128 0x8
 21329 0ca7 7D       		.byte	0x7d
 21330 0ca8 00       		.sleb128 0
 21331 0ca9 7E       		.byte	0x7e
 21332 0caa 00       		.sleb128 0
 21333 0cab 22       		.byte	0x22
 21334 0cac 23       		.byte	0x23
 21335 0cad 08       		.uleb128 0x8
 21336 0cae 9F       		.byte	0x9f
 21337 0caf 00       		.byte	0
 21338              	.LVUS139:
 21339 0cb0 04       		.uleb128 .LVU206
 21340 0cb1 00       		.uleb128 .LVU213
 21341 0cb2 00       		.uleb128 .LVU213
 21342 0cb3 00       		.uleb128 .LVU214
 21343              	.LLST139:
 21344 0cb4 06       		.byte	0x6
 21345 0cb5 00000000 		.quad	.LVL45
 21345      00000000 
 21346 0cbd 04       		.byte	0x4
 21347 0cbe 00       		.uleb128 .LVL45-.LVL45
 21348 0cbf 1B       		.uleb128 .LVL48-1-.LVL45
 21349 0cc0 07       		.uleb128 0x7
 21350 0cc1 73       		.byte	0x73
 21351 0cc2 C800     		.sleb128 72
 21352 0cc4 06       		.byte	0x6
 21353 0cc5 23       		.byte	0x23
 21354 0cc6 08       		.uleb128 0x8
 21355 0cc7 9F       		.byte	0x9f
 21356 0cc8 04       		.byte	0x4
 21357 0cc9 1B       		.uleb128 .LVL48-1-.LVL45
 21358 0cca 21       		.uleb128 .LVL49-.LVL45
 21359 0ccb 01       		.uleb128 0x1
 21360 0ccc 5F       		.byte	0x5f
 21361 0ccd 00       		.byte	0
 21362              	.LVUS140:
 21363 0cce 04       		.uleb128 .LVU206
 21364 0ccf 00       		.uleb128 .LVU213
 21365              	.LLST140:
 21366 0cd0 08       		.byte	0x8
 21367 0cd1 00000000 		.quad	.LVL45
 21367      00000000 
 21368 0cd9 1B       		.uleb128 .LVL48-1-.LVL45
 21369 0cda 01       		.uleb128 0x1
 21370 0cdb 54       		.byte	0x54
 21371 0cdc 00       		.byte	0
 21372              	.LVUS141:
 21373 0cdd 05       		.uleb128 .LVU207
 21374 0cde 00       		.uleb128 .LVU210
GAS LISTING x64lin/../common/event.s 			page 521


 21375 0cdf 00       		.uleb128 .LVU210
 21376 0ce0 00       		.uleb128 .LVU211
 21377 0ce1 00       		.uleb128 .LVU211
 21378 0ce2 00       		.uleb128 .LVU214
 21379              	.LLST141:
 21380 0ce3 06       		.byte	0x6
 21381 0ce4 00000000 		.quad	.LVL45
 21381      00000000 
 21382 0cec 04       		.byte	0x4
 21383 0ced 00       		.uleb128 .LVL45-.LVL45
 21384 0cee 11       		.uleb128 .LVL46-.LVL45
 21385 0cef 08       		.uleb128 0x8
 21386 0cf0 7D       		.byte	0x7d
 21387 0cf1 00       		.sleb128 0
 21388 0cf2 7E       		.byte	0x7e
 21389 0cf3 00       		.sleb128 0
 21390 0cf4 22       		.byte	0x22
 21391 0cf5 23       		.byte	0x23
 21392 0cf6 08       		.uleb128 0x8
 21393 0cf7 9F       		.byte	0x9f
 21394 0cf8 04       		.byte	0x4
 21395 0cf9 11       		.uleb128 .LVL46-.LVL45
 21396 0cfa 14       		.uleb128 .LVL47-.LVL45
 21397 0cfb 06       		.uleb128 0x6
 21398 0cfc 7D       		.byte	0x7d
 21399 0cfd 00       		.sleb128 0
 21400 0cfe 75       		.byte	0x75
 21401 0cff 00       		.sleb128 0
 21402 0d00 22       		.byte	0x22
 21403 0d01 9F       		.byte	0x9f
 21404 0d02 04       		.byte	0x4
 21405 0d03 14       		.uleb128 .LVL47-.LVL45
 21406 0d04 21       		.uleb128 .LVL49-.LVL45
 21407 0d05 08       		.uleb128 0x8
 21408 0d06 7D       		.byte	0x7d
 21409 0d07 00       		.sleb128 0
 21410 0d08 7E       		.byte	0x7e
 21411 0d09 00       		.sleb128 0
 21412 0d0a 22       		.byte	0x22
 21413 0d0b 23       		.byte	0x23
 21414 0d0c 08       		.uleb128 0x8
 21415 0d0d 9F       		.byte	0x9f
 21416 0d0e 00       		.byte	0
 21417              	.LVUS142:
 21418 0d0f 05       		.uleb128 .LVU207
 21419 0d10 00       		.uleb128 .LVU213
 21420 0d11 00       		.uleb128 .LVU213
 21421 0d12 00       		.uleb128 .LVU214
 21422              	.LLST142:
 21423 0d13 06       		.byte	0x6
 21424 0d14 00000000 		.quad	.LVL45
 21424      00000000 
 21425 0d1c 04       		.byte	0x4
 21426 0d1d 00       		.uleb128 .LVL45-.LVL45
 21427 0d1e 1B       		.uleb128 .LVL48-1-.LVL45
 21428 0d1f 07       		.uleb128 0x7
 21429 0d20 73       		.byte	0x73
GAS LISTING x64lin/../common/event.s 			page 522


 21430 0d21 C800     		.sleb128 72
 21431 0d23 06       		.byte	0x6
 21432 0d24 23       		.byte	0x23
 21433 0d25 08       		.uleb128 0x8
 21434 0d26 9F       		.byte	0x9f
 21435 0d27 04       		.byte	0x4
 21436 0d28 1B       		.uleb128 .LVL48-1-.LVL45
 21437 0d29 21       		.uleb128 .LVL49-.LVL45
 21438 0d2a 01       		.uleb128 0x1
 21439 0d2b 5F       		.byte	0x5f
 21440 0d2c 00       		.byte	0
 21441              	.LVUS143:
 21442 0d2d 05       		.uleb128 .LVU207
 21443 0d2e 00       		.uleb128 .LVU213
 21444              	.LLST143:
 21445 0d2f 08       		.byte	0x8
 21446 0d30 00000000 		.quad	.LVL45
 21446      00000000 
 21447 0d38 1B       		.uleb128 .LVL48-1-.LVL45
 21448 0d39 01       		.uleb128 0x1
 21449 0d3a 54       		.byte	0x54
 21450 0d3b 00       		.byte	0
 21451              	.LVUS144:
 21452 0d3c 06       		.uleb128 .LVU208
 21453 0d3d 00       		.uleb128 .LVU213
 21454              	.LLST144:
 21455 0d3e 08       		.byte	0x8
 21456 0d3f 00000000 		.quad	.LVL45
 21456      00000000 
 21457 0d47 1B       		.uleb128 .LVL48-1-.LVL45
 21458 0d48 0C       		.uleb128 0xc
 21459 0d49 73       		.byte	0x73
 21460 0d4a C800     		.sleb128 72
 21461 0d4c 06       		.byte	0x6
 21462 0d4d 74       		.byte	0x74
 21463 0d4e 00       		.sleb128 0
 21464 0d4f 1C       		.byte	0x1c
 21465 0d50 23       		.byte	0x23
 21466 0d51 08       		.uleb128 0x8
 21467 0d52 38       		.byte	0x38
 21468 0d53 1B       		.byte	0x1b
 21469 0d54 9F       		.byte	0x9f
 21470 0d55 00       		.byte	0
 21471              	.LVUS146:
 21472 0d56 00       		.uleb128 .LVU173
 21473 0d57 00       		.uleb128 .LVU181
 21474              	.LLST146:
 21475 0d58 08       		.byte	0x8
 21476 0d59 00000000 		.quad	.LVL38
 21476      00000000 
 21477 0d61 28       		.uleb128 .LVL39-.LVL38
 21478 0d62 01       		.uleb128 0x1
 21479 0d63 5D       		.byte	0x5d
 21480 0d64 00       		.byte	0
 21481              	.LVUS147:
 21482 0d65 00       		.uleb128 .LVU173
 21483 0d66 00       		.uleb128 .LVU181
GAS LISTING x64lin/../common/event.s 			page 523


 21484              	.LLST147:
 21485 0d67 08       		.byte	0x8
 21486 0d68 00000000 		.quad	.LVL38
 21486      00000000 
 21487 0d70 28       		.uleb128 .LVL39-.LVL38
 21488 0d71 03       		.uleb128 0x3
 21489 0d72 73       		.byte	0x73
 21490 0d73 10       		.sleb128 16
 21491 0d74 9F       		.byte	0x9f
 21492 0d75 00       		.byte	0
 21493              	.LVUS149:
 21494 0d76 00       		.uleb128 .LVU181
 21495 0d77 00       		.uleb128 .LVU187
 21496              	.LLST149:
 21497 0d78 08       		.byte	0x8
 21498 0d79 00000000 		.quad	.LVL39
 21498      00000000 
 21499 0d81 19       		.uleb128 .LVL40-.LVL39
 21500 0d82 01       		.uleb128 0x1
 21501 0d83 5F       		.byte	0x5f
 21502 0d84 00       		.byte	0
 21503              	.LVUS150:
 21504 0d85 00       		.uleb128 .LVU181
 21505 0d86 00       		.uleb128 .LVU187
 21506              	.LLST150:
 21507 0d87 08       		.byte	0x8
 21508 0d88 00000000 		.quad	.LVL39
 21508      00000000 
 21509 0d90 19       		.uleb128 .LVL40-.LVL39
 21510 0d91 03       		.uleb128 0x3
 21511 0d92 73       		.byte	0x73
 21512 0d93 30       		.sleb128 48
 21513 0d94 9F       		.byte	0x9f
 21514 0d95 00       		.byte	0
 21515              	.LVUS151:
 21516 0d96 00       		.uleb128 .LVU90
 21517 0d97 00       		.uleb128 .LVU96
 21518              	.LLST151:
 21519 0d98 08       		.byte	0x8
 21520 0d99 00000000 		.quad	.LVL19
 21520      00000000 
 21521 0da1 0A       		.uleb128 .LVL20-.LVL19
 21522 0da2 01       		.uleb128 0x1
 21523 0da3 53       		.byte	0x53
 21524 0da4 00       		.byte	0
 21525              	.LVUS152:
 21526 0da5 02       		.uleb128 .LVU92
 21527 0da6 00       		.uleb128 .LVU96
 21528              	.LLST152:
 21529 0da7 08       		.byte	0x8
 21530 0da8 00000000 		.quad	.LVL19
 21530      00000000 
 21531 0db0 0A       		.uleb128 .LVL20-.LVL19
 21532 0db1 03       		.uleb128 0x3
 21533 0db2 08       		.byte	0x8
 21534 0db3 40       		.byte	0x40
 21535 0db4 9F       		.byte	0x9f
GAS LISTING x64lin/../common/event.s 			page 524


 21536 0db5 00       		.byte	0
 21537              	.LVUS153:
 21538 0db6 02       		.uleb128 .LVU92
 21539 0db7 00       		.uleb128 .LVU96
 21540              	.LLST153:
 21541 0db8 08       		.byte	0x8
 21542 0db9 00000000 		.quad	.LVL19
 21542      00000000 
 21543 0dc1 0A       		.uleb128 .LVL20-.LVL19
 21544 0dc2 01       		.uleb128 0x1
 21545 0dc3 53       		.byte	0x53
 21546 0dc4 00       		.byte	0
 21547              	.LVUS154:
 21548 0dc5 03       		.uleb128 .LVU93
 21549 0dc6 00       		.uleb128 .LVU96
 21550              	.LLST154:
 21551 0dc7 08       		.byte	0x8
 21552 0dc8 00000000 		.quad	.LVL19
 21552      00000000 
 21553 0dd0 0A       		.uleb128 .LVL20-.LVL19
 21554 0dd1 03       		.uleb128 0x3
 21555 0dd2 08       		.byte	0x8
 21556 0dd3 40       		.byte	0x40
 21557 0dd4 9F       		.byte	0x9f
 21558 0dd5 00       		.byte	0
 21559              	.LVUS155:
 21560 0dd6 03       		.uleb128 .LVU93
 21561 0dd7 00       		.uleb128 .LVU96
 21562              	.LLST155:
 21563 0dd8 08       		.byte	0x8
 21564 0dd9 00000000 		.quad	.LVL19
 21564      00000000 
 21565 0de1 0A       		.uleb128 .LVL20-.LVL19
 21566 0de2 01       		.uleb128 0x1
 21567 0de3 53       		.byte	0x53
 21568 0de4 00       		.byte	0
 21569              	.LVUS156:
 21570 0de5 05       		.uleb128 .LVU95
 21571 0de6 00       		.uleb128 .LVU96
 21572              	.LLST156:
 21573 0de7 08       		.byte	0x8
 21574 0de8 00000000 		.quad	.LVL19
 21574      00000000 
 21575 0df0 0A       		.uleb128 .LVL20-.LVL19
 21576 0df1 03       		.uleb128 0x3
 21577 0df2 08       		.byte	0x8
 21578 0df3 40       		.byte	0x40
 21579 0df4 9F       		.byte	0x9f
 21580 0df5 00       		.byte	0
 21581              	.LVUS157:
 21582 0df6 05       		.uleb128 .LVU95
 21583 0df7 00       		.uleb128 .LVU96
 21584              	.LLST157:
 21585 0df8 08       		.byte	0x8
 21586 0df9 00000000 		.quad	.LVL19
 21586      00000000 
 21587 0e01 0A       		.uleb128 .LVL20-.LVL19
GAS LISTING x64lin/../common/event.s 			page 525


 21588 0e02 02       		.uleb128 0x2
 21589 0e03 30       		.byte	0x30
 21590 0e04 9F       		.byte	0x9f
 21591 0e05 00       		.byte	0
 21592              	.LVUS158:
 21593 0e06 05       		.uleb128 .LVU95
 21594 0e07 00       		.uleb128 .LVU96
 21595              	.LLST158:
 21596 0e08 08       		.byte	0x8
 21597 0e09 00000000 		.quad	.LVL19
 21597      00000000 
 21598 0e11 0A       		.uleb128 .LVL20-.LVL19
 21599 0e12 01       		.uleb128 0x1
 21600 0e13 53       		.byte	0x53
 21601 0e14 00       		.byte	0
 21602              	.LVUS160:
 21603 0e15 00       		.uleb128 .LVU98
 21604 0e16 00       		.uleb128 .LVU115
 21605              	.LLST160:
 21606 0e17 08       		.byte	0x8
 21607 0e18 00000000 		.quad	.LVL21
 21607      00000000 
 21608 0e20 17       		.uleb128 .LVL23-.LVL21
 21609 0e21 01       		.uleb128 0x1
 21610 0e22 56       		.byte	0x56
 21611 0e23 00       		.byte	0
 21612              	.LVUS161:
 21613 0e24 00       		.uleb128 .LVU98
 21614 0e25 00       		.uleb128 .LVU115
 21615              	.LLST161:
 21616 0e26 08       		.byte	0x8
 21617 0e27 00000000 		.quad	.LVL21
 21617      00000000 
 21618 0e2f 17       		.uleb128 .LVL23-.LVL21
 21619 0e30 02       		.uleb128 0x2
 21620 0e31 73       		.byte	0x73
 21621 0e32 30       		.sleb128 48
 21622 0e33 00       		.byte	0
 21623              	.LVUS162:
 21624 0e34 00       		.uleb128 .LVU98
 21625 0e35 00       		.uleb128 .LVU115
 21626              	.LLST162:
 21627 0e36 08       		.byte	0x8
 21628 0e37 00000000 		.quad	.LVL21
 21628      00000000 
 21629 0e3f 17       		.uleb128 .LVL23-.LVL21
 21630 0e40 01       		.uleb128 0x1
 21631 0e41 53       		.byte	0x53
 21632 0e42 00       		.byte	0
 21633              	.LVUS163:
 21634 0e43 01       		.uleb128 .LVU99
 21635 0e44 00       		.uleb128 .LVU115
 21636              	.LLST163:
 21637 0e45 08       		.byte	0x8
 21638 0e46 00000000 		.quad	.LVL21
 21638      00000000 
 21639 0e4e 17       		.uleb128 .LVL23-.LVL21
GAS LISTING x64lin/../common/event.s 			page 526


 21640 0e4f 01       		.uleb128 0x1
 21641 0e50 56       		.byte	0x56
 21642 0e51 00       		.byte	0
 21643              	.LVUS164:
 21644 0e52 01       		.uleb128 .LVU99
 21645 0e53 00       		.uleb128 .LVU115
 21646              	.LLST164:
 21647 0e54 08       		.byte	0x8
 21648 0e55 00000000 		.quad	.LVL21
 21648      00000000 
 21649 0e5d 17       		.uleb128 .LVL23-.LVL21
 21650 0e5e 02       		.uleb128 0x2
 21651 0e5f 73       		.byte	0x73
 21652 0e60 30       		.sleb128 48
 21653 0e61 00       		.byte	0
 21654              	.LVUS165:
 21655 0e62 02       		.uleb128 .LVU100
 21656 0e63 00       		.uleb128 .LVU115
 21657              	.LLST165:
 21658 0e64 08       		.byte	0x8
 21659 0e65 00000000 		.quad	.LVL21
 21659      00000000 
 21660 0e6d 17       		.uleb128 .LVL23-.LVL21
 21661 0e6e 01       		.uleb128 0x1
 21662 0e6f 56       		.byte	0x56
 21663 0e70 00       		.byte	0
 21664              	.LVUS166:
 21665 0e71 02       		.uleb128 .LVU100
 21666 0e72 00       		.uleb128 .LVU115
 21667              	.LLST166:
 21668 0e73 08       		.byte	0x8
 21669 0e74 00000000 		.quad	.LVL21
 21669      00000000 
 21670 0e7c 17       		.uleb128 .LVL23-.LVL21
 21671 0e7d 02       		.uleb128 0x2
 21672 0e7e 73       		.byte	0x73
 21673 0e7f 30       		.sleb128 48
 21674 0e80 00       		.byte	0
 21675              	.LVUS167:
 21676 0e81 03       		.uleb128 .LVU101
 21677 0e82 00       		.uleb128 .LVU115
 21678              	.LLST167:
 21679 0e83 08       		.byte	0x8
 21680 0e84 00000000 		.quad	.LVL21
 21680      00000000 
 21681 0e8c 17       		.uleb128 .LVL23-.LVL21
 21682 0e8d 01       		.uleb128 0x1
 21683 0e8e 56       		.byte	0x56
 21684 0e8f 00       		.byte	0
 21685              	.LVUS168:
 21686 0e90 03       		.uleb128 .LVU101
 21687 0e91 00       		.uleb128 .LVU115
 21688              	.LLST168:
 21689 0e92 08       		.byte	0x8
 21690 0e93 00000000 		.quad	.LVL21
 21690      00000000 
 21691 0e9b 17       		.uleb128 .LVL23-.LVL21
GAS LISTING x64lin/../common/event.s 			page 527


 21692 0e9c 02       		.uleb128 0x2
 21693 0e9d 73       		.byte	0x73
 21694 0e9e 30       		.sleb128 48
 21695 0e9f 00       		.byte	0
 21696              	.LVUS169:
 21697 0ea0 04       		.uleb128 .LVU102
 21698 0ea1 00       		.uleb128 .LVU115
 21699              	.LLST169:
 21700 0ea2 08       		.byte	0x8
 21701 0ea3 00000000 		.quad	.LVL21
 21701      00000000 
 21702 0eab 17       		.uleb128 .LVL23-.LVL21
 21703 0eac 01       		.uleb128 0x1
 21704 0ead 56       		.byte	0x56
 21705 0eae 00       		.byte	0
 21706              	.LVUS170:
 21707 0eaf 04       		.uleb128 .LVU102
 21708 0eb0 00       		.uleb128 .LVU115
 21709              	.LLST170:
 21710 0eb1 08       		.byte	0x8
 21711 0eb2 00000000 		.quad	.LVL21
 21711      00000000 
 21712 0eba 17       		.uleb128 .LVL23-.LVL21
 21713 0ebb 02       		.uleb128 0x2
 21714 0ebc 73       		.byte	0x73
 21715 0ebd 30       		.sleb128 48
 21716 0ebe 00       		.byte	0
 21717              	.LVUS171:
 21718 0ebf 05       		.uleb128 .LVU103
 21719 0ec0 06       		.uleb128 .LVU104
 21720              	.LLST171:
 21721 0ec1 08       		.byte	0x8
 21722 0ec2 00000000 		.quad	.LVL21
 21722      00000000 
 21723 0eca 00       		.uleb128 .LVL21-.LVL21
 21724 0ecb 01       		.uleb128 0x1
 21725 0ecc 56       		.byte	0x56
 21726 0ecd 00       		.byte	0
 21727              	.LVUS172:
 21728 0ece 06       		.uleb128 .LVU104
 21729 0ecf 00       		.uleb128 .LVU110
 21730              	.LLST172:
 21731 0ed0 08       		.byte	0x8
 21732 0ed1 00000000 		.quad	.LVL21
 21732      00000000 
 21733 0ed9 0B       		.uleb128 .LVL22-.LVL21
 21734 0eda 01       		.uleb128 0x1
 21735 0edb 56       		.byte	0x56
 21736 0edc 00       		.byte	0
 21737              	.LVUS173:
 21738 0edd 06       		.uleb128 .LVU104
 21739 0ede 00       		.uleb128 .LVU110
 21740              	.LLST173:
 21741 0edf 08       		.byte	0x8
 21742 0ee0 00000000 		.quad	.LVL21
 21742      00000000 
 21743 0ee8 0B       		.uleb128 .LVL22-.LVL21
GAS LISTING x64lin/../common/event.s 			page 528


 21744 0ee9 02       		.uleb128 0x2
 21745 0eea 73       		.byte	0x73
 21746 0eeb 30       		.sleb128 48
 21747 0eec 00       		.byte	0
 21748              	.LVUS174:
 21749 0eed 08       		.uleb128 .LVU106
 21750 0eee 00       		.uleb128 .LVU110
 21751              	.LLST174:
 21752 0eef 08       		.byte	0x8
 21753 0ef0 00000000 		.quad	.LVL21
 21753      00000000 
 21754 0ef8 0B       		.uleb128 .LVL22-.LVL21
 21755 0ef9 01       		.uleb128 0x1
 21756 0efa 56       		.byte	0x56
 21757 0efb 00       		.byte	0
 21758              	.LVUS175:
 21759 0efc 08       		.uleb128 .LVU106
 21760 0efd 00       		.uleb128 .LVU110
 21761              	.LLST175:
 21762 0efe 08       		.byte	0x8
 21763 0eff 00000000 		.quad	.LVL21
 21763      00000000 
 21764 0f07 0B       		.uleb128 .LVL22-.LVL21
 21765 0f08 02       		.uleb128 0x2
 21766 0f09 73       		.byte	0x73
 21767 0f0a 30       		.sleb128 48
 21768 0f0b 00       		.byte	0
 21769              	.LVUS176:
 21770 0f0c 09       		.uleb128 .LVU107
 21771 0f0d 0A       		.uleb128 .LVU108
 21772              	.LLST176:
 21773 0f0e 08       		.byte	0x8
 21774 0f0f 00000000 		.quad	.LVL21
 21774      00000000 
 21775 0f17 00       		.uleb128 .LVL21-.LVL21
 21776 0f18 01       		.uleb128 0x1
 21777 0f19 56       		.byte	0x56
 21778 0f1a 00       		.byte	0
 21779              	.LVUS177:
 21780 0f1b 09       		.uleb128 .LVU107
 21781 0f1c 0A       		.uleb128 .LVU108
 21782              	.LLST177:
 21783 0f1d 08       		.byte	0x8
 21784 0f1e 00000000 		.quad	.LVL21
 21784      00000000 
 21785 0f26 00       		.uleb128 .LVL21-.LVL21
 21786 0f27 02       		.uleb128 0x2
 21787 0f28 73       		.byte	0x73
 21788 0f29 30       		.sleb128 48
 21789 0f2a 00       		.byte	0
 21790              	.LVUS178:
 21791 0f2b 00       		.uleb128 .LVU110
 21792 0f2c 02       		.uleb128 .LVU112
 21793              	.LLST178:
 21794 0f2d 08       		.byte	0x8
 21795 0f2e 00000000 		.quad	.LVL22
 21795      00000000 
GAS LISTING x64lin/../common/event.s 			page 529


 21796 0f36 00       		.uleb128 .LVL22-.LVL22
 21797 0f37 01       		.uleb128 0x1
 21798 0f38 56       		.byte	0x56
 21799 0f39 00       		.byte	0
 21800              	.LVUS180:
 21801 0f3a 00       		.uleb128 .LVU115
 21802 0f3b 00       		.uleb128 .LVU118
 21803 0f3c 00       		.uleb128 .LVU118
 21804 0f3d 00       		.uleb128 .LVU122
 21805 0f3e 00       		.uleb128 .LVU122
 21806 0f3f 00       		.uleb128 .LVU123
 21807              	.LLST180:
 21808 0f40 06       		.byte	0x6
 21809 0f41 00000000 		.quad	.LVL23
 21809      00000000 
 21810 0f49 04       		.byte	0x4
 21811 0f4a 00       		.uleb128 .LVL23-.LVL23
 21812 0f4b 04       		.uleb128 .LVL24-.LVL23
 21813 0f4c 03       		.uleb128 0x3
 21814 0f4d 70       		.byte	0x70
 21815 0f4e 08       		.sleb128 8
 21816 0f4f 9F       		.byte	0x9f
 21817 0f50 04       		.byte	0x4
 21818 0f51 04       		.uleb128 .LVL24-.LVL23
 21819 0f52 18       		.uleb128 .LVL25-.LVL23
 21820 0f53 01       		.uleb128 0x1
 21821 0f54 51       		.byte	0x51
 21822 0f55 04       		.byte	0x4
 21823 0f56 18       		.uleb128 .LVL25-.LVL23
 21824 0f57 23       		.uleb128 .LVL26-.LVL23
 21825 0f58 03       		.uleb128 0x3
 21826 0f59 73       		.byte	0x73
 21827 0f5a C800     		.sleb128 72
 21828 0f5c 00       		.byte	0
 21829              	.LVUS181:
 21830 0f5d 00       		.uleb128 .LVU115
 21831 0f5e 00       		.uleb128 .LVU123
 21832              	.LLST181:
 21833 0f5f 08       		.byte	0x8
 21834 0f60 00000000 		.quad	.LVL23
 21834      00000000 
 21835 0f68 23       		.uleb128 .LVL26-.LVL23
 21836 0f69 03       		.uleb128 0x3
 21837 0f6a 73       		.byte	0x73
 21838 0f6b 30       		.sleb128 48
 21839 0f6c 9F       		.byte	0x9f
 21840 0f6d 00       		.byte	0
 21841              	.LVUS183:
 21842 0f6e 00       		.uleb128 .LVU53
 21843 0f6f 00       		.uleb128 .LVU66
 21844              	.LLST183:
 21845 0f70 08       		.byte	0x8
 21846 0f71 00000000 		.quad	.LVL12
 21846      00000000 
 21847 0f79 16       		.uleb128 .LVL16-.LVL12
 21848 0f7a 06       		.uleb128 0x6
 21849 0f7b A0       		.byte	0xa0
GAS LISTING x64lin/../common/event.s 			page 530


 21850 0f7c 00000000 		.long	.Ldebug_info0+29011
 21851 0f80 00       		.sleb128 0
 21852 0f81 00       		.byte	0
 21853              	.LVUS184:
 21854 0f82 01       		.uleb128 .LVU54
 21855 0f83 00       		.uleb128 .LVU64
 21856 0f84 00       		.uleb128 .LVU64
 21857 0f85 00       		.uleb128 .LVU66
 21858 0f86 00       		.uleb128 .LVU66
 21859 0f87 00       		.uleb128 .LVU66
 21860              	.LLST184:
 21861 0f88 06       		.byte	0x6
 21862 0f89 00000000 		.quad	.LVL12
 21862      00000000 
 21863 0f91 04       		.byte	0x4
 21864 0f92 00       		.uleb128 .LVL12-.LVL12
 21865 0f93 0B       		.uleb128 .LVL15-.LVL12
 21866 0f94 01       		.uleb128 0x1
 21867 0f95 5C       		.byte	0x5c
 21868 0f96 04       		.byte	0x4
 21869 0f97 0B       		.uleb128 .LVL15-.LVL12
 21870 0f98 15       		.uleb128 .LVL16-1-.LVL12
 21871 0f99 01       		.uleb128 0x1
 21872 0f9a 55       		.byte	0x55
 21873 0f9b 04       		.byte	0x4
 21874 0f9c 15       		.uleb128 .LVL16-1-.LVL12
 21875 0f9d 16       		.uleb128 .LVL16-.LVL12
 21876 0f9e 06       		.uleb128 0x6
 21877 0f9f A3       		.byte	0xa3
 21878 0fa0 01       		.uleb128 0x1
 21879 0fa1 55       		.byte	0x55
 21880 0fa2 23       		.byte	0x23
 21881 0fa3 50       		.uleb128 0x50
 21882 0fa4 9F       		.byte	0x9f
 21883 0fa5 00       		.byte	0
 21884              	.LVUS185:
 21885 0fa6 03       		.uleb128 .LVU56
 21886 0fa7 00       		.uleb128 .LVU64
 21887 0fa8 00       		.uleb128 .LVU64
 21888 0fa9 00       		.uleb128 .LVU66
 21889 0faa 00       		.uleb128 .LVU66
 21890 0fab 00       		.uleb128 .LVU66
 21891              	.LLST185:
 21892 0fac 06       		.byte	0x6
 21893 0fad 00000000 		.quad	.LVL12
 21893      00000000 
 21894 0fb5 04       		.byte	0x4
 21895 0fb6 00       		.uleb128 .LVL12-.LVL12
 21896 0fb7 0B       		.uleb128 .LVL15-.LVL12
 21897 0fb8 01       		.uleb128 0x1
 21898 0fb9 5C       		.byte	0x5c
 21899 0fba 04       		.byte	0x4
 21900 0fbb 0B       		.uleb128 .LVL15-.LVL12
 21901 0fbc 15       		.uleb128 .LVL16-1-.LVL12
 21902 0fbd 01       		.uleb128 0x1
 21903 0fbe 55       		.byte	0x55
 21904 0fbf 04       		.byte	0x4
GAS LISTING x64lin/../common/event.s 			page 531


 21905 0fc0 15       		.uleb128 .LVL16-1-.LVL12
 21906 0fc1 16       		.uleb128 .LVL16-.LVL12
 21907 0fc2 06       		.uleb128 0x6
 21908 0fc3 A3       		.byte	0xa3
 21909 0fc4 01       		.uleb128 0x1
 21910 0fc5 55       		.byte	0x55
 21911 0fc6 23       		.byte	0x23
 21912 0fc7 50       		.uleb128 0x50
 21913 0fc8 9F       		.byte	0x9f
 21914 0fc9 00       		.byte	0
 21915              	.LVUS187:
 21916 0fca 00       		.uleb128 0
 21917 0fcb 00       		.uleb128 .LVU234
 21918              	.LLST187:
 21919 0fcc 08       		.byte	0x8
 21920 0fcd 00000000 		.quad	.LVL55
 21920      00000000 
 21921 0fd5 0B       		.uleb128 .LVL56-.LVL55
 21922 0fd6 06       		.uleb128 0x6
 21923 0fd7 A0       		.byte	0xa0
 21924 0fd8 00000000 		.long	.Ldebug_info0+29011
 21925 0fdc 00       		.sleb128 0
 21926 0fdd 00       		.byte	0
 21927              	.LVUS189:
 21928 0fde 02       		.uleb128 .LVU228
 21929 0fdf 00       		.uleb128 .LVU234
 21930              	.LLST189:
 21931 0fe0 08       		.byte	0x8
 21932 0fe1 00000000 		.quad	.LVL55
 21932      00000000 
 21933 0fe9 0B       		.uleb128 .LVL56-.LVL55
 21934 0fea 01       		.uleb128 0x1
 21935 0feb 5C       		.byte	0x5c
 21936 0fec 00       		.byte	0
 21937              	.LVUS190:
 21938 0fed 04       		.uleb128 .LVU230
 21939 0fee 00       		.uleb128 .LVU234
 21940              	.LLST190:
 21941 0fef 08       		.byte	0x8
 21942 0ff0 00000000 		.quad	.LVL55
 21942      00000000 
 21943 0ff8 0B       		.uleb128 .LVL56-.LVL55
 21944 0ff9 01       		.uleb128 0x1
 21945 0ffa 5C       		.byte	0x5c
 21946 0ffb 00       		.byte	0
 21947              	.Ldebug_loc3:
 21948              		.section	.debug_aranges,"",@progbits
 21949 0000 3C000000 		.long	0x3c
 21950 0004 0200     		.value	0x2
 21951 0006 00000000 		.long	.Ldebug_info0
 21952 000a 08       		.byte	0x8
 21953 000b 00       		.byte	0
 21954 000c 0000     		.value	0
 21955 000e 0000     		.value	0
 21956 0010 00000000 		.quad	.Ltext0
 21956      00000000 
 21957 0018 87020000 		.quad	.Letext0-.Ltext0
GAS LISTING x64lin/../common/event.s 			page 532


 21957      00000000 
 21958 0020 00000000 		.quad	.Ltext_cold0
 21958      00000000 
 21959 0028 13000000 		.quad	.Letext_cold0-.Ltext_cold0
 21959      00000000 
 21960 0030 00000000 		.quad	0
 21960      00000000 
 21961 0038 00000000 		.quad	0
 21961      00000000 
 21962              		.section	.debug_rnglists,"",@progbits
 21963              	.Ldebug_ranges0:
 21964 0000 AD010000 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 21965              	.Ldebug_ranges2:
 21966 0004 0500     		.value	0x5
 21967 0006 08       		.byte	0x8
 21968 0007 00       		.byte	0
 21969 0008 00000000 		.long	0
 21970              	.LLRL0:
 21971 000c 07       		.byte	0x7
 21972 000d 00000000 		.quad	.LFB5359
 21972      00000000 
 21973 0015 8705     		.uleb128 .LHOTE1-.LFB5359
 21974 0017 07       		.byte	0x7
 21975 0018 00000000 		.quad	.LFSB5359
 21975      00000000 
 21976 0020 13       		.uleb128 .LCOLDE1-.LFSB5359
 21977 0021 00       		.byte	0
 21978              	.LLRL4:
 21979 0022 05       		.byte	0x5
 21980 0023 00000000 		.quad	.LBB553
 21980      00000000 
 21981 002b 04       		.byte	0x4
 21982 002c 00       		.uleb128 .LBB553-.LBB553
 21983 002d 00       		.uleb128 .LBE553-.LBB553
 21984 002e 04       		.byte	0x4
 21985 002f 08       		.uleb128 .LBB570-.LBB553
 21986 0030 0C       		.uleb128 .LBE570-.LBB553
 21987 0031 04       		.byte	0x4
 21988 0032 14       		.uleb128 .LBB571-.LBB553
 21989 0033 17       		.uleb128 .LBE571-.LBB553
 21990 0034 04       		.byte	0x4
 21991 0035 1B       		.uleb128 .LBB572-.LBB553
 21992 0036 28       		.uleb128 .LBE572-.LBB553
 21993 0037 04       		.byte	0x4
 21994 0038 E404     		.uleb128 .LBB736-.LBB553
 21995 003a EB04     		.uleb128 .LBE736-.LBB553
 21996 003c 00       		.byte	0
 21997              	.LLRL9:
 21998 003d 05       		.byte	0x5
 21999 003e 00000000 		.quad	.LBB556
 21999      00000000 
 22000 0046 04       		.byte	0x4
 22001 0047 00       		.uleb128 .LBB556-.LBB556
 22002 0048 00       		.uleb128 .LBE556-.LBB556
 22003 0049 04       		.byte	0x4
 22004 004a 08       		.uleb128 .LBB560-.LBB556
 22005 004b 0B       		.uleb128 .LBE560-.LBB556
GAS LISTING x64lin/../common/event.s 			page 533


 22006 004c 04       		.byte	0x4
 22007 004d 0F       		.uleb128 .LBB561-.LBB556
 22008 004e 14       		.uleb128 .LBE561-.LBB556
 22009 004f 00       		.byte	0
 22010              	.LLRL11:
 22011 0050 05       		.byte	0x5
 22012 0051 00000000 		.quad	.LBB573
 22012      00000000 
 22013 0059 04       		.byte	0x4
 22014 005a 00       		.uleb128 .LBB573-.LBB573
 22015 005b 29       		.uleb128 .LBE573-.LBB573
 22016 005c 04       		.byte	0x4
 22017 005d 4C       		.uleb128 .LBB735-.LBB573
 22018 005e BC04     		.uleb128 .LBE735-.LBB573
 22019 0060 04       		.byte	0x4
 22020 0061 C304     		.uleb128 .LBB737-.LBB573
 22021 0063 D304     		.uleb128 .LBE737-.LBB573
 22022 0065 00       		.byte	0
 22023              	.LLRL18:
 22024 0066 05       		.byte	0x5
 22025 0067 00000000 		.quad	.LBB577
 22025      00000000 
 22026 006f 04       		.byte	0x4
 22027 0070 00       		.uleb128 .LBB577-.LBB577
 22028 0071 04       		.uleb128 .LBE577-.LBB577
 22029 0072 04       		.byte	0x4
 22030 0073 08       		.uleb128 .LBB597-.LBB577
 22031 0074 14       		.uleb128 .LBE597-.LBB577
 22032 0075 00       		.byte	0
 22033              	.LLRL31:
 22034 0076 05       		.byte	0x5
 22035 0077 00000000 		.quad	.LBB584
 22035      00000000 
 22036 007f 04       		.byte	0x4
 22037 0080 00       		.uleb128 .LBB584-.LBB584
 22038 0081 04       		.uleb128 .LBE584-.LBB584
 22039 0082 04       		.byte	0x4
 22040 0083 08       		.uleb128 .LBB590-.LBB584
 22041 0084 0C       		.uleb128 .LBE590-.LBB584
 22042 0085 00       		.byte	0
 22043              	.LLRL43:
 22044 0086 05       		.byte	0x5
 22045 0087 00000000 		.quad	.LBB602
 22045      00000000 
 22046 008f 04       		.byte	0x4
 22047 0090 00       		.uleb128 .LBB602-.LBB602
 22048 0091 F003     		.uleb128 .LBE602-.LBB602
 22049 0093 04       		.byte	0x4
 22050 0094 F703     		.uleb128 .LBB716-.LBB602
 22051 0096 8704     		.uleb128 .LBE716-.LBB602
 22052 0098 00       		.byte	0
 22053              	.LLRL46:
 22054 0099 05       		.byte	0x5
 22055 009a 00000000 		.quad	.LBB604
 22055      00000000 
 22056 00a2 04       		.byte	0x4
 22057 00a3 00       		.uleb128 .LBB604-.LBB604
GAS LISTING x64lin/../common/event.s 			page 534


 22058 00a4 08       		.uleb128 .LBE604-.LBB604
 22059 00a5 04       		.byte	0x4
 22060 00a6 12       		.uleb128 .LBB609-.LBB604
 22061 00a7 48       		.uleb128 .LBE609-.LBB604
 22062 00a8 00       		.byte	0
 22063              	.LLRL50:
 22064 00a9 05       		.byte	0x5
 22065 00aa 00000000 		.quad	.LBB610
 22065      00000000 
 22066 00b2 04       		.byte	0x4
 22067 00b3 00       		.uleb128 .LBB610-.LBB610
 22068 00b4 1D       		.uleb128 .LBE610-.LBB610
 22069 00b5 04       		.byte	0x4
 22070 00b6 6F       		.uleb128 .LBB714-.LBB610
 22071 00b7 9F03     		.uleb128 .LBE714-.LBB610
 22072 00b9 00       		.byte	0
 22073              	.LLRL53:
 22074 00ba 05       		.byte	0x5
 22075 00bb 00000000 		.quad	.LBB612
 22075      00000000 
 22076 00c3 04       		.byte	0x4
 22077 00c4 00       		.uleb128 .LBB612-.LBB612
 22078 00c5 CF01     		.uleb128 .LBE612-.LBB612
 22079 00c7 04       		.byte	0x4
 22080 00c8 D801     		.uleb128 .LBB683-.LBB612
 22081 00ca B002     		.uleb128 .LBE683-.LBB612
 22082 00cc 00       		.byte	0
 22083              	.LLRL60:
 22084 00cd 05       		.byte	0x5
 22085 00ce 00000000 		.quad	.LBB615
 22085      00000000 
 22086 00d6 04       		.byte	0x4
 22087 00d7 00       		.uleb128 .LBB615-.LBB615
 22088 00d8 7C       		.uleb128 .LBE615-.LBB615
 22089 00d9 04       		.byte	0x4
 22090 00da 8F02     		.uleb128 .LBB670-.LBB615
 22091 00dc 9E02     		.uleb128 .LBE670-.LBB615
 22092 00de 00       		.byte	0
 22093              	.LLRL63:
 22094 00df 05       		.byte	0x5
 22095 00e0 00000000 		.quad	.LBB616
 22095      00000000 
 22096 00e8 04       		.byte	0x4
 22097 00e9 00       		.uleb128 .LBB616-.LBB616
 22098 00ea 22       		.uleb128 .LBE616-.LBB616
 22099 00eb 04       		.byte	0x4
 22100 00ec FE01     		.uleb128 .LBB648-.LBB616
 22101 00ee 8D02     		.uleb128 .LBE648-.LBB616
 22102 00f0 00       		.byte	0
 22103              	.LLRL70:
 22104 00f1 05       		.byte	0x5
 22105 00f2 00000000 		.quad	.LBB621
 22105      00000000 
 22106 00fa 04       		.byte	0x4
 22107 00fb 00       		.uleb128 .LBB621-.LBB621
 22108 00fc 22       		.uleb128 .LBE621-.LBB621
 22109 00fd 04       		.byte	0x4
GAS LISTING x64lin/../common/event.s 			page 535


 22110 00fe FE01     		.uleb128 .LBB629-.LBB621
 22111 0100 8D02     		.uleb128 .LBE629-.LBB621
 22112 0102 00       		.byte	0
 22113              	.LLRL112:
 22114 0103 05       		.byte	0x5
 22115 0104 00000000 		.quad	.LBB649
 22115      00000000 
 22116 010c 04       		.byte	0x4
 22117 010d 00       		.uleb128 .LBB649-.LBB649
 22118 010e 06       		.uleb128 .LBE649-.LBB649
 22119 010f 04       		.byte	0x4
 22120 0110 0B       		.uleb128 .LBB662-.LBB649
 22121 0111 22       		.uleb128 .LBE662-.LBB649
 22122 0112 00       		.byte	0
 22123              	.LLRL145:
 22124 0113 05       		.byte	0x5
 22125 0114 00000000 		.quad	.LBB671
 22125      00000000 
 22126 011c 04       		.byte	0x4
 22127 011d 00       		.uleb128 .LBB671-.LBB671
 22128 011e 0A       		.uleb128 .LBE671-.LBB671
 22129 011f 04       		.byte	0x4
 22130 0120 0F       		.uleb128 .LBB675-.LBB671
 22131 0121 13       		.uleb128 .LBE675-.LBB671
 22132 0122 04       		.byte	0x4
 22133 0123 17       		.uleb128 .LBB679-.LBB671
 22134 0124 28       		.uleb128 .LBE679-.LBB671
 22135 0125 00       		.byte	0
 22136              	.LLRL148:
 22137 0126 05       		.byte	0x5
 22138 0127 00000000 		.quad	.LBB676
 22138      00000000 
 22139 012f 04       		.byte	0x4
 22140 0130 00       		.uleb128 .LBB676-.LBB676
 22141 0131 04       		.uleb128 .LBE676-.LBB676
 22142 0132 04       		.byte	0x4
 22143 0133 15       		.uleb128 .LBB680-.LBB676
 22144 0134 2E       		.uleb128 .LBE680-.LBB676
 22145 0135 00       		.byte	0
 22146              	.LLRL159:
 22147 0136 05       		.byte	0x5
 22148 0137 00000000 		.quad	.LBB691
 22148      00000000 
 22149 013f 04       		.byte	0x4
 22150 0140 00       		.uleb128 .LBB691-.LBB691
 22151 0141 0B       		.uleb128 .LBE691-.LBB691
 22152 0142 04       		.byte	0x4
 22153 0143 0F       		.uleb128 .LBB708-.LBB691
 22154 0144 17       		.uleb128 .LBE708-.LBB691
 22155 0145 00       		.byte	0
 22156              	.LLRL179:
 22157 0146 05       		.byte	0x5
 22158 0147 00000000 		.quad	.LBB709
 22158      00000000 
 22159 014f 04       		.byte	0x4
 22160 0150 00       		.uleb128 .LBB709-.LBB709
 22161 0151 00       		.uleb128 .LBE709-.LBB709
GAS LISTING x64lin/../common/event.s 			page 536


 22162 0152 04       		.byte	0x4
 22163 0153 04       		.uleb128 .LBB712-.LBB709
 22164 0154 08       		.uleb128 .LBE712-.LBB709
 22165 0155 04       		.byte	0x4
 22166 0156 0C       		.uleb128 .LBB713-.LBB709
 22167 0157 23       		.uleb128 .LBE713-.LBB709
 22168 0158 00       		.byte	0
 22169              	.LLRL182:
 22170 0159 05       		.byte	0x5
 22171 015a 00000000 		.quad	.LBB723
 22171      00000000 
 22172 0162 04       		.byte	0x4
 22173 0163 00       		.uleb128 .LBB723-.LBB723
 22174 0164 00       		.uleb128 .LBE723-.LBB723
 22175 0165 04       		.byte	0x4
 22176 0166 04       		.uleb128 .LBB733-.LBB723
 22177 0167 07       		.uleb128 .LBE733-.LBB723
 22178 0168 04       		.byte	0x4
 22179 0169 11       		.uleb128 .LBB734-.LBB723
 22180 016a 1A       		.uleb128 .LBE734-.LBB723
 22181 016b 00       		.byte	0
 22182              	.LLRL186:
 22183 016c 07       		.byte	0x7
 22184 016d 00000000 		.quad	.LBB738
 22184      00000000 
 22185 0175 08       		.uleb128 .LBE738-.LBB738
 22186 0176 07       		.byte	0x7
 22187 0177 00000000 		.quad	.LBB748
 22187      00000000 
 22188 017f 13       		.uleb128 .LBE748-.LBB748
 22189 0180 00       		.byte	0
 22190              	.LLRL188:
 22191 0181 07       		.byte	0x7
 22192 0182 00000000 		.quad	.LBB739
 22192      00000000 
 22193 018a 08       		.uleb128 .LBE739-.LBB739
 22194 018b 05       		.byte	0x5
 22195 018c 00000000 		.quad	.LBB746
 22195      00000000 
 22196 0194 04       		.byte	0x4
 22197 0195 00       		.uleb128 .LBB746-.LBB746
 22198 0196 00       		.uleb128 .LBE746-.LBB746
 22199 0197 04       		.byte	0x4
 22200 0198 00       		.uleb128 .LBB747-.LBB746
 22201 0199 13       		.uleb128 .LBE747-.LBB746
 22202 019a 00       		.byte	0
 22203              	.LLRL191:
 22204 019b 07       		.byte	0x7
 22205 019c 00000000 		.quad	.Ltext0
 22205      00000000 
 22206 01a4 8705     		.uleb128 .Letext0-.Ltext0
 22207 01a6 07       		.byte	0x7
 22208 01a7 00000000 		.quad	.Ltext_cold0
 22208      00000000 
 22209 01af 13       		.uleb128 .Letext_cold0-.Ltext_cold0
 22210 01b0 00       		.byte	0
 22211              	.Ldebug_ranges3:
GAS LISTING x64lin/../common/event.s 			page 537


 22212              		.section	.debug_line,"",@progbits
 22213              	.Ldebug_line0:
 22214 0000 93060000 		.section	.debug_str,"MS",@progbits,1
 22214      05000800 
 22214      FF010000 
 22214      010101FB 
 22214      0E0D0001 
 22215              	.LASF527:
 22216 0000 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EEC4EOS3_"
 22216      7431305F 
 22216      48656164 
 22216      5F626173 
 22216      65494C6D 
 22217              	.LASF262:
 22218 0041 5F5A4E4B 		.string	"_ZNKSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EptEv"
 22218      53743135 
 22218      5F446571 
 22218      75655F69 
 22218      74657261 
 22219              	.LASF824:
 22220 0098 77637370 		.string	"wcspbrk"
 22220      62726B00 
 22221              	.LASF228:
 22222 00a0 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC4ERKS5_"
 22222      61495053 
 22222      74313075 
 22222      6E697175 
 22222      655F7074 
 22223              	.LASF883:
 22224 00e2 6C636F6E 		.string	"lconv"
 22224      7600
 22225              	.LASF747:
 22226 00e8 5F6F6666 		.string	"_offset"
 22226      73657400 
 22227              	.LASF926:
 22228 00f0 5F5F7661 		.string	"__value64"
 22228      6C756536 
 22228      3400
 22229              	.LASF846:
 22230 00fa 5F5F7569 		.string	"__uint_least64_t"
 22230      6E745F6C 
 22230      65617374 
 22230      36345F74 
 22230      00
 22231              	.LASF577:
 22232 010b 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEEaSEOS4_"
 22232      74357475 
 22232      706C6549 
 22232      4A503942 
 22232      61736545 
 22233              	.LASF1123:
 22234 0144 6576656E 		.string	"event"
 22234      7400
 22235              	.LASF660:
 22236 014a 6E65775F 		.string	"new_allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 22236      616C6C6F 
 22236      6361746F 
GAS LISTING x64lin/../common/event.s 			page 538


 22236      723C7374 
 22236      643A3A75 
 22237              	.LASF845:
 22238 0196 5F5F696E 		.string	"__int_least64_t"
 22238      745F6C65 
 22238      61737436 
 22238      345F7400 
 22239              	.LASF1112:
 22240 01a6 5F5F696E 		.string	"__in"
 22240      00
 22241              	.LASF1105:
 22242 01ab 5F5F6974 		.string	"__it"
 22242      00
 22243              	.LASF276:
 22244 01b0 5F5A4E4B 		.string	"_ZNKSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EixEl"
 22244      53743135 
 22244      5F446571 
 22244      75655F69 
 22244      74657261 
 22245              	.LASF740:
 22246 0207 5F66696C 		.string	"_fileno"
 22246      656E6F00 
 22247              	.LASF933:
 22248 020f 5F5F7074 		.string	"__pthread_mutex_s"
 22248      68726561 
 22248      645F6D75 
 22248      7465785F 
 22248      7300
 22249              	.LASF652:
 22250 0221 5F5A5374 		.string	"_ZSt21is_constant_evaluatedv"
 22250      32316973 
 22250      5F636F6E 
 22250      7374616E 
 22250      745F6576 
 22251              	.LASF219:
 22252 023e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8allocateER
 22252      74313661 
 22252      6C6C6F63 
 22252      61746F72 
 22252      5F747261 
 22253              	.LASF400:
 22254 029f 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5frontEv"
 22254      53743564 
 22254      65717565 
 22254      49537431 
 22254      30756E69 
 22255              	.LASF668:
 22256 02ee 5F5F616C 		.string	"__alloc_traits<std::allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >
 22256      6C6F635F 
 22256      74726169 
 22256      74733C73 
 22256      74643A3A 
 22257              	.LASF365:
 22258 0389 72657665 		.string	"reverse_iterator"
 22258      7273655F 
 22258      69746572 
 22258      61746F72 
GAS LISTING x64lin/../common/event.s 			page 539


 22258      00
 22259              	.LASF792:
 22260 039a 746D5F73 		.string	"tm_sec"
 22260      656300
 22261              	.LASF176:
 22262 03a1 7E6C6F63 		.string	"~lock_guard"
 22262      6B5F6775 
 22262      61726400 
 22263              	.LASF138:
 22264 03ad 5F5A4E53 		.string	"_ZNSt18condition_variableD4Ev"
 22264      74313863 
 22264      6F6E6469 
 22264      74696F6E 
 22264      5F766172 
 22265              	.LASF211:
 22266 03cb 616C6C6F 		.string	"allocate"
 22266      63617465 
 22266      00
 22267              	.LASF1016:
 22268 03d4 72656D6F 		.string	"remove"
 22268      766500
 22269              	.LASF1107:
 22270 03db 5F5F616C 		.string	"__allocmax"
 22270      6C6F636D 
 22270      617800
 22271              	.LASF761:
 22272 03e6 66776964 		.string	"fwide"
 22272      6500
 22273              	.LASF661:
 22274 03ec 6E65775F 		.string	"new_allocator"
 22274      616C6C6F 
 22274      6361746F 
 22274      7200
 22275              	.LASF903:
 22276 03fa 696E745F 		.string	"int_p_sep_by_space"
 22276      705F7365 
 22276      705F6279 
 22276      5F737061 
 22276      636500
 22277              	.LASF832:
 22278 040d 5F5F7569 		.string	"__uint8_t"
 22278      6E74385F 
 22278      7400
 22279              	.LASF765:
 22280 0417 67657477 		.string	"getwc"
 22280      6300
 22281              	.LASF917:
 22282 041d 376C6C64 		.string	"7lldiv_t"
 22282      69765F74 
 22282      00
 22283              	.LASF89:
 22284 0426 5F5A4E53 		.string	"_ZNSt5mutexC4Ev"
 22284      74356D75 
 22284      74657843 
 22284      34457600 
 22285              	.LASF282:
 22286 0436 5F4D5F6D 		.string	"_M_map"
GAS LISTING x64lin/../common/event.s 			page 540


 22286      617000
 22287              	.LASF998:
 22288 043d 66706F73 		.string	"fpos_t"
 22288      5F7400
 22289              	.LASF916:
 22290 0444 6C646976 		.string	"ldiv_t"
 22290      5F7400
 22291              	.LASF458:
 22292 044b 5F4D5F72 		.string	"_M_reserve_elements_at_front"
 22292      65736572 
 22292      76655F65 
 22292      6C656D65 
 22292      6E74735F 
 22293              	.LASF656:
 22294 0468 5F5F6F70 		.string	"__ops"
 22294      7300
 22295              	.LASF207:
 22296 046e 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC4ERKS4_"
 22296      61495374 
 22296      3130756E 
 22296      69717565 
 22296      5F707472 
 22297              	.LASF566:
 22298 04af 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEE7_M_swapERS4_"
 22298      7431315F 
 22298      5475706C 
 22298      655F696D 
 22298      706C494C 
 22299              	.LASF391:
 22300 04f9 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEixEm"
 22300      74356465 
 22300      71756549 
 22300      53743130 
 22300      756E6971 
 22301              	.LASF1137:
 22302 0543 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE3popEv"
 22302      74357175 
 22302      65756549 
 22302      53743130 
 22302      756E6971 
 22303              	.LASF1010:
 22304 059c 66736565 		.string	"fseek"
 22304      6B00
 22305              	.LASF635:
 22306 05a2 5F5F6E69 		.string	"__niter_base<std::unique_ptr<BaseEvent>**>"
 22306      7465725F 
 22306      62617365 
 22306      3C737464 
 22306      3A3A756E 
 22307              	.LASF596:
 22308 05cd 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE10dealloca
 22308      74313661 
 22308      6C6C6F63 
 22308      61746F72 
 22308      5F747261 
 22309              	.LASF167:
 22310 0633 5F5A4E4B 		.string	"_ZNKSt11unique_lockISt5mutexEcvbEv"
GAS LISTING x64lin/../common/event.s 			page 541


 22310      53743131 
 22310      756E6971 
 22310      75655F6C 
 22310      6F636B49 
 22311              	.LASF588:
 22312 0656 7475706C 		.string	"tuple_element<0, std::tuple<BaseEvent*, std::default_delete<BaseEvent> > >"
 22312      655F656C 
 22312      656D656E 
 22312      743C302C 
 22312      20737464 
 22313              	.LASF450:
 22314 06a1 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_erase_at_endESt
 22314      74356465 
 22314      71756549 
 22314      53743130 
 22314      756E6971 
 22315              	.LASF745:
 22316 0719 5F73686F 		.string	"_shortbuf"
 22316      72746275 
 22316      6600
 22317              	.LASF474:
 22318 0723 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_move_assign1EOS
 22318      74356465 
 22318      71756549 
 22318      53743130 
 22318      756E6971 
 22319              	.LASF235:
 22320 079b 5F547031 		.string	"_Tp1"
 22320      00
 22321              	.LASF583:
 22322 07a0 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_dataI9BaseEventSt14default_deleteIS0_ELb1ELb1EEaSEOS3_"
 22322      7431355F 
 22322      5F756E69 
 22322      715F7074 
 22322      725F6461 
 22323              	.LASF655:
 22324 07e9 5F5F676E 		.string	"__gnu_cxx"
 22324      755F6378 
 22324      7800
 22325              	.LASF233:
 22326 07f3 616C6C6F 		.string	"allocator<std::unique_ptr<BaseEvent> >"
 22326      6361746F 
 22326      723C7374 
 22326      643A3A75 
 22326      6E697175 
 22327              	.LASF1040:
 22328 081a 5F5A4E36 		.string	"_ZN6__pstl9execution2v115parallel_policy14__allow_vectorEv"
 22328      5F5F7073 
 22328      746C3965 
 22328      78656375 
 22328      74696F6E 
 22329              	.LASF511:
 22330 0855 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EEC4EOS3_"
 22330      7431355F 
 22330      5F756E69 
 22330      715F7074 
 22330      725F696D 
GAS LISTING x64lin/../common/event.s 			page 542


 22331              	.LASF1043:
 22332 0896 5F5A4E36 		.string	"_ZN6__pstl9execution2v127parallel_unsequenced_policy19__allow_unsequencedEv"
 22332      5F5F7073 
 22332      746C3965 
 22332      78656375 
 22332      74696F6E 
 22333              	.LASF1032:
 22334 08e2 5F5F616C 		.string	"__allow_unsequenced"
 22334      6C6F775F 
 22334      756E7365 
 22334      7175656E 
 22334      63656400 
 22335              	.LASF1081:
 22336 08f6 6F706572 		.string	"operator new"
 22336      61746F72 
 22336      206E6577 
 22336      00
 22337              	.LASF209:
 22338 0903 7E616C6C 		.string	"~allocator"
 22338      6F636174 
 22338      6F7200
 22339              	.LASF476:
 22340 090e 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_move_assign2EOS
 22340      74356465 
 22340      71756549 
 22340      53743130 
 22340      756E6971 
 22341              	.LASF562:
 22342 0986 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEC4ERKS1_RKS3_"
 22342      7431315F 
 22342      5475706C 
 22342      655F696D 
 22342      706C494C 
 22343              	.LASF667:
 22344 09d0 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE11_M_max_
 22344      395F5F67 
 22344      6E755F63 
 22344      78783133 
 22344      6E65775F 
 22345              	.LASF84:
 22346 0a30 5F5F6D75 		.string	"__mutex_base"
 22346      7465785F 
 22346      62617365 
 22346      00
 22347              	.LASF805:
 22348 0a3d 7763736E 		.string	"wcsncmp"
 22348      636D7000 
 22349              	.LASF362:
 22350 0a45 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE3getEv"
 22350      53743130 
 22350      756E6971 
 22350      75655F70 
 22350      74724939 
 22351              	.LASF873:
 22352 0a81 696E745F 		.string	"int_fast32_t"
 22352      66617374 
 22352      33325F74 
GAS LISTING x64lin/../common/event.s 			page 543


 22352      00
 22353              	.LASF195:
 22354 0a8e 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEaSEOS3_"
 22354      74313075 
 22354      6E697175 
 22354      655F7074 
 22354      72493942 
 22355              	.LASF1094:
 22356 0aca 5F5F6F6C 		.string	"__old_num_nodes"
 22356      645F6E75 
 22356      6D5F6E6F 
 22356      64657300 
 22357              	.LASF705:
 22358 0ada 63686172 		.string	"char8_t"
 22358      385F7400 
 22359              	.LASF58:
 22360 0ae2 5F5F6578 		.string	"__exception_ptr"
 22360      63657074 
 22360      696F6E5F 
 22360      70747200 
 22361              	.LASF1001:
 22362 0af2 66656F66 		.string	"feof"
 22362      00
 22363              	.LASF860:
 22364 0af7 75696E74 		.string	"uint16_t"
 22364      31365F74 
 22364      00
 22365              	.LASF1131:
 22366 0b00 5F5F6275 		.string	"__builtin_memmove"
 22366      696C7469 
 22366      6E5F6D65 
 22366      6D6D6F76 
 22366      6500
 22367              	.LASF714:
 22368 0b12 6F766572 		.string	"overflow_arg_area"
 22368      666C6F77 
 22368      5F617267 
 22368      5F617265 
 22368      6100
 22369              	.LASF921:
 22370 0b24 74696D65 		.string	"time_t"
 22370      5F7400
 22371              	.LASF148:
 22372 0b2b 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4ERS0_"
 22372      74313175 
 22372      6E697175 
 22372      655F6C6F 
 22372      636B4953 
 22373              	.LASF691:
 22374 0b4f 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE10dealloc
 22374      5F5F676E 
 22374      755F6378 
 22374      7831336E 
 22374      65775F61 
 22375              	.LASF325:
 22376 0bb2 5F4D5F64 		.string	"_M_deallocate_map"
 22376      65616C6C 
GAS LISTING x64lin/../common/event.s 			page 544


 22376      6F636174 
 22376      655F6D61 
 22376      7000
 22377              	.LASF1136:
 22378 0bc4 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE9constructI
 22378      74313661 
 22378      6C6C6F63 
 22378      61746F72 
 22378      5F747261 
 22379              	.LASF1091:
 22380 0c36 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EC2ERKS7_
 22380      7431355F 
 22380      44657175 
 22380      655F6974 
 22380      65726174 
 22381              	.LASF314:
 22382 0c90 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_a
 22382      7431315F 
 22382      44657175 
 22382      655F6261 
 22382      73654953 
 22383              	.LASF715:
 22384 0cf4 7265675F 		.string	"reg_save_area"
 22384      73617665 
 22384      5F617265 
 22384      6100
 22385              	.LASF849:
 22386 0d02 5F5F6F66 		.string	"__off_t"
 22386      665F7400 
 22387              	.LASF4:
 22388 0d0a 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEcvbEv"
 22388      53743137 
 22388      696E7465 
 22388      6772616C 
 22388      5F636F6E 
 22389              	.LASF271:
 22390 0d30 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EpLEl"
 22390      7431355F 
 22390      44657175 
 22390      655F6974 
 22390      65726174 
 22391              	.LASF213:
 22392 0d86 6465616C 		.string	"deallocate"
 22392      6C6F6361 
 22392      746500
 22393              	.LASF1027:
 22394 0d91 746F7763 		.string	"towctrans"
 22394      7472616E 
 22394      7300
 22395              	.LASF9:
 22396 0d9b 6F706572 		.string	"operator std::integral_constant<bool, true>::value_type"
 22396      61746F72 
 22396      20737464 
 22396      3A3A696E 
 22396      74656772 
 22397              	.LASF348:
 22398 0dd3 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_RKS5_St17inte
GAS LISTING x64lin/../common/event.s 			page 545


 22398      74356465 
 22398      71756549 
 22398      53743130 
 22398      756E6971 
 22399              	.LASF36:
 22400 0e41 5F436174 		.string	"_Category"
 22400      65676F72 
 22400      7900
 22401              	.LASF800:
 22402 0e4b 746D5F69 		.string	"tm_isdst"
 22402      73647374 
 22402      00
 22403              	.LASF97:
 22404 0e54 5F5A4E53 		.string	"_ZNSt5mutex4lockEv"
 22404      74356D75 
 22404      74657834 
 22404      6C6F636B 
 22404      457600
 22405              	.LASF886:
 22406 0e67 67726F75 		.string	"grouping"
 22406      70696E67 
 22406      00
 22407              	.LASF612:
 22408 0e70 5F5A5374 		.string	"_ZSt3getILm0EJP9BaseEventSt14default_deleteIS0_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_
 22408      33676574 
 22408      494C6D30 
 22408      454A5039 
 22408      42617365 
 22409              	.LASF746:
 22410 0ed7 5F6C6F63 		.string	"_lock"
 22410      6B00
 22411              	.LASF203:
 22412 0edd 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEaSERKS3_"
 22412      74313075 
 22412      6E697175 
 22412      655F7074 
 22412      72493942 
 22413              	.LASF205:
 22414 0f1a 616C6C6F 		.string	"allocator"
 22414      6361746F 
 22414      7200
 22415              	.LASF210:
 22416 0f24 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEED4Ev"
 22416      61495374 
 22416      3130756E 
 22416      69717565 
 22416      5F707472 
 22417              	.LASF120:
 22418 0f61 5F5A4E53 		.string	"_ZNSt9__condvar10notify_oneEv"
 22418      74395F5F 
 22418      636F6E64 
 22418      76617231 
 22418      306E6F74 
 22419              	.LASF1092:
 22420 0f7f 5F5F6E6F 		.string	"__nodes_to_add"
 22420      6465735F 
 22420      746F5F61 
GAS LISTING x64lin/../common/event.s 			page 546


 22420      646400
 22421              	.LASF286:
 22422 0f8e 5F446571 		.string	"_Deque_impl_data"
 22422      75655F69 
 22422      6D706C5F 
 22422      64617461 
 22422      00
 22423              	.LASF93:
 22424 0f9f 6F706572 		.string	"operator bool"
 22424      61746F72 
 22424      20626F6F 
 22424      6C00
 22425              	.LASF221:
 22426 0fad 6D61785F 		.string	"max_size"
 22426      73697A65 
 22426      00
 22427              	.LASF778:
 22428 0fb6 5F5F6973 		.string	"__isoc99_vfwscanf"
 22428      6F633939 
 22428      5F766677 
 22428      7363616E 
 22428      6600
 22429              	.LASF59:
 22430 0fc8 5F4D5F61 		.string	"_M_a"
 22430      00
 22431              	.LASF517:
 22432 0fcd 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE10_M_deleterEv"
 22432      7431355F 
 22432      5F756E69 
 22432      715F7074 
 22432      725F696D 
 22433              	.LASF654:
 22434 1015 626F6F6C 		.string	"bool"
 22434      00
 22435              	.LASF361:
 22436 101a 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5beginEv"
 22436      53743564 
 22436      65717565 
 22436      49537431 
 22436      30756E69 
 22437              	.LASF961:
 22438 1069 61746F69 		.string	"atoi"
 22438      00
 22439              	.LASF344:
 22440 106e 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_"
 22440      74356465 
 22440      71756549 
 22440      53743130 
 22440      756E6971 
 22441              	.LASF437:
 22442 10bb 5F4D5F70 		.string	"_M_pop_front_aux"
 22442      6F705F66 
 22442      726F6E74 
 22442      5F617578 
 22442      00
 22443              	.LASF962:
 22444 10cc 61746F6C 		.string	"atol"
GAS LISTING x64lin/../common/event.s 			page 547


 22444      00
 22445              	.LASF987:
 22446 10d1 5F5F6774 		.string	"__gthread_cond_t"
 22446      68726561 
 22446      645F636F 
 22446      6E645F74 
 22446      00
 22447              	.LASF1066:
 22448 10e2 54696D65 		.string	"TimerFired"
 22448      72466972 
 22448      656400
 22449              	.LASF10:
 22450 10ed 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEcvbEv"
 22450      53743137 
 22450      696E7465 
 22450      6772616C 
 22450      5F636F6E 
 22451              	.LASF669:
 22452 1113 5F535F73 		.string	"_S_select_on_copy"
 22452      656C6563 
 22452      745F6F6E 
 22452      5F636F70 
 22452      7900
 22453              	.LASF411:
 22454 1125 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE9pop_frontEv"
 22454      74356465 
 22454      71756549 
 22454      53743130 
 22454      756E6971 
 22455              	.LASF181:
 22456 1177 5F4D5F74 		.string	"_M_t"
 22456      00
 22457              	.LASF806:
 22458 117c 7763736E 		.string	"wcsncpy"
 22458      63707900 
 22459              	.LASF1096:
 22460 1184 5F5F6E65 		.string	"__new_nstart"
 22460      775F6E73 
 22460      74617274 
 22460      00
 22461              	.LASF18:
 22462 1191 5F5F6375 		.string	"__cust_imove"
 22462      73745F69 
 22462      6D6F7665 
 22462      00
 22463              	.LASF808:
 22464 119e 77637373 		.string	"wcsspn"
 22464      706E00
 22465              	.LASF172:
 22466 11a5 6C6F636B 		.string	"lock_guard<std::mutex>"
 22466      5F677561 
 22466      72643C73 
 22466      74643A3A 
 22466      6D757465 
 22467              	.LASF50:
 22468 11bc 6E756D62 		.string	"numbers"
 22468      65727300 
GAS LISTING x64lin/../common/event.s 			page 548


 22469              	.LASF670:
 22470 11c4 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E17
 22470      5F5F676E 
 22470      755F6378 
 22470      7831345F 
 22470      5F616C6C 
 22471              	.LASF5:
 22472 1235 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEclEv"
 22472      53743137 
 22472      696E7465 
 22472      6772616C 
 22472      5F636F6E 
 22473              	.LASF578:
 22474 125a 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEE4swapERS4_"
 22474      74357475 
 22474      706C6549 
 22474      4A503942 
 22474      61736545 
 22475              	.LASF857:
 22476 1296 696E7433 		.string	"int32_t"
 22476      325F7400 
 22477              	.LASF324:
 22478 129e 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_allocate
 22478      7431315F 
 22478      44657175 
 22478      655F6261 
 22478      73654953 
 22479              	.LASF396:
 22480 12fe 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE2atEm"
 22480      74356465 
 22480      71756549 
 22480      53743130 
 22480      756E6971 
 22481              	.LASF556:
 22482 1349 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEE7_M_headERKS4_"
 22482      7431315F 
 22482      5475706C 
 22482      655F696D 
 22482      706C494C 
 22483              	.LASF881:
 22484 1394 696E746D 		.string	"intmax_t"
 22484      61785F74 
 22484      00
 22485              	.LASF991:
 22486 139d 5F5F706F 		.string	"__pos"
 22486      7300
 22487              	.LASF32:
 22488 13a3 5F5F6465 		.string	"__debug"
 22488      62756700 
 22489              	.LASF586:
 22490 13ab 72656D6F 		.string	"remove_reference<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 22490      76655F72 
 22490      65666572 
 22490      656E6365 
 22490      3C737464 
 22491              	.LASF144:
 22492 13fa 5F5A4E53 		.string	"_ZNSt18condition_variable13native_handleEv"
GAS LISTING x64lin/../common/event.s 			page 549


 22492      74313863 
 22492      6F6E6469 
 22492      74696F6E 
 22492      5F766172 
 22493              	.LASF1028:
 22494 1425 77637472 		.string	"wctrans"
 22494      616E7300 
 22495              	.LASF663:
 22496 142d 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEEC4ERKS6_"
 22496      5F5F676E 
 22496      755F6378 
 22496      7831336E 
 22496      65775F61 
 22497              	.LASF238:
 22498 1485 706F696E 		.string	"pointer_traits<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >*>"
 22498      7465725F 
 22498      74726169 
 22498      74733C73 
 22498      74643A3A 
 22499              	.LASF908:
 22500 14d2 7365746C 		.string	"setlocale"
 22500      6F63616C 
 22500      6500
 22501              	.LASF305:
 22502 14dc 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4Em"
 22502      7431315F 
 22502      44657175 
 22502      655F6261 
 22502      73654953 
 22503              	.LASF882:
 22504 152d 75696E74 		.string	"uintmax_t"
 22504      6D61785F 
 22504      7400
 22505              	.LASF140:
 22506 1537 5F5A4E53 		.string	"_ZNSt18condition_variableaSERKS_"
 22506      74313863 
 22506      6F6E6469 
 22506      74696F6E 
 22506      5F766172 
 22507              	.LASF304:
 22508 1558 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4Ev"
 22508      7431315F 
 22508      44657175 
 22508      655F6261 
 22508      73654953 
 22509              	.LASF1073:
 22510 15a9 5F5A4E39 		.string	"_ZN9BaseEventC4Ev"
 22510      42617365 
 22510      4576656E 
 22510      74433445 
 22510      7600
 22511              	.LASF1120:
 22512 15bb 70757368 		.string	"pushEvent"
 22512      4576656E 
 22512      7400
 22513              	.LASF783:
 22514 15c5 76777363 		.string	"vwscanf"
GAS LISTING x64lin/../common/event.s 			page 550


 22514      616E6600 
 22515              	.LASF446:
 22516 15cd 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_destroy_dataESt
 22516      74356465 
 22516      71756549 
 22516      53743130 
 22516      756E6971 
 22517              	.LASF33:
 22518 164d 5F5F636F 		.string	"__copy_move<false, false, std::random_access_iterator_tag>"
 22518      70795F6D 
 22518      6F76653C 
 22518      66616C73 
 22518      652C2066 
 22519              	.LASF449:
 22520 1688 5F4D5F65 		.string	"_M_erase_at_end"
 22520      72617365 
 22520      5F61745F 
 22520      656E6400 
 22521              	.LASF72:
 22522 1698 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EOS0_"
 22522      7431355F 
 22522      5F657863 
 22522      65707469 
 22522      6F6E5F70 
 22523              	.LASF558:
 22524 16c5 5F4D5F74 		.string	"_M_tail"
 22524      61696C00 
 22525              	.LASF339:
 22526 16cd 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4Ev"
 22526      74356465 
 22526      71756549 
 22526      53743130 
 22526      756E6971 
 22527              	.LASF226:
 22528 1717 616C6C6F 		.string	"allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >*>"
 22528      6361746F 
 22528      723C7374 
 22528      643A3A75 
 22528      6E697175 
 22529              	.LASF1125:
 22530 175f 5F5F6D75 		.string	"__mutex"
 22530      74657800 
 22531              	.LASF1097:
 22532 1767 5F5F6E65 		.string	"__new_map_size"
 22532      775F6D61 
 22532      705F7369 
 22532      7A6500
 22533              	.LASF844:
 22534 1776 5F5F7569 		.string	"__uint_least32_t"
 22534      6E745F6C 
 22534      65617374 
 22534      33325F74 
 22534      00
 22535              	.LASF854:
 22536 1787 5F5F7379 		.string	"__syscall_slong_t"
 22536      7363616C 
 22536      6C5F736C 
GAS LISTING x64lin/../common/event.s 			page 551


 22536      6F6E675F 
 22536      7400
 22537              	.LASF625:
 22538 1799 5F5A5374 		.string	"_ZSt4copyIPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET0_T_S8_S7_"
 22538      34636F70 
 22538      79495050 
 22538      53743130 
 22538      756E6971 
 22539              	.LASF473:
 22540 17e6 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_move_assign1EOS
 22540      74356465 
 22540      71756549 
 22540      53743130 
 22540      756E6971 
 22541              	.LASF1080:
 22542 185e 5F5A646C 		.string	"_ZdlPv"
 22542      507600
 22543              	.LASF732:
 22544 1865 5F494F5F 		.string	"_IO_write_end"
 22544      77726974 
 22544      655F656E 
 22544      6400
 22545              	.LASF1085:
 22546 1873 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC2IS3_EERKSaIT_E"
 22546      61495053 
 22546      74313075 
 22546      6E697175 
 22546      655F7074 
 22547              	.LASF1034:
 22548 18bd 5F5A4E36 		.string	"_ZN6__pstl9execution2v116sequenced_policy19__allow_unsequencedEv"
 22548      5F5F7073 
 22548      746C3965 
 22548      78656375 
 22548      74696F6E 
 22549              	.LASF1103:
 22550 18fe 5F5F7265 		.string	"__res"
 22550      7300
 22551              	.LASF608:
 22552 1904 6D61783C 		.string	"max<long unsigned int>"
 22552      6C6F6E67 
 22552      20756E73 
 22552      69676E65 
 22552      6420696E 
 22553              	.LASF935:
 22554 191b 5F5F6F77 		.string	"__owner"
 22554      6E657200 
 22555              	.LASF8:
 22556 1923 76616C75 		.string	"value_type"
 22556      655F7479 
 22556      706500
 22557              	.LASF560:
 22558 192e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEE7_M_tailERKS4_"
 22558      7431315F 
 22558      5475706C 
 22558      655F696D 
 22558      706C494C 
 22559              	.LASF123:
GAS LISTING x64lin/../common/event.s 			page 552


 22560 1979 5F4D5F6D 		.string	"_M_mutex"
 22560      75746578 
 22560      00
 22561              	.LASF979:
 22562 1982 7763746F 		.string	"wctomb"
 22562      6D6200
 22563              	.LASF49:
 22564 1989 6E756C6C 		.string	"nullptr_t"
 22564      7074725F 
 22564      7400
 22565              	.LASF26:
 22566 1993 5F5F636D 		.string	"__cmp_cust"
 22566      705F6375 
 22566      737400
 22567              	.LASF555:
 22568 199e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEE7_M_headERS4_"
 22568      7431315F 
 22568      5475706C 
 22568      655F696D 
 22568      706C494C 
 22569              	.LASF327:
 22570 19e8 5F4D5F69 		.string	"_M_initialize_map"
 22570      6E697469 
 22570      616C697A 
 22570      655F6D61 
 22570      7000
 22571              	.LASF364:
 22572 19fa 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE3endEv"
 22572      53743564 
 22572      65717565 
 22572      49537431 
 22572      30756E69 
 22573              	.LASF866:
 22574 1a47 696E745F 		.string	"int_least64_t"
 22574      6C656173 
 22574      7436345F 
 22574      7400
 22575              	.LASF277:
 22576 1a55 5F4D5F73 		.string	"_M_set_node"
 22576      65745F6E 
 22576      6F646500 
 22577              	.LASF156:
 22578 1a61 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEaSERKS1_"
 22578      74313175 
 22578      6E697175 
 22578      655F6C6F 
 22578      636B4953 
 22579              	.LASF378:
 22580 1a86 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE7crbeginEv"
 22580      53743564 
 22580      65717565 
 22580      49537431 
 22580      30756E69 
 22581              	.LASF934:
 22582 1ad7 5F5F6C6F 		.string	"__lock"
 22582      636B00
 22583              	.LASF1017:
GAS LISTING x64lin/../common/event.s 			page 553


 22584 1ade 72656E61 		.string	"rename"
 22584      6D6500
 22585              	.LASF68:
 22586 1ae5 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 22586      53743135 
 22586      5F5F6578 
 22586      63657074 
 22586      696F6E5F 
 22587              	.LASF601:
 22588 1b15 5F5A5374 		.string	"_ZSt17__throw_bad_allocv"
 22588      31375F5F 
 22588      7468726F 
 22588      775F6261 
 22588      645F616C 
 22589              	.LASF1029:
 22590 1b2e 77637479 		.string	"wctype"
 22590      706500
 22591              	.LASF1059:
 22592 1b35 6C6F6361 		.string	"localtime"
 22592      6C74696D 
 22592      6500
 22593              	.LASF241:
 22594 1b3f 72656269 		.string	"rebind"
 22594      6E6400
 22595              	.LASF295:
 22596 1b46 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_Deque_impl
 22596      7431315F 
 22596      44657175 
 22596      655F6261 
 22596      73654953 
 22597              	.LASF177:
 22598 1ba4 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexED4Ev"
 22598      7431306C 
 22598      6F636B5F 
 22598      67756172 
 22598      64495374 
 22599              	.LASF932:
 22600 1bc4 5F5F7074 		.string	"__pthread_list_t"
 22600      68726561 
 22600      645F6C69 
 22600      73745F74 
 22600      00
 22601              	.LASF687:
 22602 1bd5 6E65775F 		.string	"new_allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >*>"
 22602      616C6C6F 
 22602      6361746F 
 22602      723C7374 
 22602      643A3A75 
 22603              	.LASF25:
 22604 1c21 5F5F6174 		.string	"__atomic_spin_count"
 22604      6F6D6963 
 22604      5F737069 
 22604      6E5F636F 
 22604      756E7400 
 22605              	.LASF318:
 22606 1c35 5F5A4E4B 		.string	"_ZNKSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE20_M_get_map
 22606      53743131 
GAS LISTING x64lin/../common/event.s 			page 554


 22606      5F446571 
 22606      75655F62 
 22606      61736549 
 22607              	.LASF39:
 22608 1c9b 5F5F636F 		.string	"__copy_move_b<std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 22608      70795F6D 
 22608      6F76655F 
 22608      623C7374 
 22608      643A3A75 
 22609              	.LASF826:
 22610 1ce5 77637373 		.string	"wcsstr"
 22610      747200
 22611              	.LASF321:
 22612 1cec 5F4D5F64 		.string	"_M_deallocate_node"
 22612      65616C6C 
 22612      6F636174 
 22612      655F6E6F 
 22612      646500
 22613              	.LASF1008:
 22614 1cff 66726561 		.string	"fread"
 22614      6400
 22615              	.LASF894:
 22616 1d05 696E745F 		.string	"int_frac_digits"
 22616      66726163 
 22616      5F646967 
 22616      69747300 
 22617              	.LASF466:
 22618 1d15 5F4D5F72 		.string	"_M_reserve_map_at_back"
 22618      65736572 
 22618      76655F6D 
 22618      61705F61 
 22618      745F6261 
 22619              	.LASF135:
 22620 1d2c 636F6E64 		.string	"condition_variable"
 22620      6974696F 
 22620      6E5F7661 
 22620      72696162 
 22620      6C6500
 22621              	.LASF885:
 22622 1d3f 74686F75 		.string	"thousands_sep"
 22622      73616E64 
 22622      735F7365 
 22622      7000
 22623              	.LASF231:
 22624 1d4d 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEE8allocateEm"
 22624      61495053 
 22624      74313075 
 22624      6E697175 
 22624      655F7074 
 22625              	.LASF347:
 22626 1d92 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_RKS5_St17inte
 22626      74356465 
 22626      71756549 
 22626      53743130 
 22626      756E6971 
 22627              	.LASF132:
 22628 1e00 6368726F 		.string	"chrono_literals"
GAS LISTING x64lin/../common/event.s 			page 555


 22628      6E6F5F6C 
 22628      69746572 
 22628      616C7300 
 22629              	.LASF550:
 22630 1e10 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EEC4EOS2_"
 22630      7431305F 
 22630      48656164 
 22630      5F626173 
 22630      65494C6D 
 22631              	.LASF986:
 22632 1e3e 5F5F6774 		.string	"__gthread_mutex_t"
 22632      68726561 
 22632      645F6D75 
 22632      7465785F 
 22632      7400
 22633              	.LASF337:
 22634 1e50 5F535F62 		.string	"_S_buffer_size"
 22634      75666665 
 22634      725F7369 
 22634      7A6500
 22635              	.LASF809:
 22636 1e5f 77637374 		.string	"wcstod"
 22636      6F6400
 22637              	.LASF848:
 22638 1e66 5F5F7569 		.string	"__uintmax_t"
 22638      6E746D61 
 22638      785F7400 
 22639              	.LASF810:
 22640 1e72 77637374 		.string	"wcstof"
 22640      6F6600
 22641              	.LASF774:
 22642 1e79 5F5F6973 		.string	"__isoc99_swscanf"
 22642      6F633939 
 22642      5F737773 
 22642      63616E66 
 22642      00
 22643              	.LASF811:
 22644 1e8a 77637374 		.string	"wcstok"
 22644      6F6B00
 22645              	.LASF812:
 22646 1e91 77637374 		.string	"wcstol"
 22646      6F6C00
 22647              	.LASF665:
 22648 1e98 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE10dealloca
 22648      5F5F676E 
 22648      755F6378 
 22648      7831336E 
 22648      65775F61 
 22649              	.LASF291:
 22650 1efa 5F4D5F73 		.string	"_M_swap_data"
 22650      7761705F 
 22650      64617461 
 22650      00
 22651              	.LASF1009:
 22652 1f07 6672656F 		.string	"freopen"
 22652      70656E00 
 22653              	.LASF202:
GAS LISTING x64lin/../common/event.s 			page 556


 22654 1f0f 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEC4ERKS3_"
 22654      74313075 
 22654      6E697175 
 22654      655F7074 
 22654      72493942 
 22655              	.LASF628:
 22656 1f4c 5F5F6E69 		.string	"__niter_wrap<std::unique_ptr<BaseEvent>**>"
 22656      7465725F 
 22656      77726170 
 22656      3C737464 
 22656      3A3A756E 
 22657              	.LASF1099:
 22658 1f77 5F5F6669 		.string	"__first"
 22658      72737400 
 22659              	.LASF618:
 22660 1f7f 5F5F636F 		.string	"__copy_move_backward_a<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>
 22660      70795F6D 
 22660      6F76655F 
 22660      6261636B 
 22660      77617264 
 22661              	.LASF136:
 22662 1fd9 5F5A4E53 		.string	"_ZNSt18condition_variableC4Ev"
 22662      74313863 
 22662      6F6E6469 
 22662      74696F6E 
 22662      5F766172 
 22663              	.LASF980:
 22664 1ff7 6C6C6469 		.string	"lldiv"
 22664      7600
 22665              	.LASF851:
 22666 1ffd 5F5F636C 		.string	"__clock_t"
 22666      6F636B5F 
 22666      7400
 22667              	.LASF442:
 22668 2007 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE13_M_insert_auxESt15
 22668      74356465 
 22668      71756549 
 22668      53743130 
 22668      756E6971 
 22669              	.LASF1041:
 22670 2083 5F5A4E36 		.string	"_ZN6__pstl9execution2v115parallel_policy16__allow_parallelEv"
 22670      5F5F7073 
 22670      746C3965 
 22670      78656375 
 22670      74696F6E 
 22671              	.LASF74:
 22672 20c0 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 22672      7431355F 
 22672      5F657863 
 22672      65707469 
 22672      6F6E5F70 
 22673              	.LASF237:
 22674 20ee 74797065 		.string	"type"
 22674      00
 22675              	.LASF129:
 22676 20f3 61646F70 		.string	"adopt_lock_t"
 22676      745F6C6F 
GAS LISTING x64lin/../common/event.s 			page 557


 22676      636B5F74 
 22676      00
 22677              	.LASF247:
 22678 2100 5F4D5F66 		.string	"_M_first"
 22678      69727374 
 22678      00
 22679              	.LASF186:
 22680 2109 6F706572 		.string	"operator*"
 22680      61746F72 
 22680      2A00
 22681              	.LASF641:
 22682 2113 6F706572 		.string	"operator-"
 22682      61746F72 
 22682      2D00
 22683              	.LASF709:
 22684 211d 5F5F676E 		.string	"__gnu_debug"
 22684      755F6465 
 22684      62756700 
 22685              	.LASF428:
 22686 2129 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_S_max_sizeERKS5_"
 22686      74356465 
 22686      71756549 
 22686      53743130 
 22686      756E6971 
 22687              	.LASF819:
 22688 2182 776D656D 		.string	"wmemset"
 22688      73657400 
 22689              	.LASF73:
 22690 218a 6F706572 		.string	"operator="
 22690      61746F72 
 22690      3D00
 22691              	.LASF834:
 22692 2194 5F5F7569 		.string	"__uint16_t"
 22692      6E743136 
 22692      5F7400
 22693              	.LASF616:
 22694 219f 636F7079 		.string	"copy_backward<std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 22694      5F626163 
 22694      6B776172 
 22694      643C7374 
 22694      643A3A75 
 22695              	.LASF263:
 22696 21e9 5F53656C 		.string	"_Self"
 22696      6600
 22697              	.LASF606:
 22698 21ef 5F5F7468 		.string	"__throw_system_error"
 22698      726F775F 
 22698      73797374 
 22698      656D5F65 
 22698      72726F72 
 22699              	.LASF756:
 22700 2204 62746F77 		.string	"btowc"
 22700      6300
 22701              	.LASF113:
 22702 220a 77616974 		.string	"wait"
 22702      00
 22703              	.LASF585:
GAS LISTING x64lin/../common/event.s 			page 558


 22704 220f 72656D6F 		.string	"remove_reference<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >&>"
 22704      76655F72 
 22704      65666572 
 22704      656E6365 
 22704      3C737464 
 22705              	.LASF292:
 22706 225e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE10deallocat
 22706      74313661 
 22706      6C6C6F63 
 22706      61746F72 
 22706      5F747261 
 22707              	.LASF771:
 22708 22c3 70757477 		.string	"putwchar"
 22708      63686172 
 22708      00
 22709              	.LASF190:
 22710 22cc 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEptEv"
 22710      53743130 
 22710      756E6971 
 22710      75655F70 
 22710      74724939 
 22711              	.LASF614:
 22712 2306 5F5A5374 		.string	"_ZSt12__get_helperILm0EP9BaseEventJSt14default_deleteIS0_EEERT0_RSt11_Tuple_implIXT_EJS4_
 22712      31325F5F 
 22712      6765745F 
 22712      68656C70 
 22712      6572494C 
 22713              	.LASF888:
 22714 2367 63757272 		.string	"currency_symbol"
 22714      656E6379 
 22714      5F73796D 
 22714      626F6C00 
 22715              	.LASF657:
 22716 2377 5F535F73 		.string	"_S_single"
 22716      696E676C 
 22716      6500
 22717              	.LASF593:
 22718 2381 616C6C6F 		.string	"allocator_traits<std::allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent>
 22718      6361746F 
 22718      725F7472 
 22718      61697473 
 22718      3C737464 
 22719              	.LASF951:
 22720 23e1 5F5F6461 		.string	"__data"
 22720      746100
 22721              	.LASF576:
 22722 23e8 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEEaSERKS4_"
 22722      74357475 
 22722      706C6549 
 22722      4A503942 
 22722      61736545 
 22723              	.LASF495:
 22724 2422 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4backEv
 22724      74357175 
 22724      65756549 
 22724      53743130 
 22724      756E6971 
GAS LISTING x64lin/../common/event.s 			page 559


 22725              	.LASF739:
 22726 247c 5F636861 		.string	"_chain"
 22726      696E00
 22727              	.LASF102:
 22728 2483 5F5F6E61 		.string	"__native_type"
 22728      74697665 
 22728      5F747970 
 22728      6500
 22729              	.LASF569:
 22730 2491 7475706C 		.string	"tuple<BaseEvent*, std::default_delete<BaseEvent> >"
 22730      653C4261 
 22730      73654576 
 22730      656E742A 
 22730      2C207374 
 22731              	.LASF904:
 22732 24c4 696E745F 		.string	"int_n_cs_precedes"
 22732      6E5F6373 
 22732      5F707265 
 22732      63656465 
 22732      7300
 22733              	.LASF1134:
 22734 24d6 616C6967 		.string	"align_val_t"
 22734      6E5F7661 
 22734      6C5F7400 
 22735              	.LASF257:
 22736 24e2 5F5F6974 		.string	"__iter"
 22736      657200
 22737              	.LASF192:
 22738 24e9 6765745F 		.string	"get_deleter"
 22738      64656C65 
 22738      74657200 
 22739              	.LASF613:
 22740 24f5 5F5F6765 		.string	"__get_helper<0, BaseEvent*, std::default_delete<BaseEvent> >"
 22740      745F6865 
 22740      6C706572 
 22740      3C302C20 
 22740      42617365 
 22741              	.LASF523:
 22742 2532 5F486561 		.string	"_Head_base"
 22742      645F6261 
 22742      736500
 22743              	.LASF813:
 22744 253d 77637374 		.string	"wcstoul"
 22744      6F756C00 
 22745              	.LASF911:
 22746 2545 31315F5F 		.string	"11__mbstate_t"
 22746      6D627374 
 22746      6174655F 
 22746      7400
 22747              	.LASF693:
 22748 2553 756E7369 		.string	"unsigned char"
 22748      676E6564 
 22748      20636861 
 22748      7200
 22749              	.LASF494:
 22750 2561 5F5A4E4B 		.string	"_ZNKSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE5front
 22750      53743571 
GAS LISTING x64lin/../common/event.s 			page 560


 22750      75657565 
 22750      49537431 
 22750      30756E69 
 22751              	.LASF52:
 22752 25bd 616C6C6F 		.string	"allocator_arg_t"
 22752      6361746F 
 22752      725F6172 
 22752      675F7400 
 22753              	.LASF482:
 22754 25cd 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE12emplace_backIJS4_E
 22754      74356465 
 22754      71756549 
 22754      53743130 
 22754      756E6971 
 22755              	.LASF31:
 22756 2632 72616E64 		.string	"random_access_iterator_tag"
 22756      6F6D5F61 
 22756      63636573 
 22756      735F6974 
 22756      65726174 
 22757              	.LASF954:
 22758 264d 70746872 		.string	"pthread_mutex_t"
 22758      6561645F 
 22758      6D757465 
 22758      785F7400 
 22759              	.LASF814:
 22760 265d 77637378 		.string	"wcsxfrm"
 22760      66726D00 
 22761              	.LASF1142:
 22762 2665 5F494F5F 		.string	"_IO_lock_t"
 22762      6C6F636B 
 22762      5F7400
 22763              	.LASF803:
 22764 2670 7763736C 		.string	"wcslen"
 22764      656E00
 22765              	.LASF234:
 22766 2677 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC4IS3_EERKSaIT_E"
 22766      61495053 
 22766      74313075 
 22766      6E697175 
 22766      655F7074 
 22767              	.LASF104:
 22768 26c1 6E617469 		.string	"native_handle"
 22768      76655F68 
 22768      616E646C 
 22768      6500
 22769              	.LASF703:
 22770 26cf 666C6F61 		.string	"float"
 22770      7400
 22771              	.LASF1020:
 22772 26d5 73657476 		.string	"setvbuf"
 22772      62756600 
 22773              	.LASF1115:
 22774 26dd 5F5F6C6F 		.string	"__location"
 22774      63617469 
 22774      6F6E00
 22775              	.LASF19:
GAS LISTING x64lin/../common/event.s 			page 561


 22776 26e8 5F5F6375 		.string	"__cust_iswap"
 22776      73745F69 
 22776      73776170 
 22776      00
 22777              	.LASF1083:
 22778 26f5 70746872 		.string	"pthread_mutex_lock"
 22778      6561645F 
 22778      6D757465 
 22778      785F6C6F 
 22778      636B00
 22779              	.LASF162:
 22780 2708 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexE4swapERS1_"
 22780      74313175 
 22780      6E697175 
 22780      655F6C6F 
 22780      636B4953 
 22781              	.LASF615:
 22782 272f 5F546169 		.string	"_Tail"
 22782      6C00
 22783              	.LASF877:
 22784 2735 75696E74 		.string	"uint_fast32_t"
 22784      5F666173 
 22784      7433325F 
 22784      7400
 22785              	.LASF355:
 22786 2743 61737369 		.string	"assign"
 22786      676E00
 22787              	.LASF847:
 22788 274a 5F5F696E 		.string	"__intmax_t"
 22788      746D6178 
 22788      5F7400
 22789              	.LASF869:
 22790 2755 75696E74 		.string	"uint_least32_t"
 22790      5F6C6561 
 22790      73743332 
 22790      5F7400
 22791              	.LASF680:
 22792 2764 5F535F61 		.string	"_S_always_equal"
 22792      6C776179 
 22792      735F6571 
 22792      75616C00 
 22793              	.LASF1113:
 22794 2774 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEC2EOS3_"
 22794      7431315F 
 22794      5475706C 
 22794      655F696D 
 22794      706C494C 
 22795              	.LASF435:
 22796 27b4 5F4D5F70 		.string	"_M_pop_back_aux"
 22796      6F705F62 
 22796      61636B5F 
 22796      61757800 
 22797              	.LASF370:
 22798 27c4 72656E64 		.string	"rend"
 22798      00
 22799              	.LASF105:
 22800 27c9 5F5A4E53 		.string	"_ZNSt5mutex13native_handleEv"
GAS LISTING x64lin/../common/event.s 			page 562


 22800      74356D75 
 22800      74657831 
 22800      336E6174 
 22800      6976655F 
 22801              	.LASF1019:
 22802 27e6 73657462 		.string	"setbuf"
 22802      756600
 22803              	.LASF828:
 22804 27ed 77637374 		.string	"wcstold"
 22804      6F6C6400 
 22805              	.LASF637:
 22806 27f5 5F5F6D69 		.string	"__miter_base<std::unique_ptr<BaseEvent>**>"
 22806      7465725F 
 22806      62617365 
 22806      3C737464 
 22806      3A3A756E 
 22807              	.LASF436:
 22808 2820 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_pop_back_auxEv"
 22808      74356465 
 22808      71756549 
 22808      53743130 
 22808      756E6971 
 22809              	.LASF1121:
 22810 2879 5F5A3970 		.string	"_Z9pushEventR15SharedResourcesSt10unique_ptrI9BaseEventSt14default_deleteIS2_EE"
 22810      75736845 
 22810      76656E74 
 22810      52313553 
 22810      68617265 
 22811              	.LASF332:
 22812 28c9 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_M_destroy_
 22812      7431315F 
 22812      44657175 
 22812      655F6261 
 22812      73654953 
 22813              	.LASF232:
 22814 2931 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEE10deallocateEPS4_m"
 22814      61495053 
 22814      74313075 
 22814      6E697175 
 22814      655F7074 
 22815              	.LASF298:
 22816 297d 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_Deque_impl
 22816      7431315F 
 22816      44657175 
 22816      655F6261 
 22816      73654953 
 22817              	.LASF479:
 22818 29de 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_M_push_back_auxIJ
 22818      74356465 
 22818      71756549 
 22818      53743130 
 22818      756E6971 
 22819              	.LASF306:
 22820 2a44 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ERKS5_m"
 22820      7431315F 
 22820      44657175 
 22820      655F6261 
GAS LISTING x64lin/../common/event.s 			page 563


 22820      73654953 
 22821              	.LASF77:
 22822 2a9a 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrD4Ev"
 22822      7431355F 
 22822      5F657863 
 22822      65707469 
 22822      6F6E5F70 
 22823              	.LASF12:
 22824 2ac4 66616C73 		.string	"false_type"
 22824      655F7479 
 22824      706500
 22825              	.LASF829:
 22826 2acf 77637374 		.string	"wcstoll"
 22826      6F6C6C00 
 22827              	.LASF937:
 22828 2ad7 5F5F6B69 		.string	"__kind"
 22828      6E6400
 22829              	.LASF619:
 22830 2ade 5F5A5374 		.string	"_ZSt22__copy_move_backward_aILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET
 22830      32325F5F 
 22830      636F7079 
 22830      5F6D6F76 
 22830      655F6261 
 22831              	.LASF802:
 22832 2b43 746D5F7A 		.string	"tm_zone"
 22832      6F6E6500 
 22833              	.LASF862:
 22834 2b4b 75696E74 		.string	"uint64_t"
 22834      36345F74 
 22834      00
 22835              	.LASF1068:
 22836 2b54 6576656E 		.string	"eventQueue"
 22836      74517565 
 22836      756500
 22837              	.LASF763:
 22838 2b5f 66777363 		.string	"fwscanf"
 22838      616E6600 
 22839              	.LASF315:
 22840 2b67 5F5A4E4B 		.string	"_ZNKSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE19_M_get_Tp_
 22840      53743131 
 22840      5F446571 
 22840      75655F62 
 22840      61736549 
 22841              	.LASF791:
 22842 2bcc 77637366 		.string	"wcsftime"
 22842      74696D65 
 22842      00
 22843              	.LASF78:
 22844 2bd5 73776170 		.string	"swap"
 22844      00
 22845              	.LASF1104:
 22846 2bda 5F446973 		.string	"_Distance"
 22846      74616E63 
 22846      6500
 22847              	.LASF413:
 22848 2be4 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE8pop_backEv"
 22848      74356465 
GAS LISTING x64lin/../common/event.s 			page 564


 22848      71756549 
 22848      53743130 
 22848      756E6971 
 22849              	.LASF40:
 22850 2c35 5F5A4E53 		.string	"_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPPSt10unique_ptrI9Bas
 22850      7431315F 
 22850      5F636F70 
 22850      795F6D6F 
 22850      7665494C 
 22851              	.LASF63:
 22852 2cbd 5F4D5F61 		.string	"_M_addref"
 22852      64647265 
 22852      6600
 22853              	.LASF766:
 22854 2cc7 6D62726C 		.string	"mbrlen"
 22854      656E00
 22855              	.LASF346:
 22856 2cce 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_RKS5_"
 22856      74356465 
 22856      71756549 
 22856      53743130 
 22856      756E6971 
 22857              	.LASF94:
 22858 2d20 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 22858      53743135 
 22858      5F5F6578 
 22858      63657074 
 22858      696F6E5F 
 22859              	.LASF591:
 22860 2d4c 5F5F636F 		.string	"__copy_move_b<std::unique_ptr<BaseEvent>*>"
 22860      70795F6D 
 22860      6F76655F 
 22860      623C7374 
 22860      643A3A75 
 22861              	.LASF946:
 22862 2d77 5F5F6731 		.string	"__g1_orig_size"
 22862      5F6F7269 
 22862      675F7369 
 22862      7A6500
 22863              	.LASF598:
 22864 2d86 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE37select_o
 22864      74313661 
 22864      6C6C6F63 
 22864      61746F72 
 22864      5F747261 
 22865              	.LASF218:
 22866 2e03 73697A65 		.string	"size_type"
 22866      5F747970 
 22866      6500
 22867              	.LASF1018:
 22868 2e0d 72657769 		.string	"rewind"
 22868      6E6400
 22869              	.LASF1090:
 22870 2e14 5F5F6D61 		.string	"__map_alloc"
 22870      705F616C 
 22870      6C6F6300 
 22871              	.LASF581:
GAS LISTING x64lin/../common/event.s 			page 565


 22872 2e20 5F5F756E 		.string	"__uniq_ptr_data"
 22872      69715F70 
 22872      74725F64 
 22872      61746100 
 22873              	.LASF623:
 22874 2e30 5F5A5374 		.string	"_ZSt23__copy_move_backward_a2ILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_E
 22874      32335F5F 
 22874      636F7079 
 22874      5F6D6F76 
 22874      655F6261 
 22875              	.LASF1130:
 22876 2e96 5F556E77 		.string	"_Unwind_Resume"
 22876      696E645F 
 22876      52657375 
 22876      6D6500
 22877              	.LASF1095:
 22878 2ea5 5F5F6E65 		.string	"__new_num_nodes"
 22878      775F6E75 
 22878      6D5F6E6F 
 22878      64657300 
 22879              	.LASF985:
 22880 2eb5 73747274 		.string	"strtold"
 22880      6F6C6400 
 22881              	.LASF1122:
 22882 2ebd 73686172 		.string	"sharedResources"
 22882      65645265 
 22882      736F7572 
 22882      63657300 
 22883              	.LASF982:
 22884 2ecd 73747274 		.string	"strtoll"
 22884      6F6C6C00 
 22885              	.LASF216:
 22886 2ed5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8allocateER
 22886      74313661 
 22886      6C6C6F63 
 22886      61746F72 
 22886      5F747261 
 22887              	.LASF781:
 22888 2f33 5F5F6973 		.string	"__isoc99_vswscanf"
 22888      6F633939 
 22888      5F767377 
 22888      7363616E 
 22888      6600
 22889              	.LASF958:
 22890 2f45 61746578 		.string	"atexit"
 22890      697400
 22891              	.LASF731:
 22892 2f4c 5F494F5F 		.string	"_IO_write_ptr"
 22892      77726974 
 22892      655F7074 
 22892      7200
 22893              	.LASF971:
 22894 2f5a 71756963 		.string	"quick_exit"
 22894      6B5F6578 
 22894      697400
 22895              	.LASF1132:
 22896 2f65 5F5F6275 		.string	"__builtin_unwind_resume"
GAS LISTING x64lin/../common/event.s 			page 566


 22896      696C7469 
 22896      6E5F756E 
 22896      77696E64 
 22896      5F726573 
 22897              	.LASF893:
 22898 2f7d 6E656761 		.string	"negative_sign"
 22898      74697665 
 22898      5F736967 
 22898      6E00
 22899              	.LASF297:
 22900 2f8b 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_Deque_impl
 22900      7431315F 
 22900      44657175 
 22900      655F6261 
 22900      73654953 
 22901              	.LASF125:
 22902 2fec 64656665 		.string	"defer_lock_t"
 22902      725F6C6F 
 22902      636B5F74 
 22902      00
 22903              	.LASF463:
 22904 2ff9 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE24_M_new_elements_at
 22904      74356465 
 22904      71756549 
 22904      53743130 
 22904      756E6971 
 22905              	.LASF239:
 22906 305b 706F696E 		.string	"pointer_to"
 22906      7465725F 
 22906      746F00
 22907              	.LASF1055:
 22908 3066 74696D65 		.string	"time"
 22908      00
 22909              	.LASF537:
 22910 306b 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEE7_M_headERKS3_"
 22910      7431315F 
 22910      5475706C 
 22910      655F696D 
 22910      706C494C 
 22911              	.LASF839:
 22912 30b2 5F5F696E 		.string	"__int_least8_t"
 22912      745F6C65 
 22912      61737438 
 22912      5F7400
 22913              	.LASF689:
 22914 30c1 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEEC4ERKS7_"
 22914      5F5F676E 
 22914      755F6378 
 22914      7831336E 
 22914      65775F61 
 22915              	.LASF288:
 22916 311a 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_Deque_impl
 22916      7431315F 
 22916      44657175 
 22916      655F6261 
 22916      73654953 
 22917              	.LASF786:
GAS LISTING x64lin/../common/event.s 			page 567


 22918 3181 77637363 		.string	"wcscat"
 22918      617400
 22919              	.LASF1144:
 22920 3188 4576656E 		.string	"EventType"
 22920      74547970 
 22920      6500
 22921              	.LASF685:
 22922 3192 6F746865 		.string	"other"
 22922      7200
 22923              	.LASF191:
 22924 3198 64656C65 		.string	"deleter_type"
 22924      7465725F 
 22924      74797065 
 22924      00
 22925              	.LASF75:
 22926 31a5 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 22926      7431355F 
 22926      5F657863 
 22926      65707469 
 22926      6F6E5F70 
 22927              	.LASF352:
 22928 31d2 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEaSERKS6_"
 22928      74356465 
 22928      71756549 
 22928      53743130 
 22928      756E6971 
 22929              	.LASF1012:
 22930 3220 6674656C 		.string	"ftell"
 22930      6C00
 22931              	.LASF542:
 22932 3226 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEaSERKS3_"
 22932      7431315F 
 22932      5475706C 
 22932      655F696D 
 22932      706C494C 
 22933              	.LASF447:
 22934 3267 5F4D5F65 		.string	"_M_erase_at_begin"
 22934      72617365 
 22934      5F61745F 
 22934      62656769 
 22934      6E00
 22935              	.LASF154:
 22936 3279 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexED4Ev"
 22936      74313175 
 22936      6E697175 
 22936      655F6C6F 
 22936      636B4953 
 22937              	.LASF887:
 22938 329a 696E745F 		.string	"int_curr_symbol"
 22938      63757272 
 22938      5F73796D 
 22938      626F6C00 
 22939              	.LASF11:
 22940 32aa 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEclEv"
 22940      53743137 
 22940      696E7465 
 22940      6772616C 
GAS LISTING x64lin/../common/event.s 			page 568


 22940      5F636F6E 
 22941              	.LASF1047:
 22942 32cf 5F5A4E36 		.string	"_ZN6__pstl9execution2v118unsequenced_policy19__allow_unsequencedEv"
 22942      5F5F7073 
 22942      746C3965 
 22942      78656375 
 22942      74696F6E 
 22943              	.LASF201:
 22944 3312 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE4swapERS3_"
 22944      74313075 
 22944      6E697175 
 22944      655F7074 
 22944      72493942 
 22945              	.LASF358:
 22946 3351 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE13get_allocatorEv"
 22946      53743564 
 22946      65717565 
 22946      49537431 
 22946      30756E69 
 22947              	.LASF574:
 22948 33a9 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEEC4ERKS4_"
 22948      74357475 
 22948      706C6549 
 22948      4A503942 
 22948      61736545 
 22949              	.LASF116:
 22950 33e3 5F5A4E53 		.string	"_ZNSt9__condvar10wait_untilERSt5mutexR8timespec"
 22950      74395F5F 
 22950      636F6E64 
 22950      76617231 
 22950      30776169 
 22951              	.LASF552:
 22952 3413 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EE7_M_headERS2_"
 22952      7431305F 
 22952      48656164 
 22952      5F626173 
 22952      65494C6D 
 22953              	.LASF83:
 22954 3447 5F5A5374 		.string	"_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE"
 22954      31377265 
 22954      7468726F 
 22954      775F6578 
 22954      63657074 
 22955              	.LASF90:
 22956 3483 7E6D7574 		.string	"~mutex"
 22956      657800
 22957              	.LASF486:
 22958 348a 72657665 		.string	"reverse_iterator<std::_Deque_iterator<std::unique_ptr<BaseEvent, std::default_delete<Base
 22958      7273655F 
 22958      69746572 
 22958      61746F72 
 22958      3C737464 
 22959              	.LASF952:
 22960 3577 5F5F7369 		.string	"__size"
 22960      7A6500
 22961              	.LASF250:
 22962 357e 5F4D5F6E 		.string	"_M_node"
GAS LISTING x64lin/../common/event.s 			page 569


 22962      6F646500 
 22963              	.LASF88:
 22964 3586 6D757465 		.string	"mutex"
 22964      7800
 22965              	.LASF381:
 22966 358c 73697A65 		.string	"size"
 22966      00
 22967              	.LASF14:
 22968 3591 5F5F7377 		.string	"__swappable_details"
 22968      61707061 
 22968      626C655F 
 22968      64657461 
 22968      696C7300 
 22969              	.LASF481:
 22970 35a5 656D706C 		.string	"emplace_back<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 22970      6163655F 
 22970      6261636B 
 22970      3C737464 
 22970      3A3A756E 
 22971              	.LASF755:
 22972 35f0 46494C45 		.string	"FILE"
 22972      00
 22973              	.LASF531:
 22974 35f5 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EE7_M_headERKS3_"
 22974      7431305F 
 22974      48656164 
 22974      5F626173 
 22974      65494C6D 
 22975              	.LASF1052:
 22976 363d 636C6F63 		.string	"clock"
 22976      6B00
 22977              	.LASF423:
 22978 3643 636C6561 		.string	"clear"
 22978      7200
 22979              	.LASF274:
 22980 3649 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EmIEl"
 22980      7431355F 
 22980      44657175 
 22980      655F6974 
 22980      65726174 
 22981              	.LASF1056:
 22982 369f 61736374 		.string	"asctime"
 22982      696D6500 
 22983              	.LASF81:
 22984 36a7 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 22984      53743135 
 22984      5F5F6578 
 22984      63657074 
 22984      696F6E5F 
 22985              	.LASF1021:
 22986 36e6 746D7066 		.string	"tmpfile"
 22986      696C6500 
 22987              	.LASF944:
 22988 36ee 5F5F675F 		.string	"__g_refs"
 22988      72656673 
 22988      00
 22989              	.LASF13:
GAS LISTING x64lin/../common/event.s 			page 570


 22990 36f7 73697A65 		.string	"size_t"
 22990      5F7400
 22991              	.LASF402:
 22992 36fe 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4backEv"
 22992      74356465 
 22992      71756549 
 22992      53743130 
 22992      756E6971 
 22993              	.LASF1102:
 22994 374b 5F4E756D 		.string	"_Num"
 22994      00
 22995              	.LASF571:
 22996 3750 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE14_S_buffer_sizeEv"
 22996      74356465 
 22996      71756549 
 22996      53743130 
 22996      756E6971 
 22997              	.LASF1058:
 22998 37a8 676D7469 		.string	"gmtime"
 22998      6D6500
 22999              	.LASF719:
 23000 37af 5F5F636F 		.string	"__count"
 23000      756E7400 
 23001              	.LASF311:
 23002 37b7 7E5F4465 		.string	"~_Deque_base"
 23002      7175655F 
 23002      62617365 
 23002      00
 23003              	.LASF859:
 23004 37c4 75696E74 		.string	"uint8_t"
 23004      385F7400 
 23005              	.LASF913:
 23006 37cc 71756F74 		.string	"quot"
 23006      00
 23007              	.LASF143:
 23008 37d1 5F5A4E53 		.string	"_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE"
 23008      74313863 
 23008      6F6E6469 
 23008      74696F6E 
 23008      5F766172 
 23009              	.LASF183:
 23010 380b 7E756E69 		.string	"~unique_ptr"
 23010      7175655F 
 23010      70747200 
 23011              	.LASF319:
 23012 3817 5F4D5F61 		.string	"_M_allocate_node"
 23012      6C6C6F63 
 23012      6174655F 
 23012      6E6F6465 
 23012      00
 23013              	.LASF398:
 23014 3828 66726F6E 		.string	"front"
 23014      7400
 23015              	.LASF1049:
 23016 382e 5F5A4E36 		.string	"_ZN6__pstl9execution2v118unsequenced_policy16__allow_parallelEv"
 23016      5F5F7073 
 23016      746C3965 
GAS LISTING x64lin/../common/event.s 			page 571


 23016      78656375 
 23016      74696F6E 
 23017              	.LASF16:
 23018 386e 72616E67 		.string	"ranges"
 23018      657300
 23019              	.LASF969:
 23020 3875 636F6E73 		.string	"construct<std::unique_ptr<BaseEvent>, std::unique_ptr<BaseEvent, std::default_delete<Base
 23020      74727563 
 23020      743C7374 
 23020      643A3A75 
 23020      6E697175 
 23021              	.LASF103:
 23022 38d9 6E617469 		.string	"native_handle_type"
 23022      76655F68 
 23022      616E646C 
 23022      655F7479 
 23022      706500
 23023              	.LASF1015:
 23024 38ec 70657272 		.string	"perror"
 23024      6F7200
 23025              	.LASF124:
 23026 38f3 5F4D5F63 		.string	"_M_cond"
 23026      6F6E6400 
 23027              	.LASF185:
 23028 38fb 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEaSEDn"
 23028      74313075 
 23028      6E697175 
 23028      655F7074 
 23028      72493942 
 23029              	.LASF843:
 23030 3935 5F5F696E 		.string	"__int_least32_t"
 23030      745F6C65 
 23030      61737433 
 23030      325F7400 
 23031              	.LASF642:
 23032 3945 5F5A5374 		.string	"_ZStmiRKSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_ES9_
 23032      6D69524B 
 23032      53743135 
 23032      5F446571 
 23032      75655F69 
 23033              	.LASF565:
 23034 399f 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEC4EOS4_"
 23034      7431315F 
 23034      5475706C 
 23034      655F696D 
 23034      706C494C 
 23035              	.LASF499:
 23036 39e3 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4pushEO
 23036      74357175 
 23036      65756549 
 23036      53743130 
 23036      756E6971 
 23037              	.LASF505:
 23038 3a40 5F5A4E4B 		.string	"_ZNKSt14default_deleteI9BaseEventEclEPS0_"
 23038      53743134 
 23038      64656661 
 23038      756C745F 
GAS LISTING x64lin/../common/event.s 			page 572


 23038      64656C65 
 23039              	.LASF735:
 23040 3a6a 5F494F5F 		.string	"_IO_save_base"
 23040      73617665 
 23040      5F626173 
 23040      6500
 23041              	.LASF679:
 23042 3a78 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E20
 23042      5F5F676E 
 23042      755F6378 
 23042      7831345F 
 23042      5F616C6C 
 23043              	.LASF367:
 23044 3ae8 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6rbeginEv"
 23044      74356465 
 23044      71756549 
 23044      53743130 
 23044      756E6971 
 23045              	.LASF415:
 23046 3b37 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6insertESt15_Deque_i
 23046      74356465 
 23046      71756549 
 23046      53743130 
 23046      756E6971 
 23047              	.LASF1108:
 23048 3ba9 5F5F6E65 		.string	"__new_node"
 23048      775F6E6F 
 23048      646500
 23049              	.LASF939:
 23050 3bb4 5F5F656C 		.string	"__elision"
 23050      6973696F 
 23050      6E00
 23051              	.LASF815:
 23052 3bbe 7763746F 		.string	"wctob"
 23052      6200
 23053              	.LASF890:
 23054 3bc4 6D6F6E5F 		.string	"mon_thousands_sep"
 23054      74686F75 
 23054      73616E64 
 23054      735F7365 
 23054      7000
 23055              	.LASF504:
 23056 3bd6 5F5A4E53 		.string	"_ZNSt14default_deleteI9BaseEventEC4Ev"
 23056      74313464 
 23056      65666175 
 23056      6C745F64 
 23056      656C6574 
 23057              	.LASF465:
 23058 3bfc 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE23_M_new_elements_at
 23058      74356465 
 23058      71756549 
 23058      53743130 
 23058      756E6971 
 23059              	.LASF199:
 23060 3c5d 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EED4Ev"
 23060      74313075 
 23060      6E697175 
GAS LISTING x64lin/../common/event.s 			page 573


 23060      655F7074 
 23060      72493942 
 23061              	.LASF762:
 23062 3c96 66777072 		.string	"fwprintf"
 23062      696E7466 
 23062      00
 23063              	.LASF418:
 23064 3c9f 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6insertESt15_Deque_i
 23064      74356465 
 23064      71756549 
 23064      53743130 
 23064      756E6971 
 23065              	.LASF427:
 23066 3d12 5F535F6D 		.string	"_S_max_size"
 23066      61785F73 
 23066      697A6500 
 23067              	.LASF171:
 23068 3d1e 5F4D7574 		.string	"_Mutex"
 23068      657800
 23069              	.LASF947:
 23070 3d25 5F5F7772 		.string	"__wrefs"
 23070      65667300 
 23071              	.LASF433:
 23072 3d2d 5F4D5F66 		.string	"_M_fill_assign"
 23072      696C6C5F 
 23072      61737369 
 23072      676E00
 23073              	.LASF718:
 23074 3d3c 5F5F7763 		.string	"__wchb"
 23074      686200
 23075              	.LASF1127:
 23076 3d43 5F5F6774 		.string	"__gthread_mutex_lock"
 23076      68726561 
 23076      645F6D75 
 23076      7465785F 
 23076      6C6F636B 
 23077              	.LASF620:
 23078 3d58 5F5F636F 		.string	"__copy_move_backward_a1<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**
 23078      70795F6D 
 23078      6F76655F 
 23078      6261636B 
 23078      77617264 
 23079              	.LASF989:
 23080 3db3 5F5F696E 		.string	"__int128 unsigned"
 23080      74313238 
 23080      20756E73 
 23080      69676E65 
 23080      6400
 23081              	.LASF404:
 23082 3dc5 70757368 		.string	"push_front"
 23082      5F66726F 
 23082      6E7400
 23083              	.LASF842:
 23084 3dd0 5F5F7569 		.string	"__uint_least16_t"
 23084      6E745F6C 
 23084      65617374 
 23084      31365F74 
GAS LISTING x64lin/../common/event.s 			page 574


 23084      00
 23085              	.LASF7:
 23086 3de1 696E7465 		.string	"integral_constant<bool, true>"
 23086      6772616C 
 23086      5F636F6E 
 23086      7374616E 
 23086      743C626F 
 23087              	.LASF246:
 23088 3dff 5F4D5F63 		.string	"_M_cur"
 23088      757200
 23089              	.LASF918:
 23090 3e06 6C6C6469 		.string	"lldiv_t"
 23090      765F7400 
 23091              	.LASF777:
 23092 3e0e 76667773 		.string	"vfwscanf"
 23092      63616E66 
 23092      00
 23093              	.LASF716:
 23094 3e17 77696E74 		.string	"wint_t"
 23094      5F7400
 23095              	.LASF966:
 23096 3e1e 6D626C65 		.string	"mblen"
 23096      6E00
 23097              	.LASF300:
 23098 3e24 5F54705F 		.string	"_Tp_alloc_type"
 23098      616C6C6F 
 23098      635F7479 
 23098      706500
 23099              	.LASF776:
 23100 3e33 76667770 		.string	"vfwprintf"
 23100      72696E74 
 23100      6600
 23101              	.LASF23:
 23102 3e3d 5F5F706C 		.string	"__platform_wait_alignment"
 23102      6174666F 
 23102      726D5F77 
 23102      6169745F 
 23102      616C6967 
 23103              	.LASF603:
 23104 3e57 5F5A5374 		.string	"_ZSt28__throw_bad_array_new_lengthv"
 23104      32385F5F 
 23104      7468726F 
 23104      775F6261 
 23104      645F6172 
 23105              	.LASF632:
 23106 3e7b 5F5A5374 		.string	"_ZSt14__copy_move_a1ILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET1_T0_S8_
 23106      31345F5F 
 23106      636F7079 
 23106      5F6D6F76 
 23106      655F6131 
 23107              	.LASF366:
 23108 3ed8 72626567 		.string	"rbegin"
 23108      696E00
 23109              	.LASF215:
 23110 3edf 616C6C6F 		.string	"allocator_traits<std::allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent>
 23110      6361746F 
 23110      725F7472 
GAS LISTING x64lin/../common/event.s 			page 575


 23110      61697473 
 23110      3C737464 
 23111              	.LASF830:
 23112 3f3f 77637374 		.string	"wcstoull"
 23112      6F756C6C 
 23112      00
 23113              	.LASF749:
 23114 3f48 5F776964 		.string	"_wide_data"
 23114      655F6461 
 23114      746100
 23115              	.LASF690:
 23116 3f53 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE8allocate
 23116      5F5F676E 
 23116      755F6378 
 23116      7831336E 
 23116      65775F61 
 23117              	.LASF540:
 23118 3fb2 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEC4ERKS2_"
 23118      7431315F 
 23118      5475706C 
 23118      655F696D 
 23118      706C494C 
 23119              	.LASF1146:
 23120 3ff3 5F5F7674 		.string	"__vtbl_ptr_type"
 23120      626C5F70 
 23120      74725F74 
 23120      79706500 
 23121              	.LASF326:
 23122 4003 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_M_dealloca
 23122      7431315F 
 23122      44657175 
 23122      655F6261 
 23122      73654953 
 23123              	.LASF1110:
 23124 406a 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEEC2EOS4_"
 23124      74357475 
 23124      706C6549 
 23124      4A503942 
 23124      61736545 
 23125              	.LASF1037:
 23126 40a3 5F5A4E36 		.string	"_ZN6__pstl9execution2v116sequenced_policy16__allow_parallelEv"
 23126      5F5F7073 
 23126      746C3965 
 23126      78656375 
 23126      74696F6E 
 23127              	.LASF180:
 23128 40e1 756E6971 		.string	"unique_ptr<BaseEvent, std::default_delete<BaseEvent> >"
 23128      75655F70 
 23128      74723C42 
 23128      61736545 
 23128      76656E74 
 23129              	.LASF818:
 23130 4118 776D656D 		.string	"wmemmove"
 23130      6D6F7665 
 23130      00
 23131              	.LASF759:
 23132 4121 66707574 		.string	"fputwc"
GAS LISTING x64lin/../common/event.s 			page 576


 23132      776300
 23133              	.LASF547:
 23134 4128 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EEC4Ev"
 23134      7431305F 
 23134      48656164 
 23134      5F626173 
 23134      65494C6D 
 23135              	.LASF597:
 23136 4153 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8max_sizeE
 23136      74313661 
 23136      6C6C6F63 
 23136      61746F72 
 23136      5F747261 
 23137              	.LASF1088:
 23138 41b2 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEED2Ev"
 23138      61495053 
 23138      74313075 
 23138      6E697175 
 23138      655F7074 
 23139              	.LASF760:
 23140 41f0 66707574 		.string	"fputws"
 23140      777300
 23141              	.LASF294:
 23142 41f7 5F446571 		.string	"_Deque_impl"
 23142      75655F69 
 23142      6D706C00 
 23143              	.LASF929:
 23144 4203 5F5F7074 		.string	"__pthread_internal_list"
 23144      68726561 
 23144      645F696E 
 23144      7465726E 
 23144      616C5F6C 
 23145              	.LASF1050:
 23146 421b 7061725F 		.string	"par_unseq"
 23146      756E7365 
 23146      7100
 23147              	.LASF994:
 23148 4225 5F446571 		.string	"_Deque_iterator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >, const std::u
 23148      75655F69 
 23148      74657261 
 23148      746F723C 
 23148      7374643A 
 23149              	.LASF930:
 23150 42fa 5F5F7072 		.string	"__prev"
 23150      657600
 23151              	.LASF478:
 23152 4301 5F4D5F70 		.string	"_M_push_back_aux<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 23152      7573685F 
 23152      6261636B 
 23152      5F617578 
 23152      3C737464 
 23153              	.LASF541:
 23154 4350 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEC4ERKS3_"
 23154      7431315F 
 23154      5475706C 
 23154      655F696D 
 23154      706C494C 
GAS LISTING x64lin/../common/event.s 			page 577


 23155              	.LASF1111:
 23156 4391 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEC2EOS4_"
 23156      7431315F 
 23156      5475706C 
 23156      655F696D 
 23156      706C494C 
 23157              	.LASF684:
 23158 43d5 72656269 		.string	"rebind<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 23158      6E643C73 
 23158      74643A3A 
 23158      756E6971 
 23158      75655F70 
 23159              	.LASF121:
 23160 441a 6E6F7469 		.string	"notify_all"
 23160      66795F61 
 23160      6C6C00
 23161              	.LASF1044:
 23162 4425 5F5A4E36 		.string	"_ZN6__pstl9execution2v127parallel_unsequenced_policy14__allow_vectorEv"
 23162      5F5F7073 
 23162      746C3965 
 23162      78656375 
 23162      74696F6E 
 23163              	.LASF572:
 23164 446c 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEE31__nothrow_default_constructibleEv"
 23164      74357475 
 23164      706C6549 
 23164      4A503942 
 23164      61736545 
 23165              	.LASF165:
 23166 44c1 6F776E73 		.string	"owns_lock"
 23166      5F6C6F63 
 23166      6B00
 23167              	.LASF837:
 23168 44cb 5F5F696E 		.string	"__int64_t"
 23168      7436345F 
 23168      7400
 23169              	.LASF388:
 23170 44d5 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE13shrink_to_fitEv"
 23170      74356465 
 23170      71756549 
 23170      53743130 
 23170      756E6971 
 23171              	.LASF333:
 23172 452c 5F4D5F69 		.string	"_M_impl"
 23172      6D706C00 
 23173              	.LASF290:
 23174 4534 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_Deque_impl
 23174      7431315F 
 23174      44657175 
 23174      655F6261 
 23174      73654953 
 23175              	.LASF838:
 23176 459a 5F5F7569 		.string	"__uint64_t"
 23176      6E743634 
 23176      5F7400
 23177              	.LASF823:
 23178 45a5 77637363 		.string	"wcschr"
GAS LISTING x64lin/../common/event.s 			page 578


 23178      687200
 23179              	.LASF179:
 23180 45ac 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexEaSERKS1_"
 23180      7431306C 
 23180      6F636B5F 
 23180      67756172 
 23180      64495374 
 23181              	.LASF373:
 23182 45d0 63626567 		.string	"cbegin"
 23182      696E00
 23183              	.LASF301:
 23184 45d7 6765745F 		.string	"get_allocator"
 23184      616C6C6F 
 23184      6361746F 
 23184      7200
 23185              	.LASF227:
 23186 45e5 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC4Ev"
 23186      61495053 
 23186      74313075 
 23186      6E697175 
 23186      655F7074 
 23187              	.LASF92:
 23188 4623 5F5A4E53 		.string	"_ZNSt5mutexC4ERKS_"
 23188      74356D75 
 23188      74657843 
 23188      3445524B 
 23188      535F00
 23189              	.LASF884:
 23190 4636 64656369 		.string	"decimal_point"
 23190      6D616C5F 
 23190      706F696E 
 23190      7400
 23191              	.LASF128:
 23192 4644 5F5A4E53 		.string	"_ZNSt13try_to_lock_tC4Ev"
 23192      74313374 
 23192      72795F74 
 23192      6F5F6C6F 
 23192      636B5F74 
 23193              	.LASF248:
 23194 465d 5F4D5F6C 		.string	"_M_last"
 23194      61737400 
 23195              	.LASF485:
 23196 4665 72657665 		.string	"reverse_iterator<std::_Deque_iterator<std::unique_ptr<BaseEvent, std::default_delete<Base
 23196      7273655F 
 23196      69746572 
 23196      61746F72 
 23196      3C737464 
 23197              	.LASF483:
 23198 4746 74797065 		.string	"type_info"
 23198      5F696E66 
 23198      6F00
 23199              	.LASF1141:
 23200 4750 6465636C 		.string	"decltype(nullptr)"
 23200      74797065 
 23200      286E756C 
 23200      6C707472 
 23200      2900
GAS LISTING x64lin/../common/event.s 			page 579


 23201              	.LASF146:
 23202 4762 756E6971 		.string	"unique_lock"
 23202      75655F6C 
 23202      6F636B00 
 23203              	.LASF379:
 23204 476e 6372656E 		.string	"crend"
 23204      6400
 23205              	.LASF692:
 23206 4774 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE11_M_max
 23206      395F5F67 
 23206      6E755F63 
 23206      78783133 
 23206      6E65775F 
 23207              	.LASF863:
 23208 47d5 696E745F 		.string	"int_least8_t"
 23208      6C656173 
 23208      74385F74 
 23208      00
 23209              	.LASF1000:
 23210 47e2 66636C6F 		.string	"fclose"
 23210      736500
 23211              	.LASF249:
 23212 47e9 5F4D6170 		.string	"_Map_pointer"
 23212      5F706F69 
 23212      6E746572 
 23212      00
 23213              	.LASF976:
 23214 47f6 73747274 		.string	"strtoul"
 23214      6F756C00 
 23215              	.LASF459:
 23216 47fe 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE28_M_reserve_element
 23216      74356465 
 23216      71756549 
 23216      53743130 
 23216      756E6971 
 23217              	.LASF354:
 23218 4864 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEaSESt16initializer_l
 23218      74356465 
 23218      71756549 
 23218      53743130 
 23218      756E6971 
 23219              	.LASF895:
 23220 48c6 66726163 		.string	"frac_digits"
 23220      5F646967 
 23220      69747300 
 23221              	.LASF122:
 23222 48d2 5F5A4E53 		.string	"_ZNSt9__condvar10notify_allEv"
 23222      74395F5F 
 23222      636F6E64 
 23222      76617231 
 23222      306E6F74 
 23223              	.LASF109:
 23224 48f0 5F5A4E53 		.string	"_ZNSt9__condvarD4Ev"
 23224      74395F5F 
 23224      636F6E64 
 23224      76617244 
 23224      34457600 
GAS LISTING x64lin/../common/event.s 			page 580


 23225              	.LASF1036:
 23226 4904 5F5F616C 		.string	"__allow_parallel"
 23226      6C6F775F 
 23226      70617261 
 23226      6C6C656C 
 23226      00
 23227              	.LASF275:
 23228 4915 6F706572 		.string	"operator[]"
 23228      61746F72 
 23228      5B5D00
 23229              	.LASF117:
 23230 4920 74696D65 		.string	"timespec"
 23230      73706563 
 23230      00
 23231              	.LASF21:
 23232 4929 5F5F6465 		.string	"__detail"
 23232      7461696C 
 23232      00
 23233              	.LASF1109:
 23234 4932 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EEC2EOS3_"
 23234      7431355F 
 23234      5F756E69 
 23234      715F7074 
 23234      725F696D 
 23235              	.LASF309:
 23236 4973 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_RKS5_"
 23236      7431315F 
 23236      44657175 
 23236      655F6261 
 23236      73654953 
 23237              	.LASF374:
 23238 49cc 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6cbeginEv"
 23238      53743564 
 23238      65717565 
 23238      49537431 
 23238      30756E69 
 23239              	.LASF662:
 23240 4a1c 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEEC4Ev"
 23240      5F5F676E 
 23240      755F6378 
 23240      7831336E 
 23240      65775F61 
 23241              	.LASF978:
 23242 4a70 77637374 		.string	"wcstombs"
 23242      6F6D6273 
 23242      00
 23243              	.LASF164:
 23244 4a79 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexE7releaseEv"
 23244      74313175 
 23244      6E697175 
 23244      655F6C6F 
 23244      636B4953 
 23245              	.LASF472:
 23246 4aa0 5F4D5F6D 		.string	"_M_move_assign1"
 23246      6F76655F 
 23246      61737369 
 23246      676E3100 
GAS LISTING x64lin/../common/event.s 			page 581


 23247              	.LASF1114:
 23248 4ab0 5F5F746D 		.string	"__tmp"
 23248      7000
 23249              	.LASF956:
 23250 4ab6 70746872 		.string	"pthread_cond_t"
 23250      6561645F 
 23250      636F6E64 
 23250      5F7400
 23251              	.LASF345:
 23252 4ac5 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ERKS6_RKS5_"
 23252      74356465 
 23252      71756549 
 23252      53743130 
 23252      756E6971 
 23253              	.LASF46:
 23254 4b18 5F5F636F 		.string	"__copy_m<std::unique_ptr<BaseEvent>*>"
 23254      70795F6D 
 23254      3C737464 
 23254      3A3A756E 
 23254      69717565 
 23255              	.LASF217:
 23256 4b3e 616C6C6F 		.string	"allocator_type"
 23256      6361746F 
 23256      725F7479 
 23256      706500
 23257              	.LASF1143:
 23258 4b4d 65786563 		.string	"execution"
 23258      7574696F 
 23258      6E00
 23259              	.LASF412:
 23260 4b57 706F705F 		.string	"pop_back"
 23260      6261636B 
 23260      00
 23261              	.LASF501:
 23262 4b60 5F536571 		.string	"_Sequence"
 23262      75656E63 
 23262      6500
 23263              	.LASF510:
 23264 4b6a 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EEC4EPS0_"
 23264      7431355F 
 23264      5F756E69 
 23264      715F7074 
 23264      725F696D 
 23265              	.LASF432:
 23266 4bab 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE21_M_default_initial
 23266      74356465 
 23266      71756549 
 23266      53743130 
 23266      756E6971 
 23267              	.LASF564:
 23268 4c0a 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEaSERKS4_"
 23268      7431315F 
 23268      5475706C 
 23268      655F696D 
 23268      706C494C 
 23269              	.LASF915:
 23270 4c4f 366C6469 		.string	"6ldiv_t"
GAS LISTING x64lin/../common/event.s 			page 582


 23270      765F7400 
 23271              	.LASF872:
 23272 4c57 696E745F 		.string	"int_fast16_t"
 23272      66617374 
 23272      31365F74 
 23272      00
 23273              	.LASF993:
 23274 4c64 5F5F6670 		.string	"__fpos_t"
 23274      6F735F74 
 23274      00
 23275              	.LASF357:
 23276 4c6d 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6assignESt16initiali
 23276      74356465 
 23276      71756549 
 23276      53743130 
 23276      756E6971 
 23277              	.LASF475:
 23278 4cd4 5F4D5F6D 		.string	"_M_move_assign2"
 23278      6F76655F 
 23278      61737369 
 23278      676E3200 
 23279              	.LASF424:
 23280 4ce4 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5clearEv"
 23280      74356465 
 23280      71756549 
 23280      53743130 
 23280      756E6971 
 23281              	.LASF514:
 23282 4d32 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE6_M_ptrEv"
 23282      7431355F 
 23282      5F756E69 
 23282      715F7074 
 23282      725F696D 
 23283              	.LASF492:
 23284 4d75 5F5A4E4B 		.string	"_ZNKSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4sizeE
 23284      53743571 
 23284      75657565 
 23284      49537431 
 23284      30756E69 
 23285              	.LASF20:
 23286 4dd0 5F5F6375 		.string	"__cust_access"
 23286      73745F61 
 23286      63636573 
 23286      7300
 23287              	.LASF773:
 23288 4dde 73777363 		.string	"swscanf"
 23288      616E6600 
 23289              	.LASF372:
 23290 4de6 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4rendEv"
 23290      53743564 
 23290      65717565 
 23290      49537431 
 23290      30756E69 
 23291              	.LASF1072:
 23292 4e34 5F5A4E39 		.string	"_ZN9BaseEventC4ERKS_"
 23292      42617365 
 23292      4576656E 
GAS LISTING x64lin/../common/event.s 			page 583


 23292      74433445 
 23292      524B535F 
 23293              	.LASF56:
 23294 4e49 5F5F7573 		.string	"__uses_alloc0"
 23294      65735F61 
 23294      6C6C6F63 
 23294      3000
 23295              	.LASF570:
 23296 4e57 5F5F6E6F 		.string	"__nothrow_default_constructible"
 23296      7468726F 
 23296      775F6465 
 23296      6661756C 
 23296      745F636F 
 23297              	.LASF175:
 23298 4e77 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexEC4ERS0_St12adopt_lock_t"
 23298      7431306C 
 23298      6F636B5F 
 23298      67756172 
 23298      64495374 
 23299              	.LASF999:
 23300 4eaa 636C6561 		.string	"clearerr"
 23300      72657272 
 23300      00
 23301              	.LASF369:
 23302 4eb3 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6rbeginEv"
 23302      53743564 
 23302      65717565 
 23302      49537431 
 23302      30756E69 
 23303              	.LASF497:
 23304 4f03 70757368 		.string	"push"
 23304      00
 23305              	.LASF539:
 23306 4f08 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEC4Ev"
 23306      7431315F 
 23306      5475706C 
 23306      655F696D 
 23306      706C494C 
 23307              	.LASF561:
 23308 4f45 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEC4Ev"
 23308      7431315F 
 23308      5475706C 
 23308      655F696D 
 23308      706C494C 
 23309              	.LASF899:
 23310 4f86 6E5F7365 		.string	"n_sep_by_space"
 23310      705F6279 
 23310      5F737061 
 23310      636500
 23311              	.LASF467:
 23312 4f95 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE22_M_reserve_map_at_
 23312      74356465 
 23312      71756549 
 23312      53743130 
 23312      756E6971 
 23313              	.LASF1023:
 23314 4ff5 756E6765 		.string	"ungetc"
GAS LISTING x64lin/../common/event.s 			page 584


 23314      746300
 23315              	.LASF855:
 23316 4ffc 696E7438 		.string	"int8_t"
 23316      5F7400
 23317              	.LASF197:
 23318 5003 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE7releaseEv"
 23318      74313075 
 23318      6E697175 
 23318      655F7074 
 23318      72493942 
 23319              	.LASF445:
 23320 5042 5F4D5F64 		.string	"_M_destroy_data"
 23320      65737472 
 23320      6F795F64 
 23320      61746100 
 23321              	.LASF820:
 23322 5052 77707269 		.string	"wprintf"
 23322      6E746600 
 23323              	.LASF793:
 23324 505a 746D5F6D 		.string	"tm_min"
 23324      696E00
 23325              	.LASF240:
 23326 5061 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEE10pointer_toERS4
 23326      74313470 
 23326      6F696E74 
 23326      65725F74 
 23326      72616974 
 23327              	.LASF160:
 23328 50bc 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexE8try_lockEv"
 23328      74313175 
 23328      6E697175 
 23328      655F6C6F 
 23328      636B4953 
 23329              	.LASF833:
 23330 50e4 5F5F696E 		.string	"__int16_t"
 23330      7431365F 
 23330      7400
 23331              	.LASF931:
 23332 50ee 5F5F6E65 		.string	"__next"
 23332      787400
 23333              	.LASF137:
 23334 50f5 7E636F6E 		.string	"~condition_variable"
 23334      64697469 
 23334      6F6E5F76 
 23334      61726961 
 23334      626C6500 
 23335              	.LASF876:
 23336 5109 75696E74 		.string	"uint_fast16_t"
 23336      5F666173 
 23336      7431365F 
 23336      7400
 23337              	.LASF399:
 23338 5117 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5frontEv"
 23338      74356465 
 23338      71756549 
 23338      53743130 
 23338      756E6971 
GAS LISTING x64lin/../common/event.s 			page 585


 23339              	.LASF865:
 23340 5165 696E745F 		.string	"int_least32_t"
 23340      6C656173 
 23340      7433325F 
 23340      7400
 23341              	.LASF973:
 23342 5173 7372616E 		.string	"srand"
 23342      6400
 23343              	.LASF434:
 23344 5179 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE14_M_fill_assignEmRK
 23344      74356465 
 23344      71756549 
 23344      53743130 
 23344      756E6971 
 23345              	.LASF787:
 23346 51d6 77637363 		.string	"wcscmp"
 23346      6D7000
 23347              	.LASF928:
 23348 51dd 5F5F6174 		.string	"__atomic_wide_counter"
 23348      6F6D6963 
 23348      5F776964 
 23348      655F636F 
 23348      756E7465 
 23349              	.LASF214:
 23350 51f3 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEE10deallocateEPS3_m"
 23350      61495374 
 23350      3130756E 
 23350      69717565 
 23350      5F707472 
 23351              	.LASF91:
 23352 523e 5F5A4E53 		.string	"_ZNSt5mutexD4Ev"
 23352      74356D75 
 23352      74657844 
 23352      34457600 
 23353              	.LASF336:
 23354 524e 64657175 		.string	"deque<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >, std::allocator<std::un
 23354      653C7374 
 23354      643A3A75 
 23354      6E697175 
 23354      655F7074 
 23355              	.LASF713:
 23356 52e0 66705F6F 		.string	"fp_offset"
 23356      66667365 
 23356      7400
 23357              	.LASF310:
 23358 52ea 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_RKS5_m
 23358      7431315F 
 23358      44657175 
 23358      655F6261 
 23358      73654953 
 23359              	.LASF852:
 23360 5344 5F5F7469 		.string	"__time_t"
 23360      6D655F74 
 23360      00
 23361              	.LASF769:
 23362 534d 6D627372 		.string	"mbsrtowcs"
 23362      746F7763 
GAS LISTING x64lin/../common/event.s 			page 586


 23362      7300
 23363              	.LASF67:
 23364 5357 5F4D5F67 		.string	"_M_get"
 23364      657400
 23365              	.LASF891:
 23366 535e 6D6F6E5F 		.string	"mon_grouping"
 23366      67726F75 
 23366      70696E67 
 23366      00
 23367              	.LASF712:
 23368 536b 67705F6F 		.string	"gp_offset"
 23368      66667365 
 23368      7400
 23369              	.LASF1004:
 23370 5375 66676574 		.string	"fgetc"
 23370      6300
 23371              	.LASF376:
 23372 537b 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4cendEv"
 23372      53743564 
 23372      65717565 
 23372      49537431 
 23372      30756E69 
 23373              	.LASF152:
 23374 53c9 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4ERS0_St12adopt_lock_t"
 23374      74313175 
 23374      6E697175 
 23374      655F6C6F 
 23374      636B4953 
 23375              	.LASF188:
 23376 53fd 706F696E 		.string	"pointer"
 23376      74657200 
 23377              	.LASF159:
 23378 5405 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexE4lockEv"
 23378      74313175 
 23378      6E697175 
 23378      655F6C6F 
 23378      636B4953 
 23379              	.LASF454:
 23380 5429 5F4D5F64 		.string	"_M_default_append"
 23380      65666175 
 23380      6C745F61 
 23380      7070656E 
 23380      6400
 23381              	.LASF708:
 23382 543b 5F5F696E 		.string	"__int128"
 23382      74313238 
 23382      00
 23383              	.LASF198:
 23384 5444 72657365 		.string	"reset"
 23384      7400
 23385              	.LASF707:
 23386 544a 63686172 		.string	"char32_t"
 23386      33325F74 
 23386      00
 23387              	.LASF799:
 23388 5453 746D5F79 		.string	"tm_yday"
 23388      64617900 
GAS LISTING x64lin/../common/event.s 			page 587


 23389              	.LASF538:
 23390 545b 5F547570 		.string	"_Tuple_impl"
 23390      6C655F69 
 23390      6D706C00 
 23391              	.LASF768:
 23392 5467 6D627369 		.string	"mbsinit"
 23392      6E697400 
 23393              	.LASF496:
 23394 546f 5F5A4E4B 		.string	"_ZNKSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4backE
 23394      53743571 
 23394      75657565 
 23394      49537431 
 23394      30756E69 
 23395              	.LASF76:
 23396 54ca 7E657863 		.string	"~exception_ptr"
 23396      65707469 
 23396      6F6E5F70 
 23396      747200
 23397              	.LASF462:
 23398 54d9 5F4D5F6E 		.string	"_M_new_elements_at_front"
 23398      65775F65 
 23398      6C656D65 
 23398      6E74735F 
 23398      61745F66 
 23399              	.LASF1145:
 23400 54f2 5F767074 		.string	"_vptr.BaseEvent"
 23400      722E4261 
 23400      73654576 
 23400      656E7400 
 23401              	.LASF977:
 23402 5502 73797374 		.string	"system"
 23402      656D00
 23403              	.LASF856:
 23404 5509 696E7431 		.string	"int16_t"
 23404      365F7400 
 23405              	.LASF111:
 23406 5511 5F5A4E53 		.string	"_ZNSt9__condvaraSERKS_"
 23406      74395F5F 
 23406      636F6E64 
 23406      76617261 
 23406      5345524B 
 23407              	.LASF621:
 23408 5528 5F5A5374 		.string	"_ZSt23__copy_move_backward_a1ILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_E
 23408      32335F5F 
 23408      636F7079 
 23408      5F6D6F76 
 23408      655F6261 
 23409              	.LASF299:
 23410 558e 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_Deque_impl
 23410      7431315F 
 23410      44657175 
 23410      655F6261 
 23410      73654953 
 23411              	.LASF1140:
 23412 55f3 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 23412      64656620 
 23412      5F5F7661 
GAS LISTING x64lin/../common/event.s 			page 588


 23412      5F6C6973 
 23412      745F7461 
 23413              	.LASF694:
 23414 5617 73686F72 		.string	"short unsigned int"
 23414      7420756E 
 23414      7369676E 
 23414      65642069 
 23414      6E7400
 23415              	.LASF371:
 23416 562a 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4rendEv"
 23416      74356465 
 23416      71756549 
 23416      53743130 
 23416      756E6971 
 23417              	.LASF643:
 23418 5677 6D6F7665 		.string	"move<std::tuple<BaseEvent*, std::default_delete<BaseEvent> >&>"
 23418      3C737464 
 23418      3A3A7475 
 23418      706C653C 
 23418      42617365 
 23419              	.LASF697:
 23420 56b6 7369676E 		.string	"signed char"
 23420      65642063 
 23420      68617200 
 23421              	.LASF457:
 23422 56c2 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_M_shrink_to_fitEv
 23422      74356465 
 23422      71756549 
 23422      53743130 
 23422      756E6971 
 23423              	.LASF945:
 23424 571c 5F5F675F 		.string	"__g_size"
 23424      73697A65 
 23424      00
 23425              	.LASF638:
 23426 5725 5F5A5374 		.string	"_ZSt12__miter_baseIPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEET_S7_"
 23426      31325F5F 
 23426      6D697465 
 23426      725F6261 
 23426      73654950 
 23427              	.LASF283:
 23428 5772 5F4D5F6D 		.string	"_M_map_size"
 23428      61705F73 
 23428      697A6500 
 23429              	.LASF236:
 23430 577e 636F6E64 		.string	"conditional<false, std::__undefined, std::unique_ptr<BaseEvent, std::default_delete<BaseE
 23430      6974696F 
 23430      6E616C3C 
 23430      66616C73 
 23430      652C2073 
 23431              	.LASF272:
 23432 57e1 64696666 		.string	"difference_type"
 23432      6572656E 
 23432      63655F74 
 23432      79706500 
 23433              	.LASF44:
 23434 57f1 70747264 		.string	"ptrdiff_t"
GAS LISTING x64lin/../common/event.s 			page 589


 23434      6966665F 
 23434      7400
 23435              	.LASF772:
 23436 57fb 73777072 		.string	"swprintf"
 23436      696E7466 
 23436      00
 23437              	.LASF71:
 23438 5804 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EDn"
 23438      7431355F 
 23438      5F657863 
 23438      65707469 
 23438      6F6E5F70 
 23439              	.LASF401:
 23440 582f 6261636B 		.string	"back"
 23440      00
 23441              	.LASF182:
 23442 5834 756E6971 		.string	"unique_ptr"
 23442      75655F70 
 23442      747200
 23443              	.LASF503:
 23444 583f 64656661 		.string	"default_delete"
 23444      756C745F 
 23444      64656C65 
 23444      746500
 23445              	.LASF545:
 23446 584e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEE7_M_swapERS3_"
 23446      7431315F 
 23446      5475706C 
 23446      655F696D 
 23446      706C494C 
 23447              	.LASF943:
 23448 5894 5F5F6731 		.string	"__g1_start"
 23448      5F737461 
 23448      727400
 23449              	.LASF322:
 23450 589f 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE18_M_dealloca
 23450      7431315F 
 23450      44657175 
 23450      655F6261 
 23450      73654953 
 23451              	.LASF1048:
 23452 5905 5F5A4E36 		.string	"_ZN6__pstl9execution2v118unsequenced_policy14__allow_vectorEv"
 23452      5F5F7073 
 23452      746C3965 
 23452      78656375 
 23452      74696F6E 
 23453              	.LASF212:
 23454 5943 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEE8allocateEm"
 23454      61495374 
 23454      3130756E 
 23454      69717565 
 23454      5F707472 
 23455              	.LASF85:
 23456 5987 5F5A4E53 		.string	"_ZNSt12__mutex_baseC4Ev"
 23456      7431325F 
 23456      5F6D7574 
 23456      65785F62 
GAS LISTING x64lin/../common/event.s 			page 590


 23456      61736543 
 23457              	.LASF798:
 23458 599f 746D5F77 		.string	"tm_wday"
 23458      64617900 
 23459              	.LASF850:
 23460 59a7 5F5F6F66 		.string	"__off64_t"
 23460      6636345F 
 23460      7400
 23461              	.LASF789:
 23462 59b1 77637363 		.string	"wcscpy"
 23462      707900
 23463              	.LASF704:
 23464 59b8 77636861 		.string	"wchar_t"
 23464      725F7400 
 23465              	.LASF779:
 23466 59c0 76737770 		.string	"vswprintf"
 23466      72696E74 
 23466      6600
 23467              	.LASF266:
 23468 59ca 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EppEi"
 23468      7431355F 
 23468      44657175 
 23468      655F6974 
 23468      65726174 
 23469              	.LASF1046:
 23470 5a20 756E7365 		.string	"unsequenced_policy"
 23470      7175656E 
 23470      6365645F 
 23470      706F6C69 
 23470      637900
 23471              	.LASF1045:
 23472 5a33 5F5A4E36 		.string	"_ZN6__pstl9execution2v127parallel_unsequenced_policy16__allow_parallelEv"
 23472      5F5F7073 
 23472      746C3965 
 23472      78656375 
 23472      74696F6E 
 23473              	.LASF729:
 23474 5a7c 5F494F5F 		.string	"_IO_read_base"
 23474      72656164 
 23474      5F626173 
 23474      6500
 23475              	.LASF98:
 23476 5a8a 7472795F 		.string	"try_lock"
 23476      6C6F636B 
 23476      00
 23477              	.LASF861:
 23478 5a93 75696E74 		.string	"uint32_t"
 23478      33325F74 
 23478      00
 23479              	.LASF265:
 23480 5a9c 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EppEv"
 23480      7431355F 
 23480      44657175 
 23480      655F6974 
 23480      65726174 
 23481              	.LASF880:
 23482 5af2 75696E74 		.string	"uintptr_t"
GAS LISTING x64lin/../common/event.s 			page 591


 23482      7074725F 
 23482      7400
 23483              	.LASF649:
 23484 5afc 6D6F7665 		.string	"move<std::unique_ptr<BaseEvent>&>"
 23484      3C737464 
 23484      3A3A756E 
 23484      69717565 
 23484      5F707472 
 23485              	.LASF86:
 23486 5b1e 5F5A4E53 		.string	"_ZNSt12__mutex_baseC4ERKS_"
 23486      7431325F 
 23486      5F6D7574 
 23486      65785F62 
 23486      61736543 
 23487              	.LASF1098:
 23488 5b39 5F5F6E65 		.string	"__new_map"
 23488      775F6D61 
 23488      7000
 23489              	.LASF384:
 23490 5b43 72657369 		.string	"resize"
 23490      7A6500
 23491              	.LASF710:
 23492 5b4a 5F5F756E 		.string	"__unknown__"
 23492      6B6E6F77 
 23492      6E5F5F00 
 23493              	.LASF734:
 23494 5b56 5F494F5F 		.string	"_IO_buf_end"
 23494      6275665F 
 23494      656E6400 
 23495              	.LASF554:
 23496 5b62 5F547570 		.string	"_Tuple_impl<0, BaseEvent*, std::default_delete<BaseEvent> >"
 23496      6C655F69 
 23496      6D706C3C 
 23496      302C2042 
 23496      61736545 
 23497              	.LASF967:
 23498 5b9e 6D627374 		.string	"mbstowcs"
 23498      6F776373 
 23498      00
 23499              	.LASF421:
 23500 5ba7 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5eraseESt15_Deque_it
 23500      74356465 
 23500      71756549 
 23500      53743130 
 23500      756E6971 
 23501              	.LASF422:
 23502 5c18 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4swapERS6_"
 23502      74356465 
 23502      71756549 
 23502      53743130 
 23502      756E6971 
 23503              	.LASF17:
 23504 5c68 5F5F6375 		.string	"__cust_swap"
 23504      73745F73 
 23504      77617000 
 23505              	.LASF405:
 23506 5c74 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE10push_frontERKS4_"
GAS LISTING x64lin/../common/event.s 			page 592


 23506      74356465 
 23506      71756549 
 23506      53743130 
 23506      756E6971 
 23507              	.LASF590:
 23508 5ccc 5F5F636F 		.string	"__copy_move_backward<false, true, std::random_access_iterator_tag>"
 23508      70795F6D 
 23508      6F76655F 
 23508      6261636B 
 23508      77617264 
 23509              	.LASF723:
 23510 5d0f 6D627374 		.string	"mbstate_t"
 23510      6174655F 
 23510      7400
 23511              	.LASF563:
 23512 5d19 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEEC4ERKS4_"
 23512      7431315F 
 23512      5475706C 
 23512      655F696D 
 23512      706C494C 
 23513              	.LASF901:
 23514 5d5e 6E5F7369 		.string	"n_sign_posn"
 23514      676E5F70 
 23514      6F736E00 
 23515              	.LASF330:
 23516 5d6a 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_create_n
 23516      7431315F 
 23516      44657175 
 23516      655F6261 
 23516      73654953 
 23517              	.LASF579:
 23518 5dd1 636F6E64 		.string	"conditional<true, std::tuple<BaseEvent*, std::default_delete<BaseEvent> >&&, std::__nones
 23518      6974696F 
 23518      6E616C3C 
 23518      74727565 
 23518      2C207374 
 23519              	.LASF131:
 23520 5e31 6368726F 		.string	"chrono"
 23520      6E6F00
 23521              	.LASF807:
 23522 5e38 77637372 		.string	"wcsrtombs"
 23522      746F6D62 
 23522      7300
 23523              	.LASF990:
 23524 5e42 5F475F66 		.string	"_G_fpos_t"
 23524      706F735F 
 23524      7400
 23525              	.LASF451:
 23526 5e4c 5F4D5F65 		.string	"_M_erase"
 23526      72617365 
 23526      00
 23527              	.LASF686:
 23528 5e55 72656269 		.string	"rebind<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >*>"
 23528      6E643C73 
 23528      74643A3A 
 23528      756E6971 
 23528      75655F70 
GAS LISTING x64lin/../common/event.s 			page 593


 23529              	.LASF790:
 23530 5e9a 77637363 		.string	"wcscspn"
 23530      73706E00 
 23531              	.LASF440:
 23532 5ea2 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE14_M_fill_insertESt1
 23532      74356465 
 23532      71756549 
 23532      53743130 
 23532      756E6971 
 23533              	.LASF64:
 23534 5f1f 5F4D5F72 		.string	"_M_release"
 23534      656C6561 
 23534      736500
 23535              	.LASF753:
 23536 5f2a 5F6D6F64 		.string	"_mode"
 23536      6500
 23537              	.LASF647:
 23538 5f30 666F7277 		.string	"forward<std::unique_ptr<BaseEvent> >"
 23538      6172643C 
 23538      7374643A 
 23538      3A756E69 
 23538      7175655F 
 23539              	.LASF636:
 23540 5f55 5F5A5374 		.string	"_ZSt12__niter_baseIPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEET_S7_"
 23540      31325F5F 
 23540      6E697465 
 23540      725F6261 
 23540      73654950 
 23541              	.LASF730:
 23542 5fa2 5F494F5F 		.string	"_IO_write_base"
 23542      77726974 
 23542      655F6261 
 23542      736500
 23543              	.LASF441:
 23544 5fb1 5F4D5F69 		.string	"_M_insert_aux"
 23544      6E736572 
 23544      745F6175 
 23544      7800
 23545              	.LASF150:
 23546 5fbf 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4ERS0_St12defer_lock_t"
 23546      74313175 
 23546      6E697175 
 23546      655F6C6F 
 23546      636B4953 
 23547              	.LASF1128:
 23548 5ff3 5F5A6E77 		.string	"_ZnwmPv"
 23548      6D507600 
 23549              	.LASF224:
 23550 5ffb 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE37select_on
 23550      74313661 
 23550      6C6C6F63 
 23550      61746F72 
 23550      5F747261 
 23551              	.LASF717:
 23552 6077 5F5F7763 		.string	"__wch"
 23552      6800
 23553              	.LASF259:
GAS LISTING x64lin/../common/event.s 			page 594


 23554 607d 5F5A4E4B 		.string	"_ZNKSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_E13_M_co
 23554      53743135 
 23554      5F446571 
 23554      75655F69 
 23554      74657261 
 23555              	.LASF546:
 23556 60e1 5F486561 		.string	"_Head_base<0, BaseEvent*, false>"
 23556      645F6261 
 23556      73653C30 
 23556      2C204261 
 23556      73654576 
 23557              	.LASF45:
 23558 6102 5F5F636F 		.string	"__copy_move<false, true, std::random_access_iterator_tag>"
 23558      70795F6D 
 23558      6F76653C 
 23558      66616C73 
 23558      652C2074 
 23559              	.LASF245:
 23560 613c 5F456C74 		.string	"_Elt_pointer"
 23560      5F706F69 
 23560      6E746572 
 23560      00
 23561              	.LASF360:
 23562 6149 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5beginEv"
 23562      74356465 
 23562      71756549 
 23562      53743130 
 23562      756E6971 
 23563              	.LASF529:
 23564 6197 5F4D5F68 		.string	"_M_head"
 23564      65616400 
 23565              	.LASF375:
 23566 619f 63656E64 		.string	"cend"
 23566      00
 23567              	.LASF460:
 23568 61a4 5F4D5F72 		.string	"_M_reserve_elements_at_back"
 23568      65736572 
 23568      76655F65 
 23568      6C656D65 
 23568      6E74735F 
 23569              	.LASF780:
 23570 61c0 76737773 		.string	"vswscanf"
 23570      63616E66 
 23570      00
 23571              	.LASF509:
 23572 61c9 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EEC4Ev"
 23572      7431355F 
 23572      5F756E69 
 23572      715F7074 
 23572      725F696D 
 23573              	.LASF796:
 23574 6207 746D5F6D 		.string	"tm_mon"
 23574      6F6E00
 23575              	.LASF37:
 23576 620e 5F5F636F 		.string	"__copy_move_backward<false, false, std::random_access_iterator_tag>"
 23576      70795F6D 
 23576      6F76655F 
GAS LISTING x64lin/../common/event.s 			page 595


 23576      6261636B 
 23576      77617264 
 23577              	.LASF700:
 23578 6252 6C6F6E67 		.string	"long long int"
 23578      206C6F6E 
 23578      6720696E 
 23578      7400
 23579              	.LASF100:
 23580 6260 756E6C6F 		.string	"unlock"
 23580      636B00
 23581              	.LASF461:
 23582 6267 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE27_M_reserve_element
 23582      74356465 
 23582      71756549 
 23582      53743130 
 23582      756E6971 
 23583              	.LASF130:
 23584 62cc 5F5A4E53 		.string	"_ZNSt12adopt_lock_tC4Ev"
 23584      74313261 
 23584      646F7074 
 23584      5F6C6F63 
 23584      6B5F7443 
 23585              	.LASF1063:
 23586 62e4 436F6E6E 		.string	"ConnectReq"
 23586      65637452 
 23586      657100
 23587              	.LASF230:
 23588 62ef 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEED4Ev"
 23588      61495053 
 23588      74313075 
 23588      6E697175 
 23588      655F7074 
 23589              	.LASF80:
 23590 632d 5F5F6378 		.string	"__cxa_exception_type"
 23590      615F6578 
 23590      63657074 
 23590      696F6E5F 
 23590      74797065 
 23591              	.LASF47:
 23592 6342 5F5A4E53 		.string	"_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt10unique_ptrI9Base
 23592      7431315F 
 23592      5F636F70 
 23592      795F6D6F 
 23592      7665494C 
 23593              	.LASF455:
 23594 63c9 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_M_default_appendE
 23594      74356465 
 23594      71756549 
 23594      53743130 
 23594      756E6971 
 23595              	.LASF206:
 23596 6424 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEC4Ev"
 23596      61495374 
 23596      3130756E 
 23596      69717565 
 23596      5F707472 
 23597              	.LASF1076:
GAS LISTING x64lin/../common/event.s 			page 596


 23598 6461 5F5A4E39 		.string	"_ZN9BaseEventD4Ev"
 23598      42617365 
 23598      4576656E 
 23598      74443445 
 23598      7600
 23599              	.LASF443:
 23600 6473 5F4D5F64 		.string	"_M_destroy_data_aux"
 23600      65737472 
 23600      6F795F64 
 23600      6174615F 
 23600      61757800 
 23601              	.LASF644:
 23602 6487 5F5A5374 		.string	"_ZSt4moveIRSt5tupleIJP9BaseEventSt14default_deleteIS1_EEEEONSt16remove_referenceIT_E4type
 23602      346D6F76 
 23602      65495253 
 23602      74357475 
 23602      706C6549 
 23603              	.LASF3:
 23604 64e6 6F706572 		.string	"operator()"
 23604      61746F72 
 23604      282900
 23605              	.LASF382:
 23606 64f1 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4sizeEv"
 23606      53743564 
 23606      65717565 
 23606      49537431 
 23606      30756E69 
 23607              	.LASF1005:
 23608 653f 66676574 		.string	"fgetpos"
 23608      706F7300 
 23609              	.LASF169:
 23610 6547 5F4D5F64 		.string	"_M_device"
 23610      65766963 
 23610      6500
 23611              	.LASF1062:
 23612 6551 53687574 		.string	"Shutdown"
 23612      646F776E 
 23612      00
 23613              	.LASF351:
 23614 655a 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EED4Ev"
 23614      74356465 
 23614      71756549 
 23614      53743130 
 23614      756E6971 
 23615              	.LASF782:
 23616 65a4 76777072 		.string	"vwprintf"
 23616      696E7466 
 23616      00
 23617              	.LASF995:
 23618 65ad 5F494F5F 		.string	"_IO_marker"
 23618      6D61726B 
 23618      657200
 23619              	.LASF906:
 23620 65b8 696E745F 		.string	"int_p_sign_posn"
 23620      705F7369 
 23620      676E5F70 
 23620      6F736E00 
GAS LISTING x64lin/../common/event.s 			page 597


 23621              	.LASF1133:
 23622 65c8 474E5520 		.string	"GNU C++20 11.4.0 -m64 -mavx -mtune=generic -march=x86-64 -g -O3 -std=c++20 -fasynchronous
 23622      432B2B32 
 23622      30203131 
 23622      2E342E30 
 23622      202D6D36 
 23623              	.LASF797:
 23624 6672 746D5F79 		.string	"tm_year"
 23624      65617200 
 23625              	.LASF840:
 23626 667a 5F5F7569 		.string	"__uint_least8_t"
 23626      6E745F6C 
 23626      65617374 
 23626      385F7400 
 23627              	.LASF6:
 23628 668a 696E7465 		.string	"integral_constant<bool, false>"
 23628      6772616C 
 23628      5F636F6E 
 23628      7374616E 
 23628      743C626F 
 23629              	.LASF95:
 23630 66a9 5F5A4E53 		.string	"_ZNSt5mutexaSERKS_"
 23630      74356D75 
 23630      74657861 
 23630      5345524B 
 23630      535F00
 23631              	.LASF629:
 23632 66bc 5F5A5374 		.string	"_ZSt12__niter_wrapIPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEET_RKS7_S7_"
 23632      31325F5F 
 23632      6E697465 
 23632      725F7772 
 23632      61704950 
 23633              	.LASF595:
 23634 670e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8allocateE
 23634      74313661 
 23634      6C6C6F63 
 23634      61746F72 
 23634      5F747261 
 23635              	.LASF1013:
 23636 6770 67657463 		.string	"getc"
 23636      00
 23637              	.LASF821:
 23638 6775 77736361 		.string	"wscanf"
 23638      6E6600
 23639              	.LASF385:
 23640 677c 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6resizeEm"
 23640      74356465 
 23640      71756549 
 23640      53743130 
 23640      756E6971 
 23641              	.LASF519:
 23642 67cb 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE5resetEPS0_"
 23642      7431355F 
 23642      5F756E69 
 23642      715F7074 
 23642      725F696D 
 23643              	.LASF317:
GAS LISTING x64lin/../common/event.s 			page 598


 23644 6810 5F4D5F67 		.string	"_M_get_map_allocator"
 23644      65745F6D 
 23644      61705F61 
 23644      6C6C6F63 
 23644      61746F72 
 23645              	.LASF960:
 23646 6825 61746F66 		.string	"atof"
 23646      00
 23647              	.LASF664:
 23648 682a 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEE8allocateE
 23648      5F5F676E 
 23648      755F6378 
 23648      7831336E 
 23648      65775F61 
 23649              	.LASF57:
 23650 6888 5F53696E 		.string	"_Sink"
 23650      6B00
 23651              	.LASF513:
 23652 688e 5F4D5F70 		.string	"_M_ptr"
 23652      747200
 23653              	.LASF323:
 23654 6895 5F4D5F61 		.string	"_M_allocate_map"
 23654      6C6C6F63 
 23654      6174655F 
 23654      6D617000 
 23655              	.LASF1126:
 23656 68a5 5F5F6774 		.string	"__gthread_mutex_unlock"
 23656      68726561 
 23656      645F6D75 
 23656      7465785F 
 23656      756E6C6F 
 23657              	.LASF417:
 23658 68bc 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6insertESt15_Deque_i
 23658      74356465 
 23658      71756549 
 23658      53743130 
 23658      756E6971 
 23659              	.LASF557:
 23660 6944 5F496E68 		.string	"_Inherited"
 23660      65726974 
 23660      656400
 23661              	.LASF879:
 23662 694f 696E7470 		.string	"intptr_t"
 23662      74725F74 
 23662      00
 23663              	.LASF157:
 23664 6958 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4EOS1_"
 23664      74313175 
 23664      6E697175 
 23664      655F6C6F 
 23664      636B4953 
 23665              	.LASF889:
 23666 697c 6D6F6E5F 		.string	"mon_decimal_point"
 23666      64656369 
 23666      6D616C5F 
 23666      706F696E 
 23666      7400
GAS LISTING x64lin/../common/event.s 			page 599


 23667              	.LASF1082:
 23668 698e 5F5A6E77 		.string	"_Znwm"
 23668      6D00
 23669              	.LASF174:
 23670 6994 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexEC4ERS0_"
 23670      7431306C 
 23670      6F636B5F 
 23670      67756172 
 23670      64495374 
 23671              	.LASF484:
 23672 69b7 696E6974 		.string	"initializer_list<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 23672      69616C69 
 23672      7A65725F 
 23672      6C697374 
 23672      3C737464 
 23673              	.LASF648:
 23674 6a06 5F5A5374 		.string	"_ZSt7forwardISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEOT_RNSt16remove_referenceI
 23674      37666F72 
 23674      77617264 
 23674      49537431 
 23674      30756E69 
 23675              	.LASF996:
 23676 6a6a 5F494F5F 		.string	"_IO_codecvt"
 23676      636F6465 
 23676      63767400 
 23677              	.LASF153:
 23678 6a76 7E756E69 		.string	"~unique_lock"
 23678      7175655F 
 23678      6C6F636B 
 23678      00
 23679              	.LASF640:
 23680 6a83 5F5A5374 		.string	"_ZSt3minImERKT_S2_S2_"
 23680      336D696E 
 23680      496D4552 
 23680      4B545F53 
 23680      325F5332 
 23681              	.LASF544:
 23682 6a99 5F4D5F73 		.string	"_M_swap"
 23682      77617000 
 23683              	.LASF974:
 23684 6aa1 73747274 		.string	"strtod"
 23684      6F6400
 23685              	.LASF984:
 23686 6aa8 73747274 		.string	"strtof"
 23686      6F6600
 23687              	.LASF624:
 23688 6aaf 636F7079 		.string	"copy<std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 23688      3C737464 
 23688      3A3A756E 
 23688      69717565 
 23688      5F707472 
 23689              	.LASF975:
 23690 6af0 73747274 		.string	"strtol"
 23690      6F6C00
 23691              	.LASF722:
 23692 6af7 5F5F6D62 		.string	"__mbstate_t"
 23692      73746174 
GAS LISTING x64lin/../common/event.s 			page 600


 23692      655F7400 
 23693              	.LASF701:
 23694 6b03 6C6F6E67 		.string	"long double"
 23694      20646F75 
 23694      626C6500 
 23695              	.LASF743:
 23696 6b0f 5F637572 		.string	"_cur_column"
 23696      5F636F6C 
 23696      756D6E00 
 23697              	.LASF193:
 23698 6b1b 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE11get_deleterEv"
 23698      74313075 
 23698      6E697175 
 23698      655F7074 
 23698      72493942 
 23699              	.LASF512:
 23700 6b5f 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EEaSEOS3_"
 23700      7431355F 
 23700      5F756E69 
 23700      715F7074 
 23700      725F696D 
 23701              	.LASF403:
 23702 6ba0 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE4backEv"
 23702      53743564 
 23702      65717565 
 23702      49537431 
 23702      30756E69 
 23703              	.LASF141:
 23704 6bee 5F5A4E53 		.string	"_ZNSt18condition_variable10notify_oneEv"
 23704      74313863 
 23704      6F6E6469 
 23704      74696F6E 
 23704      5F766172 
 23705              	.LASF610:
 23706 6c16 5F5F7475 		.string	"__tuple_element_t"
 23706      706C655F 
 23706      656C656D 
 23706      656E745F 
 23706      7400
 23707              	.LASF42:
 23708 6c28 5F424931 		.string	"_BI1"
 23708      00
 23709              	.LASF897:
 23710 6c2d 705F7365 		.string	"p_sep_by_space"
 23710      705F6279 
 23710      5F737061 
 23710      636500
 23711              	.LASF599:
 23712 6c3c 5F5F7468 		.string	"__throw_bad_alloc"
 23712      726F775F 
 23712      6261645F 
 23712      616C6C6F 
 23712      6300
 23713              	.LASF161:
 23714 6c4e 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexE6unlockEv"
 23714      74313175 
 23714      6E697175 
GAS LISTING x64lin/../common/event.s 			page 601


 23714      655F6C6F 
 23714      636B4953 
 23715              	.LASF296:
 23716 6c74 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE11_Deque_impl
 23716      7431315F 
 23716      44657175 
 23716      655F6261 
 23716      73654953 
 23717              	.LASF168:
 23718 6cd6 5F5A4E4B 		.string	"_ZNKSt11unique_lockISt5mutexE5mutexEv"
 23718      53743131 
 23718      756E6971 
 23718      75655F6C 
 23718      6F636B49 
 23719              	.LASF695:
 23720 6cfc 6C6F6E67 		.string	"long unsigned int"
 23720      20756E73 
 23720      69676E65 
 23720      6420696E 
 23720      7400
 23721              	.LASF115:
 23722 6d0e 77616974 		.string	"wait_until"
 23722      5F756E74 
 23722      696C00
 23723              	.LASF671:
 23724 6d19 5F535F6F 		.string	"_S_on_swap"
 23724      6E5F7377 
 23724      617000
 23725              	.LASF487:
 23726 6d24 71756575 		.string	"queue<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >, std::deque<std::unique
 23726      653C7374 
 23726      643A3A75 
 23726      6E697175 
 23726      655F7074 
 23727              	.LASF43:
 23728 6e00 5F424932 		.string	"_BI2"
 23728      00
 23729              	.LASF270:
 23730 6e05 6F706572 		.string	"operator+="
 23730      61746F72 
 23730      2B3D00
 23731              	.LASF27:
 23732 6e10 5F5F6375 		.string	"__cust"
 23732      737400
 23733              	.LASF1022:
 23734 6e17 746D706E 		.string	"tmpnam"
 23734      616D00
 23735              	.LASF536:
 23736 6e1e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEE7_M_headERS3_"
 23736      7431315F 
 23736      5475706C 
 23736      655F696D 
 23736      706C494C 
 23737              	.LASF1119:
 23738 6e64 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexEC2ERS0_"
 23738      7431306C 
 23738      6F636B5F 
GAS LISTING x64lin/../common/event.s 			page 602


 23738      67756172 
 23738      64495374 
 23739              	.LASF1002:
 23740 6e87 66657272 		.string	"ferror"
 23740      6F7200
 23741              	.LASF335:
 23742 6e8e 5F416C6C 		.string	"_Alloc"
 23742      6F6300
 23743              	.LASF264:
 23744 6e95 6F706572 		.string	"operator++"
 23744      61746F72 
 23744      2B2B00
 23745              	.LASF788:
 23746 6ea0 77637363 		.string	"wcscoll"
 23746      6F6C6C00 
 23747              	.LASF1024:
 23748 6ea8 77637479 		.string	"wctype_t"
 23748      70655F74 
 23748      00
 23749              	.LASF721:
 23750 6eb1 63686172 		.string	"char"
 23750      00
 23751              	.LASF407:
 23752 6eb6 70757368 		.string	"push_back"
 23752      5F626163 
 23752      6B00
 23753              	.LASF244:
 23754 6ec0 5F446571 		.string	"_Deque_iterator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >, std::unique_
 23754      75655F69 
 23754      74657261 
 23754      746F723C 
 23754      7374643A 
 23755              	.LASF331:
 23756 6f89 5F4D5F64 		.string	"_M_destroy_nodes"
 23756      65737472 
 23756      6F795F6E 
 23756      6F646573 
 23756      00
 23757              	.LASF279:
 23758 6f9a 5F526566 		.string	"_Ref"
 23758      00
 23759              	.LASF868:
 23760 6f9f 75696E74 		.string	"uint_least16_t"
 23760      5F6C6561 
 23760      73743136 
 23760      5F7400
 23761              	.LASF414:
 23762 6fae 696E7365 		.string	"insert"
 23762      727400
 23763              	.LASF316:
 23764 6fb5 5F4D6170 		.string	"_Map_alloc_type"
 23764      5F616C6C 
 23764      6F635F74 
 23764      79706500 
 23765              	.LASF938:
 23766 6fc5 5F5F7370 		.string	"__spins"
 23766      696E7300 
GAS LISTING x64lin/../common/event.s 			page 603


 23767              	.LASF112:
 23768 6fcd 5F5A4E53 		.string	"_ZNSt9__condvar13native_handleEv"
 23768      74395F5F 
 23768      636F6E64 
 23768      76617231 
 23768      336E6174 
 23769              	.LASF580:
 23770 6fee 5F5F756E 		.string	"__uniq_ptr_data<BaseEvent, std::default_delete<BaseEvent>, true, true>"
 23770      69715F70 
 23770      74725F64 
 23770      6174613C 
 23770      42617365 
 23771              	.LASF390:
 23772 7035 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5emptyEv"
 23772      53743564 
 23772      65717565 
 23772      49537431 
 23772      30756E69 
 23773              	.LASF633:
 23774 7084 5F5F636F 		.string	"__copy_move_a2<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 23774      70795F6D 
 23774      6F76655F 
 23774      61323C66 
 23774      616C7365 
 23775              	.LASF733:
 23776 70d6 5F494F5F 		.string	"_IO_buf_base"
 23776      6275665F 
 23776      62617365 
 23776      00
 23777              	.LASF456:
 23778 70e3 5F4D5F73 		.string	"_M_shrink_to_fit"
 23778      6872696E 
 23778      6B5F746F 
 23778      5F666974 
 23778      00
 23779              	.LASF936:
 23780 70f4 5F5F6E75 		.string	"__nusers"
 23780      73657273 
 23780      00
 23781              	.LASF699:
 23782 70fd 6C6F6E67 		.string	"long int"
 23782      20696E74 
 23782      00
 23783              	.LASF380:
 23784 7106 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5crendEv"
 23784      53743564 
 23784      65717565 
 23784      49537431 
 23784      30756E69 
 23785              	.LASF267:
 23786 7155 6F706572 		.string	"operator--"
 23786      61746F72 
 23786      2D2D00
 23787              	.LASF602:
 23788 7160 5F5F7468 		.string	"__throw_bad_array_new_length"
 23788      726F775F 
 23788      6261645F 
GAS LISTING x64lin/../common/event.s 			page 604


 23788      61727261 
 23788      795F6E65 
 23789              	.LASF754:
 23790 717d 5F756E75 		.string	"_unused2"
 23790      73656432 
 23790      00
 23791              	.LASF155:
 23792 7186 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4ERKS1_"
 23792      74313175 
 23792      6E697175 
 23792      655F6C6F 
 23792      636B4953 
 23793              	.LASF681:
 23794 71ab 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E15
 23794      5F5F676E 
 23794      755F6378 
 23794      7831345F 
 23794      5F616C6C 
 23795              	.LASF674:
 23796 7216 5F535F70 		.string	"_S_propagate_on_copy_assign"
 23796      726F7061 
 23796      67617465 
 23796      5F6F6E5F 
 23796      636F7079 
 23797              	.LASF273:
 23798 7232 6F706572 		.string	"operator-="
 23798      61746F72 
 23798      2D3D00
 23799              	.LASF189:
 23800 723d 6F706572 		.string	"operator->"
 23800      61746F72 
 23800      2D3E00
 23801              	.LASF114:
 23802 7248 5F5A4E53 		.string	"_ZNSt9__condvar4waitERSt5mutex"
 23802      74395F5F 
 23802      636F6E64 
 23802      76617234 
 23802      77616974 
 23803              	.LASF1053:
 23804 7267 64696666 		.string	"difftime"
 23804      74696D65 
 23804      00
 23805              	.LASF874:
 23806 7270 696E745F 		.string	"int_fast64_t"
 23806      66617374 
 23806      36345F74 
 23806      00
 23807              	.LASF408:
 23808 727d 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE9push_backERKS4_"
 23808      74356465 
 23808      71756549 
 23808      53743130 
 23808      756E6971 
 23809              	.LASF507:
 23810 72d3 5F507472 		.string	"_Ptr<BaseEvent, std::default_delete<BaseEvent>, void>"
 23810      3C426173 
 23810      65457665 
GAS LISTING x64lin/../common/event.s 			page 605


 23810      6E742C20 
 23810      7374643A 
 23811              	.LASF728:
 23812 7309 5F494F5F 		.string	"_IO_read_end"
 23812      72656164 
 23812      5F656E64 
 23812      00
 23813              	.LASF607:
 23814 7316 5F5A5374 		.string	"_ZSt20__throw_system_errori"
 23814      32305F5F 
 23814      7468726F 
 23814      775F7379 
 23814      7374656D 
 23815              	.LASF651:
 23816 7332 69735F63 		.string	"is_constant_evaluated"
 23816      6F6E7374 
 23816      616E745F 
 23816      6576616C 
 23816      75617465 
 23817              	.LASF522:
 23818 7348 5F486561 		.string	"_Head_base<1, std::default_delete<BaseEvent>, true>"
 23818      645F6261 
 23818      73653C31 
 23818      2C207374 
 23818      643A3A64 
 23819              	.LASF896:
 23820 737c 705F6373 		.string	"p_cs_precedes"
 23820      5F707265 
 23820      63656465 
 23820      7300
 23821              	.LASF349:
 23822 738a 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ESt16initializer_l
 23822      74356465 
 23822      71756549 
 23822      53743130 
 23822      756E6971 
 23823              	.LASF515:
 23824 73f1 5F5A4E4B 		.string	"_ZNKSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE6_M_ptrEv"
 23824      53743135 
 23824      5F5F756E 
 23824      69715F70 
 23824      74725F69 
 23825              	.LASF725:
 23826 7435 5F494F5F 		.string	"_IO_FILE"
 23826      46494C45 
 23826      00
 23827              	.LASF594:
 23828 743e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8allocateE
 23828      74313661 
 23828      6C6C6F63 
 23828      61746F72 
 23828      5F747261 
 23829              	.LASF222:
 23830 749d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEE8max_sizeER
 23830      74313661 
 23830      6C6C6F63 
 23830      61746F72 
GAS LISTING x64lin/../common/event.s 			page 606


 23830      5F747261 
 23831              	.LASF622:
 23832 74fb 5F5F636F 		.string	"__copy_move_backward_a2<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**
 23832      70795F6D 
 23832      6F76655F 
 23832      6261636B 
 23832      77617264 
 23833              	.LASF480:
 23834 7556 5F417267 		.string	"_Args"
 23834      7300
 23835              	.LASF822:
 23836 755c 5F5F6973 		.string	"__isoc99_wscanf"
 23836      6F633939 
 23836      5F777363 
 23836      616E6600 
 23837              	.LASF827:
 23838 756c 776D656D 		.string	"wmemchr"
 23838      63687200 
 23839              	.LASF997:
 23840 7574 5F494F5F 		.string	"_IO_wide_data"
 23840      77696465 
 23840      5F646174 
 23840      6100
 23841              	.LASF448:
 23842 7582 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_M_erase_at_beginE
 23842      74356465 
 23842      71756549 
 23842      53743130 
 23842      756E6971 
 23843              	.LASF383:
 23844 75fc 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE8max_sizeEv"
 23844      53743564 
 23844      65717565 
 23844      49537431 
 23844      30756E69 
 23845              	.LASF82:
 23846 764e 72657468 		.string	"rethrow_exception"
 23846      726F775F 
 23846      65786365 
 23846      7074696F 
 23846      6E00
 23847              	.LASF920:
 23848 7660 636C6F63 		.string	"clockid_t"
 23848      6B69645F 
 23848      7400
 23849              	.LASF677:
 23850 766a 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E27
 23850      5F5F676E 
 23850      755F6378 
 23850      7831345F 
 23850      5F616C6C 
 23851              	.LASF794:
 23852 76e1 746D5F68 		.string	"tm_hour"
 23852      6F757200 
 23853              	.LASF925:
 23854 76e9 5F5F6869 		.string	"__high"
 23854      676800
GAS LISTING x64lin/../common/event.s 			page 607


 23855              	.LASF66:
 23856 76f0 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 23856      7431355F 
 23856      5F657863 
 23856      65707469 
 23856      6F6E5F70 
 23857              	.LASF981:
 23858 7724 61746F6C 		.string	"atoll"
 23858      6C00
 23859              	.LASF953:
 23860 772a 5F5F616C 		.string	"__align"
 23860      69676E00 
 23861              	.LASF452:
 23862 7732 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE8_M_eraseESt15_Deque
 23862      74356465 
 23862      71756549 
 23862      53743130 
 23862      756E6971 
 23863              	.LASF675:
 23864 77a2 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E27
 23864      5F5F676E 
 23864      755F6378 
 23864      7831345F 
 23864      5F616C6C 
 23865              	.LASF534:
 23866 7819 5F486561 		.string	"_Head"
 23866      6400
 23867              	.LASF878:
 23868 781f 75696E74 		.string	"uint_fast64_t"
 23868      5F666173 
 23868      7436345F 
 23868      7400
 23869              	.LASF386:
 23870 782d 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6resizeEmRKS4_"
 23870      74356465 
 23870      71756549 
 23870      53743130 
 23870      756E6971 
 23871              	.LASF96:
 23872 7881 6C6F636B 		.string	"lock"
 23872      00
 23873              	.LASF1035:
 23874 7886 5F5A4E36 		.string	"_ZN6__pstl9execution2v116sequenced_policy14__allow_vectorEv"
 23874      5F5F7073 
 23874      746C3965 
 23874      78656375 
 23874      74696F6E 
 23875              	.LASF963:
 23876 78c2 62736561 		.string	"bsearch"
 23876      72636800 
 23877              	.LASF924:
 23878 78ca 5F5F6C6F 		.string	"__low"
 23878      7700
 23879              	.LASF255:
 23880 78d0 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EaSERKS7_
 23880      7431355F 
 23880      44657175 
GAS LISTING x64lin/../common/event.s 			page 608


 23880      655F6974 
 23880      65726174 
 23881              	.LASF368:
 23882 792a 636F6E73 		.string	"const_reverse_iterator"
 23882      745F7265 
 23882      76657273 
 23882      655F6974 
 23882      65726174 
 23883              	.LASF1074:
 23884 7941 6576656E 		.string	"eventType"
 23884      74547970 
 23884      6500
 23885              	.LASF909:
 23886 794b 67657477 		.string	"getwchar"
 23886      63686172 
 23886      00
 23887              	.LASF410:
 23888 7954 706F705F 		.string	"pop_front"
 23888      66726F6E 
 23888      7400
 23889              	.LASF673:
 23890 795e 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E10
 23890      5F5F676E 
 23890      755F6378 
 23890      7831345F 
 23890      5F616C6C 
 23891              	.LASF907:
 23892 79ca 696E745F 		.string	"int_n_sign_posn"
 23892      6E5F7369 
 23892      676E5F70 
 23892      6F736E00 
 23893              	.LASF1060:
 23894 79da 74696D65 		.string	"timespec_get"
 23894      73706563 
 23894      5F676574 
 23894      00
 23895              	.LASF70:
 23896 79e7 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4ERKS0_"
 23896      7431355F 
 23896      5F657863 
 23896      65707469 
 23896      6F6E5F70 
 23897              	.LASF65:
 23898 7a15 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 23898      7431355F 
 23898      5F657863 
 23898      65707469 
 23898      6F6E5F70 
 23899              	.LASF430:
 23900 7a47 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE18_M_fill_initialize
 23900      74356465 
 23900      71756549 
 23900      53743130 
 23900      756E6971 
 23901              	.LASF795:
 23902 7aa7 746D5F6D 		.string	"tm_mday"
 23902      64617900 
GAS LISTING x64lin/../common/event.s 			page 609


 23903              	.LASF35:
 23904 7aaf 5F497353 		.string	"_IsSimple"
 23904      696D706C 
 23904      6500
 23905              	.LASF573:
 23906 7ab9 7475706C 		.string	"tuple"
 23906      6500
 23907              	.LASF341:
 23908 7abf 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EmRKS5_"
 23908      74356465 
 23908      71756549 
 23908      53743130 
 23908      756E6971 
 23909              	.LASF220:
 23910 7b0e 636F6E73 		.string	"const_void_pointer"
 23910      745F766F 
 23910      69645F70 
 23910      6F696E74 
 23910      657200
 23911              	.LASF392:
 23912 7b21 636F6E73 		.string	"const_reference"
 23912      745F7265 
 23912      66657265 
 23912      6E636500 
 23913              	.LASF752:
 23914 7b31 5F5F7061 		.string	"__pad5"
 23914      643500
 23915              	.LASF666:
 23916 7b38 5F4D5F6D 		.string	"_M_max_size"
 23916      61785F73 
 23916      697A6500 
 23917              	.LASF639:
 23918 7b44 6D696E3C 		.string	"min<long unsigned int>"
 23918      6C6F6E67 
 23918      20756E73 
 23918      69676E65 
 23918      6420696E 
 23919              	.LASF1078:
 23920 7b5b 6F706572 		.string	"operator delete"
 23920      61746F72 
 23920      2064656C 
 23920      65746500 
 23921              	.LASF524:
 23922 7b6b 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EEC4Ev"
 23922      7431305F 
 23922      48656164 
 23922      5F626173 
 23922      65494C6D 
 23923              	.LASF553:
 23924 7ba9 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EE7_M_headERKS2_"
 23924      7431305F 
 23924      48656164 
 23924      5F626173 
 23924      65494C6D 
 23925              	.LASF133:
 23926 7bde 5F5F7061 		.string	"__parse_int"
 23926      7273655F 
GAS LISTING x64lin/../common/event.s 			page 610


 23926      696E7400 
 23927              	.LASF1147:
 23928 7bea 5F5F6774 		.string	"__gthread_active_p"
 23928      68726561 
 23928      645F6163 
 23928      74697665 
 23928      5F7000
 23929              	.LASF258:
 23930 7bfd 5F4D5F63 		.string	"_M_const_cast"
 23930      6F6E7374 
 23930      5F636173 
 23930      7400
 23931              	.LASF525:
 23932 7c0b 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EEC4ERKS2_"
 23932      7431305F 
 23932      48656164 
 23932      5F626173 
 23932      65494C6D 
 23933              	.LASF62:
 23934 7c4d 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EPv"
 23934      7431355F 
 23934      5F657863 
 23934      65707469 
 23934      6F6E5F70 
 23935              	.LASF38:
 23936 7c78 5F5F636F 		.string	"__copy_m<std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 23936      70795F6D 
 23936      3C737464 
 23936      3A3A756E 
 23936      69717565 
 23937              	.LASF1011:
 23938 7cbd 66736574 		.string	"fsetpos"
 23938      706F7300 
 23939              	.LASF79:
 23940 7cc5 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 23940      7431355F 
 23940      5F657863 
 23940      65707469 
 23940      6F6E5F70 
 23941              	.LASF738:
 23942 7cf5 5F6D6172 		.string	"_markers"
 23942      6B657273 
 23942      00
 23943              	.LASF543:
 23944 7cfe 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EJSt14default_deleteI9BaseEventEEEC4EOS3_"
 23944      7431315F 
 23944      5475706C 
 23944      655F696D 
 23944      706C494C 
 23945              	.LASF858:
 23946 7d3e 696E7436 		.string	"int64_t"
 23946      345F7400 
 23947              	.LASF204:
 23948 7d46 616C6C6F 		.string	"allocator<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> > >"
 23948      6361746F 
 23948      723C7374 
 23948      643A3A75 
GAS LISTING x64lin/../common/event.s 			page 611


 23948      6E697175 
 23949              	.LASF659:
 23950 7d8e 5F535F61 		.string	"_S_atomic"
 23950      746F6D69 
 23950      6300
 23951              	.LASF609:
 23952 7d98 5F5A5374 		.string	"_ZSt3maxImERKT_S2_S2_"
 23952      336D6178 
 23952      496D4552 
 23952      4B545F53 
 23952      325F5332 
 23953              	.LASF737:
 23954 7dae 5F494F5F 		.string	"_IO_save_end"
 23954      73617665 
 23954      5F656E64 
 23954      00
 23955              	.LASF1124:
 23956 7dbb 5F5F6465 		.string	"__default_lock_policy"
 23956      6661756C 
 23956      745F6C6F 
 23956      636B5F70 
 23956      6F6C6963 
 23957              	.LASF1030:
 23958 7dd1 5F5F7073 		.string	"__pstl"
 23958      746C00
 23959              	.LASF87:
 23960 7dd8 5F5A4E53 		.string	"_ZNSt12__mutex_baseaSERKS_"
 23960      7431325F 
 23960      5F6D7574 
 23960      65785F62 
 23960      61736561 
 23961              	.LASF108:
 23962 7df3 7E5F5F63 		.string	"~__condvar"
 23962      6F6E6476 
 23962      617200
 23963              	.LASF726:
 23964 7dfe 5F666C61 		.string	"_flags"
 23964      677300
 23965              	.LASF748:
 23966 7e05 5F636F64 		.string	"_codecvt"
 23966      65637674 
 23966      00
 23967              	.LASF867:
 23968 7e0e 75696E74 		.string	"uint_least8_t"
 23968      5F6C6561 
 23968      7374385F 
 23968      7400
 23969              	.LASF261:
 23970 7e1c 5F5A4E4B 		.string	"_ZNKSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EdeEv"
 23970      53743135 
 23970      5F446571 
 23970      75655F69 
 23970      74657261 
 23971              	.LASF526:
 23972 7e73 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EEC4ERKS3_"
 23972      7431305F 
 23972      48656164 
GAS LISTING x64lin/../common/event.s 			page 612


 23972      5F626173 
 23972      65494C6D 
 23973              	.LASF965:
 23974 7eb5 6C646976 		.string	"ldiv"
 23974      00
 23975              	.LASF350:
 23976 7eba 7E646571 		.string	"~deque"
 23976      756500
 23977              	.LASF163:
 23978 7ec1 72656C65 		.string	"release"
 23978      61736500 
 23979              	.LASF489:
 23980 7ec9 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEEC4ERKS7
 23980      74357175 
 23980      65756549 
 23980      53743130 
 23980      756E6971 
 23981              	.LASF308:
 23982 7f24 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EOS6_"
 23982      7431315F 
 23982      44657175 
 23982      655F6261 
 23982      73654953 
 23983              	.LASF419:
 23984 7f78 65726173 		.string	"erase"
 23984      6500
 23985              	.LASF702:
 23986 7f7e 646F7562 		.string	"double"
 23986      6C6500
 23987              	.LASF949:
 23988 7f85 32315F5F 		.string	"21__atomic_wide_counter"
 23988      61746F6D 
 23988      69635F77 
 23988      6964655F 
 23988      636F756E 
 23989              	.LASF15:
 23990 7f9d 5F5F7377 		.string	"__swappable_with_details"
 23990      61707061 
 23990      626C655F 
 23990      77697468 
 23990      5F646574 
 23991              	.LASF145:
 23992 7fb6 756E6971 		.string	"unique_lock<std::mutex>"
 23992      75655F6C 
 23992      6F636B3C 
 23992      7374643A 
 23992      3A6D7574 
 23993              	.LASF34:
 23994 7fce 5F49734D 		.string	"_IsMove"
 23994      6F766500 
 23995              	.LASF853:
 23996 7fd6 5F5F636C 		.string	"__clockid_t"
 23996      6F636B69 
 23996      645F7400 
 23997              	.LASF724:
 23998 7fe2 5F5F4649 		.string	"__FILE"
 23998      4C4500
GAS LISTING x64lin/../common/event.s 			page 613


 23999              	.LASF948:
 24000 7fe9 5F5F675F 		.string	"__g_signals"
 24000      7369676E 
 24000      616C7300 
 24001              	.LASF646:
 24002 7ff5 5F5A5374 		.string	"_ZSt12construct_atISt10unique_ptrI9BaseEventSt14default_deleteIS1_EEJS4_EEDTgsnwcvPvLi0E_
 24002      3132636F 
 24002      6E737472 
 24002      7563745F 
 24002      61744953 
 24003              	.LASF289:
 24004 8071 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_Deque_impl
 24004      7431315F 
 24004      44657175 
 24004      655F6261 
 24004      73654953 
 24005              	.LASF988:
 24006 80d8 5F5F6774 		.string	"__gthread_time_t"
 24006      68726561 
 24006      645F7469 
 24006      6D655F74 
 24006      00
 24007              	.LASF516:
 24008 80e9 5F4D5F64 		.string	"_M_deleter"
 24008      656C6574 
 24008      657200
 24009              	.LASF600:
 24010 80f4 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_E14_S_buf
 24010      7431355F 
 24010      44657175 
 24010      655F6974 
 24010      65726174 
 24011              	.LASF1057:
 24012 8158 6374696D 		.string	"ctime"
 24012      6500
 24013              	.LASF55:
 24014 815e 5F5F7573 		.string	"__uses_alloc_base"
 24014      65735F61 
 24014      6C6C6F63 
 24014      5F626173 
 24014      6500
 24015              	.LASF110:
 24016 8170 5F5A4E53 		.string	"_ZNSt9__condvarC4ERKS_"
 24016      74395F5F 
 24016      636F6E64 
 24016      76617243 
 24016      3445524B 
 24017              	.LASF99:
 24018 8187 5F5A4E53 		.string	"_ZNSt5mutex8try_lockEv"
 24018      74356D75 
 24018      74657838 
 24018      7472795F 
 24018      6C6F636B 
 24019              	.LASF406:
 24020 819e 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE10push_frontEOS4_"
 24020      74356465 
 24020      71756549 
GAS LISTING x64lin/../common/event.s 			page 614


 24020      53743130 
 24020      756E6971 
 24021              	.LASF535:
 24022 81f5 5F547570 		.string	"_Tuple_impl<1, std::default_delete<BaseEvent> >"
 24022      6C655F69 
 24022      6D706C3C 
 24022      312C2073 
 24022      74643A3A 
 24023              	.LASF630:
 24024 8225 5F497465 		.string	"_Iterator"
 24024      7261746F 
 24024      7200
 24025              	.LASF835:
 24026 822f 5F5F696E 		.string	"__int32_t"
 24026      7433325F 
 24026      7400
 24027              	.LASF429:
 24028 8239 5F4D5F66 		.string	"_M_fill_initialize"
 24028      696C6C5F 
 24028      696E6974 
 24028      69616C69 
 24028      7A6500
 24029              	.LASF836:
 24030 824c 5F5F7569 		.string	"__uint32_t"
 24030      6E743332 
 24030      5F7400
 24031              	.LASF970:
 24032 8257 71736F72 		.string	"qsort"
 24032      7400
 24033              	.LASF468:
 24034 825d 5F4D5F72 		.string	"_M_reserve_map_at_front"
 24034      65736572 
 24034      76655F6D 
 24034      61705F61 
 24034      745F6672 
 24035              	.LASF841:
 24036 8275 5F5F696E 		.string	"__int_least16_t"
 24036      745F6C65 
 24036      61737431 
 24036      365F7400 
 24037              	.LASF506:
 24038 8285 5F5F756E 		.string	"__uniq_ptr_impl<BaseEvent, std::default_delete<BaseEvent> >"
 24038      69715F70 
 24038      74725F69 
 24038      6D706C3C 
 24038      42617365 
 24039              	.LASF816:
 24040 82c1 776D656D 		.string	"wmemcmp"
 24040      636D7000 
 24041              	.LASF972:
 24042 82c9 72616E64 		.string	"rand"
 24042      00
 24043              	.LASF41:
 24044 82ce 5F5A4E53 		.string	"_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPPSt10
 24044      7432305F 
 24044      5F636F70 
 24044      795F6D6F 
GAS LISTING x64lin/../common/event.s 			page 615


 24044      76655F62 
 24045              	.LASF149:
 24046 8365 6D757465 		.string	"mutex_type"
 24046      785F7479 
 24046      706500
 24047              	.LASF785:
 24048 8370 77637274 		.string	"wcrtomb"
 24048      6F6D6200 
 24049              	.LASF720:
 24050 8378 5F5F7661 		.string	"__value"
 24050      6C756500 
 24051              	.LASF530:
 24052 8380 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EE7_M_headERS3_"
 24052      7431305F 
 24052      48656164 
 24052      5F626173 
 24052      65494C6D 
 24053              	.LASF69:
 24054 83c7 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4Ev"
 24054      7431355F 
 24054      5F657863 
 24054      65707469 
 24054      6F6E5F70 
 24055              	.LASF395:
 24056 83f1 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE14_M_range_checkEm"
 24056      53743564 
 24056      65717565 
 24056      49537431 
 24056      30756E69 
 24057              	.LASF1135:
 24058 844a 6C697465 		.string	"literals"
 24058      72616C73 
 24058      00
 24059              	.LASF243:
 24060 8453 5F5F6D61 		.string	"__make_not_void"
 24060      6B655F6E 
 24060      6F745F76 
 24060      6F696400 
 24061              	.LASF126:
 24062 8463 5F5A4E53 		.string	"_ZNSt12defer_lock_tC4Ev"
 24062      74313264 
 24062      65666572 
 24062      5F6C6F63 
 24062      6B5F7443 
 24063              	.LASF1070:
 24064 847b 6576656E 		.string	"eventCondition"
 24064      74436F6E 
 24064      64697469 
 24064      6F6E00
 24065              	.LASF955:
 24066 848a 31347074 		.string	"14pthread_cond_t"
 24066      68726561 
 24066      645F636F 
 24066      6E645F74 
 24066      00
 24067              	.LASF200:
 24068 849b 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE5resetEPS0_"
GAS LISTING x64lin/../common/event.s 			page 616


 24068      74313075 
 24068      6E697175 
 24068      655F7074 
 24068      72493942 
 24069              	.LASF533:
 24070 84db 5F496478 		.string	"_Idx"
 24070      00
 24071              	.LASF1086:
 24072 84e0 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEEC2Ev"
 24072      5F5F676E 
 24072      755F6378 
 24072      7831336E 
 24072      65775F61 
 24073              	.LASF1051:
 24074 8535 756E7365 		.string	"unseq"
 24074      7100
 24075              	.LASF119:
 24076 853b 6E6F7469 		.string	"notify_one"
 24076      66795F6F 
 24076      6E6500
 24077              	.LASF508:
 24078 8546 5F5F756E 		.string	"__uniq_ptr_impl"
 24078      69715F70 
 24078      74725F69 
 24078      6D706C00 
 24079              	.LASF587:
 24080 8556 72656D6F 		.string	"remove_reference<std::tuple<BaseEvent*, std::default_delete<BaseEvent> >&>"
 24080      76655F72 
 24080      65666572 
 24080      656E6365 
 24080      3C737464 
 24081              	.LASF54:
 24082 85a1 696E7075 		.string	"input_iterator_tag"
 24082      745F6974 
 24082      65726174 
 24082      6F725F74 
 24082      616700
 24083              	.LASF28:
 24084 85b4 5F5F636D 		.string	"__cmp_alg"
 24084      705F616C 
 24084      6700
 24085              	.LASF892:
 24086 85be 706F7369 		.string	"positive_sign"
 24086      74697665 
 24086      5F736967 
 24086      6E00
 24087              	.LASF532:
 24088 85cc 5F4D5F68 		.string	"_M_head_impl"
 24088      6561645F 
 24088      696D706C 
 24088      00
 24089              	.LASF338:
 24090 85d9 64657175 		.string	"deque"
 24090      6500
 24091              	.LASF242:
 24092 85df 5F507472 		.string	"_Ptr"
 24092      00
GAS LISTING x64lin/../common/event.s 			page 617


 24093              	.LASF439:
 24094 85e4 5F4D5F66 		.string	"_M_fill_insert"
 24094      696C6C5F 
 24094      696E7365 
 24094      727400
 24095              	.LASF1075:
 24096 85f3 7E426173 		.string	"~BaseEvent"
 24096      65457665 
 24096      6E7400
 24097              	.LASF575:
 24098 85fe 5F5A4E53 		.string	"_ZNSt5tupleIJP9BaseEventSt14default_deleteIS0_EEEC4EOS4_"
 24098      74357475 
 24098      706C6549 
 24098      4A503942 
 24098      61736545 
 24099              	.LASF312:
 24100 8637 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EED4Ev"
 24100      7431315F 
 24100      44657175 
 24100      655F6261 
 24100      73654953 
 24101              	.LASF127:
 24102 8688 7472795F 		.string	"try_to_lock_t"
 24102      746F5F6C 
 24102      6F636B5F 
 24102      7400
 24103              	.LASF634:
 24104 8696 5F5A5374 		.string	"_ZSt14__copy_move_a2ILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET1_T0_S8_
 24104      31345F5F 
 24104      636F7079 
 24104      5F6D6F76 
 24104      655F6132 
 24105              	.LASF912:
 24106 86f3 35646976 		.string	"5div_t"
 24106      5F7400
 24107              	.LASF521:
 24108 86fa 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE4swapERS3_"
 24108      7431355F 
 24108      5F756E69 
 24108      715F7074 
 24108      725F696D 
 24109              	.LASF393:
 24110 873e 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEixEm"
 24110      53743564 
 24110      65717565 
 24110      49537431 
 24110      30756E69 
 24111              	.LASF914:
 24112 8789 6469765F 		.string	"div_t"
 24112      7400
 24113              	.LASF151:
 24114 878f 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4ERS0_St13try_to_lock_t"
 24114      74313175 
 24114      6E697175 
 24114      655F6C6F 
 24114      636B4953 
 24115              	.LASF784:
GAS LISTING x64lin/../common/event.s 			page 618


 24116 87c4 5F5F6973 		.string	"__isoc99_vwscanf"
 24116      6F633939 
 24116      5F767773 
 24116      63616E66 
 24116      00
 24117              	.LASF959:
 24118 87d5 61745F71 		.string	"at_quick_exit"
 24118      7569636B 
 24118      5F657869 
 24118      7400
 24119              	.LASF22:
 24120 87e3 5F5F636D 		.string	"__cmp_cat"
 24120      705F6361 
 24120      7400
 24121              	.LASF269:
 24122 87ed 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EmmEi"
 24122      7431355F 
 24122      44657175 
 24122      655F6974 
 24122      65726174 
 24123              	.LASF158:
 24124 8843 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEaSEOS1_"
 24124      74313175 
 24124      6E697175 
 24124      655F6C6F 
 24124      636B4953 
 24125              	.LASF356:
 24126 8867 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6assignEmRKS4_"
 24126      74356465 
 24126      71756549 
 24126      53743130 
 24126      756E6971 
 24127              	.LASF254:
 24128 88bb 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EC4ERKS7_
 24128      7431355F 
 24128      44657175 
 24128      655F6974 
 24128      65726174 
 24129              	.LASF617:
 24130 8915 5F5A5374 		.string	"_ZSt13copy_backwardIPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET0_T_S8_S7_"
 24130      3133636F 
 24130      70795F62 
 24130      61636B77 
 24130      61726449 
 24131              	.LASF389:
 24132 896c 656D7074 		.string	"empty"
 24132      7900
 24133              	.LASF268:
 24134 8972 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EmmEv"
 24134      7431355F 
 24134      44657175 
 24134      655F6974 
 24134      65726174 
 24135              	.LASF488:
 24136 89c8 71756575 		.string	"queue"
 24136      6500
 24137              	.LASF751:
GAS LISTING x64lin/../common/event.s 			page 619


 24138 89ce 5F667265 		.string	"_freeres_buf"
 24138      65726573 
 24138      5F627566 
 24138      00
 24139              	.LASF968:
 24140 89db 6D62746F 		.string	"mbtowc"
 24140      776300
 24141              	.LASF416:
 24142 89e2 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE6insertESt15_Deque_i
 24142      74356465 
 24142      71756549 
 24142      53743130 
 24142      756E6971 
 24143              	.LASF29:
 24144 8a55 666F7277 		.string	"forward_iterator_tag"
 24144      6172645F 
 24144      69746572 
 24144      61746F72 
 24144      5F746167 
 24145              	.LASF922:
 24146 8a6a 74765F73 		.string	"tv_sec"
 24146      656300
 24147              	.LASF285:
 24148 8a71 5F4D5F66 		.string	"_M_finish"
 24148      696E6973 
 24148      6800
 24149              	.LASF678:
 24150 8a7b 5F535F70 		.string	"_S_propagate_on_swap"
 24150      726F7061 
 24150      67617465 
 24150      5F6F6E5F 
 24150      73776170 
 24151              	.LASF431:
 24152 8a90 5F4D5F64 		.string	"_M_default_initialize"
 24152      65666175 
 24152      6C745F69 
 24152      6E697469 
 24152      616C697A 
 24153              	.LASF696:
 24154 8aa6 6C6F6E67 		.string	"long long unsigned int"
 24154      206C6F6E 
 24154      6720756E 
 24154      7369676E 
 24154      65642069 
 24155              	.LASF1129:
 24156 8abd 6D656D6D 		.string	"memmove"
 24156      6F766500 
 24157              	.LASF340:
 24158 8ac5 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ERKS5_"
 24158      74356465 
 24158      71756549 
 24158      53743130 
 24158      756E6971 
 24159              	.LASF493:
 24160 8b13 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE5frontE
 24160      74357175 
 24160      65756549 
GAS LISTING x64lin/../common/event.s 			page 620


 24160      53743130 
 24160      756E6971 
 24161              	.LASF605:
 24162 8b6e 5F5A5374 		.string	"_ZSt20__throw_length_errorPKc"
 24162      32305F5F 
 24162      7468726F 
 24162      775F6C65 
 24162      6E677468 
 24163              	.LASF767:
 24164 8b8c 6D627274 		.string	"mbrtowc"
 24164      6F776300 
 24165              	.LASF147:
 24166 8b94 5F5A4E53 		.string	"_ZNSt11unique_lockISt5mutexEC4Ev"
 24166      74313175 
 24166      6E697175 
 24166      655F6C6F 
 24166      636B4953 
 24167              	.LASF425:
 24168 8bb5 5F535F63 		.string	"_S_check_init_len"
 24168      6865636B 
 24168      5F696E69 
 24168      745F6C65 
 24168      6E00
 24169              	.LASF817:
 24170 8bc7 776D656D 		.string	"wmemcpy"
 24170      63707900 
 24171              	.LASF592:
 24172 8bcf 5F5A4E53 		.string	"_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt10u
 24172      7432305F 
 24172      5F636F70 
 24172      795F6D6F 
 24172      76655F62 
 24173              	.LASF293:
 24174 8c65 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_Deque_impl
 24174      7431315F 
 24174      44657175 
 24174      655F6261 
 24174      73654953 
 24175              	.LASF957:
 24176 8cd7 5F5F636F 		.string	"__compar_fn_t"
 24176      6D706172 
 24176      5F666E5F 
 24176      7400
 24177              	.LASF589:
 24178 8ce5 69746572 		.string	"iterator_traits<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >**>"
 24178      61746F72 
 24178      5F747261 
 24178      6974733C 
 24178      7374643A 
 24179              	.LASF683:
 24180 8d34 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt10unique_ptrI9BaseEventSt14default_deleteIS2_EEES5_E15
 24180      5F5F676E 
 24180      755F6378 
 24180      7831345F 
 24180      5F616C6C 
 24181              	.LASF940:
 24182 8d9f 5F5F6C69 		.string	"__list"
GAS LISTING x64lin/../common/event.s 			page 621


 24182      737400
 24183              	.LASF342:
 24184 8da6 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4EmRKS4_RKS5_"
 24184      74356465 
 24184      71756549 
 24184      53743130 
 24184      756E6971 
 24185              	.LASF631:
 24186 8dfa 5F5F636F 		.string	"__copy_move_a1<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
 24186      70795F6D 
 24186      6F76655F 
 24186      61313C66 
 24186      616C7365 
 24187              	.LASF919:
 24188 8e4c 636C6F63 		.string	"clock_t"
 24188      6B5F7400 
 24189              	.LASF611:
 24190 8e54 6765743C 		.string	"get<0, BaseEvent*, std::default_delete<BaseEvent> >"
 24190      302C2042 
 24190      61736545 
 24190      76656E74 
 24190      2A2C2073 
 24191              	.LASF53:
 24192 8e88 5F5A4E53 		.string	"_ZNSt15allocator_arg_tC4Ev"
 24192      74313561 
 24192      6C6C6F63 
 24192      61746F72 
 24192      5F617267 
 24193              	.LASF582:
 24194 8ea3 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_dataI9BaseEventSt14default_deleteIS0_ELb1ELb1EEC4EOS3_"
 24194      7431355F 
 24194      5F756E69 
 24194      715F7074 
 24194      725F6461 
 24195              	.LASF343:
 24196 8eec 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ERKS6_"
 24196      74356465 
 24196      71756549 
 24196      53743130 
 24196      756E6971 
 24197              	.LASF106:
 24198 8f3a 5F5F636F 		.string	"__condvar"
 24198      6E647661 
 24198      7200
 24199              	.LASF804:
 24200 8f44 7763736E 		.string	"wcsncat"
 24200      63617400 
 24201              	.LASF1007:
 24202 8f4c 666F7065 		.string	"fopen"
 24202      6E00
 24203              	.LASF801:
 24204 8f52 746D5F67 		.string	"tm_gmtoff"
 24204      6D746F66 
 24204      6600
 24205              	.LASF225:
 24206 8f5c 72656269 		.string	"rebind_alloc"
 24206      6E645F61 
GAS LISTING x64lin/../common/event.s 			page 622


 24206      6C6C6F63 
 24206      00
 24207              	.LASF500:
 24208 8f69 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4swapER
 24208      74357175 
 24208      65756549 
 24208      53743130 
 24208      756E6971 
 24209              	.LASF134:
 24210 8fc6 66696C65 		.string	"filesystem"
 24210      73797374 
 24210      656D00
 24211              	.LASF551:
 24212 8fd1 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EEC4ESt15allocator_arg_tSt13__uses_alloc0"
 24212      7431305F 
 24212      48656164 
 24212      5F626173 
 24212      65494C6D 
 24213              	.LASF736:
 24214 901f 5F494F5F 		.string	"_IO_backup_base"
 24214      6261636B 
 24214      75705F62 
 24214      61736500 
 24215              	.LASF173:
 24216 902f 6C6F636B 		.string	"lock_guard"
 24216      5F677561 
 24216      726400
 24217              	.LASF658:
 24218 903a 5F535F6D 		.string	"_S_mutex"
 24218      75746578 
 24218      00
 24219              	.LASF905:
 24220 9043 696E745F 		.string	"int_n_sep_by_space"
 24220      6E5F7365 
 24220      705F6279 
 24220      5F737061 
 24220      636500
 24221              	.LASF727:
 24222 9056 5F494F5F 		.string	"_IO_read_ptr"
 24222      72656164 
 24222      5F707472 
 24222      00
 24223              	.LASF320:
 24224 9063 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_M_allocate
 24224      7431315F 
 24224      44657175 
 24224      655F6261 
 24224      73654953 
 24225              	.LASF770:
 24226 90c4 70757477 		.string	"putwc"
 24226      6300
 24227              	.LASF184:
 24228 90ca 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEC4EOS3_"
 24228      74313075 
 24228      6E697175 
 24228      655F7074 
 24228      72493942 
GAS LISTING x64lin/../common/event.s 			page 623


 24229              	.LASF1006:
 24230 9106 66676574 		.string	"fgets"
 24230      7300
 24231              	.LASF48:
 24232 910c 74727565 		.string	"true_type"
 24232      5F747970 
 24232      6500
 24233              	.LASF1106:
 24234 9116 5F5F6469 		.string	"__diffmax"
 24234      66666D61 
 24234      7800
 24235              	.LASF871:
 24236 9120 696E745F 		.string	"int_fast8_t"
 24236      66617374 
 24236      385F7400 
 24237              	.LASF101:
 24238 912c 5F5A4E53 		.string	"_ZNSt5mutex6unlockEv"
 24238      74356D75 
 24238      74657836 
 24238      756E6C6F 
 24238      636B4576 
 24239              	.LASF964:
 24240 9141 67657465 		.string	"getenv"
 24240      6E7600
 24241              	.LASF750:
 24242 9148 5F667265 		.string	"_freeres_list"
 24242      65726573 
 24242      5F6C6973 
 24242      7400
 24243              	.LASF757:
 24244 9156 66676574 		.string	"fgetwc"
 24244      776300
 24245              	.LASF711:
 24246 915d 5F5F666C 		.string	"__float128"
 24246      6F617431 
 24246      323800
 24247              	.LASF253:
 24248 9168 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EC4Ev"
 24248      7431355F 
 24248      44657175 
 24248      655F6974 
 24248      65726174 
 24249              	.LASF1089:
 24250 91be 5F5F616C 		.string	"__al"
 24250      00
 24251              	.LASF758:
 24252 91c3 66676574 		.string	"fgetws"
 24252      777300
 24253              	.LASF426:
 24254 91ca 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_S_check_init_lenE
 24254      74356465 
 24254      71756549 
 24254      53743130 
 24254      756E6971 
 24255              	.LASF1077:
 24256 922a 70746872 		.string	"pthread_mutex_unlock"
 24256      6561645F 
GAS LISTING x64lin/../common/event.s 			page 624


 24256      6D757465 
 24256      785F756E 
 24256      6C6F636B 
 24257              	.LASF1117:
 24258 923f 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_dataI9BaseEventSt14default_deleteIS0_ELb1ELb1EEC2EOS3_"
 24258      7431355F 
 24258      5F756E69 
 24258      715F7074 
 24258      725F6461 
 24259              	.LASF1064:
 24260 9288 436F6E6E 		.string	"ConnectAccept"
 24260      65637441 
 24260      63636570 
 24260      7400
 24261              	.LASF307:
 24262 9296 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEC4ERKS5_"
 24262      7431315F 
 24262      44657175 
 24262      655F6261 
 24262      73654953 
 24263              	.LASF584:
 24264 92eb 5F5F6164 		.string	"__add_lvalue_reference_helper<BaseEvent, true>"
 24264      645F6C76 
 24264      616C7565 
 24264      5F726566 
 24264      6572656E 
 24265              	.LASF1093:
 24266 931a 5F5F6164 		.string	"__add_at_front"
 24266      645F6174 
 24266      5F66726F 
 24266      6E7400
 24267              	.LASF942:
 24268 9329 5F5F7773 		.string	"__wseq"
 24268      657100
 24269              	.LASF166:
 24270 9330 5F5A4E4B 		.string	"_ZNKSt11unique_lockISt5mutexE9owns_lockEv"
 24270      53743131 
 24270      756E6971 
 24270      75655F6C 
 24270      6F636B49 
 24271              	.LASF742:
 24272 935a 5F6F6C64 		.string	"_old_offset"
 24272      5F6F6666 
 24272      73657400 
 24273              	.LASF1087:
 24274 9366 5F5F696E 		.string	"__in_chrg"
 24274      5F636872 
 24274      6700
 24275              	.LASF1069:
 24276 9370 71756575 		.string	"queueMutex"
 24276      654D7574 
 24276      657800
 24277              	.LASF1025:
 24278 937b 77637472 		.string	"wctrans_t"
 24278      616E735F 
 24278      7400
 24279              	.LASF223:
GAS LISTING x64lin/../common/event.s 			page 625


 24280 9385 73656C65 		.string	"select_on_container_copy_construction"
 24280      63745F6F 
 24280      6E5F636F 
 24280      6E746169 
 24280      6E65725F 
 24281              	.LASF1042:
 24282 93ab 70617261 		.string	"parallel_unsequenced_policy"
 24282      6C6C656C 
 24282      5F756E73 
 24282      65717565 
 24282      6E636564 
 24283              	.LASF1067:
 24284 93c7 53686172 		.string	"SharedResources"
 24284      65645265 
 24284      736F7572 
 24284      63657300 
 24285              	.LASF567:
 24286 93d7 5F456C65 		.string	"_Elements"
 24286      6D656E74 
 24286      7300
 24287              	.LASF1116:
 24288 93e1 5F5A4E53 		.string	"_ZNSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEC2EOS3_"
 24288      74313075 
 24288      6E697175 
 24288      655F7074 
 24288      72493942 
 24289              	.LASF900:
 24290 941d 705F7369 		.string	"p_sign_posn"
 24290      676E5F70 
 24290      6F736E00 
 24291              	.LASF1039:
 24292 9429 5F5A4E36 		.string	"_ZN6__pstl9execution2v115parallel_policy19__allow_unsequencedEv"
 24292      5F5F7073 
 24292      746C3965 
 24292      78656375 
 24292      74696F6E 
 24293              	.LASF328:
 24294 9469 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_M_initiali
 24294      7431315F 
 24294      44657175 
 24294      655F6261 
 24294      73654953 
 24295              	.LASF825:
 24296 94cb 77637372 		.string	"wcsrchr"
 24296      63687200 
 24297              	.LASF870:
 24298 94d3 75696E74 		.string	"uint_least64_t"
 24298      5F6C6561 
 24298      73743634 
 24298      5F7400
 24299              	.LASF229:
 24300 94e2 5F5A4E53 		.string	"_ZNSaIPSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEaSERKS5_"
 24300      61495053 
 24300      74313075 
 24300      6E697175 
 24300      655F7074 
 24301              	.LASF741:
GAS LISTING x64lin/../common/event.s 			page 626


 24302 9524 5F666C61 		.string	"_flags2"
 24302      67733200 
 24303              	.LASF548:
 24304 952c 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EEC4ERKS1_"
 24304      7431305F 
 24304      48656164 
 24304      5F626173 
 24304      65494C6D 
 24305              	.LASF118:
 24306 955b 5F5A4E53 		.string	"_ZNSt9__condvar10wait_untilERSt5mutexiR8timespec"
 24306      74395F5F 
 24306      636F6E64 
 24306      76617231 
 24306      30776169 
 24307              	.LASF627:
 24308 958c 5F5A5374 		.string	"_ZSt13__copy_move_aILb0EPPSt10unique_ptrI9BaseEventSt14default_deleteIS1_EES6_ET1_T0_S8_S
 24308      31335F5F 
 24308      636F7079 
 24308      5F6D6F76 
 24308      655F6149 
 24309              	.LASF1054:
 24310 95e8 6D6B7469 		.string	"mktime"
 24310      6D6500
 24311              	.LASF941:
 24312 95ef 5F5F7074 		.string	"__pthread_cond_s"
 24312      68726561 
 24312      645F636F 
 24312      6E645F73 
 24312      00
 24313              	.LASF1071:
 24314 9600 42617365 		.string	"BaseEvent"
 24314      4576656E 
 24314      7400
 24315              	.LASF498:
 24316 960a 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE4pushER
 24316      74357175 
 24316      65756549 
 24316      53743130 
 24316      756E6971 
 24317              	.LASF1061:
 24318 9668 4576656E 		.string	"EventTypeMessage"
 24318      74547970 
 24318      654D6573 
 24318      73616765 
 24318      00
 24319              	.LASF1014:
 24320 9679 67657463 		.string	"getchar"
 24320      68617200 
 24321              	.LASF923:
 24322 9681 74765F6E 		.string	"tv_nsec"
 24322      73656300 
 24323              	.LASF397:
 24324 9689 5F5A4E4B 		.string	"_ZNKSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE2atEm"
 24324      53743564 
 24324      65717565 
 24324      49537431 
 24324      30756E69 
GAS LISTING x64lin/../common/event.s 			page 627


 24325              	.LASF420:
 24326 96d5 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE5eraseESt15_Deque_it
 24326      74356465 
 24326      71756549 
 24326      53743130 
 24326      756E6971 
 24327              	.LASF1033:
 24328 9743 5F5F616C 		.string	"__allow_vector"
 24328      6C6F775F 
 24328      76656374 
 24328      6F7200
 24329              	.LASF334:
 24330 9752 636F6E73 		.string	"const_iterator"
 24330      745F6974 
 24330      65726174 
 24330      6F7200
 24331              	.LASF491:
 24332 9761 5F5A4E4B 		.string	"_ZNKSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEE5empty
 24332      53743571 
 24332      75657565 
 24332      49537431 
 24332      30756E69 
 24333              	.LASF284:
 24334 97bd 5F4D5F73 		.string	"_M_start"
 24334      74617274 
 24334      00
 24335              	.LASF438:
 24336 97c6 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_M_pop_front_auxEv
 24336      74356465 
 24336      71756549 
 24336      53743130 
 24336      756E6971 
 24337              	.LASF1100:
 24338 9820 5F5F6C61 		.string	"__last"
 24338      737400
 24339              	.LASF549:
 24340 9827 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9BaseEventLb0EEC4ERKS2_"
 24340      7431305F 
 24340      48656164 
 24340      5F626173 
 24340      65494C6D 
 24341              	.LASF682:
 24342 9856 5F535F6E 		.string	"_S_nothrow_move"
 24342      6F746872 
 24342      6F775F6D 
 24342      6F766500 
 24343              	.LASF775:
 24344 9866 756E6765 		.string	"ungetwc"
 24344      74776300 
 24345              	.LASF650:
 24346 986e 5F5A5374 		.string	"_ZSt4moveIRSt10unique_ptrI9BaseEventSt14default_deleteIS1_EEEONSt16remove_referenceIT_E4t
 24346      346D6F76 
 24346      65495253 
 24346      74313075 
 24346      6E697175 
 24347              	.LASF303:
 24348 98d0 5F446571 		.string	"_Deque_base"
GAS LISTING x64lin/../common/event.s 			page 628


 24348      75655F62 
 24348      61736500 
 24349              	.LASF676:
 24350 98dc 5F535F70 		.string	"_S_propagate_on_move_assign"
 24350      726F7061 
 24350      67617465 
 24350      5F6F6E5F 
 24350      6D6F7665 
 24351              	.LASF363:
 24352 98f8 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE3endEv"
 24352      74356465 
 24352      71756549 
 24352      53743130 
 24352      756E6971 
 24353              	.LASF470:
 24354 9944 5F4D5F72 		.string	"_M_reallocate_map"
 24354      65616C6C 
 24354      6F636174 
 24354      655F6D61 
 24354      7000
 24355              	.LASF528:
 24356 9956 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9BaseEventELb1EEC4ESt15allocator_arg_tSt13__uses
 24356      7431305F 
 24356      48656164 
 24356      5F626173 
 24356      65494C6D 
 24357              	.LASF329:
 24358 99b7 5F4D5F63 		.string	"_M_create_nodes"
 24358      72656174 
 24358      655F6E6F 
 24358      64657300 
 24359              	.LASF864:
 24360 99c7 696E745F 		.string	"int_least16_t"
 24360      6C656173 
 24360      7431365F 
 24360      7400
 24361              	.LASF1138:
 24362 99d5 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 24362      5F5F676E 
 24362      755F6378 
 24362      78336469 
 24362      76457878 
 24363              	.LASF170:
 24364 99ea 5F4D5F6F 		.string	"_M_owns"
 24364      776E7300 
 24365              	.LASF898:
 24366 99f2 6E5F6373 		.string	"n_cs_precedes"
 24366      5F707265 
 24366      63656465 
 24366      7300
 24367              	.LASF313:
 24368 9a00 5F4D5F67 		.string	"_M_get_Tp_allocator"
 24368      65745F54 
 24368      705F616C 
 24368      6C6F6361 
 24368      746F7200 
 24369              	.LASF518:
GAS LISTING x64lin/../common/event.s 			page 629


 24370 9a14 5F5A4E4B 		.string	"_ZNKSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE10_M_deleterEv"
 24370      53743135 
 24370      5F5F756E 
 24370      69715F70 
 24370      74725F69 
 24371              	.LASF196:
 24372 9a5d 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEcvbEv"
 24372      53743130 
 24372      756E6971 
 24372      75655F70 
 24372      74724939 
 24373              	.LASF252:
 24374 9a98 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_EC4ES6_PS
 24374      7431355F 
 24374      44657175 
 24374      655F6974 
 24374      65726174 
 24375              	.LASF992:
 24376 9af4 5F5F7374 		.string	"__state"
 24376      61746500 
 24377              	.LASF208:
 24378 9afc 5F5A4E53 		.string	"_ZNSaISt10unique_ptrI9BaseEventSt14default_deleteIS0_EEEaSERKS4_"
 24378      61495374 
 24378      3130756E 
 24378      69717565 
 24378      5F707472 
 24379              	.LASF194:
 24380 9b3d 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9BaseEventSt14default_deleteIS0_EE11get_deleterEv"
 24380      53743130 
 24380      756E6971 
 24380      75655F70 
 24380      74724939 
 24381              	.LASF453:
 24382 9b82 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE8_M_eraseESt15_Deque
 24382      74356465 
 24382      71756549 
 24382      53743130 
 24382      756E6971 
 24383              	.LASF910:
 24384 9bf5 6C6F6361 		.string	"localeconv"
 24384      6C65636F 
 24384      6E7600
 24385              	.LASF260:
 24386 9c00 72656665 		.string	"reference"
 24386      72656E63 
 24386      6500
 24387              	.LASF302:
 24388 9c0a 5F5A4E4B 		.string	"_ZNKSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE13get_alloca
 24388      53743131 
 24388      5F446571 
 24388      75655F62 
 24388      61736549 
 24389              	.LASF568:
 24390 9c69 636F6E64 		.string	"conditional<true, const std::tuple<BaseEvent*, std::default_delete<BaseEvent> >&, const s
 24390      6974696F 
 24390      6E616C3C 
 24390      74727565 
GAS LISTING x64lin/../common/event.s 			page 630


 24390      2C20636F 
 24391              	.LASF672:
 24392 9cd3 5F5A4E53 		.string	"_ZNSt13__uses_alloc05_SinkaSEPKv"
 24392      7431335F 
 24392      5F757365 
 24392      735F616C 
 24392      6C6F6330 
 24393              	.LASF471:
 24394 9cf4 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE17_M_reallocate_mapE
 24394      74356465 
 24394      71756549 
 24394      53743130 
 24394      756E6971 
 24395              	.LASF706:
 24396 9d50 63686172 		.string	"char16_t"
 24396      31365F74 
 24396      00
 24397              	.LASF1101:
 24398 9d59 5F5F7265 		.string	"__result"
 24398      73756C74 
 24398      00
 24399              	.LASF1139:
 24400 9d62 5F4C6F63 		.string	"_Lock_policy"
 24400      6B5F706F 
 24400      6C696379 
 24400      00
 24401              	.LASF983:
 24402 9d6f 73747274 		.string	"strtoull"
 24402      6F756C6C 
 24402      00
 24403              	.LASF831:
 24404 9d78 5F5F696E 		.string	"__int8_t"
 24404      74385F74 
 24404      00
 24405              	.LASF477:
 24406 9d81 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE15_M_move_assign2EOS
 24406      74356465 
 24406      71756549 
 24406      53743130 
 24406      756E6971 
 24407              	.LASF287:
 24408 9df9 5F5A4E53 		.string	"_ZNSt11_Deque_baseISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE16_Deque_impl
 24408      7431315F 
 24408      44657175 
 24408      655F6261 
 24408      73654953 
 24409              	.LASF24:
 24410 9e5c 5F5F6174 		.string	"__atomic_spin_count_relax"
 24410      6F6D6963 
 24410      5F737069 
 24410      6E5F636F 
 24410      756E745F 
 24411              	.LASF409:
 24412 9e76 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE9push_backEOS4_"
 24412      74356465 
 24412      71756549 
 24412      53743130 
GAS LISTING x64lin/../common/event.s 			page 631


 24412      756E6971 
 24413              	.LASF469:
 24414 9ecb 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE23_M_reserve_map_at_
 24414      74356465 
 24414      71756549 
 24414      53743130 
 24414      756E6971 
 24415              	.LASF927:
 24416 9f2c 5F5F7661 		.string	"__value32"
 24416      6C756533 
 24416      3200
 24417              	.LASF387:
 24418 9f36 73687269 		.string	"shrink_to_fit"
 24418      6E6B5F74 
 24418      6F5F6669 
 24418      7400
 24419              	.LASF464:
 24420 9f44 5F4D5F6E 		.string	"_M_new_elements_at_back"
 24420      65775F65 
 24420      6C656D65 
 24420      6E74735F 
 24420      61745F62 
 24421              	.LASF353:
 24422 9f5c 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EEaSEOS6_"
 24422      74356465 
 24422      71756549 
 24422      53743130 
 24422      756E6971 
 24423              	.LASF645:
 24424 9fa9 636F6E73 		.string	"construct_at<std::unique_ptr<BaseEvent>, std::unique_ptr<BaseEvent, std::default_delete<B
 24424      74727563 
 24424      745F6174 
 24424      3C737464 
 24424      3A3A756E 
 24425              	.LASF653:
 24426 a010 756E7369 		.string	"unsigned int"
 24426      676E6564 
 24426      20696E74 
 24426      00
 24427              	.LASF256:
 24428 a01d 69746572 		.string	"iterator"
 24428      61746F72 
 24428      00
 24429              	.LASF178:
 24430 a026 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexEC4ERKS1_"
 24430      7431306C 
 24430      6F636B5F 
 24430      67756172 
 24430      64495374 
 24431              	.LASF1065:
 24432 a04a 436C6965 		.string	"ClientDisconnect"
 24432      6E744469 
 24432      73636F6E 
 24432      6E656374 
 24432      00
 24433              	.LASF251:
 24434 a05b 5F446571 		.string	"_Deque_iterator"
GAS LISTING x64lin/../common/event.s 			page 632


 24434      75655F69 
 24434      74657261 
 24434      746F7200 
 24435              	.LASF1079:
 24436 a06b 5F5A646C 		.string	"_ZdlPvm"
 24436      50766D00 
 24437              	.LASF51:
 24438 a073 5F5F6378 		.string	"__cxx11"
 24438      78313100 
 24439              	.LASF61:
 24440 a07b 65786365 		.string	"exception_ptr"
 24440      7074696F 
 24440      6E5F7074 
 24440      7200
 24441              	.LASF1003:
 24442 a089 66666C75 		.string	"fflush"
 24442      736800
 24443              	.LASF875:
 24444 a090 75696E74 		.string	"uint_fast8_t"
 24444      5F666173 
 24444      74385F74 
 24444      00
 24445              	.LASF278:
 24446 a09d 5F5A4E53 		.string	"_ZNSt15_Deque_iteratorISt10unique_ptrI9BaseEventSt14default_deleteIS1_EERS4_PS4_E11_M_set
 24446      7431355F 
 24446      44657175 
 24446      655F6974 
 24446      65726174 
 24447              	.LASF107:
 24448 a101 5F5A4E53 		.string	"_ZNSt9__condvarC4Ev"
 24448      74395F5F 
 24448      636F6E64 
 24448      76617243 
 24448      34457600 
 24449              	.LASF280:
 24450 a115 5F5F7074 		.string	"__ptr_rebind"
 24450      725F7265 
 24450      62696E64 
 24450      00
 24451              	.LASF60:
 24452 a122 5F4D5F65 		.string	"_M_exception_object"
 24452      78636570 
 24452      74696F6E 
 24452      5F6F626A 
 24452      65637400 
 24453              	.LASF1026:
 24454 a136 69737763 		.string	"iswctype"
 24454      74797065 
 24454      00
 24455              	.LASF1118:
 24456 a13f 5F5A4E53 		.string	"_ZNSt10lock_guardISt5mutexED2Ev"
 24456      7431306C 
 24456      6F636B5F 
 24456      67756172 
 24456      64495374 
 24457              	.LASF698:
 24458 a15f 73686F72 		.string	"short int"
GAS LISTING x64lin/../common/event.s 			page 633


 24458      7420696E 
 24458      7400
 24459              	.LASF281:
 24460 a169 5F446571 		.string	"_Deque_base<std::unique_ptr<BaseEvent, std::default_delete<BaseEvent> >, std::allocator<s
 24460      75655F62 
 24460      6173653C 
 24460      7374643A 
 24460      3A756E69 
 24461              	.LASF359:
 24462 a201 62656769 		.string	"begin"
 24462      6E00
 24463              	.LASF902:
 24464 a207 696E745F 		.string	"int_p_cs_precedes"
 24464      705F6373 
 24464      5F707265 
 24464      63656465 
 24464      7300
 24465              	.LASF764:
 24466 a219 5F5F6973 		.string	"__isoc99_fwscanf"
 24466      6F633939 
 24466      5F667773 
 24466      63616E66 
 24466      00
 24467              	.LASF604:
 24468 a22a 5F5F7468 		.string	"__throw_length_error"
 24468      726F775F 
 24468      6C656E67 
 24468      74685F65 
 24468      72726F72 
 24469              	.LASF187:
 24470 a23f 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9BaseEventSt14default_deleteIS0_EEdeEv"
 24470      53743130 
 24470      756E6971 
 24470      75655F70 
 24470      74724939 
 24471              	.LASF377:
 24472 a279 63726265 		.string	"crbegin"
 24472      67696E00 
 24473              	.LASF444:
 24474 a281 5F5A4E53 		.string	"_ZNSt5dequeISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESaIS4_EE19_M_destroy_data_au
 24474      74356465 
 24474      71756549 
 24474      53743130 
 24474      756E6971 
 24475              	.LASF142:
 24476 a300 5F5A4E53 		.string	"_ZNSt18condition_variable10notify_allEv"
 24476      74313863 
 24476      6F6E6469 
 24476      74696F6E 
 24476      5F766172 
 24477              	.LASF744:
 24478 a328 5F767461 		.string	"_vtable_offset"
 24478      626C655F 
 24478      6F666673 
 24478      657400
 24479              	.LASF626:
 24480 a337 5F5F636F 		.string	"__copy_move_a<false, std::unique_ptr<BaseEvent>**, std::unique_ptr<BaseEvent>**>"
GAS LISTING x64lin/../common/event.s 			page 634


 24480      70795F6D 
 24480      6F76655F 
 24480      613C6661 
 24480      6C73652C 
 24481              	.LASF394:
 24482 a388 5F4D5F72 		.string	"_M_range_check"
 24482      616E6765 
 24482      5F636865 
 24482      636B00
 24483              	.LASF950:
 24484 a397 31357074 		.string	"15pthread_mutex_t"
 24484      68726561 
 24484      645F6D75 
 24484      7465785F 
 24484      7400
 24485              	.LASF1038:
 24486 a3a9 70617261 		.string	"parallel_policy"
 24486      6C6C656C 
 24486      5F706F6C 
 24486      69637900 
 24487              	.LASF502:
 24488 a3b9 64656661 		.string	"default_delete<BaseEvent>"
 24488      756C745F 
 24488      64656C65 
 24488      74653C42 
 24488      61736545 
 24489              	.LASF2:
 24490 a3d3 6F706572 		.string	"operator std::integral_constant<bool, false>::value_type"
 24490      61746F72 
 24490      20737464 
 24490      3A3A696E 
 24490      74656772 
 24491              	.LASF1084:
 24492 a40c 74686973 		.string	"this"
 24492      00
 24493              	.LASF559:
 24494 a411 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EJP9BaseEventSt14default_deleteIS0_EEE7_M_tailERS4_"
 24494      7431315F 
 24494      5475706C 
 24494      655F696D 
 24494      706C494C 
 24495              	.LASF139:
 24496 a45b 5F5A4E53 		.string	"_ZNSt18condition_variableC4ERKS_"
 24496      74313863 
 24496      6F6E6469 
 24496      74696F6E 
 24496      5F766172 
 24497              	.LASF30:
 24498 a47c 62696469 		.string	"bidirectional_iterator_tag"
 24498      72656374 
 24498      696F6E61 
 24498      6C5F6974 
 24498      65726174 
 24499              	.LASF688:
 24500 a497 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIPSt10unique_ptrI9BaseEventSt14default_deleteIS2_EEEC4Ev"
 24500      5F5F676E 
 24500      755F6378 
GAS LISTING x64lin/../common/event.s 			page 635


 24500      7831336E 
 24500      65775F61 
 24501              	.LASF490:
 24502 a4ec 5F5A4E53 		.string	"_ZNSt5queueISt10unique_ptrI9BaseEventSt14default_deleteIS1_EESt5dequeIS4_SaIS4_EEEC4EOS7_
 24502      74357175 
 24502      65756549 
 24502      53743130 
 24502      756E6971 
 24503              	.LASF1031:
 24504 a546 73657175 		.string	"sequenced_policy"
 24504      656E6365 
 24504      645F706F 
 24504      6C696379 
 24504      00
 24505              	.LASF520:
 24506 a557 5F5A4E53 		.string	"_ZNSt15__uniq_ptr_implI9BaseEventSt14default_deleteIS0_EE7releaseEv"
 24506      7431355F 
 24506      5F756E69 
 24506      715F7074 
 24506      725F696D 
 24507              		.section	.debug_line_str,"MS",@progbits,1
 24508              	.LASF0:
 24509 0000 2E2E2F63 		.string	"../common/event.cpp"
 24509      6F6D6D6F 
 24509      6E2F6576 
 24509      656E742E 
 24509      63707000 
 24510              	.LASF1:
 24511 0014 2F686F6D 		.string	"/home/cthomas/cpp/cppn/server"
 24511      652F6374 
 24511      686F6D61 
 24511      732F6370 
 24511      702F6370 
 24512              		.hidden	DW.ref.__gxx_personality_v0
 24513              		.weak	DW.ref.__gxx_personality_v0
 24514 0032 2F686F6D 		.section	.data.rel.local.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,c
 24514      652F6374 
 24514      686F6D61 
 24514      732F6370 
 24514      702F6370 
 24515              		.align 8
 24516              		.type	DW.ref.__gxx_personality_v0, @object
 24517              		.size	DW.ref.__gxx_personality_v0, 8
 24518              	DW.ref.__gxx_personality_v0:
 24519 0000 00000000 		.quad	__gxx_personality_v0
 24519      00000000 
 24520              		.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
 24521              		.section	.note.GNU-stack,"",@progbits
 24522              		.section	.note.gnu.property,"a"
 24523              		.align 8
 24524 0000 04000000 		.long	1f - 0f
 24525 0004 10000000 		.long	4f - 1f
 24526 0008 05000000 		.long	5
 24527              	0:
 24528 000c 474E5500 		.string	"GNU"
 24529              	1:
 24530              		.align 8
GAS LISTING x64lin/../common/event.s 			page 636


 24531 0010 020000C0 		.long	0xc0000002
 24532 0014 04000000 		.long	3f - 2f
 24533              	2:
 24534 0018 03000000 		.long	0x3
 24535              	3:
 24536 001c 00000000 		.align 8
 24537              	4:
